// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: schema.tl.sync_service.proto

package mtproto

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type TLInvokeAfterMsg struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	MsgId                int64         `protobuf:"varint,3,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	Query                []byte        `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLInvokeAfterMsg) Reset()         { *m = TLInvokeAfterMsg{} }
func (m *TLInvokeAfterMsg) String() string { return proto.CompactTextString(m) }
func (*TLInvokeAfterMsg) ProtoMessage()    {}
func (*TLInvokeAfterMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{0}
}
func (m *TLInvokeAfterMsg) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLInvokeAfterMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLInvokeAfterMsg.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLInvokeAfterMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLInvokeAfterMsg.Merge(m, src)
}
func (m *TLInvokeAfterMsg) XXX_Size() int {
	return m.Size()
}
func (m *TLInvokeAfterMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_TLInvokeAfterMsg.DiscardUnknown(m)
}

var xxx_messageInfo_TLInvokeAfterMsg proto.InternalMessageInfo

func (m *TLInvokeAfterMsg) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLInvokeAfterMsg) GetMsgId() int64 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLInvokeAfterMsg) GetQuery() []byte {
	if m != nil {
		return m.Query
	}
	return nil
}

type TLInvokeAfterMsgs struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	MsgIds               []int64       `protobuf:"varint,3,rep,packed,name=msg_ids,json=msgIds,proto3" json:"msg_ids,omitempty"`
	Query                []byte        `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLInvokeAfterMsgs) Reset()         { *m = TLInvokeAfterMsgs{} }
func (m *TLInvokeAfterMsgs) String() string { return proto.CompactTextString(m) }
func (*TLInvokeAfterMsgs) ProtoMessage()    {}
func (*TLInvokeAfterMsgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{1}
}
func (m *TLInvokeAfterMsgs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLInvokeAfterMsgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLInvokeAfterMsgs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLInvokeAfterMsgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLInvokeAfterMsgs.Merge(m, src)
}
func (m *TLInvokeAfterMsgs) XXX_Size() int {
	return m.Size()
}
func (m *TLInvokeAfterMsgs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLInvokeAfterMsgs.DiscardUnknown(m)
}

var xxx_messageInfo_TLInvokeAfterMsgs proto.InternalMessageInfo

func (m *TLInvokeAfterMsgs) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLInvokeAfterMsgs) GetMsgIds() []int64 {
	if m != nil {
		return m.MsgIds
	}
	return nil
}

func (m *TLInvokeAfterMsgs) GetQuery() []byte {
	if m != nil {
		return m.Query
	}
	return nil
}

type TLInitConnection struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ApiId                int32             `protobuf:"varint,3,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`
	DeviceModel          string            `protobuf:"bytes,4,opt,name=device_model,json=deviceModel,proto3" json:"device_model,omitempty"`
	SystemVersion        string            `protobuf:"bytes,5,opt,name=system_version,json=systemVersion,proto3" json:"system_version,omitempty"`
	AppVersion           string            `protobuf:"bytes,6,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	SystemLangCode       string            `protobuf:"bytes,7,opt,name=system_lang_code,json=systemLangCode,proto3" json:"system_lang_code,omitempty"`
	LangPack             string            `protobuf:"bytes,8,opt,name=lang_pack,json=langPack,proto3" json:"lang_pack,omitempty"`
	LangCode             string            `protobuf:"bytes,9,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	Proxy                *InputClientProxy `protobuf:"bytes,10,opt,name=proxy,proto3" json:"proxy,omitempty"`
	Params               *JSONValue        `protobuf:"bytes,11,opt,name=params,proto3" json:"params,omitempty"`
	Query                []byte            `protobuf:"bytes,12,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLInitConnection) Reset()         { *m = TLInitConnection{} }
func (m *TLInitConnection) String() string { return proto.CompactTextString(m) }
func (*TLInitConnection) ProtoMessage()    {}
func (*TLInitConnection) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{2}
}
func (m *TLInitConnection) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLInitConnection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLInitConnection.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLInitConnection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLInitConnection.Merge(m, src)
}
func (m *TLInitConnection) XXX_Size() int {
	return m.Size()
}
func (m *TLInitConnection) XXX_DiscardUnknown() {
	xxx_messageInfo_TLInitConnection.DiscardUnknown(m)
}

var xxx_messageInfo_TLInitConnection proto.InternalMessageInfo

func (m *TLInitConnection) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLInitConnection) GetApiId() int32 {
	if m != nil {
		return m.ApiId
	}
	return 0
}

func (m *TLInitConnection) GetDeviceModel() string {
	if m != nil {
		return m.DeviceModel
	}
	return ""
}

func (m *TLInitConnection) GetSystemVersion() string {
	if m != nil {
		return m.SystemVersion
	}
	return ""
}

func (m *TLInitConnection) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *TLInitConnection) GetSystemLangCode() string {
	if m != nil {
		return m.SystemLangCode
	}
	return ""
}

func (m *TLInitConnection) GetLangPack() string {
	if m != nil {
		return m.LangPack
	}
	return ""
}

func (m *TLInitConnection) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

func (m *TLInitConnection) GetProxy() *InputClientProxy {
	if m != nil {
		return m.Proxy
	}
	return nil
}

func (m *TLInitConnection) GetParams() *JSONValue {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *TLInitConnection) GetQuery() []byte {
	if m != nil {
		return m.Query
	}
	return nil
}

type TLInvokeWithLayer struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Layer                int32         `protobuf:"varint,3,opt,name=layer,proto3" json:"layer,omitempty"`
	Query                []byte        `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLInvokeWithLayer) Reset()         { *m = TLInvokeWithLayer{} }
func (m *TLInvokeWithLayer) String() string { return proto.CompactTextString(m) }
func (*TLInvokeWithLayer) ProtoMessage()    {}
func (*TLInvokeWithLayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{3}
}
func (m *TLInvokeWithLayer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLInvokeWithLayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLInvokeWithLayer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLInvokeWithLayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLInvokeWithLayer.Merge(m, src)
}
func (m *TLInvokeWithLayer) XXX_Size() int {
	return m.Size()
}
func (m *TLInvokeWithLayer) XXX_DiscardUnknown() {
	xxx_messageInfo_TLInvokeWithLayer.DiscardUnknown(m)
}

var xxx_messageInfo_TLInvokeWithLayer proto.InternalMessageInfo

func (m *TLInvokeWithLayer) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLInvokeWithLayer) GetLayer() int32 {
	if m != nil {
		return m.Layer
	}
	return 0
}

func (m *TLInvokeWithLayer) GetQuery() []byte {
	if m != nil {
		return m.Query
	}
	return nil
}

type TLInvokeWithoutUpdates struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Query                []byte        `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLInvokeWithoutUpdates) Reset()         { *m = TLInvokeWithoutUpdates{} }
func (m *TLInvokeWithoutUpdates) String() string { return proto.CompactTextString(m) }
func (*TLInvokeWithoutUpdates) ProtoMessage()    {}
func (*TLInvokeWithoutUpdates) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{4}
}
func (m *TLInvokeWithoutUpdates) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLInvokeWithoutUpdates) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLInvokeWithoutUpdates.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLInvokeWithoutUpdates) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLInvokeWithoutUpdates.Merge(m, src)
}
func (m *TLInvokeWithoutUpdates) XXX_Size() int {
	return m.Size()
}
func (m *TLInvokeWithoutUpdates) XXX_DiscardUnknown() {
	xxx_messageInfo_TLInvokeWithoutUpdates.DiscardUnknown(m)
}

var xxx_messageInfo_TLInvokeWithoutUpdates proto.InternalMessageInfo

func (m *TLInvokeWithoutUpdates) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLInvokeWithoutUpdates) GetQuery() []byte {
	if m != nil {
		return m.Query
	}
	return nil
}

type TLInvokeWithMessagesRange struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Range                *MessageRange `protobuf:"bytes,3,opt,name=range,proto3" json:"range,omitempty"`
	Query                []byte        `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLInvokeWithMessagesRange) Reset()         { *m = TLInvokeWithMessagesRange{} }
func (m *TLInvokeWithMessagesRange) String() string { return proto.CompactTextString(m) }
func (*TLInvokeWithMessagesRange) ProtoMessage()    {}
func (*TLInvokeWithMessagesRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{5}
}
func (m *TLInvokeWithMessagesRange) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLInvokeWithMessagesRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLInvokeWithMessagesRange.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLInvokeWithMessagesRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLInvokeWithMessagesRange.Merge(m, src)
}
func (m *TLInvokeWithMessagesRange) XXX_Size() int {
	return m.Size()
}
func (m *TLInvokeWithMessagesRange) XXX_DiscardUnknown() {
	xxx_messageInfo_TLInvokeWithMessagesRange.DiscardUnknown(m)
}

var xxx_messageInfo_TLInvokeWithMessagesRange proto.InternalMessageInfo

func (m *TLInvokeWithMessagesRange) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLInvokeWithMessagesRange) GetRange() *MessageRange {
	if m != nil {
		return m.Range
	}
	return nil
}

func (m *TLInvokeWithMessagesRange) GetQuery() []byte {
	if m != nil {
		return m.Query
	}
	return nil
}

type TLInvokeWithTakeout struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	TakeoutId            int64         `protobuf:"varint,3,opt,name=takeout_id,json=takeoutId,proto3" json:"takeout_id,omitempty"`
	Query                []byte        `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLInvokeWithTakeout) Reset()         { *m = TLInvokeWithTakeout{} }
func (m *TLInvokeWithTakeout) String() string { return proto.CompactTextString(m) }
func (*TLInvokeWithTakeout) ProtoMessage()    {}
func (*TLInvokeWithTakeout) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{6}
}
func (m *TLInvokeWithTakeout) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLInvokeWithTakeout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLInvokeWithTakeout.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLInvokeWithTakeout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLInvokeWithTakeout.Merge(m, src)
}
func (m *TLInvokeWithTakeout) XXX_Size() int {
	return m.Size()
}
func (m *TLInvokeWithTakeout) XXX_DiscardUnknown() {
	xxx_messageInfo_TLInvokeWithTakeout.DiscardUnknown(m)
}

var xxx_messageInfo_TLInvokeWithTakeout proto.InternalMessageInfo

func (m *TLInvokeWithTakeout) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLInvokeWithTakeout) GetTakeoutId() int64 {
	if m != nil {
		return m.TakeoutId
	}
	return 0
}

func (m *TLInvokeWithTakeout) GetQuery() []byte {
	if m != nil {
		return m.Query
	}
	return nil
}

type TLAuthSendCode struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PhoneNumber          string        `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	ApiId                int32         `protobuf:"varint,4,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`
	ApiHash              string        `protobuf:"bytes,5,opt,name=api_hash,json=apiHash,proto3" json:"api_hash,omitempty"`
	Settings             *CodeSettings `protobuf:"bytes,6,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthSendCode) Reset()         { *m = TLAuthSendCode{} }
func (m *TLAuthSendCode) String() string { return proto.CompactTextString(m) }
func (*TLAuthSendCode) ProtoMessage()    {}
func (*TLAuthSendCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{7}
}
func (m *TLAuthSendCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthSendCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthSendCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthSendCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthSendCode.Merge(m, src)
}
func (m *TLAuthSendCode) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthSendCode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthSendCode.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthSendCode proto.InternalMessageInfo

func (m *TLAuthSendCode) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthSendCode) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAuthSendCode) GetApiId() int32 {
	if m != nil {
		return m.ApiId
	}
	return 0
}

func (m *TLAuthSendCode) GetApiHash() string {
	if m != nil {
		return m.ApiHash
	}
	return ""
}

func (m *TLAuthSendCode) GetSettings() *CodeSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

type TLAuthSignUp struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PhoneNumber          string        `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PhoneCodeHash        string        `protobuf:"bytes,4,opt,name=phone_code_hash,json=phoneCodeHash,proto3" json:"phone_code_hash,omitempty"`
	FirstName            string        `protobuf:"bytes,5,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string        `protobuf:"bytes,6,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthSignUp) Reset()         { *m = TLAuthSignUp{} }
func (m *TLAuthSignUp) String() string { return proto.CompactTextString(m) }
func (*TLAuthSignUp) ProtoMessage()    {}
func (*TLAuthSignUp) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{8}
}
func (m *TLAuthSignUp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthSignUp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthSignUp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthSignUp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthSignUp.Merge(m, src)
}
func (m *TLAuthSignUp) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthSignUp) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthSignUp.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthSignUp proto.InternalMessageInfo

func (m *TLAuthSignUp) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthSignUp) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAuthSignUp) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

func (m *TLAuthSignUp) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *TLAuthSignUp) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

type TLAuthSignIn struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PhoneNumber          string        `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PhoneCodeHash        string        `protobuf:"bytes,4,opt,name=phone_code_hash,json=phoneCodeHash,proto3" json:"phone_code_hash,omitempty"`
	PhoneCode            string        `protobuf:"bytes,5,opt,name=phone_code,json=phoneCode,proto3" json:"phone_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthSignIn) Reset()         { *m = TLAuthSignIn{} }
func (m *TLAuthSignIn) String() string { return proto.CompactTextString(m) }
func (*TLAuthSignIn) ProtoMessage()    {}
func (*TLAuthSignIn) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{9}
}
func (m *TLAuthSignIn) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthSignIn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthSignIn.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthSignIn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthSignIn.Merge(m, src)
}
func (m *TLAuthSignIn) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthSignIn) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthSignIn.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthSignIn proto.InternalMessageInfo

func (m *TLAuthSignIn) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthSignIn) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAuthSignIn) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

func (m *TLAuthSignIn) GetPhoneCode() string {
	if m != nil {
		return m.PhoneCode
	}
	return ""
}

type TLAuthLogOut3E72BA19 struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthLogOut3E72BA19) Reset()         { *m = TLAuthLogOut3E72BA19{} }
func (m *TLAuthLogOut3E72BA19) String() string { return proto.CompactTextString(m) }
func (*TLAuthLogOut3E72BA19) ProtoMessage()    {}
func (*TLAuthLogOut3E72BA19) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{10}
}
func (m *TLAuthLogOut3E72BA19) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthLogOut3E72BA19) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthLogOut3E72BA19.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthLogOut3E72BA19) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthLogOut3E72BA19.Merge(m, src)
}
func (m *TLAuthLogOut3E72BA19) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthLogOut3E72BA19) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthLogOut3E72BA19.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthLogOut3E72BA19 proto.InternalMessageInfo

func (m *TLAuthLogOut3E72BA19) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLAuthResetAuthorizations struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthResetAuthorizations) Reset()         { *m = TLAuthResetAuthorizations{} }
func (m *TLAuthResetAuthorizations) String() string { return proto.CompactTextString(m) }
func (*TLAuthResetAuthorizations) ProtoMessage()    {}
func (*TLAuthResetAuthorizations) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{11}
}
func (m *TLAuthResetAuthorizations) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthResetAuthorizations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthResetAuthorizations.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthResetAuthorizations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthResetAuthorizations.Merge(m, src)
}
func (m *TLAuthResetAuthorizations) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthResetAuthorizations) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthResetAuthorizations.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthResetAuthorizations proto.InternalMessageInfo

func (m *TLAuthResetAuthorizations) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLAuthExportAuthorization struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	DcId                 int32         `protobuf:"varint,3,opt,name=dc_id,json=dcId,proto3" json:"dc_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthExportAuthorization) Reset()         { *m = TLAuthExportAuthorization{} }
func (m *TLAuthExportAuthorization) String() string { return proto.CompactTextString(m) }
func (*TLAuthExportAuthorization) ProtoMessage()    {}
func (*TLAuthExportAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{12}
}
func (m *TLAuthExportAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthExportAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthExportAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthExportAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthExportAuthorization.Merge(m, src)
}
func (m *TLAuthExportAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthExportAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthExportAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthExportAuthorization proto.InternalMessageInfo

func (m *TLAuthExportAuthorization) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthExportAuthorization) GetDcId() int32 {
	if m != nil {
		return m.DcId
	}
	return 0
}

type TLAuthImportAuthorization struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   int64         `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Bytes                []byte        `protobuf:"bytes,4,opt,name=bytes,proto3" json:"bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthImportAuthorization) Reset()         { *m = TLAuthImportAuthorization{} }
func (m *TLAuthImportAuthorization) String() string { return proto.CompactTextString(m) }
func (*TLAuthImportAuthorization) ProtoMessage()    {}
func (*TLAuthImportAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{13}
}
func (m *TLAuthImportAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthImportAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthImportAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthImportAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthImportAuthorization.Merge(m, src)
}
func (m *TLAuthImportAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthImportAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthImportAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthImportAuthorization proto.InternalMessageInfo

func (m *TLAuthImportAuthorization) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthImportAuthorization) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLAuthImportAuthorization) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

type TLAuthBindTempAuthKey struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PermAuthKeyId        int64         `protobuf:"varint,3,opt,name=perm_auth_key_id,json=permAuthKeyId,proto3" json:"perm_auth_key_id,omitempty"`
	Nonce                int64         `protobuf:"varint,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	ExpiresAt            int32         `protobuf:"varint,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	EncryptedMessage     []byte        `protobuf:"bytes,6,opt,name=encrypted_message,json=encryptedMessage,proto3" json:"encrypted_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthBindTempAuthKey) Reset()         { *m = TLAuthBindTempAuthKey{} }
func (m *TLAuthBindTempAuthKey) String() string { return proto.CompactTextString(m) }
func (*TLAuthBindTempAuthKey) ProtoMessage()    {}
func (*TLAuthBindTempAuthKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{14}
}
func (m *TLAuthBindTempAuthKey) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthBindTempAuthKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthBindTempAuthKey.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthBindTempAuthKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthBindTempAuthKey.Merge(m, src)
}
func (m *TLAuthBindTempAuthKey) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthBindTempAuthKey) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthBindTempAuthKey.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthBindTempAuthKey proto.InternalMessageInfo

func (m *TLAuthBindTempAuthKey) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthBindTempAuthKey) GetPermAuthKeyId() int64 {
	if m != nil {
		return m.PermAuthKeyId
	}
	return 0
}

func (m *TLAuthBindTempAuthKey) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *TLAuthBindTempAuthKey) GetExpiresAt() int32 {
	if m != nil {
		return m.ExpiresAt
	}
	return 0
}

func (m *TLAuthBindTempAuthKey) GetEncryptedMessage() []byte {
	if m != nil {
		return m.EncryptedMessage
	}
	return nil
}

type TLAuthImportBotAuthorization struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Flags                int32         `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	ApiId                int32         `protobuf:"varint,4,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`
	ApiHash              string        `protobuf:"bytes,5,opt,name=api_hash,json=apiHash,proto3" json:"api_hash,omitempty"`
	BotAuthToken         string        `protobuf:"bytes,6,opt,name=bot_auth_token,json=botAuthToken,proto3" json:"bot_auth_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthImportBotAuthorization) Reset()         { *m = TLAuthImportBotAuthorization{} }
func (m *TLAuthImportBotAuthorization) String() string { return proto.CompactTextString(m) }
func (*TLAuthImportBotAuthorization) ProtoMessage()    {}
func (*TLAuthImportBotAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{15}
}
func (m *TLAuthImportBotAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthImportBotAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthImportBotAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthImportBotAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthImportBotAuthorization.Merge(m, src)
}
func (m *TLAuthImportBotAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthImportBotAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthImportBotAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthImportBotAuthorization proto.InternalMessageInfo

func (m *TLAuthImportBotAuthorization) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthImportBotAuthorization) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLAuthImportBotAuthorization) GetApiId() int32 {
	if m != nil {
		return m.ApiId
	}
	return 0
}

func (m *TLAuthImportBotAuthorization) GetApiHash() string {
	if m != nil {
		return m.ApiHash
	}
	return ""
}

func (m *TLAuthImportBotAuthorization) GetBotAuthToken() string {
	if m != nil {
		return m.BotAuthToken
	}
	return ""
}

type TLAuthCheckPassword struct {
	Constructor          TLConstructor          `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Password             *InputCheckPasswordSRP `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TLAuthCheckPassword) Reset()         { *m = TLAuthCheckPassword{} }
func (m *TLAuthCheckPassword) String() string { return proto.CompactTextString(m) }
func (*TLAuthCheckPassword) ProtoMessage()    {}
func (*TLAuthCheckPassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{16}
}
func (m *TLAuthCheckPassword) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthCheckPassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthCheckPassword.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthCheckPassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthCheckPassword.Merge(m, src)
}
func (m *TLAuthCheckPassword) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthCheckPassword) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthCheckPassword.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthCheckPassword proto.InternalMessageInfo

func (m *TLAuthCheckPassword) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthCheckPassword) GetPassword() *InputCheckPasswordSRP {
	if m != nil {
		return m.Password
	}
	return nil
}

type TLAuthRequestPasswordRecovery struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthRequestPasswordRecovery) Reset()         { *m = TLAuthRequestPasswordRecovery{} }
func (m *TLAuthRequestPasswordRecovery) String() string { return proto.CompactTextString(m) }
func (*TLAuthRequestPasswordRecovery) ProtoMessage()    {}
func (*TLAuthRequestPasswordRecovery) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{17}
}
func (m *TLAuthRequestPasswordRecovery) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthRequestPasswordRecovery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthRequestPasswordRecovery.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthRequestPasswordRecovery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthRequestPasswordRecovery.Merge(m, src)
}
func (m *TLAuthRequestPasswordRecovery) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthRequestPasswordRecovery) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthRequestPasswordRecovery.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthRequestPasswordRecovery proto.InternalMessageInfo

func (m *TLAuthRequestPasswordRecovery) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLAuthRecoverPassword struct {
	Constructor          TLConstructor                  `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Code                 string                         `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	NewSettings          *Account_PasswordInputSettings `protobuf:"bytes,4,opt,name=new_settings,json=newSettings,proto3" json:"new_settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *TLAuthRecoverPassword) Reset()         { *m = TLAuthRecoverPassword{} }
func (m *TLAuthRecoverPassword) String() string { return proto.CompactTextString(m) }
func (*TLAuthRecoverPassword) ProtoMessage()    {}
func (*TLAuthRecoverPassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{18}
}
func (m *TLAuthRecoverPassword) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthRecoverPassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthRecoverPassword.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthRecoverPassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthRecoverPassword.Merge(m, src)
}
func (m *TLAuthRecoverPassword) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthRecoverPassword) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthRecoverPassword.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthRecoverPassword proto.InternalMessageInfo

func (m *TLAuthRecoverPassword) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthRecoverPassword) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *TLAuthRecoverPassword) GetNewSettings() *Account_PasswordInputSettings {
	if m != nil {
		return m.NewSettings
	}
	return nil
}

type TLAuthResendCode struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PhoneNumber          string        `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PhoneCodeHash        string        `protobuf:"bytes,4,opt,name=phone_code_hash,json=phoneCodeHash,proto3" json:"phone_code_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthResendCode) Reset()         { *m = TLAuthResendCode{} }
func (m *TLAuthResendCode) String() string { return proto.CompactTextString(m) }
func (*TLAuthResendCode) ProtoMessage()    {}
func (*TLAuthResendCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{19}
}
func (m *TLAuthResendCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthResendCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthResendCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthResendCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthResendCode.Merge(m, src)
}
func (m *TLAuthResendCode) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthResendCode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthResendCode.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthResendCode proto.InternalMessageInfo

func (m *TLAuthResendCode) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthResendCode) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAuthResendCode) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

type TLAuthCancelCode struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PhoneNumber          string        `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PhoneCodeHash        string        `protobuf:"bytes,4,opt,name=phone_code_hash,json=phoneCodeHash,proto3" json:"phone_code_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthCancelCode) Reset()         { *m = TLAuthCancelCode{} }
func (m *TLAuthCancelCode) String() string { return proto.CompactTextString(m) }
func (*TLAuthCancelCode) ProtoMessage()    {}
func (*TLAuthCancelCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{20}
}
func (m *TLAuthCancelCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthCancelCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthCancelCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthCancelCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthCancelCode.Merge(m, src)
}
func (m *TLAuthCancelCode) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthCancelCode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthCancelCode.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthCancelCode proto.InternalMessageInfo

func (m *TLAuthCancelCode) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthCancelCode) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAuthCancelCode) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

type TLAuthDropTempAuthKeys struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ExceptAuthKeys       []int64       `protobuf:"varint,3,rep,packed,name=except_auth_keys,json=exceptAuthKeys,proto3" json:"except_auth_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthDropTempAuthKeys) Reset()         { *m = TLAuthDropTempAuthKeys{} }
func (m *TLAuthDropTempAuthKeys) String() string { return proto.CompactTextString(m) }
func (*TLAuthDropTempAuthKeys) ProtoMessage()    {}
func (*TLAuthDropTempAuthKeys) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{21}
}
func (m *TLAuthDropTempAuthKeys) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthDropTempAuthKeys) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthDropTempAuthKeys.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthDropTempAuthKeys) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthDropTempAuthKeys.Merge(m, src)
}
func (m *TLAuthDropTempAuthKeys) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthDropTempAuthKeys) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthDropTempAuthKeys.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthDropTempAuthKeys proto.InternalMessageInfo

func (m *TLAuthDropTempAuthKeys) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthDropTempAuthKeys) GetExceptAuthKeys() []int64 {
	if m != nil {
		return m.ExceptAuthKeys
	}
	return nil
}

type TLAuthExportLoginToken struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ApiId                int32         `protobuf:"varint,3,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`
	ApiHash              string        `protobuf:"bytes,4,opt,name=api_hash,json=apiHash,proto3" json:"api_hash,omitempty"`
	ExceptIds            []int64       `protobuf:"varint,5,rep,packed,name=except_ids,json=exceptIds,proto3" json:"except_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthExportLoginToken) Reset()         { *m = TLAuthExportLoginToken{} }
func (m *TLAuthExportLoginToken) String() string { return proto.CompactTextString(m) }
func (*TLAuthExportLoginToken) ProtoMessage()    {}
func (*TLAuthExportLoginToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{22}
}
func (m *TLAuthExportLoginToken) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthExportLoginToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthExportLoginToken.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthExportLoginToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthExportLoginToken.Merge(m, src)
}
func (m *TLAuthExportLoginToken) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthExportLoginToken) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthExportLoginToken.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthExportLoginToken proto.InternalMessageInfo

func (m *TLAuthExportLoginToken) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthExportLoginToken) GetApiId() int32 {
	if m != nil {
		return m.ApiId
	}
	return 0
}

func (m *TLAuthExportLoginToken) GetApiHash() string {
	if m != nil {
		return m.ApiHash
	}
	return ""
}

func (m *TLAuthExportLoginToken) GetExceptIds() []int64 {
	if m != nil {
		return m.ExceptIds
	}
	return nil
}

type TLAuthImportLoginToken struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Token                []byte        `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthImportLoginToken) Reset()         { *m = TLAuthImportLoginToken{} }
func (m *TLAuthImportLoginToken) String() string { return proto.CompactTextString(m) }
func (*TLAuthImportLoginToken) ProtoMessage()    {}
func (*TLAuthImportLoginToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{23}
}
func (m *TLAuthImportLoginToken) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthImportLoginToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthImportLoginToken.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthImportLoginToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthImportLoginToken.Merge(m, src)
}
func (m *TLAuthImportLoginToken) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthImportLoginToken) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthImportLoginToken.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthImportLoginToken proto.InternalMessageInfo

func (m *TLAuthImportLoginToken) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthImportLoginToken) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

type TLAuthAcceptLoginToken struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Token                []byte        `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthAcceptLoginToken) Reset()         { *m = TLAuthAcceptLoginToken{} }
func (m *TLAuthAcceptLoginToken) String() string { return proto.CompactTextString(m) }
func (*TLAuthAcceptLoginToken) ProtoMessage()    {}
func (*TLAuthAcceptLoginToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{24}
}
func (m *TLAuthAcceptLoginToken) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthAcceptLoginToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthAcceptLoginToken.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthAcceptLoginToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthAcceptLoginToken.Merge(m, src)
}
func (m *TLAuthAcceptLoginToken) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthAcceptLoginToken) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthAcceptLoginToken.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthAcceptLoginToken proto.InternalMessageInfo

func (m *TLAuthAcceptLoginToken) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthAcceptLoginToken) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

type TLAuthCheckRecoveryPassword struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Code                 string        `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthCheckRecoveryPassword) Reset()         { *m = TLAuthCheckRecoveryPassword{} }
func (m *TLAuthCheckRecoveryPassword) String() string { return proto.CompactTextString(m) }
func (*TLAuthCheckRecoveryPassword) ProtoMessage()    {}
func (*TLAuthCheckRecoveryPassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{25}
}
func (m *TLAuthCheckRecoveryPassword) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthCheckRecoveryPassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthCheckRecoveryPassword.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthCheckRecoveryPassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthCheckRecoveryPassword.Merge(m, src)
}
func (m *TLAuthCheckRecoveryPassword) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthCheckRecoveryPassword) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthCheckRecoveryPassword.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthCheckRecoveryPassword proto.InternalMessageInfo

func (m *TLAuthCheckRecoveryPassword) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthCheckRecoveryPassword) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type TLAccountRegisterDevice struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	NoMuted              bool          `protobuf:"varint,3,opt,name=no_muted,json=noMuted,proto3" json:"no_muted,omitempty"`
	TokenType            int32         `protobuf:"varint,4,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	Token                string        `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	AppSandbox           *Bool         `protobuf:"bytes,6,opt,name=app_sandbox,json=appSandbox,proto3" json:"app_sandbox,omitempty"`
	Secret               []byte        `protobuf:"bytes,7,opt,name=secret,proto3" json:"secret,omitempty"`
	OtherUids            []int64       `protobuf:"varint,8,rep,packed,name=other_uids,json=otherUids,proto3" json:"other_uids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountRegisterDevice) Reset()         { *m = TLAccountRegisterDevice{} }
func (m *TLAccountRegisterDevice) String() string { return proto.CompactTextString(m) }
func (*TLAccountRegisterDevice) ProtoMessage()    {}
func (*TLAccountRegisterDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{26}
}
func (m *TLAccountRegisterDevice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountRegisterDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountRegisterDevice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountRegisterDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountRegisterDevice.Merge(m, src)
}
func (m *TLAccountRegisterDevice) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountRegisterDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountRegisterDevice.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountRegisterDevice proto.InternalMessageInfo

func (m *TLAccountRegisterDevice) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountRegisterDevice) GetNoMuted() bool {
	if m != nil {
		return m.NoMuted
	}
	return false
}

func (m *TLAccountRegisterDevice) GetTokenType() int32 {
	if m != nil {
		return m.TokenType
	}
	return 0
}

func (m *TLAccountRegisterDevice) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *TLAccountRegisterDevice) GetAppSandbox() *Bool {
	if m != nil {
		return m.AppSandbox
	}
	return nil
}

func (m *TLAccountRegisterDevice) GetSecret() []byte {
	if m != nil {
		return m.Secret
	}
	return nil
}

func (m *TLAccountRegisterDevice) GetOtherUids() []int64 {
	if m != nil {
		return m.OtherUids
	}
	return nil
}

type TLAccountUnregisterDevice struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	TokenType            int32         `protobuf:"varint,3,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	Token                string        `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	OtherUids            []int64       `protobuf:"varint,5,rep,packed,name=other_uids,json=otherUids,proto3" json:"other_uids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountUnregisterDevice) Reset()         { *m = TLAccountUnregisterDevice{} }
func (m *TLAccountUnregisterDevice) String() string { return proto.CompactTextString(m) }
func (*TLAccountUnregisterDevice) ProtoMessage()    {}
func (*TLAccountUnregisterDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{27}
}
func (m *TLAccountUnregisterDevice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUnregisterDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUnregisterDevice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountUnregisterDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUnregisterDevice.Merge(m, src)
}
func (m *TLAccountUnregisterDevice) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUnregisterDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUnregisterDevice.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUnregisterDevice proto.InternalMessageInfo

func (m *TLAccountUnregisterDevice) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountUnregisterDevice) GetTokenType() int32 {
	if m != nil {
		return m.TokenType
	}
	return 0
}

func (m *TLAccountUnregisterDevice) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *TLAccountUnregisterDevice) GetOtherUids() []int64 {
	if m != nil {
		return m.OtherUids
	}
	return nil
}

type TLAccountUpdateNotifySettings struct {
	Constructor          TLConstructor            `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputNotifyPeer         `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Settings             *InputPeerNotifySettings `protobuf:"bytes,4,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TLAccountUpdateNotifySettings) Reset()         { *m = TLAccountUpdateNotifySettings{} }
func (m *TLAccountUpdateNotifySettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdateNotifySettings) ProtoMessage()    {}
func (*TLAccountUpdateNotifySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{28}
}
func (m *TLAccountUpdateNotifySettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdateNotifySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdateNotifySettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountUpdateNotifySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdateNotifySettings.Merge(m, src)
}
func (m *TLAccountUpdateNotifySettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdateNotifySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdateNotifySettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdateNotifySettings proto.InternalMessageInfo

func (m *TLAccountUpdateNotifySettings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountUpdateNotifySettings) GetPeer() *InputNotifyPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLAccountUpdateNotifySettings) GetSettings() *InputPeerNotifySettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

type TLAccountGetNotifySettings struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputNotifyPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLAccountGetNotifySettings) Reset()         { *m = TLAccountGetNotifySettings{} }
func (m *TLAccountGetNotifySettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetNotifySettings) ProtoMessage()    {}
func (*TLAccountGetNotifySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{29}
}
func (m *TLAccountGetNotifySettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetNotifySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetNotifySettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetNotifySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetNotifySettings.Merge(m, src)
}
func (m *TLAccountGetNotifySettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetNotifySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetNotifySettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetNotifySettings proto.InternalMessageInfo

func (m *TLAccountGetNotifySettings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountGetNotifySettings) GetPeer() *InputNotifyPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type TLAccountResetNotifySettings struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountResetNotifySettings) Reset()         { *m = TLAccountResetNotifySettings{} }
func (m *TLAccountResetNotifySettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountResetNotifySettings) ProtoMessage()    {}
func (*TLAccountResetNotifySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{30}
}
func (m *TLAccountResetNotifySettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountResetNotifySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountResetNotifySettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountResetNotifySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountResetNotifySettings.Merge(m, src)
}
func (m *TLAccountResetNotifySettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountResetNotifySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountResetNotifySettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountResetNotifySettings proto.InternalMessageInfo

func (m *TLAccountResetNotifySettings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLAccountUpdateProfile struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FirstName            *types.StringValue `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             *types.StringValue `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	About                *types.StringValue `protobuf:"bytes,5,opt,name=about,proto3" json:"about,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLAccountUpdateProfile) Reset()         { *m = TLAccountUpdateProfile{} }
func (m *TLAccountUpdateProfile) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdateProfile) ProtoMessage()    {}
func (*TLAccountUpdateProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{31}
}
func (m *TLAccountUpdateProfile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdateProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdateProfile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountUpdateProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdateProfile.Merge(m, src)
}
func (m *TLAccountUpdateProfile) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdateProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdateProfile.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdateProfile proto.InternalMessageInfo

func (m *TLAccountUpdateProfile) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountUpdateProfile) GetFirstName() *types.StringValue {
	if m != nil {
		return m.FirstName
	}
	return nil
}

func (m *TLAccountUpdateProfile) GetLastName() *types.StringValue {
	if m != nil {
		return m.LastName
	}
	return nil
}

func (m *TLAccountUpdateProfile) GetAbout() *types.StringValue {
	if m != nil {
		return m.About
	}
	return nil
}

type TLAccountUpdateStatus struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Offline              *Bool         `protobuf:"bytes,3,opt,name=offline,proto3" json:"offline,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountUpdateStatus) Reset()         { *m = TLAccountUpdateStatus{} }
func (m *TLAccountUpdateStatus) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdateStatus) ProtoMessage()    {}
func (*TLAccountUpdateStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{32}
}
func (m *TLAccountUpdateStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdateStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdateStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountUpdateStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdateStatus.Merge(m, src)
}
func (m *TLAccountUpdateStatus) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdateStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdateStatus.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdateStatus proto.InternalMessageInfo

func (m *TLAccountUpdateStatus) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountUpdateStatus) GetOffline() *Bool {
	if m != nil {
		return m.Offline
	}
	return nil
}

type TLAccountGetWallPapers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 int64         `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetWallPapers) Reset()         { *m = TLAccountGetWallPapers{} }
func (m *TLAccountGetWallPapers) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetWallPapers) ProtoMessage()    {}
func (*TLAccountGetWallPapers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{33}
}
func (m *TLAccountGetWallPapers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetWallPapers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetWallPapers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetWallPapers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetWallPapers.Merge(m, src)
}
func (m *TLAccountGetWallPapers) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetWallPapers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetWallPapers.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetWallPapers proto.InternalMessageInfo

func (m *TLAccountGetWallPapers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountGetWallPapers) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLAccountReportPeer struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Reason               *ReportReason `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	Message              string        `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountReportPeer) Reset()         { *m = TLAccountReportPeer{} }
func (m *TLAccountReportPeer) String() string { return proto.CompactTextString(m) }
func (*TLAccountReportPeer) ProtoMessage()    {}
func (*TLAccountReportPeer) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{34}
}
func (m *TLAccountReportPeer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountReportPeer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountReportPeer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountReportPeer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountReportPeer.Merge(m, src)
}
func (m *TLAccountReportPeer) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountReportPeer) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountReportPeer.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountReportPeer proto.InternalMessageInfo

func (m *TLAccountReportPeer) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountReportPeer) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLAccountReportPeer) GetReason() *ReportReason {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *TLAccountReportPeer) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type TLAccountCheckUsername struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Username             string        `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountCheckUsername) Reset()         { *m = TLAccountCheckUsername{} }
func (m *TLAccountCheckUsername) String() string { return proto.CompactTextString(m) }
func (*TLAccountCheckUsername) ProtoMessage()    {}
func (*TLAccountCheckUsername) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{35}
}
func (m *TLAccountCheckUsername) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountCheckUsername) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountCheckUsername.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountCheckUsername) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountCheckUsername.Merge(m, src)
}
func (m *TLAccountCheckUsername) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountCheckUsername) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountCheckUsername.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountCheckUsername proto.InternalMessageInfo

func (m *TLAccountCheckUsername) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountCheckUsername) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type TLAccountUpdateUsername struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Username             string        `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountUpdateUsername) Reset()         { *m = TLAccountUpdateUsername{} }
func (m *TLAccountUpdateUsername) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdateUsername) ProtoMessage()    {}
func (*TLAccountUpdateUsername) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{36}
}
func (m *TLAccountUpdateUsername) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdateUsername) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdateUsername.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountUpdateUsername) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdateUsername.Merge(m, src)
}
func (m *TLAccountUpdateUsername) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdateUsername) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdateUsername.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdateUsername proto.InternalMessageInfo

func (m *TLAccountUpdateUsername) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountUpdateUsername) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type TLAccountGetPrivacy struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Key                  *InputPrivacyKey `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLAccountGetPrivacy) Reset()         { *m = TLAccountGetPrivacy{} }
func (m *TLAccountGetPrivacy) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetPrivacy) ProtoMessage()    {}
func (*TLAccountGetPrivacy) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{37}
}
func (m *TLAccountGetPrivacy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetPrivacy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetPrivacy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetPrivacy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetPrivacy.Merge(m, src)
}
func (m *TLAccountGetPrivacy) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetPrivacy) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetPrivacy.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetPrivacy proto.InternalMessageInfo

func (m *TLAccountGetPrivacy) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountGetPrivacy) GetKey() *InputPrivacyKey {
	if m != nil {
		return m.Key
	}
	return nil
}

type TLAccountSetPrivacy struct {
	Constructor          TLConstructor       `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Key                  *InputPrivacyKey    `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Rules                []*InputPrivacyRule `protobuf:"bytes,4,rep,name=rules,proto3" json:"rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLAccountSetPrivacy) Reset()         { *m = TLAccountSetPrivacy{} }
func (m *TLAccountSetPrivacy) String() string { return proto.CompactTextString(m) }
func (*TLAccountSetPrivacy) ProtoMessage()    {}
func (*TLAccountSetPrivacy) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{38}
}
func (m *TLAccountSetPrivacy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSetPrivacy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSetPrivacy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSetPrivacy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSetPrivacy.Merge(m, src)
}
func (m *TLAccountSetPrivacy) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSetPrivacy) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSetPrivacy.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSetPrivacy proto.InternalMessageInfo

func (m *TLAccountSetPrivacy) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSetPrivacy) GetKey() *InputPrivacyKey {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *TLAccountSetPrivacy) GetRules() []*InputPrivacyRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

type TLAccountDeleteAccount struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Reason               string        `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountDeleteAccount) Reset()         { *m = TLAccountDeleteAccount{} }
func (m *TLAccountDeleteAccount) String() string { return proto.CompactTextString(m) }
func (*TLAccountDeleteAccount) ProtoMessage()    {}
func (*TLAccountDeleteAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{39}
}
func (m *TLAccountDeleteAccount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountDeleteAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountDeleteAccount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountDeleteAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountDeleteAccount.Merge(m, src)
}
func (m *TLAccountDeleteAccount) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountDeleteAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountDeleteAccount.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountDeleteAccount proto.InternalMessageInfo

func (m *TLAccountDeleteAccount) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountDeleteAccount) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type TLAccountGetAccountTTL struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetAccountTTL) Reset()         { *m = TLAccountGetAccountTTL{} }
func (m *TLAccountGetAccountTTL) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetAccountTTL) ProtoMessage()    {}
func (*TLAccountGetAccountTTL) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{40}
}
func (m *TLAccountGetAccountTTL) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetAccountTTL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetAccountTTL.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetAccountTTL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetAccountTTL.Merge(m, src)
}
func (m *TLAccountGetAccountTTL) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetAccountTTL) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetAccountTTL.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetAccountTTL proto.InternalMessageInfo

func (m *TLAccountGetAccountTTL) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLAccountSetAccountTTL struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Ttl                  *AccountDaysTTL `protobuf:"bytes,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLAccountSetAccountTTL) Reset()         { *m = TLAccountSetAccountTTL{} }
func (m *TLAccountSetAccountTTL) String() string { return proto.CompactTextString(m) }
func (*TLAccountSetAccountTTL) ProtoMessage()    {}
func (*TLAccountSetAccountTTL) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{41}
}
func (m *TLAccountSetAccountTTL) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSetAccountTTL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSetAccountTTL.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSetAccountTTL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSetAccountTTL.Merge(m, src)
}
func (m *TLAccountSetAccountTTL) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSetAccountTTL) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSetAccountTTL.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSetAccountTTL proto.InternalMessageInfo

func (m *TLAccountSetAccountTTL) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSetAccountTTL) GetTtl() *AccountDaysTTL {
	if m != nil {
		return m.Ttl
	}
	return nil
}

type TLAccountSendChangePhoneCode struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PhoneNumber          string        `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Settings             *CodeSettings `protobuf:"bytes,4,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountSendChangePhoneCode) Reset()         { *m = TLAccountSendChangePhoneCode{} }
func (m *TLAccountSendChangePhoneCode) String() string { return proto.CompactTextString(m) }
func (*TLAccountSendChangePhoneCode) ProtoMessage()    {}
func (*TLAccountSendChangePhoneCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{42}
}
func (m *TLAccountSendChangePhoneCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSendChangePhoneCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSendChangePhoneCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSendChangePhoneCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSendChangePhoneCode.Merge(m, src)
}
func (m *TLAccountSendChangePhoneCode) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSendChangePhoneCode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSendChangePhoneCode.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSendChangePhoneCode proto.InternalMessageInfo

func (m *TLAccountSendChangePhoneCode) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSendChangePhoneCode) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAccountSendChangePhoneCode) GetSettings() *CodeSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

type TLAccountChangePhone struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PhoneNumber          string        `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PhoneCodeHash        string        `protobuf:"bytes,4,opt,name=phone_code_hash,json=phoneCodeHash,proto3" json:"phone_code_hash,omitempty"`
	PhoneCode            string        `protobuf:"bytes,5,opt,name=phone_code,json=phoneCode,proto3" json:"phone_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountChangePhone) Reset()         { *m = TLAccountChangePhone{} }
func (m *TLAccountChangePhone) String() string { return proto.CompactTextString(m) }
func (*TLAccountChangePhone) ProtoMessage()    {}
func (*TLAccountChangePhone) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{43}
}
func (m *TLAccountChangePhone) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountChangePhone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountChangePhone.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountChangePhone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountChangePhone.Merge(m, src)
}
func (m *TLAccountChangePhone) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountChangePhone) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountChangePhone.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountChangePhone proto.InternalMessageInfo

func (m *TLAccountChangePhone) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountChangePhone) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAccountChangePhone) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

func (m *TLAccountChangePhone) GetPhoneCode() string {
	if m != nil {
		return m.PhoneCode
	}
	return ""
}

type TLAccountUpdateDeviceLocked struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Period               int32         `protobuf:"varint,3,opt,name=period,proto3" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountUpdateDeviceLocked) Reset()         { *m = TLAccountUpdateDeviceLocked{} }
func (m *TLAccountUpdateDeviceLocked) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdateDeviceLocked) ProtoMessage()    {}
func (*TLAccountUpdateDeviceLocked) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{44}
}
func (m *TLAccountUpdateDeviceLocked) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdateDeviceLocked) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdateDeviceLocked.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountUpdateDeviceLocked) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdateDeviceLocked.Merge(m, src)
}
func (m *TLAccountUpdateDeviceLocked) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdateDeviceLocked) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdateDeviceLocked.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdateDeviceLocked proto.InternalMessageInfo

func (m *TLAccountUpdateDeviceLocked) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountUpdateDeviceLocked) GetPeriod() int32 {
	if m != nil {
		return m.Period
	}
	return 0
}

type TLAccountGetAuthorizations struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetAuthorizations) Reset()         { *m = TLAccountGetAuthorizations{} }
func (m *TLAccountGetAuthorizations) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetAuthorizations) ProtoMessage()    {}
func (*TLAccountGetAuthorizations) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{45}
}
func (m *TLAccountGetAuthorizations) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetAuthorizations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetAuthorizations.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetAuthorizations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetAuthorizations.Merge(m, src)
}
func (m *TLAccountGetAuthorizations) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetAuthorizations) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetAuthorizations.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetAuthorizations proto.InternalMessageInfo

func (m *TLAccountGetAuthorizations) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLAccountResetAuthorization struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 int64         `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountResetAuthorization) Reset()         { *m = TLAccountResetAuthorization{} }
func (m *TLAccountResetAuthorization) String() string { return proto.CompactTextString(m) }
func (*TLAccountResetAuthorization) ProtoMessage()    {}
func (*TLAccountResetAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{46}
}
func (m *TLAccountResetAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountResetAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountResetAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountResetAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountResetAuthorization.Merge(m, src)
}
func (m *TLAccountResetAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountResetAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountResetAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountResetAuthorization proto.InternalMessageInfo

func (m *TLAccountResetAuthorization) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountResetAuthorization) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLAccountGetPassword struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetPassword) Reset()         { *m = TLAccountGetPassword{} }
func (m *TLAccountGetPassword) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetPassword) ProtoMessage()    {}
func (*TLAccountGetPassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{47}
}
func (m *TLAccountGetPassword) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetPassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetPassword.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetPassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetPassword.Merge(m, src)
}
func (m *TLAccountGetPassword) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetPassword) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetPassword.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetPassword proto.InternalMessageInfo

func (m *TLAccountGetPassword) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLAccountGetPasswordSettings struct {
	Constructor          TLConstructor          `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Password             *InputCheckPasswordSRP `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TLAccountGetPasswordSettings) Reset()         { *m = TLAccountGetPasswordSettings{} }
func (m *TLAccountGetPasswordSettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetPasswordSettings) ProtoMessage()    {}
func (*TLAccountGetPasswordSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{48}
}
func (m *TLAccountGetPasswordSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetPasswordSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetPasswordSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetPasswordSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetPasswordSettings.Merge(m, src)
}
func (m *TLAccountGetPasswordSettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetPasswordSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetPasswordSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetPasswordSettings proto.InternalMessageInfo

func (m *TLAccountGetPasswordSettings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountGetPasswordSettings) GetPassword() *InputCheckPasswordSRP {
	if m != nil {
		return m.Password
	}
	return nil
}

type TLAccountUpdatePasswordSettings struct {
	Constructor          TLConstructor                  `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Password             *InputCheckPasswordSRP         `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	NewSettings          *Account_PasswordInputSettings `protobuf:"bytes,4,opt,name=new_settings,json=newSettings,proto3" json:"new_settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *TLAccountUpdatePasswordSettings) Reset()         { *m = TLAccountUpdatePasswordSettings{} }
func (m *TLAccountUpdatePasswordSettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdatePasswordSettings) ProtoMessage()    {}
func (*TLAccountUpdatePasswordSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{49}
}
func (m *TLAccountUpdatePasswordSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdatePasswordSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdatePasswordSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountUpdatePasswordSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdatePasswordSettings.Merge(m, src)
}
func (m *TLAccountUpdatePasswordSettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdatePasswordSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdatePasswordSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdatePasswordSettings proto.InternalMessageInfo

func (m *TLAccountUpdatePasswordSettings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountUpdatePasswordSettings) GetPassword() *InputCheckPasswordSRP {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *TLAccountUpdatePasswordSettings) GetNewSettings() *Account_PasswordInputSettings {
	if m != nil {
		return m.NewSettings
	}
	return nil
}

type TLAccountSendConfirmPhoneCode struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 string        `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	Settings             *CodeSettings `protobuf:"bytes,4,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountSendConfirmPhoneCode) Reset()         { *m = TLAccountSendConfirmPhoneCode{} }
func (m *TLAccountSendConfirmPhoneCode) String() string { return proto.CompactTextString(m) }
func (*TLAccountSendConfirmPhoneCode) ProtoMessage()    {}
func (*TLAccountSendConfirmPhoneCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{50}
}
func (m *TLAccountSendConfirmPhoneCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSendConfirmPhoneCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSendConfirmPhoneCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSendConfirmPhoneCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSendConfirmPhoneCode.Merge(m, src)
}
func (m *TLAccountSendConfirmPhoneCode) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSendConfirmPhoneCode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSendConfirmPhoneCode.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSendConfirmPhoneCode proto.InternalMessageInfo

func (m *TLAccountSendConfirmPhoneCode) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSendConfirmPhoneCode) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *TLAccountSendConfirmPhoneCode) GetSettings() *CodeSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

type TLAccountConfirmPhone struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PhoneCodeHash        string        `protobuf:"bytes,3,opt,name=phone_code_hash,json=phoneCodeHash,proto3" json:"phone_code_hash,omitempty"`
	PhoneCode            string        `protobuf:"bytes,4,opt,name=phone_code,json=phoneCode,proto3" json:"phone_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountConfirmPhone) Reset()         { *m = TLAccountConfirmPhone{} }
func (m *TLAccountConfirmPhone) String() string { return proto.CompactTextString(m) }
func (*TLAccountConfirmPhone) ProtoMessage()    {}
func (*TLAccountConfirmPhone) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{51}
}
func (m *TLAccountConfirmPhone) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountConfirmPhone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountConfirmPhone.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountConfirmPhone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountConfirmPhone.Merge(m, src)
}
func (m *TLAccountConfirmPhone) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountConfirmPhone) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountConfirmPhone.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountConfirmPhone proto.InternalMessageInfo

func (m *TLAccountConfirmPhone) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountConfirmPhone) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

func (m *TLAccountConfirmPhone) GetPhoneCode() string {
	if m != nil {
		return m.PhoneCode
	}
	return ""
}

type TLAccountGetTmpPassword struct {
	Constructor          TLConstructor          `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Password             *InputCheckPasswordSRP `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Period               int32                  `protobuf:"varint,4,opt,name=period,proto3" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TLAccountGetTmpPassword) Reset()         { *m = TLAccountGetTmpPassword{} }
func (m *TLAccountGetTmpPassword) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetTmpPassword) ProtoMessage()    {}
func (*TLAccountGetTmpPassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{52}
}
func (m *TLAccountGetTmpPassword) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetTmpPassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetTmpPassword.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetTmpPassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetTmpPassword.Merge(m, src)
}
func (m *TLAccountGetTmpPassword) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetTmpPassword) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetTmpPassword.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetTmpPassword proto.InternalMessageInfo

func (m *TLAccountGetTmpPassword) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountGetTmpPassword) GetPassword() *InputCheckPasswordSRP {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *TLAccountGetTmpPassword) GetPeriod() int32 {
	if m != nil {
		return m.Period
	}
	return 0
}

type TLAccountGetWebAuthorizations struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetWebAuthorizations) Reset()         { *m = TLAccountGetWebAuthorizations{} }
func (m *TLAccountGetWebAuthorizations) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetWebAuthorizations) ProtoMessage()    {}
func (*TLAccountGetWebAuthorizations) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{53}
}
func (m *TLAccountGetWebAuthorizations) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetWebAuthorizations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetWebAuthorizations.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetWebAuthorizations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetWebAuthorizations.Merge(m, src)
}
func (m *TLAccountGetWebAuthorizations) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetWebAuthorizations) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetWebAuthorizations.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetWebAuthorizations proto.InternalMessageInfo

func (m *TLAccountGetWebAuthorizations) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLAccountResetWebAuthorization struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 int64         `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountResetWebAuthorization) Reset()         { *m = TLAccountResetWebAuthorization{} }
func (m *TLAccountResetWebAuthorization) String() string { return proto.CompactTextString(m) }
func (*TLAccountResetWebAuthorization) ProtoMessage()    {}
func (*TLAccountResetWebAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{54}
}
func (m *TLAccountResetWebAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountResetWebAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountResetWebAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountResetWebAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountResetWebAuthorization.Merge(m, src)
}
func (m *TLAccountResetWebAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountResetWebAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountResetWebAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountResetWebAuthorization proto.InternalMessageInfo

func (m *TLAccountResetWebAuthorization) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountResetWebAuthorization) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLAccountResetWebAuthorizations struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountResetWebAuthorizations) Reset()         { *m = TLAccountResetWebAuthorizations{} }
func (m *TLAccountResetWebAuthorizations) String() string { return proto.CompactTextString(m) }
func (*TLAccountResetWebAuthorizations) ProtoMessage()    {}
func (*TLAccountResetWebAuthorizations) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{55}
}
func (m *TLAccountResetWebAuthorizations) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountResetWebAuthorizations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountResetWebAuthorizations.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountResetWebAuthorizations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountResetWebAuthorizations.Merge(m, src)
}
func (m *TLAccountResetWebAuthorizations) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountResetWebAuthorizations) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountResetWebAuthorizations.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountResetWebAuthorizations proto.InternalMessageInfo

func (m *TLAccountResetWebAuthorizations) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLAccountGetAllSecureValues struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetAllSecureValues) Reset()         { *m = TLAccountGetAllSecureValues{} }
func (m *TLAccountGetAllSecureValues) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetAllSecureValues) ProtoMessage()    {}
func (*TLAccountGetAllSecureValues) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{56}
}
func (m *TLAccountGetAllSecureValues) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetAllSecureValues) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetAllSecureValues.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetAllSecureValues) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetAllSecureValues.Merge(m, src)
}
func (m *TLAccountGetAllSecureValues) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetAllSecureValues) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetAllSecureValues.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetAllSecureValues proto.InternalMessageInfo

func (m *TLAccountGetAllSecureValues) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLAccountGetSecureValue struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Types                []*SecureValueType `protobuf:"bytes,3,rep,name=types,proto3" json:"types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLAccountGetSecureValue) Reset()         { *m = TLAccountGetSecureValue{} }
func (m *TLAccountGetSecureValue) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetSecureValue) ProtoMessage()    {}
func (*TLAccountGetSecureValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{57}
}
func (m *TLAccountGetSecureValue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetSecureValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetSecureValue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetSecureValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetSecureValue.Merge(m, src)
}
func (m *TLAccountGetSecureValue) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetSecureValue) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetSecureValue.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetSecureValue proto.InternalMessageInfo

func (m *TLAccountGetSecureValue) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountGetSecureValue) GetTypes() []*SecureValueType {
	if m != nil {
		return m.Types
	}
	return nil
}

type TLAccountSaveSecureValue struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Value                *InputSecureValue `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	SecureSecretId       int64             `protobuf:"varint,4,opt,name=secure_secret_id,json=secureSecretId,proto3" json:"secure_secret_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLAccountSaveSecureValue) Reset()         { *m = TLAccountSaveSecureValue{} }
func (m *TLAccountSaveSecureValue) String() string { return proto.CompactTextString(m) }
func (*TLAccountSaveSecureValue) ProtoMessage()    {}
func (*TLAccountSaveSecureValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{58}
}
func (m *TLAccountSaveSecureValue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSaveSecureValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSaveSecureValue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSaveSecureValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSaveSecureValue.Merge(m, src)
}
func (m *TLAccountSaveSecureValue) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSaveSecureValue) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSaveSecureValue.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSaveSecureValue proto.InternalMessageInfo

func (m *TLAccountSaveSecureValue) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSaveSecureValue) GetValue() *InputSecureValue {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *TLAccountSaveSecureValue) GetSecureSecretId() int64 {
	if m != nil {
		return m.SecureSecretId
	}
	return 0
}

type TLAccountDeleteSecureValue struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Types                []*SecureValueType `protobuf:"bytes,3,rep,name=types,proto3" json:"types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLAccountDeleteSecureValue) Reset()         { *m = TLAccountDeleteSecureValue{} }
func (m *TLAccountDeleteSecureValue) String() string { return proto.CompactTextString(m) }
func (*TLAccountDeleteSecureValue) ProtoMessage()    {}
func (*TLAccountDeleteSecureValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{59}
}
func (m *TLAccountDeleteSecureValue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountDeleteSecureValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountDeleteSecureValue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountDeleteSecureValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountDeleteSecureValue.Merge(m, src)
}
func (m *TLAccountDeleteSecureValue) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountDeleteSecureValue) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountDeleteSecureValue.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountDeleteSecureValue proto.InternalMessageInfo

func (m *TLAccountDeleteSecureValue) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountDeleteSecureValue) GetTypes() []*SecureValueType {
	if m != nil {
		return m.Types
	}
	return nil
}

type TLAccountGetAuthorizationForm struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	BotId                int64         `protobuf:"varint,3,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	Scope                string        `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	PublicKey            string        `protobuf:"bytes,5,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetAuthorizationForm) Reset()         { *m = TLAccountGetAuthorizationForm{} }
func (m *TLAccountGetAuthorizationForm) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetAuthorizationForm) ProtoMessage()    {}
func (*TLAccountGetAuthorizationForm) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{60}
}
func (m *TLAccountGetAuthorizationForm) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetAuthorizationForm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetAuthorizationForm.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetAuthorizationForm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetAuthorizationForm.Merge(m, src)
}
func (m *TLAccountGetAuthorizationForm) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetAuthorizationForm) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetAuthorizationForm.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetAuthorizationForm proto.InternalMessageInfo

func (m *TLAccountGetAuthorizationForm) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountGetAuthorizationForm) GetBotId() int64 {
	if m != nil {
		return m.BotId
	}
	return 0
}

func (m *TLAccountGetAuthorizationForm) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *TLAccountGetAuthorizationForm) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

type TLAccountAcceptAuthorization struct {
	Constructor          TLConstructor               `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	BotId                int64                       `protobuf:"varint,3,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	Scope                string                      `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	PublicKey            string                      `protobuf:"bytes,5,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	ValueHashes          []*SecureValueHash          `protobuf:"bytes,6,rep,name=value_hashes,json=valueHashes,proto3" json:"value_hashes,omitempty"`
	Credentials          *SecureCredentialsEncrypted `protobuf:"bytes,7,opt,name=credentials,proto3" json:"credentials,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *TLAccountAcceptAuthorization) Reset()         { *m = TLAccountAcceptAuthorization{} }
func (m *TLAccountAcceptAuthorization) String() string { return proto.CompactTextString(m) }
func (*TLAccountAcceptAuthorization) ProtoMessage()    {}
func (*TLAccountAcceptAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{61}
}
func (m *TLAccountAcceptAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountAcceptAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountAcceptAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountAcceptAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountAcceptAuthorization.Merge(m, src)
}
func (m *TLAccountAcceptAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountAcceptAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountAcceptAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountAcceptAuthorization proto.InternalMessageInfo

func (m *TLAccountAcceptAuthorization) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountAcceptAuthorization) GetBotId() int64 {
	if m != nil {
		return m.BotId
	}
	return 0
}

func (m *TLAccountAcceptAuthorization) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *TLAccountAcceptAuthorization) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *TLAccountAcceptAuthorization) GetValueHashes() []*SecureValueHash {
	if m != nil {
		return m.ValueHashes
	}
	return nil
}

func (m *TLAccountAcceptAuthorization) GetCredentials() *SecureCredentialsEncrypted {
	if m != nil {
		return m.Credentials
	}
	return nil
}

type TLAccountSendVerifyPhoneCode struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PhoneNumber          string        `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Settings             *CodeSettings `protobuf:"bytes,4,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountSendVerifyPhoneCode) Reset()         { *m = TLAccountSendVerifyPhoneCode{} }
func (m *TLAccountSendVerifyPhoneCode) String() string { return proto.CompactTextString(m) }
func (*TLAccountSendVerifyPhoneCode) ProtoMessage()    {}
func (*TLAccountSendVerifyPhoneCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{62}
}
func (m *TLAccountSendVerifyPhoneCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSendVerifyPhoneCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSendVerifyPhoneCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSendVerifyPhoneCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSendVerifyPhoneCode.Merge(m, src)
}
func (m *TLAccountSendVerifyPhoneCode) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSendVerifyPhoneCode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSendVerifyPhoneCode.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSendVerifyPhoneCode proto.InternalMessageInfo

func (m *TLAccountSendVerifyPhoneCode) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSendVerifyPhoneCode) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAccountSendVerifyPhoneCode) GetSettings() *CodeSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

type TLAccountVerifyPhone struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PhoneNumber          string        `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PhoneCodeHash        string        `protobuf:"bytes,4,opt,name=phone_code_hash,json=phoneCodeHash,proto3" json:"phone_code_hash,omitempty"`
	PhoneCode            string        `protobuf:"bytes,5,opt,name=phone_code,json=phoneCode,proto3" json:"phone_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountVerifyPhone) Reset()         { *m = TLAccountVerifyPhone{} }
func (m *TLAccountVerifyPhone) String() string { return proto.CompactTextString(m) }
func (*TLAccountVerifyPhone) ProtoMessage()    {}
func (*TLAccountVerifyPhone) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{63}
}
func (m *TLAccountVerifyPhone) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountVerifyPhone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountVerifyPhone.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountVerifyPhone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountVerifyPhone.Merge(m, src)
}
func (m *TLAccountVerifyPhone) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountVerifyPhone) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountVerifyPhone.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountVerifyPhone proto.InternalMessageInfo

func (m *TLAccountVerifyPhone) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountVerifyPhone) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAccountVerifyPhone) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

func (m *TLAccountVerifyPhone) GetPhoneCode() string {
	if m != nil {
		return m.PhoneCode
	}
	return ""
}

type TLAccountSendVerifyEmailCode struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Email                string        `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountSendVerifyEmailCode) Reset()         { *m = TLAccountSendVerifyEmailCode{} }
func (m *TLAccountSendVerifyEmailCode) String() string { return proto.CompactTextString(m) }
func (*TLAccountSendVerifyEmailCode) ProtoMessage()    {}
func (*TLAccountSendVerifyEmailCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{64}
}
func (m *TLAccountSendVerifyEmailCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSendVerifyEmailCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSendVerifyEmailCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSendVerifyEmailCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSendVerifyEmailCode.Merge(m, src)
}
func (m *TLAccountSendVerifyEmailCode) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSendVerifyEmailCode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSendVerifyEmailCode.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSendVerifyEmailCode proto.InternalMessageInfo

func (m *TLAccountSendVerifyEmailCode) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSendVerifyEmailCode) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type TLAccountVerifyEmail struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Email                string        `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Code                 string        `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountVerifyEmail) Reset()         { *m = TLAccountVerifyEmail{} }
func (m *TLAccountVerifyEmail) String() string { return proto.CompactTextString(m) }
func (*TLAccountVerifyEmail) ProtoMessage()    {}
func (*TLAccountVerifyEmail) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{65}
}
func (m *TLAccountVerifyEmail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountVerifyEmail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountVerifyEmail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountVerifyEmail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountVerifyEmail.Merge(m, src)
}
func (m *TLAccountVerifyEmail) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountVerifyEmail) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountVerifyEmail.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountVerifyEmail proto.InternalMessageInfo

func (m *TLAccountVerifyEmail) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountVerifyEmail) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *TLAccountVerifyEmail) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type TLAccountInitTakeoutSession struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Contacts             bool              `protobuf:"varint,3,opt,name=contacts,proto3" json:"contacts,omitempty"`
	MessageUsers         bool              `protobuf:"varint,4,opt,name=message_users,json=messageUsers,proto3" json:"message_users,omitempty"`
	MessageChats         bool              `protobuf:"varint,5,opt,name=message_chats,json=messageChats,proto3" json:"message_chats,omitempty"`
	MessageMegagroups    bool              `protobuf:"varint,6,opt,name=message_megagroups,json=messageMegagroups,proto3" json:"message_megagroups,omitempty"`
	MessageChannels      bool              `protobuf:"varint,7,opt,name=message_channels,json=messageChannels,proto3" json:"message_channels,omitempty"`
	Files                bool              `protobuf:"varint,8,opt,name=files,proto3" json:"files,omitempty"`
	FileMaxSize          *types.Int32Value `protobuf:"bytes,9,opt,name=file_max_size,json=fileMaxSize,proto3" json:"file_max_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLAccountInitTakeoutSession) Reset()         { *m = TLAccountInitTakeoutSession{} }
func (m *TLAccountInitTakeoutSession) String() string { return proto.CompactTextString(m) }
func (*TLAccountInitTakeoutSession) ProtoMessage()    {}
func (*TLAccountInitTakeoutSession) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{66}
}
func (m *TLAccountInitTakeoutSession) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountInitTakeoutSession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountInitTakeoutSession.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountInitTakeoutSession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountInitTakeoutSession.Merge(m, src)
}
func (m *TLAccountInitTakeoutSession) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountInitTakeoutSession) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountInitTakeoutSession.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountInitTakeoutSession proto.InternalMessageInfo

func (m *TLAccountInitTakeoutSession) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountInitTakeoutSession) GetContacts() bool {
	if m != nil {
		return m.Contacts
	}
	return false
}

func (m *TLAccountInitTakeoutSession) GetMessageUsers() bool {
	if m != nil {
		return m.MessageUsers
	}
	return false
}

func (m *TLAccountInitTakeoutSession) GetMessageChats() bool {
	if m != nil {
		return m.MessageChats
	}
	return false
}

func (m *TLAccountInitTakeoutSession) GetMessageMegagroups() bool {
	if m != nil {
		return m.MessageMegagroups
	}
	return false
}

func (m *TLAccountInitTakeoutSession) GetMessageChannels() bool {
	if m != nil {
		return m.MessageChannels
	}
	return false
}

func (m *TLAccountInitTakeoutSession) GetFiles() bool {
	if m != nil {
		return m.Files
	}
	return false
}

func (m *TLAccountInitTakeoutSession) GetFileMaxSize() *types.Int32Value {
	if m != nil {
		return m.FileMaxSize
	}
	return nil
}

type TLAccountFinishTakeoutSession struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Success              bool          `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountFinishTakeoutSession) Reset()         { *m = TLAccountFinishTakeoutSession{} }
func (m *TLAccountFinishTakeoutSession) String() string { return proto.CompactTextString(m) }
func (*TLAccountFinishTakeoutSession) ProtoMessage()    {}
func (*TLAccountFinishTakeoutSession) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{67}
}
func (m *TLAccountFinishTakeoutSession) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountFinishTakeoutSession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountFinishTakeoutSession.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountFinishTakeoutSession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountFinishTakeoutSession.Merge(m, src)
}
func (m *TLAccountFinishTakeoutSession) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountFinishTakeoutSession) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountFinishTakeoutSession.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountFinishTakeoutSession proto.InternalMessageInfo

func (m *TLAccountFinishTakeoutSession) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountFinishTakeoutSession) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type TLAccountConfirmPasswordEmail struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Code                 string        `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountConfirmPasswordEmail) Reset()         { *m = TLAccountConfirmPasswordEmail{} }
func (m *TLAccountConfirmPasswordEmail) String() string { return proto.CompactTextString(m) }
func (*TLAccountConfirmPasswordEmail) ProtoMessage()    {}
func (*TLAccountConfirmPasswordEmail) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{68}
}
func (m *TLAccountConfirmPasswordEmail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountConfirmPasswordEmail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountConfirmPasswordEmail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountConfirmPasswordEmail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountConfirmPasswordEmail.Merge(m, src)
}
func (m *TLAccountConfirmPasswordEmail) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountConfirmPasswordEmail) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountConfirmPasswordEmail.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountConfirmPasswordEmail proto.InternalMessageInfo

func (m *TLAccountConfirmPasswordEmail) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountConfirmPasswordEmail) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type TLAccountResendPasswordEmail struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountResendPasswordEmail) Reset()         { *m = TLAccountResendPasswordEmail{} }
func (m *TLAccountResendPasswordEmail) String() string { return proto.CompactTextString(m) }
func (*TLAccountResendPasswordEmail) ProtoMessage()    {}
func (*TLAccountResendPasswordEmail) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{69}
}
func (m *TLAccountResendPasswordEmail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountResendPasswordEmail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountResendPasswordEmail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountResendPasswordEmail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountResendPasswordEmail.Merge(m, src)
}
func (m *TLAccountResendPasswordEmail) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountResendPasswordEmail) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountResendPasswordEmail.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountResendPasswordEmail proto.InternalMessageInfo

func (m *TLAccountResendPasswordEmail) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLAccountCancelPasswordEmail struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountCancelPasswordEmail) Reset()         { *m = TLAccountCancelPasswordEmail{} }
func (m *TLAccountCancelPasswordEmail) String() string { return proto.CompactTextString(m) }
func (*TLAccountCancelPasswordEmail) ProtoMessage()    {}
func (*TLAccountCancelPasswordEmail) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{70}
}
func (m *TLAccountCancelPasswordEmail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountCancelPasswordEmail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountCancelPasswordEmail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountCancelPasswordEmail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountCancelPasswordEmail.Merge(m, src)
}
func (m *TLAccountCancelPasswordEmail) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountCancelPasswordEmail) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountCancelPasswordEmail.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountCancelPasswordEmail proto.InternalMessageInfo

func (m *TLAccountCancelPasswordEmail) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLAccountGetContactSignUpNotification struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetContactSignUpNotification) Reset()         { *m = TLAccountGetContactSignUpNotification{} }
func (m *TLAccountGetContactSignUpNotification) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetContactSignUpNotification) ProtoMessage()    {}
func (*TLAccountGetContactSignUpNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{71}
}
func (m *TLAccountGetContactSignUpNotification) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetContactSignUpNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetContactSignUpNotification.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetContactSignUpNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetContactSignUpNotification.Merge(m, src)
}
func (m *TLAccountGetContactSignUpNotification) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetContactSignUpNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetContactSignUpNotification.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetContactSignUpNotification proto.InternalMessageInfo

func (m *TLAccountGetContactSignUpNotification) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLAccountSetContactSignUpNotification struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Silent               *Bool         `protobuf:"bytes,3,opt,name=silent,proto3" json:"silent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountSetContactSignUpNotification) Reset()         { *m = TLAccountSetContactSignUpNotification{} }
func (m *TLAccountSetContactSignUpNotification) String() string { return proto.CompactTextString(m) }
func (*TLAccountSetContactSignUpNotification) ProtoMessage()    {}
func (*TLAccountSetContactSignUpNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{72}
}
func (m *TLAccountSetContactSignUpNotification) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSetContactSignUpNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSetContactSignUpNotification.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSetContactSignUpNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSetContactSignUpNotification.Merge(m, src)
}
func (m *TLAccountSetContactSignUpNotification) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSetContactSignUpNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSetContactSignUpNotification.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSetContactSignUpNotification proto.InternalMessageInfo

func (m *TLAccountSetContactSignUpNotification) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSetContactSignUpNotification) GetSilent() *Bool {
	if m != nil {
		return m.Silent
	}
	return nil
}

type TLAccountGetNotifyExceptions struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	CompareSound         bool             `protobuf:"varint,3,opt,name=compare_sound,json=compareSound,proto3" json:"compare_sound,omitempty"`
	Peer                 *InputNotifyPeer `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLAccountGetNotifyExceptions) Reset()         { *m = TLAccountGetNotifyExceptions{} }
func (m *TLAccountGetNotifyExceptions) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetNotifyExceptions) ProtoMessage()    {}
func (*TLAccountGetNotifyExceptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{73}
}
func (m *TLAccountGetNotifyExceptions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetNotifyExceptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetNotifyExceptions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetNotifyExceptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetNotifyExceptions.Merge(m, src)
}
func (m *TLAccountGetNotifyExceptions) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetNotifyExceptions) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetNotifyExceptions.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetNotifyExceptions proto.InternalMessageInfo

func (m *TLAccountGetNotifyExceptions) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountGetNotifyExceptions) GetCompareSound() bool {
	if m != nil {
		return m.CompareSound
	}
	return false
}

func (m *TLAccountGetNotifyExceptions) GetPeer() *InputNotifyPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type TLAccountGetWallPaper struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Wallpaper            *InputWallPaper `protobuf:"bytes,3,opt,name=wallpaper,proto3" json:"wallpaper,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLAccountGetWallPaper) Reset()         { *m = TLAccountGetWallPaper{} }
func (m *TLAccountGetWallPaper) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetWallPaper) ProtoMessage()    {}
func (*TLAccountGetWallPaper) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{74}
}
func (m *TLAccountGetWallPaper) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetWallPaper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetWallPaper.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetWallPaper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetWallPaper.Merge(m, src)
}
func (m *TLAccountGetWallPaper) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetWallPaper) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetWallPaper.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetWallPaper proto.InternalMessageInfo

func (m *TLAccountGetWallPaper) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountGetWallPaper) GetWallpaper() *InputWallPaper {
	if m != nil {
		return m.Wallpaper
	}
	return nil
}

type TLAccountUploadWallPaper struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	File                 *InputFile         `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
	MimeType             string             `protobuf:"bytes,4,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Settings             *WallPaperSettings `protobuf:"bytes,5,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLAccountUploadWallPaper) Reset()         { *m = TLAccountUploadWallPaper{} }
func (m *TLAccountUploadWallPaper) String() string { return proto.CompactTextString(m) }
func (*TLAccountUploadWallPaper) ProtoMessage()    {}
func (*TLAccountUploadWallPaper) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{75}
}
func (m *TLAccountUploadWallPaper) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUploadWallPaper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUploadWallPaper.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountUploadWallPaper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUploadWallPaper.Merge(m, src)
}
func (m *TLAccountUploadWallPaper) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUploadWallPaper) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUploadWallPaper.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUploadWallPaper proto.InternalMessageInfo

func (m *TLAccountUploadWallPaper) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountUploadWallPaper) GetFile() *InputFile {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *TLAccountUploadWallPaper) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *TLAccountUploadWallPaper) GetSettings() *WallPaperSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

type TLAccountSaveWallPaper struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Wallpaper            *InputWallPaper    `protobuf:"bytes,3,opt,name=wallpaper,proto3" json:"wallpaper,omitempty"`
	Unsave               *Bool              `protobuf:"bytes,4,opt,name=unsave,proto3" json:"unsave,omitempty"`
	Settings             *WallPaperSettings `protobuf:"bytes,5,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLAccountSaveWallPaper) Reset()         { *m = TLAccountSaveWallPaper{} }
func (m *TLAccountSaveWallPaper) String() string { return proto.CompactTextString(m) }
func (*TLAccountSaveWallPaper) ProtoMessage()    {}
func (*TLAccountSaveWallPaper) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{76}
}
func (m *TLAccountSaveWallPaper) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSaveWallPaper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSaveWallPaper.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSaveWallPaper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSaveWallPaper.Merge(m, src)
}
func (m *TLAccountSaveWallPaper) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSaveWallPaper) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSaveWallPaper.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSaveWallPaper proto.InternalMessageInfo

func (m *TLAccountSaveWallPaper) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSaveWallPaper) GetWallpaper() *InputWallPaper {
	if m != nil {
		return m.Wallpaper
	}
	return nil
}

func (m *TLAccountSaveWallPaper) GetUnsave() *Bool {
	if m != nil {
		return m.Unsave
	}
	return nil
}

func (m *TLAccountSaveWallPaper) GetSettings() *WallPaperSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

type TLAccountInstallWallPaper struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Wallpaper            *InputWallPaper    `protobuf:"bytes,3,opt,name=wallpaper,proto3" json:"wallpaper,omitempty"`
	Settings             *WallPaperSettings `protobuf:"bytes,4,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLAccountInstallWallPaper) Reset()         { *m = TLAccountInstallWallPaper{} }
func (m *TLAccountInstallWallPaper) String() string { return proto.CompactTextString(m) }
func (*TLAccountInstallWallPaper) ProtoMessage()    {}
func (*TLAccountInstallWallPaper) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{77}
}
func (m *TLAccountInstallWallPaper) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountInstallWallPaper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountInstallWallPaper.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountInstallWallPaper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountInstallWallPaper.Merge(m, src)
}
func (m *TLAccountInstallWallPaper) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountInstallWallPaper) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountInstallWallPaper.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountInstallWallPaper proto.InternalMessageInfo

func (m *TLAccountInstallWallPaper) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountInstallWallPaper) GetWallpaper() *InputWallPaper {
	if m != nil {
		return m.Wallpaper
	}
	return nil
}

func (m *TLAccountInstallWallPaper) GetSettings() *WallPaperSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

type TLAccountResetWallPapers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountResetWallPapers) Reset()         { *m = TLAccountResetWallPapers{} }
func (m *TLAccountResetWallPapers) String() string { return proto.CompactTextString(m) }
func (*TLAccountResetWallPapers) ProtoMessage()    {}
func (*TLAccountResetWallPapers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{78}
}
func (m *TLAccountResetWallPapers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountResetWallPapers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountResetWallPapers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountResetWallPapers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountResetWallPapers.Merge(m, src)
}
func (m *TLAccountResetWallPapers) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountResetWallPapers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountResetWallPapers.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountResetWallPapers proto.InternalMessageInfo

func (m *TLAccountResetWallPapers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLAccountGetAutoDownloadSettings struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetAutoDownloadSettings) Reset()         { *m = TLAccountGetAutoDownloadSettings{} }
func (m *TLAccountGetAutoDownloadSettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetAutoDownloadSettings) ProtoMessage()    {}
func (*TLAccountGetAutoDownloadSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{79}
}
func (m *TLAccountGetAutoDownloadSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetAutoDownloadSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetAutoDownloadSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetAutoDownloadSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetAutoDownloadSettings.Merge(m, src)
}
func (m *TLAccountGetAutoDownloadSettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetAutoDownloadSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetAutoDownloadSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetAutoDownloadSettings proto.InternalMessageInfo

func (m *TLAccountGetAutoDownloadSettings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLAccountSaveAutoDownloadSettings struct {
	Constructor          TLConstructor         `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Low                  bool                  `protobuf:"varint,3,opt,name=low,proto3" json:"low,omitempty"`
	High                 bool                  `protobuf:"varint,4,opt,name=high,proto3" json:"high,omitempty"`
	Settings             *AutoDownloadSettings `protobuf:"bytes,5,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TLAccountSaveAutoDownloadSettings) Reset()         { *m = TLAccountSaveAutoDownloadSettings{} }
func (m *TLAccountSaveAutoDownloadSettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountSaveAutoDownloadSettings) ProtoMessage()    {}
func (*TLAccountSaveAutoDownloadSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{80}
}
func (m *TLAccountSaveAutoDownloadSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSaveAutoDownloadSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSaveAutoDownloadSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSaveAutoDownloadSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSaveAutoDownloadSettings.Merge(m, src)
}
func (m *TLAccountSaveAutoDownloadSettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSaveAutoDownloadSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSaveAutoDownloadSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSaveAutoDownloadSettings proto.InternalMessageInfo

func (m *TLAccountSaveAutoDownloadSettings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSaveAutoDownloadSettings) GetLow() bool {
	if m != nil {
		return m.Low
	}
	return false
}

func (m *TLAccountSaveAutoDownloadSettings) GetHigh() bool {
	if m != nil {
		return m.High
	}
	return false
}

func (m *TLAccountSaveAutoDownloadSettings) GetSettings() *AutoDownloadSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

type TLAccountUploadTheme struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	File                 *InputFile    `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
	Thumb                *InputFile    `protobuf:"bytes,4,opt,name=thumb,proto3" json:"thumb,omitempty"`
	FileName             string        `protobuf:"bytes,5,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	MimeType             string        `protobuf:"bytes,6,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountUploadTheme) Reset()         { *m = TLAccountUploadTheme{} }
func (m *TLAccountUploadTheme) String() string { return proto.CompactTextString(m) }
func (*TLAccountUploadTheme) ProtoMessage()    {}
func (*TLAccountUploadTheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{81}
}
func (m *TLAccountUploadTheme) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUploadTheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUploadTheme.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountUploadTheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUploadTheme.Merge(m, src)
}
func (m *TLAccountUploadTheme) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUploadTheme) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUploadTheme.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUploadTheme proto.InternalMessageInfo

func (m *TLAccountUploadTheme) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountUploadTheme) GetFile() *InputFile {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *TLAccountUploadTheme) GetThumb() *InputFile {
	if m != nil {
		return m.Thumb
	}
	return nil
}

func (m *TLAccountUploadTheme) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *TLAccountUploadTheme) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

type TLAccountCreateTheme struct {
	Constructor                           TLConstructor         `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Slug                                  string                `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug,omitempty"`
	Title                                 string                `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Document                              *InputDocument        `protobuf:"bytes,5,opt,name=document,proto3" json:"document,omitempty"`
	Settings_FLAGVECTORINPUTTHEMESETTINGS []*InputThemeSettings `protobuf:"bytes,6,rep,name=settings_FLAGVECTORINPUTTHEMESETTINGS,json=settingsFLAGVECTORINPUTTHEMESETTINGS,proto3" json:"settings_FLAGVECTORINPUTTHEMESETTINGS,omitempty"`
	Settings_FLAGINPUTTHEMESETTINGS       *InputThemeSettings   `protobuf:"bytes,7,opt,name=settings_FLAGINPUTTHEMESETTINGS,json=settingsFLAGINPUTTHEMESETTINGS,proto3" json:"settings_FLAGINPUTTHEMESETTINGS,omitempty"`
	XXX_NoUnkeyedLiteral                  struct{}              `json:"-"`
	XXX_unrecognized                      []byte                `json:"-"`
	XXX_sizecache                         int32                 `json:"-"`
}

func (m *TLAccountCreateTheme) Reset()         { *m = TLAccountCreateTheme{} }
func (m *TLAccountCreateTheme) String() string { return proto.CompactTextString(m) }
func (*TLAccountCreateTheme) ProtoMessage()    {}
func (*TLAccountCreateTheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{82}
}
func (m *TLAccountCreateTheme) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountCreateTheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountCreateTheme.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountCreateTheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountCreateTheme.Merge(m, src)
}
func (m *TLAccountCreateTheme) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountCreateTheme) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountCreateTheme.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountCreateTheme proto.InternalMessageInfo

func (m *TLAccountCreateTheme) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountCreateTheme) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *TLAccountCreateTheme) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TLAccountCreateTheme) GetDocument() *InputDocument {
	if m != nil {
		return m.Document
	}
	return nil
}

func (m *TLAccountCreateTheme) GetSettings_FLAGVECTORINPUTTHEMESETTINGS() []*InputThemeSettings {
	if m != nil {
		return m.Settings_FLAGVECTORINPUTTHEMESETTINGS
	}
	return nil
}

func (m *TLAccountCreateTheme) GetSettings_FLAGINPUTTHEMESETTINGS() *InputThemeSettings {
	if m != nil {
		return m.Settings_FLAGINPUTTHEMESETTINGS
	}
	return nil
}

type TLAccountUpdateTheme struct {
	Constructor                           TLConstructor         `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Format                                string                `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
	Theme                                 *InputTheme           `protobuf:"bytes,4,opt,name=theme,proto3" json:"theme,omitempty"`
	Slug                                  *types.StringValue    `protobuf:"bytes,5,opt,name=slug,proto3" json:"slug,omitempty"`
	Title                                 *types.StringValue    `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Document                              *InputDocument        `protobuf:"bytes,7,opt,name=document,proto3" json:"document,omitempty"`
	Settings_FLAGVECTORINPUTTHEMESETTINGS []*InputThemeSettings `protobuf:"bytes,8,rep,name=settings_FLAGVECTORINPUTTHEMESETTINGS,json=settingsFLAGVECTORINPUTTHEMESETTINGS,proto3" json:"settings_FLAGVECTORINPUTTHEMESETTINGS,omitempty"`
	Settings_FLAGINPUTTHEMESETTINGS       *InputThemeSettings   `protobuf:"bytes,9,opt,name=settings_FLAGINPUTTHEMESETTINGS,json=settingsFLAGINPUTTHEMESETTINGS,proto3" json:"settings_FLAGINPUTTHEMESETTINGS,omitempty"`
	XXX_NoUnkeyedLiteral                  struct{}              `json:"-"`
	XXX_unrecognized                      []byte                `json:"-"`
	XXX_sizecache                         int32                 `json:"-"`
}

func (m *TLAccountUpdateTheme) Reset()         { *m = TLAccountUpdateTheme{} }
func (m *TLAccountUpdateTheme) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdateTheme) ProtoMessage()    {}
func (*TLAccountUpdateTheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{83}
}
func (m *TLAccountUpdateTheme) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdateTheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdateTheme.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountUpdateTheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdateTheme.Merge(m, src)
}
func (m *TLAccountUpdateTheme) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdateTheme) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdateTheme.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdateTheme proto.InternalMessageInfo

func (m *TLAccountUpdateTheme) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountUpdateTheme) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *TLAccountUpdateTheme) GetTheme() *InputTheme {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *TLAccountUpdateTheme) GetSlug() *types.StringValue {
	if m != nil {
		return m.Slug
	}
	return nil
}

func (m *TLAccountUpdateTheme) GetTitle() *types.StringValue {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *TLAccountUpdateTheme) GetDocument() *InputDocument {
	if m != nil {
		return m.Document
	}
	return nil
}

func (m *TLAccountUpdateTheme) GetSettings_FLAGVECTORINPUTTHEMESETTINGS() []*InputThemeSettings {
	if m != nil {
		return m.Settings_FLAGVECTORINPUTTHEMESETTINGS
	}
	return nil
}

func (m *TLAccountUpdateTheme) GetSettings_FLAGINPUTTHEMESETTINGS() *InputThemeSettings {
	if m != nil {
		return m.Settings_FLAGINPUTTHEMESETTINGS
	}
	return nil
}

type TLAccountSaveTheme struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Theme                *InputTheme   `protobuf:"bytes,3,opt,name=theme,proto3" json:"theme,omitempty"`
	Unsave               *Bool         `protobuf:"bytes,4,opt,name=unsave,proto3" json:"unsave,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountSaveTheme) Reset()         { *m = TLAccountSaveTheme{} }
func (m *TLAccountSaveTheme) String() string { return proto.CompactTextString(m) }
func (*TLAccountSaveTheme) ProtoMessage()    {}
func (*TLAccountSaveTheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{84}
}
func (m *TLAccountSaveTheme) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSaveTheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSaveTheme.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSaveTheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSaveTheme.Merge(m, src)
}
func (m *TLAccountSaveTheme) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSaveTheme) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSaveTheme.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSaveTheme proto.InternalMessageInfo

func (m *TLAccountSaveTheme) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSaveTheme) GetTheme() *InputTheme {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *TLAccountSaveTheme) GetUnsave() *Bool {
	if m != nil {
		return m.Unsave
	}
	return nil
}

type TLAccountInstallTheme struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Dark                 bool               `protobuf:"varint,3,opt,name=dark,proto3" json:"dark,omitempty"`
	Theme                *InputTheme        `protobuf:"bytes,4,opt,name=theme,proto3" json:"theme,omitempty"`
	Format               *types.StringValue `protobuf:"bytes,5,opt,name=format,proto3" json:"format,omitempty"`
	BaseTheme            *BaseTheme         `protobuf:"bytes,6,opt,name=base_theme,json=baseTheme,proto3" json:"base_theme,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLAccountInstallTheme) Reset()         { *m = TLAccountInstallTheme{} }
func (m *TLAccountInstallTheme) String() string { return proto.CompactTextString(m) }
func (*TLAccountInstallTheme) ProtoMessage()    {}
func (*TLAccountInstallTheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{85}
}
func (m *TLAccountInstallTheme) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountInstallTheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountInstallTheme.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountInstallTheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountInstallTheme.Merge(m, src)
}
func (m *TLAccountInstallTheme) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountInstallTheme) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountInstallTheme.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountInstallTheme proto.InternalMessageInfo

func (m *TLAccountInstallTheme) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountInstallTheme) GetDark() bool {
	if m != nil {
		return m.Dark
	}
	return false
}

func (m *TLAccountInstallTheme) GetTheme() *InputTheme {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *TLAccountInstallTheme) GetFormat() *types.StringValue {
	if m != nil {
		return m.Format
	}
	return nil
}

func (m *TLAccountInstallTheme) GetBaseTheme() *BaseTheme {
	if m != nil {
		return m.BaseTheme
	}
	return nil
}

type TLAccountGetTheme struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Format               string        `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
	Theme                *InputTheme   `protobuf:"bytes,4,opt,name=theme,proto3" json:"theme,omitempty"`
	DocumentId           int64         `protobuf:"varint,5,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetTheme) Reset()         { *m = TLAccountGetTheme{} }
func (m *TLAccountGetTheme) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetTheme) ProtoMessage()    {}
func (*TLAccountGetTheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{86}
}
func (m *TLAccountGetTheme) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetTheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetTheme.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetTheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetTheme.Merge(m, src)
}
func (m *TLAccountGetTheme) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetTheme) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetTheme.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetTheme proto.InternalMessageInfo

func (m *TLAccountGetTheme) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountGetTheme) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *TLAccountGetTheme) GetTheme() *InputTheme {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *TLAccountGetTheme) GetDocumentId() int64 {
	if m != nil {
		return m.DocumentId
	}
	return 0
}

type TLAccountGetThemes struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Format               string        `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
	Hash                 int64         `protobuf:"varint,4,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetThemes) Reset()         { *m = TLAccountGetThemes{} }
func (m *TLAccountGetThemes) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetThemes) ProtoMessage()    {}
func (*TLAccountGetThemes) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{87}
}
func (m *TLAccountGetThemes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetThemes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetThemes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetThemes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetThemes.Merge(m, src)
}
func (m *TLAccountGetThemes) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetThemes) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetThemes.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetThemes proto.InternalMessageInfo

func (m *TLAccountGetThemes) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountGetThemes) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *TLAccountGetThemes) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLAccountSetContentSettings struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	SensitiveEnabled     bool          `protobuf:"varint,3,opt,name=sensitive_enabled,json=sensitiveEnabled,proto3" json:"sensitive_enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountSetContentSettings) Reset()         { *m = TLAccountSetContentSettings{} }
func (m *TLAccountSetContentSettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountSetContentSettings) ProtoMessage()    {}
func (*TLAccountSetContentSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{88}
}
func (m *TLAccountSetContentSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSetContentSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSetContentSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSetContentSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSetContentSettings.Merge(m, src)
}
func (m *TLAccountSetContentSettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSetContentSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSetContentSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSetContentSettings proto.InternalMessageInfo

func (m *TLAccountSetContentSettings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSetContentSettings) GetSensitiveEnabled() bool {
	if m != nil {
		return m.SensitiveEnabled
	}
	return false
}

type TLAccountGetContentSettings struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetContentSettings) Reset()         { *m = TLAccountGetContentSettings{} }
func (m *TLAccountGetContentSettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetContentSettings) ProtoMessage()    {}
func (*TLAccountGetContentSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{89}
}
func (m *TLAccountGetContentSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetContentSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetContentSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetContentSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetContentSettings.Merge(m, src)
}
func (m *TLAccountGetContentSettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetContentSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetContentSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetContentSettings proto.InternalMessageInfo

func (m *TLAccountGetContentSettings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLAccountGetMultiWallPapers struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Wallpapers           []*InputWallPaper `protobuf:"bytes,3,rep,name=wallpapers,proto3" json:"wallpapers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLAccountGetMultiWallPapers) Reset()         { *m = TLAccountGetMultiWallPapers{} }
func (m *TLAccountGetMultiWallPapers) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetMultiWallPapers) ProtoMessage()    {}
func (*TLAccountGetMultiWallPapers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{90}
}
func (m *TLAccountGetMultiWallPapers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetMultiWallPapers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetMultiWallPapers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetMultiWallPapers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetMultiWallPapers.Merge(m, src)
}
func (m *TLAccountGetMultiWallPapers) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetMultiWallPapers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetMultiWallPapers.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetMultiWallPapers proto.InternalMessageInfo

func (m *TLAccountGetMultiWallPapers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountGetMultiWallPapers) GetWallpapers() []*InputWallPaper {
	if m != nil {
		return m.Wallpapers
	}
	return nil
}

type TLAccountGetGlobalPrivacySettings struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetGlobalPrivacySettings) Reset()         { *m = TLAccountGetGlobalPrivacySettings{} }
func (m *TLAccountGetGlobalPrivacySettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetGlobalPrivacySettings) ProtoMessage()    {}
func (*TLAccountGetGlobalPrivacySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{91}
}
func (m *TLAccountGetGlobalPrivacySettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetGlobalPrivacySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetGlobalPrivacySettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetGlobalPrivacySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetGlobalPrivacySettings.Merge(m, src)
}
func (m *TLAccountGetGlobalPrivacySettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetGlobalPrivacySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetGlobalPrivacySettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetGlobalPrivacySettings proto.InternalMessageInfo

func (m *TLAccountGetGlobalPrivacySettings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLAccountSetGlobalPrivacySettings struct {
	Constructor          TLConstructor          `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Settings             *GlobalPrivacySettings `protobuf:"bytes,3,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TLAccountSetGlobalPrivacySettings) Reset()         { *m = TLAccountSetGlobalPrivacySettings{} }
func (m *TLAccountSetGlobalPrivacySettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountSetGlobalPrivacySettings) ProtoMessage()    {}
func (*TLAccountSetGlobalPrivacySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{92}
}
func (m *TLAccountSetGlobalPrivacySettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSetGlobalPrivacySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSetGlobalPrivacySettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSetGlobalPrivacySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSetGlobalPrivacySettings.Merge(m, src)
}
func (m *TLAccountSetGlobalPrivacySettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSetGlobalPrivacySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSetGlobalPrivacySettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSetGlobalPrivacySettings proto.InternalMessageInfo

func (m *TLAccountSetGlobalPrivacySettings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSetGlobalPrivacySettings) GetSettings() *GlobalPrivacySettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

type TLAccountReportProfilePhoto struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	PhotoId              *InputPhoto   `protobuf:"bytes,4,opt,name=photo_id,json=photoId,proto3" json:"photo_id,omitempty"`
	Reason               *ReportReason `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	Message              string        `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountReportProfilePhoto) Reset()         { *m = TLAccountReportProfilePhoto{} }
func (m *TLAccountReportProfilePhoto) String() string { return proto.CompactTextString(m) }
func (*TLAccountReportProfilePhoto) ProtoMessage()    {}
func (*TLAccountReportProfilePhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{93}
}
func (m *TLAccountReportProfilePhoto) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountReportProfilePhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountReportProfilePhoto.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountReportProfilePhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountReportProfilePhoto.Merge(m, src)
}
func (m *TLAccountReportProfilePhoto) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountReportProfilePhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountReportProfilePhoto.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountReportProfilePhoto proto.InternalMessageInfo

func (m *TLAccountReportProfilePhoto) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountReportProfilePhoto) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLAccountReportProfilePhoto) GetPhotoId() *InputPhoto {
	if m != nil {
		return m.PhotoId
	}
	return nil
}

func (m *TLAccountReportProfilePhoto) GetReason() *ReportReason {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *TLAccountReportProfilePhoto) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type TLAccountResetPassword struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountResetPassword) Reset()         { *m = TLAccountResetPassword{} }
func (m *TLAccountResetPassword) String() string { return proto.CompactTextString(m) }
func (*TLAccountResetPassword) ProtoMessage()    {}
func (*TLAccountResetPassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{94}
}
func (m *TLAccountResetPassword) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountResetPassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountResetPassword.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountResetPassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountResetPassword.Merge(m, src)
}
func (m *TLAccountResetPassword) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountResetPassword) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountResetPassword.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountResetPassword proto.InternalMessageInfo

func (m *TLAccountResetPassword) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLAccountDeclinePasswordReset struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountDeclinePasswordReset) Reset()         { *m = TLAccountDeclinePasswordReset{} }
func (m *TLAccountDeclinePasswordReset) String() string { return proto.CompactTextString(m) }
func (*TLAccountDeclinePasswordReset) ProtoMessage()    {}
func (*TLAccountDeclinePasswordReset) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{95}
}
func (m *TLAccountDeclinePasswordReset) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountDeclinePasswordReset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountDeclinePasswordReset.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountDeclinePasswordReset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountDeclinePasswordReset.Merge(m, src)
}
func (m *TLAccountDeclinePasswordReset) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountDeclinePasswordReset) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountDeclinePasswordReset.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountDeclinePasswordReset proto.InternalMessageInfo

func (m *TLAccountDeclinePasswordReset) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLAccountGetChatThemesD638DE89 struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 int64         `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetChatThemesD638DE89) Reset()         { *m = TLAccountGetChatThemesD638DE89{} }
func (m *TLAccountGetChatThemesD638DE89) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetChatThemesD638DE89) ProtoMessage()    {}
func (*TLAccountGetChatThemesD638DE89) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{96}
}
func (m *TLAccountGetChatThemesD638DE89) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetChatThemesD638DE89) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetChatThemesD638DE89.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetChatThemesD638DE89) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetChatThemesD638DE89.Merge(m, src)
}
func (m *TLAccountGetChatThemesD638DE89) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetChatThemesD638DE89) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetChatThemesD638DE89.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetChatThemesD638DE89 proto.InternalMessageInfo

func (m *TLAccountGetChatThemesD638DE89) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountGetChatThemesD638DE89) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLAccountSetAuthorizationTTL struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	AuthorizationTtlDays int32         `protobuf:"varint,3,opt,name=authorization_ttl_days,json=authorizationTtlDays,proto3" json:"authorization_ttl_days,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountSetAuthorizationTTL) Reset()         { *m = TLAccountSetAuthorizationTTL{} }
func (m *TLAccountSetAuthorizationTTL) String() string { return proto.CompactTextString(m) }
func (*TLAccountSetAuthorizationTTL) ProtoMessage()    {}
func (*TLAccountSetAuthorizationTTL) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{97}
}
func (m *TLAccountSetAuthorizationTTL) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSetAuthorizationTTL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSetAuthorizationTTL.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSetAuthorizationTTL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSetAuthorizationTTL.Merge(m, src)
}
func (m *TLAccountSetAuthorizationTTL) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSetAuthorizationTTL) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSetAuthorizationTTL.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSetAuthorizationTTL proto.InternalMessageInfo

func (m *TLAccountSetAuthorizationTTL) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountSetAuthorizationTTL) GetAuthorizationTtlDays() int32 {
	if m != nil {
		return m.AuthorizationTtlDays
	}
	return 0
}

type TLAccountChangeAuthorizationSettings struct {
	Constructor               TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                      int64         `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	EncryptedRequestsDisabled *Bool         `protobuf:"bytes,4,opt,name=encrypted_requests_disabled,json=encryptedRequestsDisabled,proto3" json:"encrypted_requests_disabled,omitempty"`
	CallRequestsDisabled      *Bool         `protobuf:"bytes,5,opt,name=call_requests_disabled,json=callRequestsDisabled,proto3" json:"call_requests_disabled,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}      `json:"-"`
	XXX_unrecognized          []byte        `json:"-"`
	XXX_sizecache             int32         `json:"-"`
}

func (m *TLAccountChangeAuthorizationSettings) Reset()         { *m = TLAccountChangeAuthorizationSettings{} }
func (m *TLAccountChangeAuthorizationSettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountChangeAuthorizationSettings) ProtoMessage()    {}
func (*TLAccountChangeAuthorizationSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{98}
}
func (m *TLAccountChangeAuthorizationSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountChangeAuthorizationSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountChangeAuthorizationSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountChangeAuthorizationSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountChangeAuthorizationSettings.Merge(m, src)
}
func (m *TLAccountChangeAuthorizationSettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountChangeAuthorizationSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountChangeAuthorizationSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountChangeAuthorizationSettings proto.InternalMessageInfo

func (m *TLAccountChangeAuthorizationSettings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountChangeAuthorizationSettings) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

func (m *TLAccountChangeAuthorizationSettings) GetEncryptedRequestsDisabled() *Bool {
	if m != nil {
		return m.EncryptedRequestsDisabled
	}
	return nil
}

func (m *TLAccountChangeAuthorizationSettings) GetCallRequestsDisabled() *Bool {
	if m != nil {
		return m.CallRequestsDisabled
	}
	return nil
}

type TLUsersGetUsers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   []*InputUser  `protobuf:"bytes,3,rep,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLUsersGetUsers) Reset()         { *m = TLUsersGetUsers{} }
func (m *TLUsersGetUsers) String() string { return proto.CompactTextString(m) }
func (*TLUsersGetUsers) ProtoMessage()    {}
func (*TLUsersGetUsers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{99}
}
func (m *TLUsersGetUsers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUsersGetUsers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUsersGetUsers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUsersGetUsers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUsersGetUsers.Merge(m, src)
}
func (m *TLUsersGetUsers) XXX_Size() int {
	return m.Size()
}
func (m *TLUsersGetUsers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUsersGetUsers.DiscardUnknown(m)
}

var xxx_messageInfo_TLUsersGetUsers proto.InternalMessageInfo

func (m *TLUsersGetUsers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUsersGetUsers) GetId() []*InputUser {
	if m != nil {
		return m.Id
	}
	return nil
}

type TLUsersGetFullUserB60F5918 struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   *InputUser    `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLUsersGetFullUserB60F5918) Reset()         { *m = TLUsersGetFullUserB60F5918{} }
func (m *TLUsersGetFullUserB60F5918) String() string { return proto.CompactTextString(m) }
func (*TLUsersGetFullUserB60F5918) ProtoMessage()    {}
func (*TLUsersGetFullUserB60F5918) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{100}
}
func (m *TLUsersGetFullUserB60F5918) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUsersGetFullUserB60F5918) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUsersGetFullUserB60F5918.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUsersGetFullUserB60F5918) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUsersGetFullUserB60F5918.Merge(m, src)
}
func (m *TLUsersGetFullUserB60F5918) XXX_Size() int {
	return m.Size()
}
func (m *TLUsersGetFullUserB60F5918) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUsersGetFullUserB60F5918.DiscardUnknown(m)
}

var xxx_messageInfo_TLUsersGetFullUserB60F5918 proto.InternalMessageInfo

func (m *TLUsersGetFullUserB60F5918) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUsersGetFullUserB60F5918) GetId() *InputUser {
	if m != nil {
		return m.Id
	}
	return nil
}

type TLUsersSetSecureValueErrors struct {
	Constructor          TLConstructor       `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   *InputUser          `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Errors               []*SecureValueError `protobuf:"bytes,4,rep,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLUsersSetSecureValueErrors) Reset()         { *m = TLUsersSetSecureValueErrors{} }
func (m *TLUsersSetSecureValueErrors) String() string { return proto.CompactTextString(m) }
func (*TLUsersSetSecureValueErrors) ProtoMessage()    {}
func (*TLUsersSetSecureValueErrors) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{101}
}
func (m *TLUsersSetSecureValueErrors) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUsersSetSecureValueErrors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUsersSetSecureValueErrors.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUsersSetSecureValueErrors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUsersSetSecureValueErrors.Merge(m, src)
}
func (m *TLUsersSetSecureValueErrors) XXX_Size() int {
	return m.Size()
}
func (m *TLUsersSetSecureValueErrors) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUsersSetSecureValueErrors.DiscardUnknown(m)
}

var xxx_messageInfo_TLUsersSetSecureValueErrors proto.InternalMessageInfo

func (m *TLUsersSetSecureValueErrors) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUsersSetSecureValueErrors) GetId() *InputUser {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLUsersSetSecureValueErrors) GetErrors() []*SecureValueError {
	if m != nil {
		return m.Errors
	}
	return nil
}

type TLContactsGetContactIDs struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 int64         `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsGetContactIDs) Reset()         { *m = TLContactsGetContactIDs{} }
func (m *TLContactsGetContactIDs) String() string { return proto.CompactTextString(m) }
func (*TLContactsGetContactIDs) ProtoMessage()    {}
func (*TLContactsGetContactIDs) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{102}
}
func (m *TLContactsGetContactIDs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsGetContactIDs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsGetContactIDs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsGetContactIDs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsGetContactIDs.Merge(m, src)
}
func (m *TLContactsGetContactIDs) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsGetContactIDs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsGetContactIDs.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsGetContactIDs proto.InternalMessageInfo

func (m *TLContactsGetContactIDs) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsGetContactIDs) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLContactsGetStatuses struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsGetStatuses) Reset()         { *m = TLContactsGetStatuses{} }
func (m *TLContactsGetStatuses) String() string { return proto.CompactTextString(m) }
func (*TLContactsGetStatuses) ProtoMessage()    {}
func (*TLContactsGetStatuses) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{103}
}
func (m *TLContactsGetStatuses) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsGetStatuses) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsGetStatuses.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsGetStatuses) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsGetStatuses.Merge(m, src)
}
func (m *TLContactsGetStatuses) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsGetStatuses) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsGetStatuses.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsGetStatuses proto.InternalMessageInfo

func (m *TLContactsGetStatuses) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLContactsGetContacts struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 int64         `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsGetContacts) Reset()         { *m = TLContactsGetContacts{} }
func (m *TLContactsGetContacts) String() string { return proto.CompactTextString(m) }
func (*TLContactsGetContacts) ProtoMessage()    {}
func (*TLContactsGetContacts) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{104}
}
func (m *TLContactsGetContacts) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsGetContacts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsGetContacts.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsGetContacts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsGetContacts.Merge(m, src)
}
func (m *TLContactsGetContacts) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsGetContacts) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsGetContacts.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsGetContacts proto.InternalMessageInfo

func (m *TLContactsGetContacts) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsGetContacts) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLContactsImportContacts struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Contacts             []*InputContact `protobuf:"bytes,3,rep,name=contacts,proto3" json:"contacts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLContactsImportContacts) Reset()         { *m = TLContactsImportContacts{} }
func (m *TLContactsImportContacts) String() string { return proto.CompactTextString(m) }
func (*TLContactsImportContacts) ProtoMessage()    {}
func (*TLContactsImportContacts) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{105}
}
func (m *TLContactsImportContacts) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsImportContacts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsImportContacts.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsImportContacts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsImportContacts.Merge(m, src)
}
func (m *TLContactsImportContacts) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsImportContacts) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsImportContacts.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsImportContacts proto.InternalMessageInfo

func (m *TLContactsImportContacts) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsImportContacts) GetContacts() []*InputContact {
	if m != nil {
		return m.Contacts
	}
	return nil
}

type TLContactsDeleteContacts struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   []*InputUser  `protobuf:"bytes,3,rep,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsDeleteContacts) Reset()         { *m = TLContactsDeleteContacts{} }
func (m *TLContactsDeleteContacts) String() string { return proto.CompactTextString(m) }
func (*TLContactsDeleteContacts) ProtoMessage()    {}
func (*TLContactsDeleteContacts) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{106}
}
func (m *TLContactsDeleteContacts) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsDeleteContacts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsDeleteContacts.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsDeleteContacts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsDeleteContacts.Merge(m, src)
}
func (m *TLContactsDeleteContacts) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsDeleteContacts) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsDeleteContacts.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsDeleteContacts proto.InternalMessageInfo

func (m *TLContactsDeleteContacts) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsDeleteContacts) GetId() []*InputUser {
	if m != nil {
		return m.Id
	}
	return nil
}

type TLContactsDeleteByPhones struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Phones               []string      `protobuf:"bytes,3,rep,name=phones,proto3" json:"phones,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsDeleteByPhones) Reset()         { *m = TLContactsDeleteByPhones{} }
func (m *TLContactsDeleteByPhones) String() string { return proto.CompactTextString(m) }
func (*TLContactsDeleteByPhones) ProtoMessage()    {}
func (*TLContactsDeleteByPhones) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{107}
}
func (m *TLContactsDeleteByPhones) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsDeleteByPhones) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsDeleteByPhones.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsDeleteByPhones) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsDeleteByPhones.Merge(m, src)
}
func (m *TLContactsDeleteByPhones) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsDeleteByPhones) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsDeleteByPhones.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsDeleteByPhones proto.InternalMessageInfo

func (m *TLContactsDeleteByPhones) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsDeleteByPhones) GetPhones() []string {
	if m != nil {
		return m.Phones
	}
	return nil
}

type TLContactsBlock struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   *InputPeer    `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsBlock) Reset()         { *m = TLContactsBlock{} }
func (m *TLContactsBlock) String() string { return proto.CompactTextString(m) }
func (*TLContactsBlock) ProtoMessage()    {}
func (*TLContactsBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{108}
}
func (m *TLContactsBlock) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsBlock.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsBlock.Merge(m, src)
}
func (m *TLContactsBlock) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsBlock.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsBlock proto.InternalMessageInfo

func (m *TLContactsBlock) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsBlock) GetId() *InputPeer {
	if m != nil {
		return m.Id
	}
	return nil
}

type TLContactsUnblock struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   *InputPeer    `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsUnblock) Reset()         { *m = TLContactsUnblock{} }
func (m *TLContactsUnblock) String() string { return proto.CompactTextString(m) }
func (*TLContactsUnblock) ProtoMessage()    {}
func (*TLContactsUnblock) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{109}
}
func (m *TLContactsUnblock) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsUnblock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsUnblock.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsUnblock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsUnblock.Merge(m, src)
}
func (m *TLContactsUnblock) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsUnblock) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsUnblock.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsUnblock proto.InternalMessageInfo

func (m *TLContactsUnblock) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsUnblock) GetId() *InputPeer {
	if m != nil {
		return m.Id
	}
	return nil
}

type TLContactsGetBlocked struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Offset               int32         `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32         `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsGetBlocked) Reset()         { *m = TLContactsGetBlocked{} }
func (m *TLContactsGetBlocked) String() string { return proto.CompactTextString(m) }
func (*TLContactsGetBlocked) ProtoMessage()    {}
func (*TLContactsGetBlocked) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{110}
}
func (m *TLContactsGetBlocked) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsGetBlocked) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsGetBlocked.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsGetBlocked) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsGetBlocked.Merge(m, src)
}
func (m *TLContactsGetBlocked) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsGetBlocked) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsGetBlocked.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsGetBlocked proto.InternalMessageInfo

func (m *TLContactsGetBlocked) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsGetBlocked) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLContactsGetBlocked) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type TLContactsSearch struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Q                    string        `protobuf:"bytes,3,opt,name=q,proto3" json:"q,omitempty"`
	Limit                int32         `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsSearch) Reset()         { *m = TLContactsSearch{} }
func (m *TLContactsSearch) String() string { return proto.CompactTextString(m) }
func (*TLContactsSearch) ProtoMessage()    {}
func (*TLContactsSearch) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{111}
}
func (m *TLContactsSearch) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsSearch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsSearch.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsSearch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsSearch.Merge(m, src)
}
func (m *TLContactsSearch) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsSearch) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsSearch.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsSearch proto.InternalMessageInfo

func (m *TLContactsSearch) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsSearch) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *TLContactsSearch) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type TLContactsResolveUsername struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Username             string        `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsResolveUsername) Reset()         { *m = TLContactsResolveUsername{} }
func (m *TLContactsResolveUsername) String() string { return proto.CompactTextString(m) }
func (*TLContactsResolveUsername) ProtoMessage()    {}
func (*TLContactsResolveUsername) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{112}
}
func (m *TLContactsResolveUsername) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsResolveUsername) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsResolveUsername.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsResolveUsername) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsResolveUsername.Merge(m, src)
}
func (m *TLContactsResolveUsername) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsResolveUsername) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsResolveUsername.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsResolveUsername proto.InternalMessageInfo

func (m *TLContactsResolveUsername) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsResolveUsername) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type TLContactsGetTopPeers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Correspondents       bool          `protobuf:"varint,3,opt,name=correspondents,proto3" json:"correspondents,omitempty"`
	BotsPm               bool          `protobuf:"varint,4,opt,name=bots_pm,json=botsPm,proto3" json:"bots_pm,omitempty"`
	BotsInline           bool          `protobuf:"varint,5,opt,name=bots_inline,json=botsInline,proto3" json:"bots_inline,omitempty"`
	PhoneCalls           bool          `protobuf:"varint,6,opt,name=phone_calls,json=phoneCalls,proto3" json:"phone_calls,omitempty"`
	ForwardUsers         bool          `protobuf:"varint,7,opt,name=forward_users,json=forwardUsers,proto3" json:"forward_users,omitempty"`
	ForwardChats         bool          `protobuf:"varint,8,opt,name=forward_chats,json=forwardChats,proto3" json:"forward_chats,omitempty"`
	Groups               bool          `protobuf:"varint,9,opt,name=groups,proto3" json:"groups,omitempty"`
	Channels             bool          `protobuf:"varint,10,opt,name=channels,proto3" json:"channels,omitempty"`
	Offset               int32         `protobuf:"varint,11,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32         `protobuf:"varint,12,opt,name=limit,proto3" json:"limit,omitempty"`
	Hash                 int64         `protobuf:"varint,13,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsGetTopPeers) Reset()         { *m = TLContactsGetTopPeers{} }
func (m *TLContactsGetTopPeers) String() string { return proto.CompactTextString(m) }
func (*TLContactsGetTopPeers) ProtoMessage()    {}
func (*TLContactsGetTopPeers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{113}
}
func (m *TLContactsGetTopPeers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsGetTopPeers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsGetTopPeers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsGetTopPeers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsGetTopPeers.Merge(m, src)
}
func (m *TLContactsGetTopPeers) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsGetTopPeers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsGetTopPeers.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsGetTopPeers proto.InternalMessageInfo

func (m *TLContactsGetTopPeers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsGetTopPeers) GetCorrespondents() bool {
	if m != nil {
		return m.Correspondents
	}
	return false
}

func (m *TLContactsGetTopPeers) GetBotsPm() bool {
	if m != nil {
		return m.BotsPm
	}
	return false
}

func (m *TLContactsGetTopPeers) GetBotsInline() bool {
	if m != nil {
		return m.BotsInline
	}
	return false
}

func (m *TLContactsGetTopPeers) GetPhoneCalls() bool {
	if m != nil {
		return m.PhoneCalls
	}
	return false
}

func (m *TLContactsGetTopPeers) GetForwardUsers() bool {
	if m != nil {
		return m.ForwardUsers
	}
	return false
}

func (m *TLContactsGetTopPeers) GetForwardChats() bool {
	if m != nil {
		return m.ForwardChats
	}
	return false
}

func (m *TLContactsGetTopPeers) GetGroups() bool {
	if m != nil {
		return m.Groups
	}
	return false
}

func (m *TLContactsGetTopPeers) GetChannels() bool {
	if m != nil {
		return m.Channels
	}
	return false
}

func (m *TLContactsGetTopPeers) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLContactsGetTopPeers) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLContactsGetTopPeers) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLContactsResetTopPeerRating struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Category             *TopPeerCategory `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Peer                 *InputPeer       `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLContactsResetTopPeerRating) Reset()         { *m = TLContactsResetTopPeerRating{} }
func (m *TLContactsResetTopPeerRating) String() string { return proto.CompactTextString(m) }
func (*TLContactsResetTopPeerRating) ProtoMessage()    {}
func (*TLContactsResetTopPeerRating) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{114}
}
func (m *TLContactsResetTopPeerRating) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsResetTopPeerRating) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsResetTopPeerRating.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsResetTopPeerRating) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsResetTopPeerRating.Merge(m, src)
}
func (m *TLContactsResetTopPeerRating) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsResetTopPeerRating) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsResetTopPeerRating.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsResetTopPeerRating proto.InternalMessageInfo

func (m *TLContactsResetTopPeerRating) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsResetTopPeerRating) GetCategory() *TopPeerCategory {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *TLContactsResetTopPeerRating) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type TLContactsResetSaved struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsResetSaved) Reset()         { *m = TLContactsResetSaved{} }
func (m *TLContactsResetSaved) String() string { return proto.CompactTextString(m) }
func (*TLContactsResetSaved) ProtoMessage()    {}
func (*TLContactsResetSaved) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{115}
}
func (m *TLContactsResetSaved) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsResetSaved) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsResetSaved.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsResetSaved) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsResetSaved.Merge(m, src)
}
func (m *TLContactsResetSaved) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsResetSaved) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsResetSaved.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsResetSaved proto.InternalMessageInfo

func (m *TLContactsResetSaved) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLContactsGetSaved struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsGetSaved) Reset()         { *m = TLContactsGetSaved{} }
func (m *TLContactsGetSaved) String() string { return proto.CompactTextString(m) }
func (*TLContactsGetSaved) ProtoMessage()    {}
func (*TLContactsGetSaved) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{116}
}
func (m *TLContactsGetSaved) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsGetSaved) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsGetSaved.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsGetSaved) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsGetSaved.Merge(m, src)
}
func (m *TLContactsGetSaved) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsGetSaved) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsGetSaved.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsGetSaved proto.InternalMessageInfo

func (m *TLContactsGetSaved) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLContactsToggleTopPeers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Enabled              *Bool         `protobuf:"bytes,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsToggleTopPeers) Reset()         { *m = TLContactsToggleTopPeers{} }
func (m *TLContactsToggleTopPeers) String() string { return proto.CompactTextString(m) }
func (*TLContactsToggleTopPeers) ProtoMessage()    {}
func (*TLContactsToggleTopPeers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{117}
}
func (m *TLContactsToggleTopPeers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsToggleTopPeers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsToggleTopPeers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsToggleTopPeers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsToggleTopPeers.Merge(m, src)
}
func (m *TLContactsToggleTopPeers) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsToggleTopPeers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsToggleTopPeers.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsToggleTopPeers proto.InternalMessageInfo

func (m *TLContactsToggleTopPeers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsToggleTopPeers) GetEnabled() *Bool {
	if m != nil {
		return m.Enabled
	}
	return nil
}

type TLContactsAddContact struct {
	Constructor              TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	AddPhonePrivacyException bool          `protobuf:"varint,3,opt,name=add_phone_privacy_exception,json=addPhonePrivacyException,proto3" json:"add_phone_privacy_exception,omitempty"`
	Id                       *InputUser    `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	FirstName                string        `protobuf:"bytes,5,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName                 string        `protobuf:"bytes,6,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Phone                    string        `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}      `json:"-"`
	XXX_unrecognized         []byte        `json:"-"`
	XXX_sizecache            int32         `json:"-"`
}

func (m *TLContactsAddContact) Reset()         { *m = TLContactsAddContact{} }
func (m *TLContactsAddContact) String() string { return proto.CompactTextString(m) }
func (*TLContactsAddContact) ProtoMessage()    {}
func (*TLContactsAddContact) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{118}
}
func (m *TLContactsAddContact) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsAddContact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsAddContact.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsAddContact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsAddContact.Merge(m, src)
}
func (m *TLContactsAddContact) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsAddContact) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsAddContact.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsAddContact proto.InternalMessageInfo

func (m *TLContactsAddContact) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsAddContact) GetAddPhonePrivacyException() bool {
	if m != nil {
		return m.AddPhonePrivacyException
	}
	return false
}

func (m *TLContactsAddContact) GetId() *InputUser {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLContactsAddContact) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *TLContactsAddContact) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *TLContactsAddContact) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type TLContactsAcceptContact struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   *InputUser    `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsAcceptContact) Reset()         { *m = TLContactsAcceptContact{} }
func (m *TLContactsAcceptContact) String() string { return proto.CompactTextString(m) }
func (*TLContactsAcceptContact) ProtoMessage()    {}
func (*TLContactsAcceptContact) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{119}
}
func (m *TLContactsAcceptContact) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsAcceptContact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsAcceptContact.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsAcceptContact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsAcceptContact.Merge(m, src)
}
func (m *TLContactsAcceptContact) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsAcceptContact) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsAcceptContact.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsAcceptContact proto.InternalMessageInfo

func (m *TLContactsAcceptContact) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsAcceptContact) GetId() *InputUser {
	if m != nil {
		return m.Id
	}
	return nil
}

type TLContactsGetLocated struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Background           bool              `protobuf:"varint,3,opt,name=background,proto3" json:"background,omitempty"`
	GeoPoint             *InputGeoPoint    `protobuf:"bytes,4,opt,name=geo_point,json=geoPoint,proto3" json:"geo_point,omitempty"`
	SelfExpires          *types.Int32Value `protobuf:"bytes,5,opt,name=self_expires,json=selfExpires,proto3" json:"self_expires,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLContactsGetLocated) Reset()         { *m = TLContactsGetLocated{} }
func (m *TLContactsGetLocated) String() string { return proto.CompactTextString(m) }
func (*TLContactsGetLocated) ProtoMessage()    {}
func (*TLContactsGetLocated) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{120}
}
func (m *TLContactsGetLocated) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsGetLocated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsGetLocated.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsGetLocated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsGetLocated.Merge(m, src)
}
func (m *TLContactsGetLocated) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsGetLocated) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsGetLocated.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsGetLocated proto.InternalMessageInfo

func (m *TLContactsGetLocated) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsGetLocated) GetBackground() bool {
	if m != nil {
		return m.Background
	}
	return false
}

func (m *TLContactsGetLocated) GetGeoPoint() *InputGeoPoint {
	if m != nil {
		return m.GeoPoint
	}
	return nil
}

func (m *TLContactsGetLocated) GetSelfExpires() *types.Int32Value {
	if m != nil {
		return m.SelfExpires
	}
	return nil
}

type TLContactsBlockFromReplies struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	DeleteMessage        bool          `protobuf:"varint,3,opt,name=delete_message,json=deleteMessage,proto3" json:"delete_message,omitempty"`
	DeleteHistory        bool          `protobuf:"varint,4,opt,name=delete_history,json=deleteHistory,proto3" json:"delete_history,omitempty"`
	ReportSpam           bool          `protobuf:"varint,5,opt,name=report_spam,json=reportSpam,proto3" json:"report_spam,omitempty"`
	MsgId                int32         `protobuf:"varint,6,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsBlockFromReplies) Reset()         { *m = TLContactsBlockFromReplies{} }
func (m *TLContactsBlockFromReplies) String() string { return proto.CompactTextString(m) }
func (*TLContactsBlockFromReplies) ProtoMessage()    {}
func (*TLContactsBlockFromReplies) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{121}
}
func (m *TLContactsBlockFromReplies) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsBlockFromReplies) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsBlockFromReplies.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsBlockFromReplies) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsBlockFromReplies.Merge(m, src)
}
func (m *TLContactsBlockFromReplies) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsBlockFromReplies) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsBlockFromReplies.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsBlockFromReplies proto.InternalMessageInfo

func (m *TLContactsBlockFromReplies) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsBlockFromReplies) GetDeleteMessage() bool {
	if m != nil {
		return m.DeleteMessage
	}
	return false
}

func (m *TLContactsBlockFromReplies) GetDeleteHistory() bool {
	if m != nil {
		return m.DeleteHistory
	}
	return false
}

func (m *TLContactsBlockFromReplies) GetReportSpam() bool {
	if m != nil {
		return m.ReportSpam
	}
	return false
}

func (m *TLContactsBlockFromReplies) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

type TLContactsResolvePhone struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Phone                string        `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLContactsResolvePhone) Reset()         { *m = TLContactsResolvePhone{} }
func (m *TLContactsResolvePhone) String() string { return proto.CompactTextString(m) }
func (*TLContactsResolvePhone) ProtoMessage()    {}
func (*TLContactsResolvePhone) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{122}
}
func (m *TLContactsResolvePhone) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsResolvePhone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsResolvePhone.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsResolvePhone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsResolvePhone.Merge(m, src)
}
func (m *TLContactsResolvePhone) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsResolvePhone) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsResolvePhone.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsResolvePhone proto.InternalMessageInfo

func (m *TLContactsResolvePhone) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLContactsResolvePhone) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type TLMessagesGetMessages struct {
	Constructor           TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id_VECTORINPUTMESSAGE []*InputMessage `protobuf:"bytes,3,rep,name=id_VECTORINPUTMESSAGE,json=idVECTORINPUTMESSAGE,proto3" json:"id_VECTORINPUTMESSAGE,omitempty"`
	Id_VECTORINT32        []int32         `protobuf:"varint,4,rep,packed,name=id_VECTORINT32,json=idVECTORINT32,proto3" json:"id_VECTORINT32,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}        `json:"-"`
	XXX_unrecognized      []byte          `json:"-"`
	XXX_sizecache         int32           `json:"-"`
}

func (m *TLMessagesGetMessages) Reset()         { *m = TLMessagesGetMessages{} }
func (m *TLMessagesGetMessages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetMessages) ProtoMessage()    {}
func (*TLMessagesGetMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{123}
}
func (m *TLMessagesGetMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetMessages.Merge(m, src)
}
func (m *TLMessagesGetMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetMessages proto.InternalMessageInfo

func (m *TLMessagesGetMessages) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetMessages) GetId_VECTORINPUTMESSAGE() []*InputMessage {
	if m != nil {
		return m.Id_VECTORINPUTMESSAGE
	}
	return nil
}

func (m *TLMessagesGetMessages) GetId_VECTORINT32() []int32 {
	if m != nil {
		return m.Id_VECTORINT32
	}
	return nil
}

type TLMessagesGetDialogs struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ExcludePinned        bool              `protobuf:"varint,3,opt,name=exclude_pinned,json=excludePinned,proto3" json:"exclude_pinned,omitempty"`
	FolderId             *types.Int32Value `protobuf:"bytes,4,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	OffsetDate           int32             `protobuf:"varint,5,opt,name=offset_date,json=offsetDate,proto3" json:"offset_date,omitempty"`
	OffsetId             int32             `protobuf:"varint,6,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	OffsetPeer           *InputPeer        `protobuf:"bytes,7,opt,name=offset_peer,json=offsetPeer,proto3" json:"offset_peer,omitempty"`
	Limit                int32             `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
	Hash                 int64             `protobuf:"varint,9,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLMessagesGetDialogs) Reset()         { *m = TLMessagesGetDialogs{} }
func (m *TLMessagesGetDialogs) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetDialogs) ProtoMessage()    {}
func (*TLMessagesGetDialogs) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{124}
}
func (m *TLMessagesGetDialogs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetDialogs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetDialogs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetDialogs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetDialogs.Merge(m, src)
}
func (m *TLMessagesGetDialogs) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetDialogs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetDialogs.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetDialogs proto.InternalMessageInfo

func (m *TLMessagesGetDialogs) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetDialogs) GetExcludePinned() bool {
	if m != nil {
		return m.ExcludePinned
	}
	return false
}

func (m *TLMessagesGetDialogs) GetFolderId() *types.Int32Value {
	if m != nil {
		return m.FolderId
	}
	return nil
}

func (m *TLMessagesGetDialogs) GetOffsetDate() int32 {
	if m != nil {
		return m.OffsetDate
	}
	return 0
}

func (m *TLMessagesGetDialogs) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLMessagesGetDialogs) GetOffsetPeer() *InputPeer {
	if m != nil {
		return m.OffsetPeer
	}
	return nil
}

func (m *TLMessagesGetDialogs) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLMessagesGetDialogs) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLMessagesGetHistory struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	OffsetId             int32         `protobuf:"varint,4,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	OffsetDate           int32         `protobuf:"varint,5,opt,name=offset_date,json=offsetDate,proto3" json:"offset_date,omitempty"`
	AddOffset            int32         `protobuf:"varint,6,opt,name=add_offset,json=addOffset,proto3" json:"add_offset,omitempty"`
	Limit                int32         `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	MaxId                int32         `protobuf:"varint,8,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	MinId                int32         `protobuf:"varint,9,opt,name=min_id,json=minId,proto3" json:"min_id,omitempty"`
	Hash                 int64         `protobuf:"varint,10,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetHistory) Reset()         { *m = TLMessagesGetHistory{} }
func (m *TLMessagesGetHistory) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetHistory) ProtoMessage()    {}
func (*TLMessagesGetHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{125}
}
func (m *TLMessagesGetHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetHistory.Merge(m, src)
}
func (m *TLMessagesGetHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetHistory proto.InternalMessageInfo

func (m *TLMessagesGetHistory) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetHistory) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetHistory) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLMessagesGetHistory) GetOffsetDate() int32 {
	if m != nil {
		return m.OffsetDate
	}
	return 0
}

func (m *TLMessagesGetHistory) GetAddOffset() int32 {
	if m != nil {
		return m.AddOffset
	}
	return 0
}

func (m *TLMessagesGetHistory) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLMessagesGetHistory) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLMessagesGetHistory) GetMinId() int32 {
	if m != nil {
		return m.MinId
	}
	return 0
}

func (m *TLMessagesGetHistory) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLMessagesSearch struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer        `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Q                    string            `protobuf:"bytes,4,opt,name=q,proto3" json:"q,omitempty"`
	FromId               *InputPeer        `protobuf:"bytes,5,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty"`
	TopMsgId             *types.Int32Value `protobuf:"bytes,6,opt,name=top_msg_id,json=topMsgId,proto3" json:"top_msg_id,omitempty"`
	Filter               *MessagesFilter   `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	MinDate              int32             `protobuf:"varint,8,opt,name=min_date,json=minDate,proto3" json:"min_date,omitempty"`
	MaxDate              int32             `protobuf:"varint,9,opt,name=max_date,json=maxDate,proto3" json:"max_date,omitempty"`
	OffsetId             int32             `protobuf:"varint,10,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	AddOffset            int32             `protobuf:"varint,11,opt,name=add_offset,json=addOffset,proto3" json:"add_offset,omitempty"`
	Limit                int32             `protobuf:"varint,12,opt,name=limit,proto3" json:"limit,omitempty"`
	MaxId                int32             `protobuf:"varint,13,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	MinId                int32             `protobuf:"varint,14,opt,name=min_id,json=minId,proto3" json:"min_id,omitempty"`
	Hash                 int64             `protobuf:"varint,15,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLMessagesSearch) Reset()         { *m = TLMessagesSearch{} }
func (m *TLMessagesSearch) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSearch) ProtoMessage()    {}
func (*TLMessagesSearch) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{126}
}
func (m *TLMessagesSearch) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSearch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSearch.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSearch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSearch.Merge(m, src)
}
func (m *TLMessagesSearch) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSearch) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSearch.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSearch proto.InternalMessageInfo

func (m *TLMessagesSearch) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSearch) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSearch) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *TLMessagesSearch) GetFromId() *InputPeer {
	if m != nil {
		return m.FromId
	}
	return nil
}

func (m *TLMessagesSearch) GetTopMsgId() *types.Int32Value {
	if m != nil {
		return m.TopMsgId
	}
	return nil
}

func (m *TLMessagesSearch) GetFilter() *MessagesFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *TLMessagesSearch) GetMinDate() int32 {
	if m != nil {
		return m.MinDate
	}
	return 0
}

func (m *TLMessagesSearch) GetMaxDate() int32 {
	if m != nil {
		return m.MaxDate
	}
	return 0
}

func (m *TLMessagesSearch) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLMessagesSearch) GetAddOffset() int32 {
	if m != nil {
		return m.AddOffset
	}
	return 0
}

func (m *TLMessagesSearch) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLMessagesSearch) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLMessagesSearch) GetMinId() int32 {
	if m != nil {
		return m.MinId
	}
	return 0
}

func (m *TLMessagesSearch) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLMessagesReadHistory struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	MaxId                int32         `protobuf:"varint,4,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesReadHistory) Reset()         { *m = TLMessagesReadHistory{} }
func (m *TLMessagesReadHistory) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReadHistory) ProtoMessage()    {}
func (*TLMessagesReadHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{127}
}
func (m *TLMessagesReadHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReadHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReadHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReadHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReadHistory.Merge(m, src)
}
func (m *TLMessagesReadHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReadHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReadHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReadHistory proto.InternalMessageInfo

func (m *TLMessagesReadHistory) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReadHistory) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesReadHistory) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

type TLMessagesDeleteHistory struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	JustClear            bool              `protobuf:"varint,3,opt,name=just_clear,json=justClear,proto3" json:"just_clear,omitempty"`
	Revoke               bool              `protobuf:"varint,4,opt,name=revoke,proto3" json:"revoke,omitempty"`
	Peer                 *InputPeer        `protobuf:"bytes,5,opt,name=peer,proto3" json:"peer,omitempty"`
	MaxId                int32             `protobuf:"varint,6,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	MinDate              *types.Int32Value `protobuf:"bytes,7,opt,name=min_date,json=minDate,proto3" json:"min_date,omitempty"`
	MaxDate              *types.Int32Value `protobuf:"bytes,8,opt,name=max_date,json=maxDate,proto3" json:"max_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLMessagesDeleteHistory) Reset()         { *m = TLMessagesDeleteHistory{} }
func (m *TLMessagesDeleteHistory) String() string { return proto.CompactTextString(m) }
func (*TLMessagesDeleteHistory) ProtoMessage()    {}
func (*TLMessagesDeleteHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{128}
}
func (m *TLMessagesDeleteHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesDeleteHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesDeleteHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesDeleteHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesDeleteHistory.Merge(m, src)
}
func (m *TLMessagesDeleteHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesDeleteHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesDeleteHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesDeleteHistory proto.InternalMessageInfo

func (m *TLMessagesDeleteHistory) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesDeleteHistory) GetJustClear() bool {
	if m != nil {
		return m.JustClear
	}
	return false
}

func (m *TLMessagesDeleteHistory) GetRevoke() bool {
	if m != nil {
		return m.Revoke
	}
	return false
}

func (m *TLMessagesDeleteHistory) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesDeleteHistory) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLMessagesDeleteHistory) GetMinDate() *types.Int32Value {
	if m != nil {
		return m.MinDate
	}
	return nil
}

func (m *TLMessagesDeleteHistory) GetMaxDate() *types.Int32Value {
	if m != nil {
		return m.MaxDate
	}
	return nil
}

type TLMessagesDeleteMessages struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Revoke               bool          `protobuf:"varint,3,opt,name=revoke,proto3" json:"revoke,omitempty"`
	Id                   []int32       `protobuf:"varint,4,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesDeleteMessages) Reset()         { *m = TLMessagesDeleteMessages{} }
func (m *TLMessagesDeleteMessages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesDeleteMessages) ProtoMessage()    {}
func (*TLMessagesDeleteMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{129}
}
func (m *TLMessagesDeleteMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesDeleteMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesDeleteMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesDeleteMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesDeleteMessages.Merge(m, src)
}
func (m *TLMessagesDeleteMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesDeleteMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesDeleteMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesDeleteMessages proto.InternalMessageInfo

func (m *TLMessagesDeleteMessages) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesDeleteMessages) GetRevoke() bool {
	if m != nil {
		return m.Revoke
	}
	return false
}

func (m *TLMessagesDeleteMessages) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

type TLMessagesReceivedMessages struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	MaxId                int32         `protobuf:"varint,3,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesReceivedMessages) Reset()         { *m = TLMessagesReceivedMessages{} }
func (m *TLMessagesReceivedMessages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReceivedMessages) ProtoMessage()    {}
func (*TLMessagesReceivedMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{130}
}
func (m *TLMessagesReceivedMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReceivedMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReceivedMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReceivedMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReceivedMessages.Merge(m, src)
}
func (m *TLMessagesReceivedMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReceivedMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReceivedMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReceivedMessages proto.InternalMessageInfo

func (m *TLMessagesReceivedMessages) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReceivedMessages) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

type TLMessagesSetTyping struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer         `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	TopMsgId             *types.Int32Value  `protobuf:"bytes,4,opt,name=top_msg_id,json=topMsgId,proto3" json:"top_msg_id,omitempty"`
	Action               *SendMessageAction `protobuf:"bytes,5,opt,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesSetTyping) Reset()         { *m = TLMessagesSetTyping{} }
func (m *TLMessagesSetTyping) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetTyping) ProtoMessage()    {}
func (*TLMessagesSetTyping) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{131}
}
func (m *TLMessagesSetTyping) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetTyping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetTyping.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSetTyping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetTyping.Merge(m, src)
}
func (m *TLMessagesSetTyping) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetTyping) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetTyping.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetTyping proto.InternalMessageInfo

func (m *TLMessagesSetTyping) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSetTyping) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSetTyping) GetTopMsgId() *types.Int32Value {
	if m != nil {
		return m.TopMsgId
	}
	return nil
}

func (m *TLMessagesSetTyping) GetAction() *SendMessageAction {
	if m != nil {
		return m.Action
	}
	return nil
}

type TLMessagesSendMessage struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	NoWebpage            bool              `protobuf:"varint,3,opt,name=no_webpage,json=noWebpage,proto3" json:"no_webpage,omitempty"`
	Silent               bool              `protobuf:"varint,4,opt,name=silent,proto3" json:"silent,omitempty"`
	Background           bool              `protobuf:"varint,5,opt,name=background,proto3" json:"background,omitempty"`
	ClearDraft           bool              `protobuf:"varint,6,opt,name=clear_draft,json=clearDraft,proto3" json:"clear_draft,omitempty"`
	Noforwards           bool              `protobuf:"varint,7,opt,name=noforwards,proto3" json:"noforwards,omitempty"`
	Peer                 *InputPeer        `protobuf:"bytes,8,opt,name=peer,proto3" json:"peer,omitempty"`
	ReplyToMsgId         *types.Int32Value `protobuf:"bytes,9,opt,name=reply_to_msg_id,json=replyToMsgId,proto3" json:"reply_to_msg_id,omitempty"`
	Message              string            `protobuf:"bytes,10,opt,name=message,proto3" json:"message,omitempty"`
	RandomId             int64             `protobuf:"varint,11,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	ReplyMarkup          *ReplyMarkup      `protobuf:"bytes,12,opt,name=reply_markup,json=replyMarkup,proto3" json:"reply_markup,omitempty"`
	Entities             []*MessageEntity  `protobuf:"bytes,13,rep,name=entities,proto3" json:"entities,omitempty"`
	ScheduleDate         *types.Int32Value `protobuf:"bytes,14,opt,name=schedule_date,json=scheduleDate,proto3" json:"schedule_date,omitempty"`
	SendAs               *InputPeer        `protobuf:"bytes,15,opt,name=send_as,json=sendAs,proto3" json:"send_as,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLMessagesSendMessage) Reset()         { *m = TLMessagesSendMessage{} }
func (m *TLMessagesSendMessage) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendMessage) ProtoMessage()    {}
func (*TLMessagesSendMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{132}
}
func (m *TLMessagesSendMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSendMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendMessage.Merge(m, src)
}
func (m *TLMessagesSendMessage) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendMessage proto.InternalMessageInfo

func (m *TLMessagesSendMessage) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSendMessage) GetNoWebpage() bool {
	if m != nil {
		return m.NoWebpage
	}
	return false
}

func (m *TLMessagesSendMessage) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

func (m *TLMessagesSendMessage) GetBackground() bool {
	if m != nil {
		return m.Background
	}
	return false
}

func (m *TLMessagesSendMessage) GetClearDraft() bool {
	if m != nil {
		return m.ClearDraft
	}
	return false
}

func (m *TLMessagesSendMessage) GetNoforwards() bool {
	if m != nil {
		return m.Noforwards
	}
	return false
}

func (m *TLMessagesSendMessage) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendMessage) GetReplyToMsgId() *types.Int32Value {
	if m != nil {
		return m.ReplyToMsgId
	}
	return nil
}

func (m *TLMessagesSendMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TLMessagesSendMessage) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLMessagesSendMessage) GetReplyMarkup() *ReplyMarkup {
	if m != nil {
		return m.ReplyMarkup
	}
	return nil
}

func (m *TLMessagesSendMessage) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *TLMessagesSendMessage) GetScheduleDate() *types.Int32Value {
	if m != nil {
		return m.ScheduleDate
	}
	return nil
}

func (m *TLMessagesSendMessage) GetSendAs() *InputPeer {
	if m != nil {
		return m.SendAs
	}
	return nil
}

type TLMessagesSendMedia struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Silent               bool              `protobuf:"varint,3,opt,name=silent,proto3" json:"silent,omitempty"`
	Background           bool              `protobuf:"varint,4,opt,name=background,proto3" json:"background,omitempty"`
	ClearDraft           bool              `protobuf:"varint,5,opt,name=clear_draft,json=clearDraft,proto3" json:"clear_draft,omitempty"`
	Noforwards           bool              `protobuf:"varint,6,opt,name=noforwards,proto3" json:"noforwards,omitempty"`
	Peer                 *InputPeer        `protobuf:"bytes,7,opt,name=peer,proto3" json:"peer,omitempty"`
	ReplyToMsgId         *types.Int32Value `protobuf:"bytes,8,opt,name=reply_to_msg_id,json=replyToMsgId,proto3" json:"reply_to_msg_id,omitempty"`
	Media                *InputMedia       `protobuf:"bytes,9,opt,name=media,proto3" json:"media,omitempty"`
	Message              string            `protobuf:"bytes,10,opt,name=message,proto3" json:"message,omitempty"`
	RandomId             int64             `protobuf:"varint,11,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	ReplyMarkup          *ReplyMarkup      `protobuf:"bytes,12,opt,name=reply_markup,json=replyMarkup,proto3" json:"reply_markup,omitempty"`
	Entities             []*MessageEntity  `protobuf:"bytes,13,rep,name=entities,proto3" json:"entities,omitempty"`
	ScheduleDate         *types.Int32Value `protobuf:"bytes,14,opt,name=schedule_date,json=scheduleDate,proto3" json:"schedule_date,omitempty"`
	SendAs               *InputPeer        `protobuf:"bytes,15,opt,name=send_as,json=sendAs,proto3" json:"send_as,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLMessagesSendMedia) Reset()         { *m = TLMessagesSendMedia{} }
func (m *TLMessagesSendMedia) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendMedia) ProtoMessage()    {}
func (*TLMessagesSendMedia) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{133}
}
func (m *TLMessagesSendMedia) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendMedia) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendMedia.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSendMedia) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendMedia.Merge(m, src)
}
func (m *TLMessagesSendMedia) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendMedia) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendMedia.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendMedia proto.InternalMessageInfo

func (m *TLMessagesSendMedia) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSendMedia) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

func (m *TLMessagesSendMedia) GetBackground() bool {
	if m != nil {
		return m.Background
	}
	return false
}

func (m *TLMessagesSendMedia) GetClearDraft() bool {
	if m != nil {
		return m.ClearDraft
	}
	return false
}

func (m *TLMessagesSendMedia) GetNoforwards() bool {
	if m != nil {
		return m.Noforwards
	}
	return false
}

func (m *TLMessagesSendMedia) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendMedia) GetReplyToMsgId() *types.Int32Value {
	if m != nil {
		return m.ReplyToMsgId
	}
	return nil
}

func (m *TLMessagesSendMedia) GetMedia() *InputMedia {
	if m != nil {
		return m.Media
	}
	return nil
}

func (m *TLMessagesSendMedia) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TLMessagesSendMedia) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLMessagesSendMedia) GetReplyMarkup() *ReplyMarkup {
	if m != nil {
		return m.ReplyMarkup
	}
	return nil
}

func (m *TLMessagesSendMedia) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *TLMessagesSendMedia) GetScheduleDate() *types.Int32Value {
	if m != nil {
		return m.ScheduleDate
	}
	return nil
}

func (m *TLMessagesSendMedia) GetSendAs() *InputPeer {
	if m != nil {
		return m.SendAs
	}
	return nil
}

type TLMessagesForwardMessages struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Silent               bool              `protobuf:"varint,3,opt,name=silent,proto3" json:"silent,omitempty"`
	Background           bool              `protobuf:"varint,4,opt,name=background,proto3" json:"background,omitempty"`
	WithMyScore          bool              `protobuf:"varint,5,opt,name=with_my_score,json=withMyScore,proto3" json:"with_my_score,omitempty"`
	DropAuthor           bool              `protobuf:"varint,6,opt,name=drop_author,json=dropAuthor,proto3" json:"drop_author,omitempty"`
	DropMediaCaptions    bool              `protobuf:"varint,7,opt,name=drop_media_captions,json=dropMediaCaptions,proto3" json:"drop_media_captions,omitempty"`
	Noforwards           bool              `protobuf:"varint,8,opt,name=noforwards,proto3" json:"noforwards,omitempty"`
	FromPeer             *InputPeer        `protobuf:"bytes,9,opt,name=from_peer,json=fromPeer,proto3" json:"from_peer,omitempty"`
	Id                   []int32           `protobuf:"varint,10,rep,packed,name=id,proto3" json:"id,omitempty"`
	RandomId             []int64           `protobuf:"varint,11,rep,packed,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	ToPeer               *InputPeer        `protobuf:"bytes,12,opt,name=to_peer,json=toPeer,proto3" json:"to_peer,omitempty"`
	ScheduleDate         *types.Int32Value `protobuf:"bytes,13,opt,name=schedule_date,json=scheduleDate,proto3" json:"schedule_date,omitempty"`
	SendAs               *InputPeer        `protobuf:"bytes,14,opt,name=send_as,json=sendAs,proto3" json:"send_as,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLMessagesForwardMessages) Reset()         { *m = TLMessagesForwardMessages{} }
func (m *TLMessagesForwardMessages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesForwardMessages) ProtoMessage()    {}
func (*TLMessagesForwardMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{134}
}
func (m *TLMessagesForwardMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesForwardMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesForwardMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesForwardMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesForwardMessages.Merge(m, src)
}
func (m *TLMessagesForwardMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesForwardMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesForwardMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesForwardMessages proto.InternalMessageInfo

func (m *TLMessagesForwardMessages) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesForwardMessages) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

func (m *TLMessagesForwardMessages) GetBackground() bool {
	if m != nil {
		return m.Background
	}
	return false
}

func (m *TLMessagesForwardMessages) GetWithMyScore() bool {
	if m != nil {
		return m.WithMyScore
	}
	return false
}

func (m *TLMessagesForwardMessages) GetDropAuthor() bool {
	if m != nil {
		return m.DropAuthor
	}
	return false
}

func (m *TLMessagesForwardMessages) GetDropMediaCaptions() bool {
	if m != nil {
		return m.DropMediaCaptions
	}
	return false
}

func (m *TLMessagesForwardMessages) GetNoforwards() bool {
	if m != nil {
		return m.Noforwards
	}
	return false
}

func (m *TLMessagesForwardMessages) GetFromPeer() *InputPeer {
	if m != nil {
		return m.FromPeer
	}
	return nil
}

func (m *TLMessagesForwardMessages) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesForwardMessages) GetRandomId() []int64 {
	if m != nil {
		return m.RandomId
	}
	return nil
}

func (m *TLMessagesForwardMessages) GetToPeer() *InputPeer {
	if m != nil {
		return m.ToPeer
	}
	return nil
}

func (m *TLMessagesForwardMessages) GetScheduleDate() *types.Int32Value {
	if m != nil {
		return m.ScheduleDate
	}
	return nil
}

func (m *TLMessagesForwardMessages) GetSendAs() *InputPeer {
	if m != nil {
		return m.SendAs
	}
	return nil
}

type TLMessagesReportSpam struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesReportSpam) Reset()         { *m = TLMessagesReportSpam{} }
func (m *TLMessagesReportSpam) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReportSpam) ProtoMessage()    {}
func (*TLMessagesReportSpam) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{135}
}
func (m *TLMessagesReportSpam) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReportSpam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReportSpam.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReportSpam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReportSpam.Merge(m, src)
}
func (m *TLMessagesReportSpam) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReportSpam) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReportSpam.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReportSpam proto.InternalMessageInfo

func (m *TLMessagesReportSpam) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReportSpam) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type TLMessagesGetPeerSettingsEFD9A6A2 struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetPeerSettingsEFD9A6A2) Reset()         { *m = TLMessagesGetPeerSettingsEFD9A6A2{} }
func (m *TLMessagesGetPeerSettingsEFD9A6A2) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetPeerSettingsEFD9A6A2) ProtoMessage()    {}
func (*TLMessagesGetPeerSettingsEFD9A6A2) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{136}
}
func (m *TLMessagesGetPeerSettingsEFD9A6A2) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetPeerSettingsEFD9A6A2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetPeerSettingsEFD9A6A2.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetPeerSettingsEFD9A6A2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetPeerSettingsEFD9A6A2.Merge(m, src)
}
func (m *TLMessagesGetPeerSettingsEFD9A6A2) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetPeerSettingsEFD9A6A2) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetPeerSettingsEFD9A6A2.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetPeerSettingsEFD9A6A2 proto.InternalMessageInfo

func (m *TLMessagesGetPeerSettingsEFD9A6A2) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetPeerSettingsEFD9A6A2) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type TLMessagesReport struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   []int32       `protobuf:"varint,4,rep,packed,name=id,proto3" json:"id,omitempty"`
	Reason               *ReportReason `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	Message              string        `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesReport) Reset()         { *m = TLMessagesReport{} }
func (m *TLMessagesReport) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReport) ProtoMessage()    {}
func (*TLMessagesReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{137}
}
func (m *TLMessagesReport) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReport.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReport.Merge(m, src)
}
func (m *TLMessagesReport) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReport) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReport.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReport proto.InternalMessageInfo

func (m *TLMessagesReport) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReport) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesReport) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesReport) GetReason() *ReportReason {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *TLMessagesReport) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type TLMessagesGetChats struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   []int64       `protobuf:"varint,3,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetChats) Reset()         { *m = TLMessagesGetChats{} }
func (m *TLMessagesGetChats) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetChats) ProtoMessage()    {}
func (*TLMessagesGetChats) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{138}
}
func (m *TLMessagesGetChats) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetChats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetChats.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetChats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetChats.Merge(m, src)
}
func (m *TLMessagesGetChats) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetChats) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetChats.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetChats proto.InternalMessageInfo

func (m *TLMessagesGetChats) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetChats) GetId() []int64 {
	if m != nil {
		return m.Id
	}
	return nil
}

type TLMessagesGetFullChat struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ChatId               int64         `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetFullChat) Reset()         { *m = TLMessagesGetFullChat{} }
func (m *TLMessagesGetFullChat) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetFullChat) ProtoMessage()    {}
func (*TLMessagesGetFullChat) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{139}
}
func (m *TLMessagesGetFullChat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetFullChat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetFullChat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetFullChat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetFullChat.Merge(m, src)
}
func (m *TLMessagesGetFullChat) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetFullChat) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetFullChat.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetFullChat proto.InternalMessageInfo

func (m *TLMessagesGetFullChat) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetFullChat) GetChatId() int64 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

type TLMessagesEditChatTitle struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ChatId               int64         `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	Title                string        `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesEditChatTitle) Reset()         { *m = TLMessagesEditChatTitle{} }
func (m *TLMessagesEditChatTitle) String() string { return proto.CompactTextString(m) }
func (*TLMessagesEditChatTitle) ProtoMessage()    {}
func (*TLMessagesEditChatTitle) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{140}
}
func (m *TLMessagesEditChatTitle) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesEditChatTitle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesEditChatTitle.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesEditChatTitle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesEditChatTitle.Merge(m, src)
}
func (m *TLMessagesEditChatTitle) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesEditChatTitle) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesEditChatTitle.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesEditChatTitle proto.InternalMessageInfo

func (m *TLMessagesEditChatTitle) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesEditChatTitle) GetChatId() int64 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

func (m *TLMessagesEditChatTitle) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type TLMessagesEditChatPhoto struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ChatId               int64           `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	Photo                *InputChatPhoto `protobuf:"bytes,4,opt,name=photo,proto3" json:"photo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLMessagesEditChatPhoto) Reset()         { *m = TLMessagesEditChatPhoto{} }
func (m *TLMessagesEditChatPhoto) String() string { return proto.CompactTextString(m) }
func (*TLMessagesEditChatPhoto) ProtoMessage()    {}
func (*TLMessagesEditChatPhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{141}
}
func (m *TLMessagesEditChatPhoto) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesEditChatPhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesEditChatPhoto.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesEditChatPhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesEditChatPhoto.Merge(m, src)
}
func (m *TLMessagesEditChatPhoto) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesEditChatPhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesEditChatPhoto.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesEditChatPhoto proto.InternalMessageInfo

func (m *TLMessagesEditChatPhoto) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesEditChatPhoto) GetChatId() int64 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

func (m *TLMessagesEditChatPhoto) GetPhoto() *InputChatPhoto {
	if m != nil {
		return m.Photo
	}
	return nil
}

type TLMessagesAddChatUser struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ChatId               int64         `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FwdLimit             int32         `protobuf:"varint,5,opt,name=fwd_limit,json=fwdLimit,proto3" json:"fwd_limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesAddChatUser) Reset()         { *m = TLMessagesAddChatUser{} }
func (m *TLMessagesAddChatUser) String() string { return proto.CompactTextString(m) }
func (*TLMessagesAddChatUser) ProtoMessage()    {}
func (*TLMessagesAddChatUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{142}
}
func (m *TLMessagesAddChatUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesAddChatUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesAddChatUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesAddChatUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesAddChatUser.Merge(m, src)
}
func (m *TLMessagesAddChatUser) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesAddChatUser) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesAddChatUser.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesAddChatUser proto.InternalMessageInfo

func (m *TLMessagesAddChatUser) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesAddChatUser) GetChatId() int64 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

func (m *TLMessagesAddChatUser) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLMessagesAddChatUser) GetFwdLimit() int32 {
	if m != nil {
		return m.FwdLimit
	}
	return 0
}

type TLMessagesDeleteChatUser struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	RevokeHistory        bool          `protobuf:"varint,3,opt,name=revoke_history,json=revokeHistory,proto3" json:"revoke_history,omitempty"`
	ChatId               int64         `protobuf:"varint,4,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesDeleteChatUser) Reset()         { *m = TLMessagesDeleteChatUser{} }
func (m *TLMessagesDeleteChatUser) String() string { return proto.CompactTextString(m) }
func (*TLMessagesDeleteChatUser) ProtoMessage()    {}
func (*TLMessagesDeleteChatUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{143}
}
func (m *TLMessagesDeleteChatUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesDeleteChatUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesDeleteChatUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesDeleteChatUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesDeleteChatUser.Merge(m, src)
}
func (m *TLMessagesDeleteChatUser) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesDeleteChatUser) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesDeleteChatUser.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesDeleteChatUser proto.InternalMessageInfo

func (m *TLMessagesDeleteChatUser) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesDeleteChatUser) GetRevokeHistory() bool {
	if m != nil {
		return m.RevokeHistory
	}
	return false
}

func (m *TLMessagesDeleteChatUser) GetChatId() int64 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

func (m *TLMessagesDeleteChatUser) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

type TLMessagesCreateChat struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Users                []*InputUser  `protobuf:"bytes,3,rep,name=users,proto3" json:"users,omitempty"`
	Title                string        `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesCreateChat) Reset()         { *m = TLMessagesCreateChat{} }
func (m *TLMessagesCreateChat) String() string { return proto.CompactTextString(m) }
func (*TLMessagesCreateChat) ProtoMessage()    {}
func (*TLMessagesCreateChat) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{144}
}
func (m *TLMessagesCreateChat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesCreateChat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesCreateChat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesCreateChat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesCreateChat.Merge(m, src)
}
func (m *TLMessagesCreateChat) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesCreateChat) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesCreateChat.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesCreateChat proto.InternalMessageInfo

func (m *TLMessagesCreateChat) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesCreateChat) GetUsers() []*InputUser {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *TLMessagesCreateChat) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type TLMessagesGetDhConfig struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Version              int32         `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	RandomLength         int32         `protobuf:"varint,4,opt,name=random_length,json=randomLength,proto3" json:"random_length,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetDhConfig) Reset()         { *m = TLMessagesGetDhConfig{} }
func (m *TLMessagesGetDhConfig) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetDhConfig) ProtoMessage()    {}
func (*TLMessagesGetDhConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{145}
}
func (m *TLMessagesGetDhConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetDhConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetDhConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetDhConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetDhConfig.Merge(m, src)
}
func (m *TLMessagesGetDhConfig) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetDhConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetDhConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetDhConfig proto.InternalMessageInfo

func (m *TLMessagesGetDhConfig) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetDhConfig) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *TLMessagesGetDhConfig) GetRandomLength() int32 {
	if m != nil {
		return m.RandomLength
	}
	return 0
}

type TLMessagesRequestEncryption struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RandomId             int32         `protobuf:"varint,4,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	GA                   []byte        `protobuf:"bytes,5,opt,name=g_a,json=gA,proto3" json:"g_a,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesRequestEncryption) Reset()         { *m = TLMessagesRequestEncryption{} }
func (m *TLMessagesRequestEncryption) String() string { return proto.CompactTextString(m) }
func (*TLMessagesRequestEncryption) ProtoMessage()    {}
func (*TLMessagesRequestEncryption) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{146}
}
func (m *TLMessagesRequestEncryption) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesRequestEncryption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesRequestEncryption.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesRequestEncryption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesRequestEncryption.Merge(m, src)
}
func (m *TLMessagesRequestEncryption) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesRequestEncryption) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesRequestEncryption.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesRequestEncryption proto.InternalMessageInfo

func (m *TLMessagesRequestEncryption) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesRequestEncryption) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLMessagesRequestEncryption) GetRandomId() int32 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLMessagesRequestEncryption) GetGA() []byte {
	if m != nil {
		return m.GA
	}
	return nil
}

type TLMessagesAcceptEncryption struct {
	Constructor          TLConstructor       `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputEncryptedChat `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	GB                   []byte              `protobuf:"bytes,4,opt,name=g_b,json=gB,proto3" json:"g_b,omitempty"`
	KeyFingerprint       int64               `protobuf:"varint,5,opt,name=key_fingerprint,json=keyFingerprint,proto3" json:"key_fingerprint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesAcceptEncryption) Reset()         { *m = TLMessagesAcceptEncryption{} }
func (m *TLMessagesAcceptEncryption) String() string { return proto.CompactTextString(m) }
func (*TLMessagesAcceptEncryption) ProtoMessage()    {}
func (*TLMessagesAcceptEncryption) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{147}
}
func (m *TLMessagesAcceptEncryption) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesAcceptEncryption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesAcceptEncryption.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesAcceptEncryption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesAcceptEncryption.Merge(m, src)
}
func (m *TLMessagesAcceptEncryption) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesAcceptEncryption) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesAcceptEncryption.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesAcceptEncryption proto.InternalMessageInfo

func (m *TLMessagesAcceptEncryption) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesAcceptEncryption) GetPeer() *InputEncryptedChat {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesAcceptEncryption) GetGB() []byte {
	if m != nil {
		return m.GB
	}
	return nil
}

func (m *TLMessagesAcceptEncryption) GetKeyFingerprint() int64 {
	if m != nil {
		return m.KeyFingerprint
	}
	return 0
}

type TLMessagesDiscardEncryption struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	DeleteHistory        bool          `protobuf:"varint,3,opt,name=delete_history,json=deleteHistory,proto3" json:"delete_history,omitempty"`
	ChatId               int32         `protobuf:"varint,4,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesDiscardEncryption) Reset()         { *m = TLMessagesDiscardEncryption{} }
func (m *TLMessagesDiscardEncryption) String() string { return proto.CompactTextString(m) }
func (*TLMessagesDiscardEncryption) ProtoMessage()    {}
func (*TLMessagesDiscardEncryption) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{148}
}
func (m *TLMessagesDiscardEncryption) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesDiscardEncryption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesDiscardEncryption.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesDiscardEncryption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesDiscardEncryption.Merge(m, src)
}
func (m *TLMessagesDiscardEncryption) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesDiscardEncryption) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesDiscardEncryption.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesDiscardEncryption proto.InternalMessageInfo

func (m *TLMessagesDiscardEncryption) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesDiscardEncryption) GetDeleteHistory() bool {
	if m != nil {
		return m.DeleteHistory
	}
	return false
}

func (m *TLMessagesDiscardEncryption) GetChatId() int32 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

type TLMessagesSetEncryptedTyping struct {
	Constructor          TLConstructor       `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputEncryptedChat `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Typing               *Bool               `protobuf:"bytes,4,opt,name=typing,proto3" json:"typing,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesSetEncryptedTyping) Reset()         { *m = TLMessagesSetEncryptedTyping{} }
func (m *TLMessagesSetEncryptedTyping) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetEncryptedTyping) ProtoMessage()    {}
func (*TLMessagesSetEncryptedTyping) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{149}
}
func (m *TLMessagesSetEncryptedTyping) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetEncryptedTyping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetEncryptedTyping.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSetEncryptedTyping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetEncryptedTyping.Merge(m, src)
}
func (m *TLMessagesSetEncryptedTyping) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetEncryptedTyping) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetEncryptedTyping.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetEncryptedTyping proto.InternalMessageInfo

func (m *TLMessagesSetEncryptedTyping) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSetEncryptedTyping) GetPeer() *InputEncryptedChat {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSetEncryptedTyping) GetTyping() *Bool {
	if m != nil {
		return m.Typing
	}
	return nil
}

type TLMessagesReadEncryptedHistory struct {
	Constructor          TLConstructor       `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputEncryptedChat `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	MaxDate              int32               `protobuf:"varint,4,opt,name=max_date,json=maxDate,proto3" json:"max_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesReadEncryptedHistory) Reset()         { *m = TLMessagesReadEncryptedHistory{} }
func (m *TLMessagesReadEncryptedHistory) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReadEncryptedHistory) ProtoMessage()    {}
func (*TLMessagesReadEncryptedHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{150}
}
func (m *TLMessagesReadEncryptedHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReadEncryptedHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReadEncryptedHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReadEncryptedHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReadEncryptedHistory.Merge(m, src)
}
func (m *TLMessagesReadEncryptedHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReadEncryptedHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReadEncryptedHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReadEncryptedHistory proto.InternalMessageInfo

func (m *TLMessagesReadEncryptedHistory) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReadEncryptedHistory) GetPeer() *InputEncryptedChat {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesReadEncryptedHistory) GetMaxDate() int32 {
	if m != nil {
		return m.MaxDate
	}
	return 0
}

type TLMessagesSendEncrypted struct {
	Constructor          TLConstructor       `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Silent               bool                `protobuf:"varint,3,opt,name=silent,proto3" json:"silent,omitempty"`
	Peer                 *InputEncryptedChat `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	RandomId             int64               `protobuf:"varint,5,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	Data                 []byte              `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesSendEncrypted) Reset()         { *m = TLMessagesSendEncrypted{} }
func (m *TLMessagesSendEncrypted) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendEncrypted) ProtoMessage()    {}
func (*TLMessagesSendEncrypted) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{151}
}
func (m *TLMessagesSendEncrypted) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendEncrypted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendEncrypted.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSendEncrypted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendEncrypted.Merge(m, src)
}
func (m *TLMessagesSendEncrypted) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendEncrypted) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendEncrypted.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendEncrypted proto.InternalMessageInfo

func (m *TLMessagesSendEncrypted) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSendEncrypted) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

func (m *TLMessagesSendEncrypted) GetPeer() *InputEncryptedChat {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendEncrypted) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLMessagesSendEncrypted) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type TLMessagesSendEncryptedFile struct {
	Constructor          TLConstructor       `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Silent               bool                `protobuf:"varint,3,opt,name=silent,proto3" json:"silent,omitempty"`
	Peer                 *InputEncryptedChat `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	RandomId             int64               `protobuf:"varint,5,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	Data                 []byte              `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	File                 *InputEncryptedFile `protobuf:"bytes,7,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesSendEncryptedFile) Reset()         { *m = TLMessagesSendEncryptedFile{} }
func (m *TLMessagesSendEncryptedFile) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendEncryptedFile) ProtoMessage()    {}
func (*TLMessagesSendEncryptedFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{152}
}
func (m *TLMessagesSendEncryptedFile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendEncryptedFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendEncryptedFile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSendEncryptedFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendEncryptedFile.Merge(m, src)
}
func (m *TLMessagesSendEncryptedFile) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendEncryptedFile) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendEncryptedFile.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendEncryptedFile proto.InternalMessageInfo

func (m *TLMessagesSendEncryptedFile) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSendEncryptedFile) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

func (m *TLMessagesSendEncryptedFile) GetPeer() *InputEncryptedChat {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendEncryptedFile) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLMessagesSendEncryptedFile) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TLMessagesSendEncryptedFile) GetFile() *InputEncryptedFile {
	if m != nil {
		return m.File
	}
	return nil
}

type TLMessagesSendEncryptedService struct {
	Constructor          TLConstructor       `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputEncryptedChat `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	RandomId             int64               `protobuf:"varint,4,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	Data                 []byte              `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesSendEncryptedService) Reset()         { *m = TLMessagesSendEncryptedService{} }
func (m *TLMessagesSendEncryptedService) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendEncryptedService) ProtoMessage()    {}
func (*TLMessagesSendEncryptedService) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{153}
}
func (m *TLMessagesSendEncryptedService) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendEncryptedService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendEncryptedService.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSendEncryptedService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendEncryptedService.Merge(m, src)
}
func (m *TLMessagesSendEncryptedService) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendEncryptedService) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendEncryptedService.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendEncryptedService proto.InternalMessageInfo

func (m *TLMessagesSendEncryptedService) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSendEncryptedService) GetPeer() *InputEncryptedChat {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendEncryptedService) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLMessagesSendEncryptedService) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type TLMessagesReceivedQueue struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	MaxQts               int32         `protobuf:"varint,3,opt,name=max_qts,json=maxQts,proto3" json:"max_qts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesReceivedQueue) Reset()         { *m = TLMessagesReceivedQueue{} }
func (m *TLMessagesReceivedQueue) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReceivedQueue) ProtoMessage()    {}
func (*TLMessagesReceivedQueue) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{154}
}
func (m *TLMessagesReceivedQueue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReceivedQueue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReceivedQueue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReceivedQueue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReceivedQueue.Merge(m, src)
}
func (m *TLMessagesReceivedQueue) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReceivedQueue) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReceivedQueue.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReceivedQueue proto.InternalMessageInfo

func (m *TLMessagesReceivedQueue) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReceivedQueue) GetMaxQts() int32 {
	if m != nil {
		return m.MaxQts
	}
	return 0
}

type TLMessagesReportEncryptedSpam struct {
	Constructor          TLConstructor       `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputEncryptedChat `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesReportEncryptedSpam) Reset()         { *m = TLMessagesReportEncryptedSpam{} }
func (m *TLMessagesReportEncryptedSpam) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReportEncryptedSpam) ProtoMessage()    {}
func (*TLMessagesReportEncryptedSpam) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{155}
}
func (m *TLMessagesReportEncryptedSpam) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReportEncryptedSpam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReportEncryptedSpam.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReportEncryptedSpam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReportEncryptedSpam.Merge(m, src)
}
func (m *TLMessagesReportEncryptedSpam) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReportEncryptedSpam) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReportEncryptedSpam.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReportEncryptedSpam proto.InternalMessageInfo

func (m *TLMessagesReportEncryptedSpam) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReportEncryptedSpam) GetPeer() *InputEncryptedChat {
	if m != nil {
		return m.Peer
	}
	return nil
}

type TLMessagesReadMessageContents struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   []int32       `protobuf:"varint,3,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesReadMessageContents) Reset()         { *m = TLMessagesReadMessageContents{} }
func (m *TLMessagesReadMessageContents) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReadMessageContents) ProtoMessage()    {}
func (*TLMessagesReadMessageContents) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{156}
}
func (m *TLMessagesReadMessageContents) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReadMessageContents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReadMessageContents.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReadMessageContents) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReadMessageContents.Merge(m, src)
}
func (m *TLMessagesReadMessageContents) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReadMessageContents) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReadMessageContents.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReadMessageContents proto.InternalMessageInfo

func (m *TLMessagesReadMessageContents) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReadMessageContents) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

type TLMessagesGetStickers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Emoticon             string        `protobuf:"bytes,3,opt,name=emoticon,proto3" json:"emoticon,omitempty"`
	Hash                 int64         `protobuf:"varint,4,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetStickers) Reset()         { *m = TLMessagesGetStickers{} }
func (m *TLMessagesGetStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetStickers) ProtoMessage()    {}
func (*TLMessagesGetStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{157}
}
func (m *TLMessagesGetStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetStickers.Merge(m, src)
}
func (m *TLMessagesGetStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetStickers proto.InternalMessageInfo

func (m *TLMessagesGetStickers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetStickers) GetEmoticon() string {
	if m != nil {
		return m.Emoticon
	}
	return ""
}

func (m *TLMessagesGetStickers) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLMessagesGetAllStickers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 int64         `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetAllStickers) Reset()         { *m = TLMessagesGetAllStickers{} }
func (m *TLMessagesGetAllStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetAllStickers) ProtoMessage()    {}
func (*TLMessagesGetAllStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{158}
}
func (m *TLMessagesGetAllStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetAllStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetAllStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetAllStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetAllStickers.Merge(m, src)
}
func (m *TLMessagesGetAllStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetAllStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetAllStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetAllStickers proto.InternalMessageInfo

func (m *TLMessagesGetAllStickers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetAllStickers) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLMessagesGetWebPagePreview struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Message              string           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Entities             []*MessageEntity `protobuf:"bytes,4,rep,name=entities,proto3" json:"entities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLMessagesGetWebPagePreview) Reset()         { *m = TLMessagesGetWebPagePreview{} }
func (m *TLMessagesGetWebPagePreview) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetWebPagePreview) ProtoMessage()    {}
func (*TLMessagesGetWebPagePreview) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{159}
}
func (m *TLMessagesGetWebPagePreview) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetWebPagePreview) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetWebPagePreview.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetWebPagePreview) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetWebPagePreview.Merge(m, src)
}
func (m *TLMessagesGetWebPagePreview) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetWebPagePreview) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetWebPagePreview.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetWebPagePreview proto.InternalMessageInfo

func (m *TLMessagesGetWebPagePreview) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetWebPagePreview) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TLMessagesGetWebPagePreview) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

type TLMessagesExportChatInvite struct {
	Constructor           TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	LegacyRevokePermanent bool               `protobuf:"varint,3,opt,name=legacy_revoke_permanent,json=legacyRevokePermanent,proto3" json:"legacy_revoke_permanent,omitempty"`
	RequestNeeded         bool               `protobuf:"varint,4,opt,name=request_needed,json=requestNeeded,proto3" json:"request_needed,omitempty"`
	Peer                  *InputPeer         `protobuf:"bytes,5,opt,name=peer,proto3" json:"peer,omitempty"`
	ExpireDate            *types.Int32Value  `protobuf:"bytes,6,opt,name=expire_date,json=expireDate,proto3" json:"expire_date,omitempty"`
	UsageLimit            *types.Int32Value  `protobuf:"bytes,7,opt,name=usage_limit,json=usageLimit,proto3" json:"usage_limit,omitempty"`
	Title                 *types.StringValue `protobuf:"bytes,8,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}           `json:"-"`
	XXX_unrecognized      []byte             `json:"-"`
	XXX_sizecache         int32              `json:"-"`
}

func (m *TLMessagesExportChatInvite) Reset()         { *m = TLMessagesExportChatInvite{} }
func (m *TLMessagesExportChatInvite) String() string { return proto.CompactTextString(m) }
func (*TLMessagesExportChatInvite) ProtoMessage()    {}
func (*TLMessagesExportChatInvite) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{160}
}
func (m *TLMessagesExportChatInvite) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesExportChatInvite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesExportChatInvite.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesExportChatInvite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesExportChatInvite.Merge(m, src)
}
func (m *TLMessagesExportChatInvite) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesExportChatInvite) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesExportChatInvite.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesExportChatInvite proto.InternalMessageInfo

func (m *TLMessagesExportChatInvite) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesExportChatInvite) GetLegacyRevokePermanent() bool {
	if m != nil {
		return m.LegacyRevokePermanent
	}
	return false
}

func (m *TLMessagesExportChatInvite) GetRequestNeeded() bool {
	if m != nil {
		return m.RequestNeeded
	}
	return false
}

func (m *TLMessagesExportChatInvite) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesExportChatInvite) GetExpireDate() *types.Int32Value {
	if m != nil {
		return m.ExpireDate
	}
	return nil
}

func (m *TLMessagesExportChatInvite) GetUsageLimit() *types.Int32Value {
	if m != nil {
		return m.UsageLimit
	}
	return nil
}

func (m *TLMessagesExportChatInvite) GetTitle() *types.StringValue {
	if m != nil {
		return m.Title
	}
	return nil
}

type TLMessagesCheckChatInvite struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 string        `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesCheckChatInvite) Reset()         { *m = TLMessagesCheckChatInvite{} }
func (m *TLMessagesCheckChatInvite) String() string { return proto.CompactTextString(m) }
func (*TLMessagesCheckChatInvite) ProtoMessage()    {}
func (*TLMessagesCheckChatInvite) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{161}
}
func (m *TLMessagesCheckChatInvite) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesCheckChatInvite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesCheckChatInvite.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesCheckChatInvite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesCheckChatInvite.Merge(m, src)
}
func (m *TLMessagesCheckChatInvite) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesCheckChatInvite) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesCheckChatInvite.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesCheckChatInvite proto.InternalMessageInfo

func (m *TLMessagesCheckChatInvite) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesCheckChatInvite) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type TLMessagesImportChatInvite struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 string        `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesImportChatInvite) Reset()         { *m = TLMessagesImportChatInvite{} }
func (m *TLMessagesImportChatInvite) String() string { return proto.CompactTextString(m) }
func (*TLMessagesImportChatInvite) ProtoMessage()    {}
func (*TLMessagesImportChatInvite) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{162}
}
func (m *TLMessagesImportChatInvite) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesImportChatInvite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesImportChatInvite.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesImportChatInvite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesImportChatInvite.Merge(m, src)
}
func (m *TLMessagesImportChatInvite) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesImportChatInvite) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesImportChatInvite.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesImportChatInvite proto.InternalMessageInfo

func (m *TLMessagesImportChatInvite) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesImportChatInvite) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type TLMessagesGetStickerSet struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Stickerset           *InputStickerSet `protobuf:"bytes,3,opt,name=stickerset,proto3" json:"stickerset,omitempty"`
	Hash                 int32            `protobuf:"varint,4,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLMessagesGetStickerSet) Reset()         { *m = TLMessagesGetStickerSet{} }
func (m *TLMessagesGetStickerSet) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetStickerSet) ProtoMessage()    {}
func (*TLMessagesGetStickerSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{163}
}
func (m *TLMessagesGetStickerSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetStickerSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetStickerSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetStickerSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetStickerSet.Merge(m, src)
}
func (m *TLMessagesGetStickerSet) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetStickerSet) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetStickerSet.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetStickerSet proto.InternalMessageInfo

func (m *TLMessagesGetStickerSet) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetStickerSet) GetStickerset() *InputStickerSet {
	if m != nil {
		return m.Stickerset
	}
	return nil
}

func (m *TLMessagesGetStickerSet) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLMessagesInstallStickerSet struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Stickerset           *InputStickerSet `protobuf:"bytes,3,opt,name=stickerset,proto3" json:"stickerset,omitempty"`
	Archived             *Bool            `protobuf:"bytes,4,opt,name=archived,proto3" json:"archived,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLMessagesInstallStickerSet) Reset()         { *m = TLMessagesInstallStickerSet{} }
func (m *TLMessagesInstallStickerSet) String() string { return proto.CompactTextString(m) }
func (*TLMessagesInstallStickerSet) ProtoMessage()    {}
func (*TLMessagesInstallStickerSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{164}
}
func (m *TLMessagesInstallStickerSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesInstallStickerSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesInstallStickerSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesInstallStickerSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesInstallStickerSet.Merge(m, src)
}
func (m *TLMessagesInstallStickerSet) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesInstallStickerSet) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesInstallStickerSet.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesInstallStickerSet proto.InternalMessageInfo

func (m *TLMessagesInstallStickerSet) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesInstallStickerSet) GetStickerset() *InputStickerSet {
	if m != nil {
		return m.Stickerset
	}
	return nil
}

func (m *TLMessagesInstallStickerSet) GetArchived() *Bool {
	if m != nil {
		return m.Archived
	}
	return nil
}

type TLMessagesUninstallStickerSet struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Stickerset           *InputStickerSet `protobuf:"bytes,3,opt,name=stickerset,proto3" json:"stickerset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLMessagesUninstallStickerSet) Reset()         { *m = TLMessagesUninstallStickerSet{} }
func (m *TLMessagesUninstallStickerSet) String() string { return proto.CompactTextString(m) }
func (*TLMessagesUninstallStickerSet) ProtoMessage()    {}
func (*TLMessagesUninstallStickerSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{165}
}
func (m *TLMessagesUninstallStickerSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesUninstallStickerSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesUninstallStickerSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesUninstallStickerSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesUninstallStickerSet.Merge(m, src)
}
func (m *TLMessagesUninstallStickerSet) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesUninstallStickerSet) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesUninstallStickerSet.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesUninstallStickerSet proto.InternalMessageInfo

func (m *TLMessagesUninstallStickerSet) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesUninstallStickerSet) GetStickerset() *InputStickerSet {
	if m != nil {
		return m.Stickerset
	}
	return nil
}

type TLMessagesStartBot struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Bot                  *InputUser    `protobuf:"bytes,3,opt,name=bot,proto3" json:"bot,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	RandomId             int64         `protobuf:"varint,5,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	StartParam           string        `protobuf:"bytes,6,opt,name=start_param,json=startParam,proto3" json:"start_param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesStartBot) Reset()         { *m = TLMessagesStartBot{} }
func (m *TLMessagesStartBot) String() string { return proto.CompactTextString(m) }
func (*TLMessagesStartBot) ProtoMessage()    {}
func (*TLMessagesStartBot) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{166}
}
func (m *TLMessagesStartBot) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesStartBot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesStartBot.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesStartBot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesStartBot.Merge(m, src)
}
func (m *TLMessagesStartBot) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesStartBot) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesStartBot.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesStartBot proto.InternalMessageInfo

func (m *TLMessagesStartBot) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesStartBot) GetBot() *InputUser {
	if m != nil {
		return m.Bot
	}
	return nil
}

func (m *TLMessagesStartBot) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesStartBot) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLMessagesStartBot) GetStartParam() string {
	if m != nil {
		return m.StartParam
	}
	return ""
}

type TLMessagesGetMessagesViews struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   []int32       `protobuf:"varint,4,rep,packed,name=id,proto3" json:"id,omitempty"`
	Increment            *Bool         `protobuf:"bytes,5,opt,name=increment,proto3" json:"increment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetMessagesViews) Reset()         { *m = TLMessagesGetMessagesViews{} }
func (m *TLMessagesGetMessagesViews) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetMessagesViews) ProtoMessage()    {}
func (*TLMessagesGetMessagesViews) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{167}
}
func (m *TLMessagesGetMessagesViews) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetMessagesViews) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetMessagesViews.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetMessagesViews) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetMessagesViews.Merge(m, src)
}
func (m *TLMessagesGetMessagesViews) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetMessagesViews) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetMessagesViews.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetMessagesViews proto.InternalMessageInfo

func (m *TLMessagesGetMessagesViews) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetMessagesViews) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetMessagesViews) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesGetMessagesViews) GetIncrement() *Bool {
	if m != nil {
		return m.Increment
	}
	return nil
}

type TLMessagesEditChatAdmin struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ChatId               int64         `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsAdmin              *Bool         `protobuf:"bytes,5,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesEditChatAdmin) Reset()         { *m = TLMessagesEditChatAdmin{} }
func (m *TLMessagesEditChatAdmin) String() string { return proto.CompactTextString(m) }
func (*TLMessagesEditChatAdmin) ProtoMessage()    {}
func (*TLMessagesEditChatAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{168}
}
func (m *TLMessagesEditChatAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesEditChatAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesEditChatAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesEditChatAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesEditChatAdmin.Merge(m, src)
}
func (m *TLMessagesEditChatAdmin) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesEditChatAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesEditChatAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesEditChatAdmin proto.InternalMessageInfo

func (m *TLMessagesEditChatAdmin) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesEditChatAdmin) GetChatId() int64 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

func (m *TLMessagesEditChatAdmin) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLMessagesEditChatAdmin) GetIsAdmin() *Bool {
	if m != nil {
		return m.IsAdmin
	}
	return nil
}

type TLMessagesMigrateChat struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ChatId               int64         `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesMigrateChat) Reset()         { *m = TLMessagesMigrateChat{} }
func (m *TLMessagesMigrateChat) String() string { return proto.CompactTextString(m) }
func (*TLMessagesMigrateChat) ProtoMessage()    {}
func (*TLMessagesMigrateChat) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{169}
}
func (m *TLMessagesMigrateChat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesMigrateChat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesMigrateChat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesMigrateChat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesMigrateChat.Merge(m, src)
}
func (m *TLMessagesMigrateChat) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesMigrateChat) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesMigrateChat.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesMigrateChat proto.InternalMessageInfo

func (m *TLMessagesMigrateChat) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesMigrateChat) GetChatId() int64 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

type TLMessagesSearchGlobal struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FolderId             *types.Int32Value `protobuf:"bytes,3,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	Q                    string            `protobuf:"bytes,4,opt,name=q,proto3" json:"q,omitempty"`
	Filter               *MessagesFilter   `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	MinDate              int32             `protobuf:"varint,6,opt,name=min_date,json=minDate,proto3" json:"min_date,omitempty"`
	MaxDate              int32             `protobuf:"varint,7,opt,name=max_date,json=maxDate,proto3" json:"max_date,omitempty"`
	OffsetRate           int32             `protobuf:"varint,8,opt,name=offset_rate,json=offsetRate,proto3" json:"offset_rate,omitempty"`
	OffsetPeer           *InputPeer        `protobuf:"bytes,9,opt,name=offset_peer,json=offsetPeer,proto3" json:"offset_peer,omitempty"`
	OffsetId             int32             `protobuf:"varint,10,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	Limit                int32             `protobuf:"varint,11,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLMessagesSearchGlobal) Reset()         { *m = TLMessagesSearchGlobal{} }
func (m *TLMessagesSearchGlobal) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSearchGlobal) ProtoMessage()    {}
func (*TLMessagesSearchGlobal) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{170}
}
func (m *TLMessagesSearchGlobal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSearchGlobal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSearchGlobal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSearchGlobal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSearchGlobal.Merge(m, src)
}
func (m *TLMessagesSearchGlobal) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSearchGlobal) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSearchGlobal.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSearchGlobal proto.InternalMessageInfo

func (m *TLMessagesSearchGlobal) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSearchGlobal) GetFolderId() *types.Int32Value {
	if m != nil {
		return m.FolderId
	}
	return nil
}

func (m *TLMessagesSearchGlobal) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *TLMessagesSearchGlobal) GetFilter() *MessagesFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *TLMessagesSearchGlobal) GetMinDate() int32 {
	if m != nil {
		return m.MinDate
	}
	return 0
}

func (m *TLMessagesSearchGlobal) GetMaxDate() int32 {
	if m != nil {
		return m.MaxDate
	}
	return 0
}

func (m *TLMessagesSearchGlobal) GetOffsetRate() int32 {
	if m != nil {
		return m.OffsetRate
	}
	return 0
}

func (m *TLMessagesSearchGlobal) GetOffsetPeer() *InputPeer {
	if m != nil {
		return m.OffsetPeer
	}
	return nil
}

func (m *TLMessagesSearchGlobal) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLMessagesSearchGlobal) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type TLMessagesReorderStickerSets struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Masks                bool          `protobuf:"varint,3,opt,name=masks,proto3" json:"masks,omitempty"`
	Order                []int64       `protobuf:"varint,4,rep,packed,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesReorderStickerSets) Reset()         { *m = TLMessagesReorderStickerSets{} }
func (m *TLMessagesReorderStickerSets) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReorderStickerSets) ProtoMessage()    {}
func (*TLMessagesReorderStickerSets) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{171}
}
func (m *TLMessagesReorderStickerSets) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReorderStickerSets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReorderStickerSets.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReorderStickerSets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReorderStickerSets.Merge(m, src)
}
func (m *TLMessagesReorderStickerSets) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReorderStickerSets) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReorderStickerSets.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReorderStickerSets proto.InternalMessageInfo

func (m *TLMessagesReorderStickerSets) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReorderStickerSets) GetMasks() bool {
	if m != nil {
		return m.Masks
	}
	return false
}

func (m *TLMessagesReorderStickerSets) GetOrder() []int64 {
	if m != nil {
		return m.Order
	}
	return nil
}

type TLMessagesGetDocumentByHash struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Sha256               []byte        `protobuf:"bytes,3,opt,name=sha256,proto3" json:"sha256,omitempty"`
	Size2                int32         `protobuf:"varint,4,opt,name=size2,proto3" json:"size2,omitempty"`
	MimeType             string        `protobuf:"bytes,5,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetDocumentByHash) Reset()         { *m = TLMessagesGetDocumentByHash{} }
func (m *TLMessagesGetDocumentByHash) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetDocumentByHash) ProtoMessage()    {}
func (*TLMessagesGetDocumentByHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{172}
}
func (m *TLMessagesGetDocumentByHash) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetDocumentByHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetDocumentByHash.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetDocumentByHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetDocumentByHash.Merge(m, src)
}
func (m *TLMessagesGetDocumentByHash) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetDocumentByHash) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetDocumentByHash.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetDocumentByHash proto.InternalMessageInfo

func (m *TLMessagesGetDocumentByHash) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetDocumentByHash) GetSha256() []byte {
	if m != nil {
		return m.Sha256
	}
	return nil
}

func (m *TLMessagesGetDocumentByHash) GetSize2() int32 {
	if m != nil {
		return m.Size2
	}
	return 0
}

func (m *TLMessagesGetDocumentByHash) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

type TLMessagesGetSavedGifs struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 int64         `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetSavedGifs) Reset()         { *m = TLMessagesGetSavedGifs{} }
func (m *TLMessagesGetSavedGifs) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetSavedGifs) ProtoMessage()    {}
func (*TLMessagesGetSavedGifs) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{173}
}
func (m *TLMessagesGetSavedGifs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetSavedGifs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetSavedGifs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetSavedGifs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetSavedGifs.Merge(m, src)
}
func (m *TLMessagesGetSavedGifs) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetSavedGifs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetSavedGifs.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetSavedGifs proto.InternalMessageInfo

func (m *TLMessagesGetSavedGifs) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetSavedGifs) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLMessagesSaveGif struct {
	Constructor          TLConstructor  `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   *InputDocument `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Unsave               *Bool          `protobuf:"bytes,4,opt,name=unsave,proto3" json:"unsave,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TLMessagesSaveGif) Reset()         { *m = TLMessagesSaveGif{} }
func (m *TLMessagesSaveGif) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSaveGif) ProtoMessage()    {}
func (*TLMessagesSaveGif) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{174}
}
func (m *TLMessagesSaveGif) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSaveGif) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSaveGif.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSaveGif) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSaveGif.Merge(m, src)
}
func (m *TLMessagesSaveGif) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSaveGif) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSaveGif.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSaveGif proto.InternalMessageInfo

func (m *TLMessagesSaveGif) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSaveGif) GetId() *InputDocument {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesSaveGif) GetUnsave() *Bool {
	if m != nil {
		return m.Unsave
	}
	return nil
}

type TLMessagesGetInlineBotResults struct {
	Constructor          TLConstructor  `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Bot                  *InputUser     `protobuf:"bytes,3,opt,name=bot,proto3" json:"bot,omitempty"`
	Peer                 *InputPeer     `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	GeoPoint             *InputGeoPoint `protobuf:"bytes,5,opt,name=geo_point,json=geoPoint,proto3" json:"geo_point,omitempty"`
	Query                string         `protobuf:"bytes,6,opt,name=query,proto3" json:"query,omitempty"`
	Offset               string         `protobuf:"bytes,7,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TLMessagesGetInlineBotResults) Reset()         { *m = TLMessagesGetInlineBotResults{} }
func (m *TLMessagesGetInlineBotResults) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetInlineBotResults) ProtoMessage()    {}
func (*TLMessagesGetInlineBotResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{175}
}
func (m *TLMessagesGetInlineBotResults) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetInlineBotResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetInlineBotResults.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetInlineBotResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetInlineBotResults.Merge(m, src)
}
func (m *TLMessagesGetInlineBotResults) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetInlineBotResults) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetInlineBotResults.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetInlineBotResults proto.InternalMessageInfo

func (m *TLMessagesGetInlineBotResults) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetInlineBotResults) GetBot() *InputUser {
	if m != nil {
		return m.Bot
	}
	return nil
}

func (m *TLMessagesGetInlineBotResults) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetInlineBotResults) GetGeoPoint() *InputGeoPoint {
	if m != nil {
		return m.GeoPoint
	}
	return nil
}

func (m *TLMessagesGetInlineBotResults) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *TLMessagesGetInlineBotResults) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

type TLMessagesSetInlineBotResults struct {
	Constructor          TLConstructor           `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Gallery              bool                    `protobuf:"varint,3,opt,name=gallery,proto3" json:"gallery,omitempty"`
	Private              bool                    `protobuf:"varint,4,opt,name=private,proto3" json:"private,omitempty"`
	QueryId              int64                   `protobuf:"varint,5,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Results              []*InputBotInlineResult `protobuf:"bytes,6,rep,name=results,proto3" json:"results,omitempty"`
	CacheTime            int32                   `protobuf:"varint,7,opt,name=cache_time,json=cacheTime,proto3" json:"cache_time,omitempty"`
	NextOffset           *types.StringValue      `protobuf:"bytes,8,opt,name=next_offset,json=nextOffset,proto3" json:"next_offset,omitempty"`
	SwitchPm             *InlineBotSwitchPM      `protobuf:"bytes,9,opt,name=switch_pm,json=switchPm,proto3" json:"switch_pm,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TLMessagesSetInlineBotResults) Reset()         { *m = TLMessagesSetInlineBotResults{} }
func (m *TLMessagesSetInlineBotResults) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetInlineBotResults) ProtoMessage()    {}
func (*TLMessagesSetInlineBotResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{176}
}
func (m *TLMessagesSetInlineBotResults) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetInlineBotResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetInlineBotResults.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSetInlineBotResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetInlineBotResults.Merge(m, src)
}
func (m *TLMessagesSetInlineBotResults) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetInlineBotResults) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetInlineBotResults.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetInlineBotResults proto.InternalMessageInfo

func (m *TLMessagesSetInlineBotResults) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSetInlineBotResults) GetGallery() bool {
	if m != nil {
		return m.Gallery
	}
	return false
}

func (m *TLMessagesSetInlineBotResults) GetPrivate() bool {
	if m != nil {
		return m.Private
	}
	return false
}

func (m *TLMessagesSetInlineBotResults) GetQueryId() int64 {
	if m != nil {
		return m.QueryId
	}
	return 0
}

func (m *TLMessagesSetInlineBotResults) GetResults() []*InputBotInlineResult {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *TLMessagesSetInlineBotResults) GetCacheTime() int32 {
	if m != nil {
		return m.CacheTime
	}
	return 0
}

func (m *TLMessagesSetInlineBotResults) GetNextOffset() *types.StringValue {
	if m != nil {
		return m.NextOffset
	}
	return nil
}

func (m *TLMessagesSetInlineBotResults) GetSwitchPm() *InlineBotSwitchPM {
	if m != nil {
		return m.SwitchPm
	}
	return nil
}

type TLMessagesSendInlineBotResult struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Silent               bool              `protobuf:"varint,3,opt,name=silent,proto3" json:"silent,omitempty"`
	Background           bool              `protobuf:"varint,4,opt,name=background,proto3" json:"background,omitempty"`
	ClearDraft           bool              `protobuf:"varint,5,opt,name=clear_draft,json=clearDraft,proto3" json:"clear_draft,omitempty"`
	HideVia              bool              `protobuf:"varint,6,opt,name=hide_via,json=hideVia,proto3" json:"hide_via,omitempty"`
	Peer                 *InputPeer        `protobuf:"bytes,7,opt,name=peer,proto3" json:"peer,omitempty"`
	ReplyToMsgId         *types.Int32Value `protobuf:"bytes,8,opt,name=reply_to_msg_id,json=replyToMsgId,proto3" json:"reply_to_msg_id,omitempty"`
	RandomId             int64             `protobuf:"varint,9,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	QueryId              int64             `protobuf:"varint,10,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Id                   string            `protobuf:"bytes,11,opt,name=id,proto3" json:"id,omitempty"`
	ScheduleDate         *types.Int32Value `protobuf:"bytes,12,opt,name=schedule_date,json=scheduleDate,proto3" json:"schedule_date,omitempty"`
	SendAs               *InputPeer        `protobuf:"bytes,13,opt,name=send_as,json=sendAs,proto3" json:"send_as,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLMessagesSendInlineBotResult) Reset()         { *m = TLMessagesSendInlineBotResult{} }
func (m *TLMessagesSendInlineBotResult) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendInlineBotResult) ProtoMessage()    {}
func (*TLMessagesSendInlineBotResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{177}
}
func (m *TLMessagesSendInlineBotResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendInlineBotResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendInlineBotResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSendInlineBotResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendInlineBotResult.Merge(m, src)
}
func (m *TLMessagesSendInlineBotResult) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendInlineBotResult) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendInlineBotResult.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendInlineBotResult proto.InternalMessageInfo

func (m *TLMessagesSendInlineBotResult) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSendInlineBotResult) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

func (m *TLMessagesSendInlineBotResult) GetBackground() bool {
	if m != nil {
		return m.Background
	}
	return false
}

func (m *TLMessagesSendInlineBotResult) GetClearDraft() bool {
	if m != nil {
		return m.ClearDraft
	}
	return false
}

func (m *TLMessagesSendInlineBotResult) GetHideVia() bool {
	if m != nil {
		return m.HideVia
	}
	return false
}

func (m *TLMessagesSendInlineBotResult) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendInlineBotResult) GetReplyToMsgId() *types.Int32Value {
	if m != nil {
		return m.ReplyToMsgId
	}
	return nil
}

func (m *TLMessagesSendInlineBotResult) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLMessagesSendInlineBotResult) GetQueryId() int64 {
	if m != nil {
		return m.QueryId
	}
	return 0
}

func (m *TLMessagesSendInlineBotResult) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TLMessagesSendInlineBotResult) GetScheduleDate() *types.Int32Value {
	if m != nil {
		return m.ScheduleDate
	}
	return nil
}

func (m *TLMessagesSendInlineBotResult) GetSendAs() *InputPeer {
	if m != nil {
		return m.SendAs
	}
	return nil
}

type TLMessagesGetMessageEditData struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   int32         `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetMessageEditData) Reset()         { *m = TLMessagesGetMessageEditData{} }
func (m *TLMessagesGetMessageEditData) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetMessageEditData) ProtoMessage()    {}
func (*TLMessagesGetMessageEditData) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{178}
}
func (m *TLMessagesGetMessageEditData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetMessageEditData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetMessageEditData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetMessageEditData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetMessageEditData.Merge(m, src)
}
func (m *TLMessagesGetMessageEditData) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetMessageEditData) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetMessageEditData.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetMessageEditData proto.InternalMessageInfo

func (m *TLMessagesGetMessageEditData) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetMessageEditData) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetMessageEditData) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type TLMessagesEditMessage struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	NoWebpage            bool               `protobuf:"varint,3,opt,name=no_webpage,json=noWebpage,proto3" json:"no_webpage,omitempty"`
	Peer                 *InputPeer         `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   int32              `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	Message              *types.StringValue `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	Media                *InputMedia        `protobuf:"bytes,7,opt,name=media,proto3" json:"media,omitempty"`
	ReplyMarkup          *ReplyMarkup       `protobuf:"bytes,8,opt,name=reply_markup,json=replyMarkup,proto3" json:"reply_markup,omitempty"`
	Entities             []*MessageEntity   `protobuf:"bytes,9,rep,name=entities,proto3" json:"entities,omitempty"`
	ScheduleDate         *types.Int32Value  `protobuf:"bytes,10,opt,name=schedule_date,json=scheduleDate,proto3" json:"schedule_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesEditMessage) Reset()         { *m = TLMessagesEditMessage{} }
func (m *TLMessagesEditMessage) String() string { return proto.CompactTextString(m) }
func (*TLMessagesEditMessage) ProtoMessage()    {}
func (*TLMessagesEditMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{179}
}
func (m *TLMessagesEditMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesEditMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesEditMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesEditMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesEditMessage.Merge(m, src)
}
func (m *TLMessagesEditMessage) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesEditMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesEditMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesEditMessage proto.InternalMessageInfo

func (m *TLMessagesEditMessage) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesEditMessage) GetNoWebpage() bool {
	if m != nil {
		return m.NoWebpage
	}
	return false
}

func (m *TLMessagesEditMessage) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesEditMessage) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLMessagesEditMessage) GetMessage() *types.StringValue {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *TLMessagesEditMessage) GetMedia() *InputMedia {
	if m != nil {
		return m.Media
	}
	return nil
}

func (m *TLMessagesEditMessage) GetReplyMarkup() *ReplyMarkup {
	if m != nil {
		return m.ReplyMarkup
	}
	return nil
}

func (m *TLMessagesEditMessage) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *TLMessagesEditMessage) GetScheduleDate() *types.Int32Value {
	if m != nil {
		return m.ScheduleDate
	}
	return nil
}

type TLMessagesEditInlineBotMessage struct {
	Constructor          TLConstructor            `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	NoWebpage            bool                     `protobuf:"varint,3,opt,name=no_webpage,json=noWebpage,proto3" json:"no_webpage,omitempty"`
	Id                   *InputBotInlineMessageID `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Message              *types.StringValue       `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Media                *InputMedia              `protobuf:"bytes,6,opt,name=media,proto3" json:"media,omitempty"`
	ReplyMarkup          *ReplyMarkup             `protobuf:"bytes,7,opt,name=reply_markup,json=replyMarkup,proto3" json:"reply_markup,omitempty"`
	Entities             []*MessageEntity         `protobuf:"bytes,8,rep,name=entities,proto3" json:"entities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TLMessagesEditInlineBotMessage) Reset()         { *m = TLMessagesEditInlineBotMessage{} }
func (m *TLMessagesEditInlineBotMessage) String() string { return proto.CompactTextString(m) }
func (*TLMessagesEditInlineBotMessage) ProtoMessage()    {}
func (*TLMessagesEditInlineBotMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{180}
}
func (m *TLMessagesEditInlineBotMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesEditInlineBotMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesEditInlineBotMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesEditInlineBotMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesEditInlineBotMessage.Merge(m, src)
}
func (m *TLMessagesEditInlineBotMessage) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesEditInlineBotMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesEditInlineBotMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesEditInlineBotMessage proto.InternalMessageInfo

func (m *TLMessagesEditInlineBotMessage) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesEditInlineBotMessage) GetNoWebpage() bool {
	if m != nil {
		return m.NoWebpage
	}
	return false
}

func (m *TLMessagesEditInlineBotMessage) GetId() *InputBotInlineMessageID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesEditInlineBotMessage) GetMessage() *types.StringValue {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *TLMessagesEditInlineBotMessage) GetMedia() *InputMedia {
	if m != nil {
		return m.Media
	}
	return nil
}

func (m *TLMessagesEditInlineBotMessage) GetReplyMarkup() *ReplyMarkup {
	if m != nil {
		return m.ReplyMarkup
	}
	return nil
}

func (m *TLMessagesEditInlineBotMessage) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

type TLMessagesGetBotCallbackAnswer struct {
	Constructor          TLConstructor          `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Game                 bool                   `protobuf:"varint,3,opt,name=game,proto3" json:"game,omitempty"`
	Peer                 *InputPeer             `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32                  `protobuf:"varint,5,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	Data                 []byte                 `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	Password             *InputCheckPasswordSRP `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TLMessagesGetBotCallbackAnswer) Reset()         { *m = TLMessagesGetBotCallbackAnswer{} }
func (m *TLMessagesGetBotCallbackAnswer) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetBotCallbackAnswer) ProtoMessage()    {}
func (*TLMessagesGetBotCallbackAnswer) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{181}
}
func (m *TLMessagesGetBotCallbackAnswer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetBotCallbackAnswer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetBotCallbackAnswer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetBotCallbackAnswer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetBotCallbackAnswer.Merge(m, src)
}
func (m *TLMessagesGetBotCallbackAnswer) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetBotCallbackAnswer) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetBotCallbackAnswer.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetBotCallbackAnswer proto.InternalMessageInfo

func (m *TLMessagesGetBotCallbackAnswer) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetBotCallbackAnswer) GetGame() bool {
	if m != nil {
		return m.Game
	}
	return false
}

func (m *TLMessagesGetBotCallbackAnswer) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetBotCallbackAnswer) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLMessagesGetBotCallbackAnswer) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TLMessagesGetBotCallbackAnswer) GetPassword() *InputCheckPasswordSRP {
	if m != nil {
		return m.Password
	}
	return nil
}

type TLMessagesSetBotCallbackAnswer struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Alert                bool               `protobuf:"varint,3,opt,name=alert,proto3" json:"alert,omitempty"`
	QueryId              int64              `protobuf:"varint,4,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Message              *types.StringValue `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Url                  *types.StringValue `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	CacheTime            int32              `protobuf:"varint,7,opt,name=cache_time,json=cacheTime,proto3" json:"cache_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesSetBotCallbackAnswer) Reset()         { *m = TLMessagesSetBotCallbackAnswer{} }
func (m *TLMessagesSetBotCallbackAnswer) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetBotCallbackAnswer) ProtoMessage()    {}
func (*TLMessagesSetBotCallbackAnswer) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{182}
}
func (m *TLMessagesSetBotCallbackAnswer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetBotCallbackAnswer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetBotCallbackAnswer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSetBotCallbackAnswer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetBotCallbackAnswer.Merge(m, src)
}
func (m *TLMessagesSetBotCallbackAnswer) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetBotCallbackAnswer) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetBotCallbackAnswer.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetBotCallbackAnswer proto.InternalMessageInfo

func (m *TLMessagesSetBotCallbackAnswer) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSetBotCallbackAnswer) GetAlert() bool {
	if m != nil {
		return m.Alert
	}
	return false
}

func (m *TLMessagesSetBotCallbackAnswer) GetQueryId() int64 {
	if m != nil {
		return m.QueryId
	}
	return 0
}

func (m *TLMessagesSetBotCallbackAnswer) GetMessage() *types.StringValue {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *TLMessagesSetBotCallbackAnswer) GetUrl() *types.StringValue {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *TLMessagesSetBotCallbackAnswer) GetCacheTime() int32 {
	if m != nil {
		return m.CacheTime
	}
	return 0
}

type TLMessagesGetPeerDialogs struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peers                []*InputDialogPeer `protobuf:"bytes,3,rep,name=peers,proto3" json:"peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesGetPeerDialogs) Reset()         { *m = TLMessagesGetPeerDialogs{} }
func (m *TLMessagesGetPeerDialogs) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetPeerDialogs) ProtoMessage()    {}
func (*TLMessagesGetPeerDialogs) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{183}
}
func (m *TLMessagesGetPeerDialogs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetPeerDialogs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetPeerDialogs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetPeerDialogs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetPeerDialogs.Merge(m, src)
}
func (m *TLMessagesGetPeerDialogs) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetPeerDialogs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetPeerDialogs.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetPeerDialogs proto.InternalMessageInfo

func (m *TLMessagesGetPeerDialogs) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetPeerDialogs) GetPeers() []*InputDialogPeer {
	if m != nil {
		return m.Peers
	}
	return nil
}

type TLMessagesSaveDraft struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	NoWebpage            bool              `protobuf:"varint,3,opt,name=no_webpage,json=noWebpage,proto3" json:"no_webpage,omitempty"`
	ReplyToMsgId         *types.Int32Value `protobuf:"bytes,4,opt,name=reply_to_msg_id,json=replyToMsgId,proto3" json:"reply_to_msg_id,omitempty"`
	Peer                 *InputPeer        `protobuf:"bytes,5,opt,name=peer,proto3" json:"peer,omitempty"`
	Message              string            `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	Entities             []*MessageEntity  `protobuf:"bytes,7,rep,name=entities,proto3" json:"entities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLMessagesSaveDraft) Reset()         { *m = TLMessagesSaveDraft{} }
func (m *TLMessagesSaveDraft) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSaveDraft) ProtoMessage()    {}
func (*TLMessagesSaveDraft) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{184}
}
func (m *TLMessagesSaveDraft) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSaveDraft) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSaveDraft.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSaveDraft) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSaveDraft.Merge(m, src)
}
func (m *TLMessagesSaveDraft) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSaveDraft) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSaveDraft.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSaveDraft proto.InternalMessageInfo

func (m *TLMessagesSaveDraft) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSaveDraft) GetNoWebpage() bool {
	if m != nil {
		return m.NoWebpage
	}
	return false
}

func (m *TLMessagesSaveDraft) GetReplyToMsgId() *types.Int32Value {
	if m != nil {
		return m.ReplyToMsgId
	}
	return nil
}

func (m *TLMessagesSaveDraft) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSaveDraft) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TLMessagesSaveDraft) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

type TLMessagesGetAllDrafts struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetAllDrafts) Reset()         { *m = TLMessagesGetAllDrafts{} }
func (m *TLMessagesGetAllDrafts) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetAllDrafts) ProtoMessage()    {}
func (*TLMessagesGetAllDrafts) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{185}
}
func (m *TLMessagesGetAllDrafts) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetAllDrafts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetAllDrafts.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetAllDrafts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetAllDrafts.Merge(m, src)
}
func (m *TLMessagesGetAllDrafts) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetAllDrafts) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetAllDrafts.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetAllDrafts proto.InternalMessageInfo

func (m *TLMessagesGetAllDrafts) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLMessagesGetFeaturedStickers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 int64         `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetFeaturedStickers) Reset()         { *m = TLMessagesGetFeaturedStickers{} }
func (m *TLMessagesGetFeaturedStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetFeaturedStickers) ProtoMessage()    {}
func (*TLMessagesGetFeaturedStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{186}
}
func (m *TLMessagesGetFeaturedStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetFeaturedStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetFeaturedStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetFeaturedStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetFeaturedStickers.Merge(m, src)
}
func (m *TLMessagesGetFeaturedStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetFeaturedStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetFeaturedStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetFeaturedStickers proto.InternalMessageInfo

func (m *TLMessagesGetFeaturedStickers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetFeaturedStickers) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLMessagesReadFeaturedStickers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   []int64       `protobuf:"varint,3,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesReadFeaturedStickers) Reset()         { *m = TLMessagesReadFeaturedStickers{} }
func (m *TLMessagesReadFeaturedStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReadFeaturedStickers) ProtoMessage()    {}
func (*TLMessagesReadFeaturedStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{187}
}
func (m *TLMessagesReadFeaturedStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReadFeaturedStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReadFeaturedStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReadFeaturedStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReadFeaturedStickers.Merge(m, src)
}
func (m *TLMessagesReadFeaturedStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReadFeaturedStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReadFeaturedStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReadFeaturedStickers proto.InternalMessageInfo

func (m *TLMessagesReadFeaturedStickers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReadFeaturedStickers) GetId() []int64 {
	if m != nil {
		return m.Id
	}
	return nil
}

type TLMessagesGetRecentStickers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Attached             bool          `protobuf:"varint,3,opt,name=attached,proto3" json:"attached,omitempty"`
	Hash                 int64         `protobuf:"varint,4,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetRecentStickers) Reset()         { *m = TLMessagesGetRecentStickers{} }
func (m *TLMessagesGetRecentStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetRecentStickers) ProtoMessage()    {}
func (*TLMessagesGetRecentStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{188}
}
func (m *TLMessagesGetRecentStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetRecentStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetRecentStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetRecentStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetRecentStickers.Merge(m, src)
}
func (m *TLMessagesGetRecentStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetRecentStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetRecentStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetRecentStickers proto.InternalMessageInfo

func (m *TLMessagesGetRecentStickers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetRecentStickers) GetAttached() bool {
	if m != nil {
		return m.Attached
	}
	return false
}

func (m *TLMessagesGetRecentStickers) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLMessagesSaveRecentSticker struct {
	Constructor          TLConstructor  `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Attached             bool           `protobuf:"varint,3,opt,name=attached,proto3" json:"attached,omitempty"`
	Id                   *InputDocument `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Unsave               *Bool          `protobuf:"bytes,5,opt,name=unsave,proto3" json:"unsave,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TLMessagesSaveRecentSticker) Reset()         { *m = TLMessagesSaveRecentSticker{} }
func (m *TLMessagesSaveRecentSticker) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSaveRecentSticker) ProtoMessage()    {}
func (*TLMessagesSaveRecentSticker) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{189}
}
func (m *TLMessagesSaveRecentSticker) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSaveRecentSticker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSaveRecentSticker.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSaveRecentSticker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSaveRecentSticker.Merge(m, src)
}
func (m *TLMessagesSaveRecentSticker) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSaveRecentSticker) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSaveRecentSticker.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSaveRecentSticker proto.InternalMessageInfo

func (m *TLMessagesSaveRecentSticker) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSaveRecentSticker) GetAttached() bool {
	if m != nil {
		return m.Attached
	}
	return false
}

func (m *TLMessagesSaveRecentSticker) GetId() *InputDocument {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesSaveRecentSticker) GetUnsave() *Bool {
	if m != nil {
		return m.Unsave
	}
	return nil
}

type TLMessagesClearRecentStickers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Attached             bool          `protobuf:"varint,3,opt,name=attached,proto3" json:"attached,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesClearRecentStickers) Reset()         { *m = TLMessagesClearRecentStickers{} }
func (m *TLMessagesClearRecentStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesClearRecentStickers) ProtoMessage()    {}
func (*TLMessagesClearRecentStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{190}
}
func (m *TLMessagesClearRecentStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesClearRecentStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesClearRecentStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesClearRecentStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesClearRecentStickers.Merge(m, src)
}
func (m *TLMessagesClearRecentStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesClearRecentStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesClearRecentStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesClearRecentStickers proto.InternalMessageInfo

func (m *TLMessagesClearRecentStickers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesClearRecentStickers) GetAttached() bool {
	if m != nil {
		return m.Attached
	}
	return false
}

type TLMessagesGetArchivedStickers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Masks                bool          `protobuf:"varint,3,opt,name=masks,proto3" json:"masks,omitempty"`
	OffsetId             int64         `protobuf:"varint,4,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	Limit                int32         `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetArchivedStickers) Reset()         { *m = TLMessagesGetArchivedStickers{} }
func (m *TLMessagesGetArchivedStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetArchivedStickers) ProtoMessage()    {}
func (*TLMessagesGetArchivedStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{191}
}
func (m *TLMessagesGetArchivedStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetArchivedStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetArchivedStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetArchivedStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetArchivedStickers.Merge(m, src)
}
func (m *TLMessagesGetArchivedStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetArchivedStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetArchivedStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetArchivedStickers proto.InternalMessageInfo

func (m *TLMessagesGetArchivedStickers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetArchivedStickers) GetMasks() bool {
	if m != nil {
		return m.Masks
	}
	return false
}

func (m *TLMessagesGetArchivedStickers) GetOffsetId() int64 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLMessagesGetArchivedStickers) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type TLMessagesGetMaskStickers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 int64         `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetMaskStickers) Reset()         { *m = TLMessagesGetMaskStickers{} }
func (m *TLMessagesGetMaskStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetMaskStickers) ProtoMessage()    {}
func (*TLMessagesGetMaskStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{192}
}
func (m *TLMessagesGetMaskStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetMaskStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetMaskStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetMaskStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetMaskStickers.Merge(m, src)
}
func (m *TLMessagesGetMaskStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetMaskStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetMaskStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetMaskStickers proto.InternalMessageInfo

func (m *TLMessagesGetMaskStickers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetMaskStickers) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLMessagesGetAttachedStickers struct {
	Constructor          TLConstructor        `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Media                *InputStickeredMedia `protobuf:"bytes,3,opt,name=media,proto3" json:"media,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TLMessagesGetAttachedStickers) Reset()         { *m = TLMessagesGetAttachedStickers{} }
func (m *TLMessagesGetAttachedStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetAttachedStickers) ProtoMessage()    {}
func (*TLMessagesGetAttachedStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{193}
}
func (m *TLMessagesGetAttachedStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetAttachedStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetAttachedStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetAttachedStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetAttachedStickers.Merge(m, src)
}
func (m *TLMessagesGetAttachedStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetAttachedStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetAttachedStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetAttachedStickers proto.InternalMessageInfo

func (m *TLMessagesGetAttachedStickers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetAttachedStickers) GetMedia() *InputStickeredMedia {
	if m != nil {
		return m.Media
	}
	return nil
}

type TLMessagesSetGameScore struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	EditMessage          bool          `protobuf:"varint,3,opt,name=edit_message,json=editMessage,proto3" json:"edit_message,omitempty"`
	Force                bool          `protobuf:"varint,4,opt,name=force,proto3" json:"force,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,5,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   int32         `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Score                int32         `protobuf:"varint,8,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesSetGameScore) Reset()         { *m = TLMessagesSetGameScore{} }
func (m *TLMessagesSetGameScore) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetGameScore) ProtoMessage()    {}
func (*TLMessagesSetGameScore) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{194}
}
func (m *TLMessagesSetGameScore) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetGameScore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetGameScore.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSetGameScore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetGameScore.Merge(m, src)
}
func (m *TLMessagesSetGameScore) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetGameScore) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetGameScore.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetGameScore proto.InternalMessageInfo

func (m *TLMessagesSetGameScore) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSetGameScore) GetEditMessage() bool {
	if m != nil {
		return m.EditMessage
	}
	return false
}

func (m *TLMessagesSetGameScore) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func (m *TLMessagesSetGameScore) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSetGameScore) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLMessagesSetGameScore) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLMessagesSetGameScore) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

type TLMessagesSetInlineGameScore struct {
	Constructor          TLConstructor            `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	EditMessage          bool                     `protobuf:"varint,3,opt,name=edit_message,json=editMessage,proto3" json:"edit_message,omitempty"`
	Force                bool                     `protobuf:"varint,4,opt,name=force,proto3" json:"force,omitempty"`
	Id                   *InputBotInlineMessageID `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	UserId               *InputUser               `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Score                int32                    `protobuf:"varint,7,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TLMessagesSetInlineGameScore) Reset()         { *m = TLMessagesSetInlineGameScore{} }
func (m *TLMessagesSetInlineGameScore) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetInlineGameScore) ProtoMessage()    {}
func (*TLMessagesSetInlineGameScore) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{195}
}
func (m *TLMessagesSetInlineGameScore) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetInlineGameScore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetInlineGameScore.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSetInlineGameScore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetInlineGameScore.Merge(m, src)
}
func (m *TLMessagesSetInlineGameScore) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetInlineGameScore) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetInlineGameScore.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetInlineGameScore proto.InternalMessageInfo

func (m *TLMessagesSetInlineGameScore) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSetInlineGameScore) GetEditMessage() bool {
	if m != nil {
		return m.EditMessage
	}
	return false
}

func (m *TLMessagesSetInlineGameScore) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func (m *TLMessagesSetInlineGameScore) GetId() *InputBotInlineMessageID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesSetInlineGameScore) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLMessagesSetInlineGameScore) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

type TLMessagesGetGameHighScores struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   int32         `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetGameHighScores) Reset()         { *m = TLMessagesGetGameHighScores{} }
func (m *TLMessagesGetGameHighScores) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetGameHighScores) ProtoMessage()    {}
func (*TLMessagesGetGameHighScores) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{196}
}
func (m *TLMessagesGetGameHighScores) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetGameHighScores) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetGameHighScores.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetGameHighScores) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetGameHighScores.Merge(m, src)
}
func (m *TLMessagesGetGameHighScores) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetGameHighScores) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetGameHighScores.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetGameHighScores proto.InternalMessageInfo

func (m *TLMessagesGetGameHighScores) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetGameHighScores) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetGameHighScores) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLMessagesGetGameHighScores) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

type TLMessagesGetInlineGameHighScores struct {
	Constructor          TLConstructor            `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   *InputBotInlineMessageID `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	UserId               *InputUser               `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TLMessagesGetInlineGameHighScores) Reset()         { *m = TLMessagesGetInlineGameHighScores{} }
func (m *TLMessagesGetInlineGameHighScores) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetInlineGameHighScores) ProtoMessage()    {}
func (*TLMessagesGetInlineGameHighScores) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{197}
}
func (m *TLMessagesGetInlineGameHighScores) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetInlineGameHighScores) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetInlineGameHighScores.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetInlineGameHighScores) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetInlineGameHighScores.Merge(m, src)
}
func (m *TLMessagesGetInlineGameHighScores) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetInlineGameHighScores) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetInlineGameHighScores.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetInlineGameHighScores proto.InternalMessageInfo

func (m *TLMessagesGetInlineGameHighScores) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetInlineGameHighScores) GetId() *InputBotInlineMessageID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesGetInlineGameHighScores) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

type TLMessagesGetCommonChats struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MaxId                int64         `protobuf:"varint,4,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	Limit                int32         `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetCommonChats) Reset()         { *m = TLMessagesGetCommonChats{} }
func (m *TLMessagesGetCommonChats) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetCommonChats) ProtoMessage()    {}
func (*TLMessagesGetCommonChats) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{198}
}
func (m *TLMessagesGetCommonChats) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetCommonChats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetCommonChats.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetCommonChats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetCommonChats.Merge(m, src)
}
func (m *TLMessagesGetCommonChats) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetCommonChats) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetCommonChats.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetCommonChats proto.InternalMessageInfo

func (m *TLMessagesGetCommonChats) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetCommonChats) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLMessagesGetCommonChats) GetMaxId() int64 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLMessagesGetCommonChats) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type TLMessagesGetAllChats struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ExceptIds            []int64       `protobuf:"varint,3,rep,packed,name=except_ids,json=exceptIds,proto3" json:"except_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetAllChats) Reset()         { *m = TLMessagesGetAllChats{} }
func (m *TLMessagesGetAllChats) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetAllChats) ProtoMessage()    {}
func (*TLMessagesGetAllChats) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{199}
}
func (m *TLMessagesGetAllChats) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetAllChats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetAllChats.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetAllChats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetAllChats.Merge(m, src)
}
func (m *TLMessagesGetAllChats) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetAllChats) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetAllChats.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetAllChats proto.InternalMessageInfo

func (m *TLMessagesGetAllChats) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetAllChats) GetExceptIds() []int64 {
	if m != nil {
		return m.ExceptIds
	}
	return nil
}

type TLMessagesGetWebPage struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Url                  string        `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Hash                 int32         `protobuf:"varint,4,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetWebPage) Reset()         { *m = TLMessagesGetWebPage{} }
func (m *TLMessagesGetWebPage) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetWebPage) ProtoMessage()    {}
func (*TLMessagesGetWebPage) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{200}
}
func (m *TLMessagesGetWebPage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetWebPage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetWebPage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetWebPage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetWebPage.Merge(m, src)
}
func (m *TLMessagesGetWebPage) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetWebPage) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetWebPage.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetWebPage proto.InternalMessageInfo

func (m *TLMessagesGetWebPage) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetWebPage) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *TLMessagesGetWebPage) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLMessagesToggleDialogPin struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Pinned               bool             `protobuf:"varint,3,opt,name=pinned,proto3" json:"pinned,omitempty"`
	Peer                 *InputDialogPeer `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLMessagesToggleDialogPin) Reset()         { *m = TLMessagesToggleDialogPin{} }
func (m *TLMessagesToggleDialogPin) String() string { return proto.CompactTextString(m) }
func (*TLMessagesToggleDialogPin) ProtoMessage()    {}
func (*TLMessagesToggleDialogPin) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{201}
}
func (m *TLMessagesToggleDialogPin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesToggleDialogPin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesToggleDialogPin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesToggleDialogPin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesToggleDialogPin.Merge(m, src)
}
func (m *TLMessagesToggleDialogPin) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesToggleDialogPin) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesToggleDialogPin.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesToggleDialogPin proto.InternalMessageInfo

func (m *TLMessagesToggleDialogPin) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesToggleDialogPin) GetPinned() bool {
	if m != nil {
		return m.Pinned
	}
	return false
}

func (m *TLMessagesToggleDialogPin) GetPeer() *InputDialogPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type TLMessagesReorderPinnedDialogs struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Force                bool               `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	FolderId             int32              `protobuf:"varint,4,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	Order                []*InputDialogPeer `protobuf:"bytes,5,rep,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesReorderPinnedDialogs) Reset()         { *m = TLMessagesReorderPinnedDialogs{} }
func (m *TLMessagesReorderPinnedDialogs) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReorderPinnedDialogs) ProtoMessage()    {}
func (*TLMessagesReorderPinnedDialogs) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{202}
}
func (m *TLMessagesReorderPinnedDialogs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReorderPinnedDialogs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReorderPinnedDialogs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReorderPinnedDialogs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReorderPinnedDialogs.Merge(m, src)
}
func (m *TLMessagesReorderPinnedDialogs) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReorderPinnedDialogs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReorderPinnedDialogs.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReorderPinnedDialogs proto.InternalMessageInfo

func (m *TLMessagesReorderPinnedDialogs) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReorderPinnedDialogs) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func (m *TLMessagesReorderPinnedDialogs) GetFolderId() int32 {
	if m != nil {
		return m.FolderId
	}
	return 0
}

func (m *TLMessagesReorderPinnedDialogs) GetOrder() []*InputDialogPeer {
	if m != nil {
		return m.Order
	}
	return nil
}

type TLMessagesGetPinnedDialogs struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FolderId             int32         `protobuf:"varint,3,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetPinnedDialogs) Reset()         { *m = TLMessagesGetPinnedDialogs{} }
func (m *TLMessagesGetPinnedDialogs) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetPinnedDialogs) ProtoMessage()    {}
func (*TLMessagesGetPinnedDialogs) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{203}
}
func (m *TLMessagesGetPinnedDialogs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetPinnedDialogs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetPinnedDialogs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetPinnedDialogs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetPinnedDialogs.Merge(m, src)
}
func (m *TLMessagesGetPinnedDialogs) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetPinnedDialogs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetPinnedDialogs.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetPinnedDialogs proto.InternalMessageInfo

func (m *TLMessagesGetPinnedDialogs) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetPinnedDialogs) GetFolderId() int32 {
	if m != nil {
		return m.FolderId
	}
	return 0
}

type TLMessagesSetBotShippingResults struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	QueryId              int64              `protobuf:"varint,3,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Error                *types.StringValue `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	ShippingOptions      []*ShippingOption  `protobuf:"bytes,5,rep,name=shipping_options,json=shippingOptions,proto3" json:"shipping_options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesSetBotShippingResults) Reset()         { *m = TLMessagesSetBotShippingResults{} }
func (m *TLMessagesSetBotShippingResults) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetBotShippingResults) ProtoMessage()    {}
func (*TLMessagesSetBotShippingResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{204}
}
func (m *TLMessagesSetBotShippingResults) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetBotShippingResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetBotShippingResults.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSetBotShippingResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetBotShippingResults.Merge(m, src)
}
func (m *TLMessagesSetBotShippingResults) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetBotShippingResults) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetBotShippingResults.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetBotShippingResults proto.InternalMessageInfo

func (m *TLMessagesSetBotShippingResults) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSetBotShippingResults) GetQueryId() int64 {
	if m != nil {
		return m.QueryId
	}
	return 0
}

func (m *TLMessagesSetBotShippingResults) GetError() *types.StringValue {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *TLMessagesSetBotShippingResults) GetShippingOptions() []*ShippingOption {
	if m != nil {
		return m.ShippingOptions
	}
	return nil
}

type TLMessagesSetBotPrecheckoutResults struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Success              bool               `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	QueryId              int64              `protobuf:"varint,4,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Error                *types.StringValue `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesSetBotPrecheckoutResults) Reset()         { *m = TLMessagesSetBotPrecheckoutResults{} }
func (m *TLMessagesSetBotPrecheckoutResults) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetBotPrecheckoutResults) ProtoMessage()    {}
func (*TLMessagesSetBotPrecheckoutResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{205}
}
func (m *TLMessagesSetBotPrecheckoutResults) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetBotPrecheckoutResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetBotPrecheckoutResults.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSetBotPrecheckoutResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetBotPrecheckoutResults.Merge(m, src)
}
func (m *TLMessagesSetBotPrecheckoutResults) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetBotPrecheckoutResults) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetBotPrecheckoutResults.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetBotPrecheckoutResults proto.InternalMessageInfo

func (m *TLMessagesSetBotPrecheckoutResults) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSetBotPrecheckoutResults) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *TLMessagesSetBotPrecheckoutResults) GetQueryId() int64 {
	if m != nil {
		return m.QueryId
	}
	return 0
}

func (m *TLMessagesSetBotPrecheckoutResults) GetError() *types.StringValue {
	if m != nil {
		return m.Error
	}
	return nil
}

type TLMessagesUploadMedia struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Media                *InputMedia   `protobuf:"bytes,4,opt,name=media,proto3" json:"media,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesUploadMedia) Reset()         { *m = TLMessagesUploadMedia{} }
func (m *TLMessagesUploadMedia) String() string { return proto.CompactTextString(m) }
func (*TLMessagesUploadMedia) ProtoMessage()    {}
func (*TLMessagesUploadMedia) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{206}
}
func (m *TLMessagesUploadMedia) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesUploadMedia) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesUploadMedia.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesUploadMedia) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesUploadMedia.Merge(m, src)
}
func (m *TLMessagesUploadMedia) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesUploadMedia) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesUploadMedia.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesUploadMedia proto.InternalMessageInfo

func (m *TLMessagesUploadMedia) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesUploadMedia) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesUploadMedia) GetMedia() *InputMedia {
	if m != nil {
		return m.Media
	}
	return nil
}

type TLMessagesSendScreenshotNotification struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	ReplyToMsgId         int32         `protobuf:"varint,4,opt,name=reply_to_msg_id,json=replyToMsgId,proto3" json:"reply_to_msg_id,omitempty"`
	RandomId             int64         `protobuf:"varint,5,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesSendScreenshotNotification) Reset()         { *m = TLMessagesSendScreenshotNotification{} }
func (m *TLMessagesSendScreenshotNotification) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendScreenshotNotification) ProtoMessage()    {}
func (*TLMessagesSendScreenshotNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{207}
}
func (m *TLMessagesSendScreenshotNotification) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendScreenshotNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendScreenshotNotification.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSendScreenshotNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendScreenshotNotification.Merge(m, src)
}
func (m *TLMessagesSendScreenshotNotification) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendScreenshotNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendScreenshotNotification.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendScreenshotNotification proto.InternalMessageInfo

func (m *TLMessagesSendScreenshotNotification) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSendScreenshotNotification) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendScreenshotNotification) GetReplyToMsgId() int32 {
	if m != nil {
		return m.ReplyToMsgId
	}
	return 0
}

func (m *TLMessagesSendScreenshotNotification) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

type TLMessagesGetFavedStickers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 int64         `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetFavedStickers) Reset()         { *m = TLMessagesGetFavedStickers{} }
func (m *TLMessagesGetFavedStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetFavedStickers) ProtoMessage()    {}
func (*TLMessagesGetFavedStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{208}
}
func (m *TLMessagesGetFavedStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetFavedStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetFavedStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetFavedStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetFavedStickers.Merge(m, src)
}
func (m *TLMessagesGetFavedStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetFavedStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetFavedStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetFavedStickers proto.InternalMessageInfo

func (m *TLMessagesGetFavedStickers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetFavedStickers) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLMessagesFaveSticker struct {
	Constructor          TLConstructor  `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   *InputDocument `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Unfave               *Bool          `protobuf:"bytes,4,opt,name=unfave,proto3" json:"unfave,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TLMessagesFaveSticker) Reset()         { *m = TLMessagesFaveSticker{} }
func (m *TLMessagesFaveSticker) String() string { return proto.CompactTextString(m) }
func (*TLMessagesFaveSticker) ProtoMessage()    {}
func (*TLMessagesFaveSticker) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{209}
}
func (m *TLMessagesFaveSticker) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesFaveSticker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesFaveSticker.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesFaveSticker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesFaveSticker.Merge(m, src)
}
func (m *TLMessagesFaveSticker) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesFaveSticker) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesFaveSticker.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesFaveSticker proto.InternalMessageInfo

func (m *TLMessagesFaveSticker) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesFaveSticker) GetId() *InputDocument {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesFaveSticker) GetUnfave() *Bool {
	if m != nil {
		return m.Unfave
	}
	return nil
}

type TLMessagesGetUnreadMentions struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	OffsetId             int32         `protobuf:"varint,4,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	AddOffset            int32         `protobuf:"varint,5,opt,name=add_offset,json=addOffset,proto3" json:"add_offset,omitempty"`
	Limit                int32         `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	MaxId                int32         `protobuf:"varint,7,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	MinId                int32         `protobuf:"varint,8,opt,name=min_id,json=minId,proto3" json:"min_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetUnreadMentions) Reset()         { *m = TLMessagesGetUnreadMentions{} }
func (m *TLMessagesGetUnreadMentions) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetUnreadMentions) ProtoMessage()    {}
func (*TLMessagesGetUnreadMentions) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{210}
}
func (m *TLMessagesGetUnreadMentions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetUnreadMentions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetUnreadMentions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetUnreadMentions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetUnreadMentions.Merge(m, src)
}
func (m *TLMessagesGetUnreadMentions) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetUnreadMentions) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetUnreadMentions.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetUnreadMentions proto.InternalMessageInfo

func (m *TLMessagesGetUnreadMentions) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetUnreadMentions) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetUnreadMentions) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLMessagesGetUnreadMentions) GetAddOffset() int32 {
	if m != nil {
		return m.AddOffset
	}
	return 0
}

func (m *TLMessagesGetUnreadMentions) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLMessagesGetUnreadMentions) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLMessagesGetUnreadMentions) GetMinId() int32 {
	if m != nil {
		return m.MinId
	}
	return 0
}

type TLMessagesReadMentions struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesReadMentions) Reset()         { *m = TLMessagesReadMentions{} }
func (m *TLMessagesReadMentions) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReadMentions) ProtoMessage()    {}
func (*TLMessagesReadMentions) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{211}
}
func (m *TLMessagesReadMentions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReadMentions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReadMentions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReadMentions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReadMentions.Merge(m, src)
}
func (m *TLMessagesReadMentions) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReadMentions) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReadMentions.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReadMentions proto.InternalMessageInfo

func (m *TLMessagesReadMentions) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReadMentions) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type TLMessagesGetRecentLocations struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Limit                int32         `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Hash                 int64         `protobuf:"varint,5,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetRecentLocations) Reset()         { *m = TLMessagesGetRecentLocations{} }
func (m *TLMessagesGetRecentLocations) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetRecentLocations) ProtoMessage()    {}
func (*TLMessagesGetRecentLocations) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{212}
}
func (m *TLMessagesGetRecentLocations) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetRecentLocations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetRecentLocations.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetRecentLocations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetRecentLocations.Merge(m, src)
}
func (m *TLMessagesGetRecentLocations) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetRecentLocations) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetRecentLocations.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetRecentLocations proto.InternalMessageInfo

func (m *TLMessagesGetRecentLocations) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetRecentLocations) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetRecentLocations) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLMessagesGetRecentLocations) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLMessagesSendMultiMedia struct {
	Constructor          TLConstructor       `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Silent               bool                `protobuf:"varint,3,opt,name=silent,proto3" json:"silent,omitempty"`
	Background           bool                `protobuf:"varint,4,opt,name=background,proto3" json:"background,omitempty"`
	ClearDraft           bool                `protobuf:"varint,5,opt,name=clear_draft,json=clearDraft,proto3" json:"clear_draft,omitempty"`
	Noforwards           bool                `protobuf:"varint,6,opt,name=noforwards,proto3" json:"noforwards,omitempty"`
	Peer                 *InputPeer          `protobuf:"bytes,7,opt,name=peer,proto3" json:"peer,omitempty"`
	ReplyToMsgId         *types.Int32Value   `protobuf:"bytes,8,opt,name=reply_to_msg_id,json=replyToMsgId,proto3" json:"reply_to_msg_id,omitempty"`
	MultiMedia           []*InputSingleMedia `protobuf:"bytes,9,rep,name=multi_media,json=multiMedia,proto3" json:"multi_media,omitempty"`
	ScheduleDate         *types.Int32Value   `protobuf:"bytes,10,opt,name=schedule_date,json=scheduleDate,proto3" json:"schedule_date,omitempty"`
	SendAs               *InputPeer          `protobuf:"bytes,11,opt,name=send_as,json=sendAs,proto3" json:"send_as,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesSendMultiMedia) Reset()         { *m = TLMessagesSendMultiMedia{} }
func (m *TLMessagesSendMultiMedia) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendMultiMedia) ProtoMessage()    {}
func (*TLMessagesSendMultiMedia) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{213}
}
func (m *TLMessagesSendMultiMedia) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendMultiMedia) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendMultiMedia.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSendMultiMedia) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendMultiMedia.Merge(m, src)
}
func (m *TLMessagesSendMultiMedia) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendMultiMedia) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendMultiMedia.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendMultiMedia proto.InternalMessageInfo

func (m *TLMessagesSendMultiMedia) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSendMultiMedia) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

func (m *TLMessagesSendMultiMedia) GetBackground() bool {
	if m != nil {
		return m.Background
	}
	return false
}

func (m *TLMessagesSendMultiMedia) GetClearDraft() bool {
	if m != nil {
		return m.ClearDraft
	}
	return false
}

func (m *TLMessagesSendMultiMedia) GetNoforwards() bool {
	if m != nil {
		return m.Noforwards
	}
	return false
}

func (m *TLMessagesSendMultiMedia) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendMultiMedia) GetReplyToMsgId() *types.Int32Value {
	if m != nil {
		return m.ReplyToMsgId
	}
	return nil
}

func (m *TLMessagesSendMultiMedia) GetMultiMedia() []*InputSingleMedia {
	if m != nil {
		return m.MultiMedia
	}
	return nil
}

func (m *TLMessagesSendMultiMedia) GetScheduleDate() *types.Int32Value {
	if m != nil {
		return m.ScheduleDate
	}
	return nil
}

func (m *TLMessagesSendMultiMedia) GetSendAs() *InputPeer {
	if m != nil {
		return m.SendAs
	}
	return nil
}

type TLMessagesUploadEncryptedFile struct {
	Constructor          TLConstructor       `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputEncryptedChat `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	File                 *InputEncryptedFile `protobuf:"bytes,4,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesUploadEncryptedFile) Reset()         { *m = TLMessagesUploadEncryptedFile{} }
func (m *TLMessagesUploadEncryptedFile) String() string { return proto.CompactTextString(m) }
func (*TLMessagesUploadEncryptedFile) ProtoMessage()    {}
func (*TLMessagesUploadEncryptedFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{214}
}
func (m *TLMessagesUploadEncryptedFile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesUploadEncryptedFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesUploadEncryptedFile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesUploadEncryptedFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesUploadEncryptedFile.Merge(m, src)
}
func (m *TLMessagesUploadEncryptedFile) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesUploadEncryptedFile) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesUploadEncryptedFile.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesUploadEncryptedFile proto.InternalMessageInfo

func (m *TLMessagesUploadEncryptedFile) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesUploadEncryptedFile) GetPeer() *InputEncryptedChat {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesUploadEncryptedFile) GetFile() *InputEncryptedFile {
	if m != nil {
		return m.File
	}
	return nil
}

type TLMessagesSearchStickerSets struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ExcludeFeatured      bool          `protobuf:"varint,3,opt,name=exclude_featured,json=excludeFeatured,proto3" json:"exclude_featured,omitempty"`
	Q                    string        `protobuf:"bytes,4,opt,name=q,proto3" json:"q,omitempty"`
	Hash                 int64         `protobuf:"varint,5,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesSearchStickerSets) Reset()         { *m = TLMessagesSearchStickerSets{} }
func (m *TLMessagesSearchStickerSets) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSearchStickerSets) ProtoMessage()    {}
func (*TLMessagesSearchStickerSets) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{215}
}
func (m *TLMessagesSearchStickerSets) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSearchStickerSets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSearchStickerSets.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSearchStickerSets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSearchStickerSets.Merge(m, src)
}
func (m *TLMessagesSearchStickerSets) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSearchStickerSets) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSearchStickerSets.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSearchStickerSets proto.InternalMessageInfo

func (m *TLMessagesSearchStickerSets) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSearchStickerSets) GetExcludeFeatured() bool {
	if m != nil {
		return m.ExcludeFeatured
	}
	return false
}

func (m *TLMessagesSearchStickerSets) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *TLMessagesSearchStickerSets) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLMessagesGetSplitRanges struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetSplitRanges) Reset()         { *m = TLMessagesGetSplitRanges{} }
func (m *TLMessagesGetSplitRanges) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetSplitRanges) ProtoMessage()    {}
func (*TLMessagesGetSplitRanges) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{216}
}
func (m *TLMessagesGetSplitRanges) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetSplitRanges) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetSplitRanges.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetSplitRanges) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetSplitRanges.Merge(m, src)
}
func (m *TLMessagesGetSplitRanges) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetSplitRanges) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetSplitRanges.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetSplitRanges proto.InternalMessageInfo

func (m *TLMessagesGetSplitRanges) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLMessagesMarkDialogUnread struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Unread               bool             `protobuf:"varint,3,opt,name=unread,proto3" json:"unread,omitempty"`
	Peer                 *InputDialogPeer `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLMessagesMarkDialogUnread) Reset()         { *m = TLMessagesMarkDialogUnread{} }
func (m *TLMessagesMarkDialogUnread) String() string { return proto.CompactTextString(m) }
func (*TLMessagesMarkDialogUnread) ProtoMessage()    {}
func (*TLMessagesMarkDialogUnread) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{217}
}
func (m *TLMessagesMarkDialogUnread) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesMarkDialogUnread) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesMarkDialogUnread.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesMarkDialogUnread) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesMarkDialogUnread.Merge(m, src)
}
func (m *TLMessagesMarkDialogUnread) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesMarkDialogUnread) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesMarkDialogUnread.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesMarkDialogUnread proto.InternalMessageInfo

func (m *TLMessagesMarkDialogUnread) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesMarkDialogUnread) GetUnread() bool {
	if m != nil {
		return m.Unread
	}
	return false
}

func (m *TLMessagesMarkDialogUnread) GetPeer() *InputDialogPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type TLMessagesGetDialogUnreadMarks struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetDialogUnreadMarks) Reset()         { *m = TLMessagesGetDialogUnreadMarks{} }
func (m *TLMessagesGetDialogUnreadMarks) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetDialogUnreadMarks) ProtoMessage()    {}
func (*TLMessagesGetDialogUnreadMarks) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{218}
}
func (m *TLMessagesGetDialogUnreadMarks) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetDialogUnreadMarks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetDialogUnreadMarks.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetDialogUnreadMarks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetDialogUnreadMarks.Merge(m, src)
}
func (m *TLMessagesGetDialogUnreadMarks) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetDialogUnreadMarks) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetDialogUnreadMarks.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetDialogUnreadMarks proto.InternalMessageInfo

func (m *TLMessagesGetDialogUnreadMarks) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLMessagesClearAllDrafts struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesClearAllDrafts) Reset()         { *m = TLMessagesClearAllDrafts{} }
func (m *TLMessagesClearAllDrafts) String() string { return proto.CompactTextString(m) }
func (*TLMessagesClearAllDrafts) ProtoMessage()    {}
func (*TLMessagesClearAllDrafts) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{219}
}
func (m *TLMessagesClearAllDrafts) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesClearAllDrafts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesClearAllDrafts.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesClearAllDrafts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesClearAllDrafts.Merge(m, src)
}
func (m *TLMessagesClearAllDrafts) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesClearAllDrafts) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesClearAllDrafts.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesClearAllDrafts proto.InternalMessageInfo

func (m *TLMessagesClearAllDrafts) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLMessagesUpdatePinnedMessage struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Silent               bool          `protobuf:"varint,3,opt,name=silent,proto3" json:"silent,omitempty"`
	Unpin                bool          `protobuf:"varint,4,opt,name=unpin,proto3" json:"unpin,omitempty"`
	PmOneside            bool          `protobuf:"varint,5,opt,name=pm_oneside,json=pmOneside,proto3" json:"pm_oneside,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,6,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   int32         `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesUpdatePinnedMessage) Reset()         { *m = TLMessagesUpdatePinnedMessage{} }
func (m *TLMessagesUpdatePinnedMessage) String() string { return proto.CompactTextString(m) }
func (*TLMessagesUpdatePinnedMessage) ProtoMessage()    {}
func (*TLMessagesUpdatePinnedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{220}
}
func (m *TLMessagesUpdatePinnedMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesUpdatePinnedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesUpdatePinnedMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesUpdatePinnedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesUpdatePinnedMessage.Merge(m, src)
}
func (m *TLMessagesUpdatePinnedMessage) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesUpdatePinnedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesUpdatePinnedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesUpdatePinnedMessage proto.InternalMessageInfo

func (m *TLMessagesUpdatePinnedMessage) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesUpdatePinnedMessage) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

func (m *TLMessagesUpdatePinnedMessage) GetUnpin() bool {
	if m != nil {
		return m.Unpin
	}
	return false
}

func (m *TLMessagesUpdatePinnedMessage) GetPmOneside() bool {
	if m != nil {
		return m.PmOneside
	}
	return false
}

func (m *TLMessagesUpdatePinnedMessage) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesUpdatePinnedMessage) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type TLMessagesSendVote struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32         `protobuf:"varint,4,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	Options              [][]byte      `protobuf:"bytes,5,rep,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesSendVote) Reset()         { *m = TLMessagesSendVote{} }
func (m *TLMessagesSendVote) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendVote) ProtoMessage()    {}
func (*TLMessagesSendVote) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{221}
}
func (m *TLMessagesSendVote) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendVote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendVote.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSendVote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendVote.Merge(m, src)
}
func (m *TLMessagesSendVote) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendVote) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendVote.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendVote proto.InternalMessageInfo

func (m *TLMessagesSendVote) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSendVote) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendVote) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLMessagesSendVote) GetOptions() [][]byte {
	if m != nil {
		return m.Options
	}
	return nil
}

type TLMessagesGetPollResults struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32         `protobuf:"varint,4,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetPollResults) Reset()         { *m = TLMessagesGetPollResults{} }
func (m *TLMessagesGetPollResults) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetPollResults) ProtoMessage()    {}
func (*TLMessagesGetPollResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{222}
}
func (m *TLMessagesGetPollResults) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetPollResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetPollResults.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetPollResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetPollResults.Merge(m, src)
}
func (m *TLMessagesGetPollResults) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetPollResults) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetPollResults.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetPollResults proto.InternalMessageInfo

func (m *TLMessagesGetPollResults) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetPollResults) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetPollResults) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

type TLMessagesGetOnlines struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetOnlines) Reset()         { *m = TLMessagesGetOnlines{} }
func (m *TLMessagesGetOnlines) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetOnlines) ProtoMessage()    {}
func (*TLMessagesGetOnlines) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{223}
}
func (m *TLMessagesGetOnlines) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetOnlines) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetOnlines.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetOnlines) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetOnlines.Merge(m, src)
}
func (m *TLMessagesGetOnlines) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetOnlines) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetOnlines.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetOnlines proto.InternalMessageInfo

func (m *TLMessagesGetOnlines) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetOnlines) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type TLMessagesEditChatAbout struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	About                string        `protobuf:"bytes,4,opt,name=about,proto3" json:"about,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesEditChatAbout) Reset()         { *m = TLMessagesEditChatAbout{} }
func (m *TLMessagesEditChatAbout) String() string { return proto.CompactTextString(m) }
func (*TLMessagesEditChatAbout) ProtoMessage()    {}
func (*TLMessagesEditChatAbout) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{224}
}
func (m *TLMessagesEditChatAbout) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesEditChatAbout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesEditChatAbout.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesEditChatAbout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesEditChatAbout.Merge(m, src)
}
func (m *TLMessagesEditChatAbout) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesEditChatAbout) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesEditChatAbout.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesEditChatAbout proto.InternalMessageInfo

func (m *TLMessagesEditChatAbout) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesEditChatAbout) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesEditChatAbout) GetAbout() string {
	if m != nil {
		return m.About
	}
	return ""
}

type TLMessagesEditChatDefaultBannedRights struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer        `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	BannedRights         *ChatBannedRights `protobuf:"bytes,4,opt,name=banned_rights,json=bannedRights,proto3" json:"banned_rights,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLMessagesEditChatDefaultBannedRights) Reset()         { *m = TLMessagesEditChatDefaultBannedRights{} }
func (m *TLMessagesEditChatDefaultBannedRights) String() string { return proto.CompactTextString(m) }
func (*TLMessagesEditChatDefaultBannedRights) ProtoMessage()    {}
func (*TLMessagesEditChatDefaultBannedRights) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{225}
}
func (m *TLMessagesEditChatDefaultBannedRights) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesEditChatDefaultBannedRights) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesEditChatDefaultBannedRights.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesEditChatDefaultBannedRights) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesEditChatDefaultBannedRights.Merge(m, src)
}
func (m *TLMessagesEditChatDefaultBannedRights) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesEditChatDefaultBannedRights) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesEditChatDefaultBannedRights.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesEditChatDefaultBannedRights proto.InternalMessageInfo

func (m *TLMessagesEditChatDefaultBannedRights) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesEditChatDefaultBannedRights) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesEditChatDefaultBannedRights) GetBannedRights() *ChatBannedRights {
	if m != nil {
		return m.BannedRights
	}
	return nil
}

type TLMessagesGetEmojiKeywords struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	LangCode             string        `protobuf:"bytes,3,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetEmojiKeywords) Reset()         { *m = TLMessagesGetEmojiKeywords{} }
func (m *TLMessagesGetEmojiKeywords) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetEmojiKeywords) ProtoMessage()    {}
func (*TLMessagesGetEmojiKeywords) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{226}
}
func (m *TLMessagesGetEmojiKeywords) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetEmojiKeywords) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetEmojiKeywords.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetEmojiKeywords) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetEmojiKeywords.Merge(m, src)
}
func (m *TLMessagesGetEmojiKeywords) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetEmojiKeywords) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetEmojiKeywords.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetEmojiKeywords proto.InternalMessageInfo

func (m *TLMessagesGetEmojiKeywords) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetEmojiKeywords) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

type TLMessagesGetEmojiKeywordsDifference struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	LangCode             string        `protobuf:"bytes,3,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	FromVersion          int32         `protobuf:"varint,4,opt,name=from_version,json=fromVersion,proto3" json:"from_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetEmojiKeywordsDifference) Reset()         { *m = TLMessagesGetEmojiKeywordsDifference{} }
func (m *TLMessagesGetEmojiKeywordsDifference) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetEmojiKeywordsDifference) ProtoMessage()    {}
func (*TLMessagesGetEmojiKeywordsDifference) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{227}
}
func (m *TLMessagesGetEmojiKeywordsDifference) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetEmojiKeywordsDifference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetEmojiKeywordsDifference.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetEmojiKeywordsDifference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetEmojiKeywordsDifference.Merge(m, src)
}
func (m *TLMessagesGetEmojiKeywordsDifference) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetEmojiKeywordsDifference) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetEmojiKeywordsDifference.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetEmojiKeywordsDifference proto.InternalMessageInfo

func (m *TLMessagesGetEmojiKeywordsDifference) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetEmojiKeywordsDifference) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

func (m *TLMessagesGetEmojiKeywordsDifference) GetFromVersion() int32 {
	if m != nil {
		return m.FromVersion
	}
	return 0
}

type TLMessagesGetEmojiKeywordsLanguages struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	LangCodes            []string      `protobuf:"bytes,3,rep,name=lang_codes,json=langCodes,proto3" json:"lang_codes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetEmojiKeywordsLanguages) Reset()         { *m = TLMessagesGetEmojiKeywordsLanguages{} }
func (m *TLMessagesGetEmojiKeywordsLanguages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetEmojiKeywordsLanguages) ProtoMessage()    {}
func (*TLMessagesGetEmojiKeywordsLanguages) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{228}
}
func (m *TLMessagesGetEmojiKeywordsLanguages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetEmojiKeywordsLanguages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetEmojiKeywordsLanguages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetEmojiKeywordsLanguages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetEmojiKeywordsLanguages.Merge(m, src)
}
func (m *TLMessagesGetEmojiKeywordsLanguages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetEmojiKeywordsLanguages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetEmojiKeywordsLanguages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetEmojiKeywordsLanguages proto.InternalMessageInfo

func (m *TLMessagesGetEmojiKeywordsLanguages) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetEmojiKeywordsLanguages) GetLangCodes() []string {
	if m != nil {
		return m.LangCodes
	}
	return nil
}

type TLMessagesGetEmojiURL struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	LangCode             string        `protobuf:"bytes,3,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetEmojiURL) Reset()         { *m = TLMessagesGetEmojiURL{} }
func (m *TLMessagesGetEmojiURL) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetEmojiURL) ProtoMessage()    {}
func (*TLMessagesGetEmojiURL) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{229}
}
func (m *TLMessagesGetEmojiURL) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetEmojiURL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetEmojiURL.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetEmojiURL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetEmojiURL.Merge(m, src)
}
func (m *TLMessagesGetEmojiURL) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetEmojiURL) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetEmojiURL.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetEmojiURL proto.InternalMessageInfo

func (m *TLMessagesGetEmojiURL) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetEmojiURL) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

type TLMessagesGetSearchCounters struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer        `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Filters              []*MessagesFilter `protobuf:"bytes,4,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLMessagesGetSearchCounters) Reset()         { *m = TLMessagesGetSearchCounters{} }
func (m *TLMessagesGetSearchCounters) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetSearchCounters) ProtoMessage()    {}
func (*TLMessagesGetSearchCounters) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{230}
}
func (m *TLMessagesGetSearchCounters) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetSearchCounters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetSearchCounters.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetSearchCounters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetSearchCounters.Merge(m, src)
}
func (m *TLMessagesGetSearchCounters) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetSearchCounters) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetSearchCounters.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetSearchCounters proto.InternalMessageInfo

func (m *TLMessagesGetSearchCounters) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetSearchCounters) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetSearchCounters) GetFilters() []*MessagesFilter {
	if m != nil {
		return m.Filters
	}
	return nil
}

type TLMessagesRequestUrlAuth struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer         `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                *types.Int32Value  `protobuf:"bytes,4,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	ButtonId             *types.Int32Value  `protobuf:"bytes,5,opt,name=button_id,json=buttonId,proto3" json:"button_id,omitempty"`
	Url                  *types.StringValue `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesRequestUrlAuth) Reset()         { *m = TLMessagesRequestUrlAuth{} }
func (m *TLMessagesRequestUrlAuth) String() string { return proto.CompactTextString(m) }
func (*TLMessagesRequestUrlAuth) ProtoMessage()    {}
func (*TLMessagesRequestUrlAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{231}
}
func (m *TLMessagesRequestUrlAuth) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesRequestUrlAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesRequestUrlAuth.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesRequestUrlAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesRequestUrlAuth.Merge(m, src)
}
func (m *TLMessagesRequestUrlAuth) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesRequestUrlAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesRequestUrlAuth.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesRequestUrlAuth proto.InternalMessageInfo

func (m *TLMessagesRequestUrlAuth) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesRequestUrlAuth) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesRequestUrlAuth) GetMsgId() *types.Int32Value {
	if m != nil {
		return m.MsgId
	}
	return nil
}

func (m *TLMessagesRequestUrlAuth) GetButtonId() *types.Int32Value {
	if m != nil {
		return m.ButtonId
	}
	return nil
}

func (m *TLMessagesRequestUrlAuth) GetUrl() *types.StringValue {
	if m != nil {
		return m.Url
	}
	return nil
}

type TLMessagesAcceptUrlAuth struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	WriteAllowed         bool               `protobuf:"varint,3,opt,name=write_allowed,json=writeAllowed,proto3" json:"write_allowed,omitempty"`
	Peer                 *InputPeer         `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                *types.Int32Value  `protobuf:"bytes,5,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	ButtonId             *types.Int32Value  `protobuf:"bytes,6,opt,name=button_id,json=buttonId,proto3" json:"button_id,omitempty"`
	Url                  *types.StringValue `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesAcceptUrlAuth) Reset()         { *m = TLMessagesAcceptUrlAuth{} }
func (m *TLMessagesAcceptUrlAuth) String() string { return proto.CompactTextString(m) }
func (*TLMessagesAcceptUrlAuth) ProtoMessage()    {}
func (*TLMessagesAcceptUrlAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{232}
}
func (m *TLMessagesAcceptUrlAuth) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesAcceptUrlAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesAcceptUrlAuth.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesAcceptUrlAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesAcceptUrlAuth.Merge(m, src)
}
func (m *TLMessagesAcceptUrlAuth) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesAcceptUrlAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesAcceptUrlAuth.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesAcceptUrlAuth proto.InternalMessageInfo

func (m *TLMessagesAcceptUrlAuth) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesAcceptUrlAuth) GetWriteAllowed() bool {
	if m != nil {
		return m.WriteAllowed
	}
	return false
}

func (m *TLMessagesAcceptUrlAuth) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesAcceptUrlAuth) GetMsgId() *types.Int32Value {
	if m != nil {
		return m.MsgId
	}
	return nil
}

func (m *TLMessagesAcceptUrlAuth) GetButtonId() *types.Int32Value {
	if m != nil {
		return m.ButtonId
	}
	return nil
}

func (m *TLMessagesAcceptUrlAuth) GetUrl() *types.StringValue {
	if m != nil {
		return m.Url
	}
	return nil
}

type TLMessagesHidePeerSettingsBar struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesHidePeerSettingsBar) Reset()         { *m = TLMessagesHidePeerSettingsBar{} }
func (m *TLMessagesHidePeerSettingsBar) String() string { return proto.CompactTextString(m) }
func (*TLMessagesHidePeerSettingsBar) ProtoMessage()    {}
func (*TLMessagesHidePeerSettingsBar) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{233}
}
func (m *TLMessagesHidePeerSettingsBar) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesHidePeerSettingsBar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesHidePeerSettingsBar.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesHidePeerSettingsBar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesHidePeerSettingsBar.Merge(m, src)
}
func (m *TLMessagesHidePeerSettingsBar) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesHidePeerSettingsBar) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesHidePeerSettingsBar.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesHidePeerSettingsBar proto.InternalMessageInfo

func (m *TLMessagesHidePeerSettingsBar) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesHidePeerSettingsBar) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type TLMessagesGetScheduledHistory struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Hash                 int64         `protobuf:"varint,4,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetScheduledHistory) Reset()         { *m = TLMessagesGetScheduledHistory{} }
func (m *TLMessagesGetScheduledHistory) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetScheduledHistory) ProtoMessage()    {}
func (*TLMessagesGetScheduledHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{234}
}
func (m *TLMessagesGetScheduledHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetScheduledHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetScheduledHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetScheduledHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetScheduledHistory.Merge(m, src)
}
func (m *TLMessagesGetScheduledHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetScheduledHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetScheduledHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetScheduledHistory proto.InternalMessageInfo

func (m *TLMessagesGetScheduledHistory) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetScheduledHistory) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetScheduledHistory) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLMessagesGetScheduledMessages struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   []int32       `protobuf:"varint,4,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetScheduledMessages) Reset()         { *m = TLMessagesGetScheduledMessages{} }
func (m *TLMessagesGetScheduledMessages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetScheduledMessages) ProtoMessage()    {}
func (*TLMessagesGetScheduledMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{235}
}
func (m *TLMessagesGetScheduledMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetScheduledMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetScheduledMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetScheduledMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetScheduledMessages.Merge(m, src)
}
func (m *TLMessagesGetScheduledMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetScheduledMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetScheduledMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetScheduledMessages proto.InternalMessageInfo

func (m *TLMessagesGetScheduledMessages) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetScheduledMessages) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetScheduledMessages) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

type TLMessagesSendScheduledMessages struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   []int32       `protobuf:"varint,4,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesSendScheduledMessages) Reset()         { *m = TLMessagesSendScheduledMessages{} }
func (m *TLMessagesSendScheduledMessages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendScheduledMessages) ProtoMessage()    {}
func (*TLMessagesSendScheduledMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{236}
}
func (m *TLMessagesSendScheduledMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendScheduledMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendScheduledMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSendScheduledMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendScheduledMessages.Merge(m, src)
}
func (m *TLMessagesSendScheduledMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendScheduledMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendScheduledMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendScheduledMessages proto.InternalMessageInfo

func (m *TLMessagesSendScheduledMessages) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSendScheduledMessages) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendScheduledMessages) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

type TLMessagesDeleteScheduledMessages struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   []int32       `protobuf:"varint,4,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesDeleteScheduledMessages) Reset()         { *m = TLMessagesDeleteScheduledMessages{} }
func (m *TLMessagesDeleteScheduledMessages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesDeleteScheduledMessages) ProtoMessage()    {}
func (*TLMessagesDeleteScheduledMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{237}
}
func (m *TLMessagesDeleteScheduledMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesDeleteScheduledMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesDeleteScheduledMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesDeleteScheduledMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesDeleteScheduledMessages.Merge(m, src)
}
func (m *TLMessagesDeleteScheduledMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesDeleteScheduledMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesDeleteScheduledMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesDeleteScheduledMessages proto.InternalMessageInfo

func (m *TLMessagesDeleteScheduledMessages) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesDeleteScheduledMessages) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesDeleteScheduledMessages) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

type TLMessagesGetPollVotes struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer         `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   int32              `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	Option               []byte             `protobuf:"bytes,5,opt,name=option,proto3" json:"option,omitempty"`
	Offset               *types.StringValue `protobuf:"bytes,6,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32              `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesGetPollVotes) Reset()         { *m = TLMessagesGetPollVotes{} }
func (m *TLMessagesGetPollVotes) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetPollVotes) ProtoMessage()    {}
func (*TLMessagesGetPollVotes) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{238}
}
func (m *TLMessagesGetPollVotes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetPollVotes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetPollVotes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetPollVotes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetPollVotes.Merge(m, src)
}
func (m *TLMessagesGetPollVotes) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetPollVotes) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetPollVotes.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetPollVotes proto.InternalMessageInfo

func (m *TLMessagesGetPollVotes) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetPollVotes) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetPollVotes) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLMessagesGetPollVotes) GetOption() []byte {
	if m != nil {
		return m.Option
	}
	return nil
}

func (m *TLMessagesGetPollVotes) GetOffset() *types.StringValue {
	if m != nil {
		return m.Offset
	}
	return nil
}

func (m *TLMessagesGetPollVotes) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type TLMessagesToggleStickerSets struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Uninstall            bool               `protobuf:"varint,3,opt,name=uninstall,proto3" json:"uninstall,omitempty"`
	Archive              bool               `protobuf:"varint,4,opt,name=archive,proto3" json:"archive,omitempty"`
	Unarchive            bool               `protobuf:"varint,5,opt,name=unarchive,proto3" json:"unarchive,omitempty"`
	Stickersets          []*InputStickerSet `protobuf:"bytes,6,rep,name=stickersets,proto3" json:"stickersets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesToggleStickerSets) Reset()         { *m = TLMessagesToggleStickerSets{} }
func (m *TLMessagesToggleStickerSets) String() string { return proto.CompactTextString(m) }
func (*TLMessagesToggleStickerSets) ProtoMessage()    {}
func (*TLMessagesToggleStickerSets) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{239}
}
func (m *TLMessagesToggleStickerSets) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesToggleStickerSets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesToggleStickerSets.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesToggleStickerSets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesToggleStickerSets.Merge(m, src)
}
func (m *TLMessagesToggleStickerSets) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesToggleStickerSets) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesToggleStickerSets.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesToggleStickerSets proto.InternalMessageInfo

func (m *TLMessagesToggleStickerSets) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesToggleStickerSets) GetUninstall() bool {
	if m != nil {
		return m.Uninstall
	}
	return false
}

func (m *TLMessagesToggleStickerSets) GetArchive() bool {
	if m != nil {
		return m.Archive
	}
	return false
}

func (m *TLMessagesToggleStickerSets) GetUnarchive() bool {
	if m != nil {
		return m.Unarchive
	}
	return false
}

func (m *TLMessagesToggleStickerSets) GetStickersets() []*InputStickerSet {
	if m != nil {
		return m.Stickersets
	}
	return nil
}

type TLMessagesGetDialogFilters struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetDialogFilters) Reset()         { *m = TLMessagesGetDialogFilters{} }
func (m *TLMessagesGetDialogFilters) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetDialogFilters) ProtoMessage()    {}
func (*TLMessagesGetDialogFilters) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{240}
}
func (m *TLMessagesGetDialogFilters) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetDialogFilters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetDialogFilters.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetDialogFilters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetDialogFilters.Merge(m, src)
}
func (m *TLMessagesGetDialogFilters) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetDialogFilters) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetDialogFilters.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetDialogFilters proto.InternalMessageInfo

func (m *TLMessagesGetDialogFilters) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLMessagesGetSuggestedDialogFilters struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetSuggestedDialogFilters) Reset()         { *m = TLMessagesGetSuggestedDialogFilters{} }
func (m *TLMessagesGetSuggestedDialogFilters) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetSuggestedDialogFilters) ProtoMessage()    {}
func (*TLMessagesGetSuggestedDialogFilters) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{241}
}
func (m *TLMessagesGetSuggestedDialogFilters) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetSuggestedDialogFilters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetSuggestedDialogFilters.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetSuggestedDialogFilters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetSuggestedDialogFilters.Merge(m, src)
}
func (m *TLMessagesGetSuggestedDialogFilters) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetSuggestedDialogFilters) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetSuggestedDialogFilters.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetSuggestedDialogFilters proto.InternalMessageInfo

func (m *TLMessagesGetSuggestedDialogFilters) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLMessagesUpdateDialogFilter struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   int32         `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Filter               *DialogFilter `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesUpdateDialogFilter) Reset()         { *m = TLMessagesUpdateDialogFilter{} }
func (m *TLMessagesUpdateDialogFilter) String() string { return proto.CompactTextString(m) }
func (*TLMessagesUpdateDialogFilter) ProtoMessage()    {}
func (*TLMessagesUpdateDialogFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{242}
}
func (m *TLMessagesUpdateDialogFilter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesUpdateDialogFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesUpdateDialogFilter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesUpdateDialogFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesUpdateDialogFilter.Merge(m, src)
}
func (m *TLMessagesUpdateDialogFilter) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesUpdateDialogFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesUpdateDialogFilter.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesUpdateDialogFilter proto.InternalMessageInfo

func (m *TLMessagesUpdateDialogFilter) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesUpdateDialogFilter) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLMessagesUpdateDialogFilter) GetFilter() *DialogFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

type TLMessagesUpdateDialogFiltersOrder struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Order                []int32       `protobuf:"varint,3,rep,packed,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesUpdateDialogFiltersOrder) Reset()         { *m = TLMessagesUpdateDialogFiltersOrder{} }
func (m *TLMessagesUpdateDialogFiltersOrder) String() string { return proto.CompactTextString(m) }
func (*TLMessagesUpdateDialogFiltersOrder) ProtoMessage()    {}
func (*TLMessagesUpdateDialogFiltersOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{243}
}
func (m *TLMessagesUpdateDialogFiltersOrder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesUpdateDialogFiltersOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesUpdateDialogFiltersOrder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesUpdateDialogFiltersOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesUpdateDialogFiltersOrder.Merge(m, src)
}
func (m *TLMessagesUpdateDialogFiltersOrder) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesUpdateDialogFiltersOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesUpdateDialogFiltersOrder.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesUpdateDialogFiltersOrder proto.InternalMessageInfo

func (m *TLMessagesUpdateDialogFiltersOrder) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesUpdateDialogFiltersOrder) GetOrder() []int32 {
	if m != nil {
		return m.Order
	}
	return nil
}

type TLMessagesGetOldFeaturedStickers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Offset               int32         `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32         `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Hash                 int64         `protobuf:"varint,5,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetOldFeaturedStickers) Reset()         { *m = TLMessagesGetOldFeaturedStickers{} }
func (m *TLMessagesGetOldFeaturedStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetOldFeaturedStickers) ProtoMessage()    {}
func (*TLMessagesGetOldFeaturedStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{244}
}
func (m *TLMessagesGetOldFeaturedStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetOldFeaturedStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetOldFeaturedStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetOldFeaturedStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetOldFeaturedStickers.Merge(m, src)
}
func (m *TLMessagesGetOldFeaturedStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetOldFeaturedStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetOldFeaturedStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetOldFeaturedStickers proto.InternalMessageInfo

func (m *TLMessagesGetOldFeaturedStickers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetOldFeaturedStickers) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLMessagesGetOldFeaturedStickers) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLMessagesGetOldFeaturedStickers) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLMessagesGetReplies struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32         `protobuf:"varint,4,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	OffsetId             int32         `protobuf:"varint,5,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	OffsetDate           int32         `protobuf:"varint,6,opt,name=offset_date,json=offsetDate,proto3" json:"offset_date,omitempty"`
	AddOffset            int32         `protobuf:"varint,7,opt,name=add_offset,json=addOffset,proto3" json:"add_offset,omitempty"`
	Limit                int32         `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
	MaxId                int32         `protobuf:"varint,9,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	MinId                int32         `protobuf:"varint,10,opt,name=min_id,json=minId,proto3" json:"min_id,omitempty"`
	Hash                 int64         `protobuf:"varint,11,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetReplies) Reset()         { *m = TLMessagesGetReplies{} }
func (m *TLMessagesGetReplies) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetReplies) ProtoMessage()    {}
func (*TLMessagesGetReplies) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{245}
}
func (m *TLMessagesGetReplies) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetReplies) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetReplies.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetReplies) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetReplies.Merge(m, src)
}
func (m *TLMessagesGetReplies) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetReplies) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetReplies.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetReplies proto.InternalMessageInfo

func (m *TLMessagesGetReplies) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetReplies) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetReplies) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLMessagesGetReplies) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLMessagesGetReplies) GetOffsetDate() int32 {
	if m != nil {
		return m.OffsetDate
	}
	return 0
}

func (m *TLMessagesGetReplies) GetAddOffset() int32 {
	if m != nil {
		return m.AddOffset
	}
	return 0
}

func (m *TLMessagesGetReplies) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLMessagesGetReplies) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLMessagesGetReplies) GetMinId() int32 {
	if m != nil {
		return m.MinId
	}
	return 0
}

func (m *TLMessagesGetReplies) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLMessagesGetDiscussionMessage struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32         `protobuf:"varint,4,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetDiscussionMessage) Reset()         { *m = TLMessagesGetDiscussionMessage{} }
func (m *TLMessagesGetDiscussionMessage) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetDiscussionMessage) ProtoMessage()    {}
func (*TLMessagesGetDiscussionMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{246}
}
func (m *TLMessagesGetDiscussionMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetDiscussionMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetDiscussionMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetDiscussionMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetDiscussionMessage.Merge(m, src)
}
func (m *TLMessagesGetDiscussionMessage) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetDiscussionMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetDiscussionMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetDiscussionMessage proto.InternalMessageInfo

func (m *TLMessagesGetDiscussionMessage) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetDiscussionMessage) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetDiscussionMessage) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

type TLMessagesReadDiscussion struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32         `protobuf:"varint,4,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	ReadMaxId            int32         `protobuf:"varint,5,opt,name=read_max_id,json=readMaxId,proto3" json:"read_max_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesReadDiscussion) Reset()         { *m = TLMessagesReadDiscussion{} }
func (m *TLMessagesReadDiscussion) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReadDiscussion) ProtoMessage()    {}
func (*TLMessagesReadDiscussion) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{247}
}
func (m *TLMessagesReadDiscussion) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReadDiscussion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReadDiscussion.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReadDiscussion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReadDiscussion.Merge(m, src)
}
func (m *TLMessagesReadDiscussion) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReadDiscussion) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReadDiscussion.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReadDiscussion proto.InternalMessageInfo

func (m *TLMessagesReadDiscussion) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReadDiscussion) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesReadDiscussion) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLMessagesReadDiscussion) GetReadMaxId() int32 {
	if m != nil {
		return m.ReadMaxId
	}
	return 0
}

type TLMessagesUnpinAllMessages struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesUnpinAllMessages) Reset()         { *m = TLMessagesUnpinAllMessages{} }
func (m *TLMessagesUnpinAllMessages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesUnpinAllMessages) ProtoMessage()    {}
func (*TLMessagesUnpinAllMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{248}
}
func (m *TLMessagesUnpinAllMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesUnpinAllMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesUnpinAllMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesUnpinAllMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesUnpinAllMessages.Merge(m, src)
}
func (m *TLMessagesUnpinAllMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesUnpinAllMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesUnpinAllMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesUnpinAllMessages proto.InternalMessageInfo

func (m *TLMessagesUnpinAllMessages) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesUnpinAllMessages) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type TLMessagesDeleteChat struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ChatId               int64         `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesDeleteChat) Reset()         { *m = TLMessagesDeleteChat{} }
func (m *TLMessagesDeleteChat) String() string { return proto.CompactTextString(m) }
func (*TLMessagesDeleteChat) ProtoMessage()    {}
func (*TLMessagesDeleteChat) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{249}
}
func (m *TLMessagesDeleteChat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesDeleteChat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesDeleteChat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesDeleteChat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesDeleteChat.Merge(m, src)
}
func (m *TLMessagesDeleteChat) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesDeleteChat) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesDeleteChat.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesDeleteChat proto.InternalMessageInfo

func (m *TLMessagesDeleteChat) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesDeleteChat) GetChatId() int64 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

type TLMessagesDeletePhoneCallHistory struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Revoke               bool          `protobuf:"varint,3,opt,name=revoke,proto3" json:"revoke,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesDeletePhoneCallHistory) Reset()         { *m = TLMessagesDeletePhoneCallHistory{} }
func (m *TLMessagesDeletePhoneCallHistory) String() string { return proto.CompactTextString(m) }
func (*TLMessagesDeletePhoneCallHistory) ProtoMessage()    {}
func (*TLMessagesDeletePhoneCallHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{250}
}
func (m *TLMessagesDeletePhoneCallHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesDeletePhoneCallHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesDeletePhoneCallHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesDeletePhoneCallHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesDeletePhoneCallHistory.Merge(m, src)
}
func (m *TLMessagesDeletePhoneCallHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesDeletePhoneCallHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesDeletePhoneCallHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesDeletePhoneCallHistory proto.InternalMessageInfo

func (m *TLMessagesDeletePhoneCallHistory) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesDeletePhoneCallHistory) GetRevoke() bool {
	if m != nil {
		return m.Revoke
	}
	return false
}

type TLMessagesCheckHistoryImport struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ImportHead           string        `protobuf:"bytes,3,opt,name=import_head,json=importHead,proto3" json:"import_head,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesCheckHistoryImport) Reset()         { *m = TLMessagesCheckHistoryImport{} }
func (m *TLMessagesCheckHistoryImport) String() string { return proto.CompactTextString(m) }
func (*TLMessagesCheckHistoryImport) ProtoMessage()    {}
func (*TLMessagesCheckHistoryImport) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{251}
}
func (m *TLMessagesCheckHistoryImport) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesCheckHistoryImport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesCheckHistoryImport.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesCheckHistoryImport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesCheckHistoryImport.Merge(m, src)
}
func (m *TLMessagesCheckHistoryImport) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesCheckHistoryImport) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesCheckHistoryImport.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesCheckHistoryImport proto.InternalMessageInfo

func (m *TLMessagesCheckHistoryImport) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesCheckHistoryImport) GetImportHead() string {
	if m != nil {
		return m.ImportHead
	}
	return ""
}

type TLMessagesInitHistoryImport struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	File                 *InputFile    `protobuf:"bytes,4,opt,name=file,proto3" json:"file,omitempty"`
	MediaCount           int32         `protobuf:"varint,5,opt,name=media_count,json=mediaCount,proto3" json:"media_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesInitHistoryImport) Reset()         { *m = TLMessagesInitHistoryImport{} }
func (m *TLMessagesInitHistoryImport) String() string { return proto.CompactTextString(m) }
func (*TLMessagesInitHistoryImport) ProtoMessage()    {}
func (*TLMessagesInitHistoryImport) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{252}
}
func (m *TLMessagesInitHistoryImport) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesInitHistoryImport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesInitHistoryImport.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesInitHistoryImport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesInitHistoryImport.Merge(m, src)
}
func (m *TLMessagesInitHistoryImport) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesInitHistoryImport) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesInitHistoryImport.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesInitHistoryImport proto.InternalMessageInfo

func (m *TLMessagesInitHistoryImport) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesInitHistoryImport) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesInitHistoryImport) GetFile() *InputFile {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *TLMessagesInitHistoryImport) GetMediaCount() int32 {
	if m != nil {
		return m.MediaCount
	}
	return 0
}

type TLMessagesUploadImportedMedia struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	ImportId             int64         `protobuf:"varint,4,opt,name=import_id,json=importId,proto3" json:"import_id,omitempty"`
	FileName             string        `protobuf:"bytes,5,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Media                *InputMedia   `protobuf:"bytes,6,opt,name=media,proto3" json:"media,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesUploadImportedMedia) Reset()         { *m = TLMessagesUploadImportedMedia{} }
func (m *TLMessagesUploadImportedMedia) String() string { return proto.CompactTextString(m) }
func (*TLMessagesUploadImportedMedia) ProtoMessage()    {}
func (*TLMessagesUploadImportedMedia) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{253}
}
func (m *TLMessagesUploadImportedMedia) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesUploadImportedMedia) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesUploadImportedMedia.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesUploadImportedMedia) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesUploadImportedMedia.Merge(m, src)
}
func (m *TLMessagesUploadImportedMedia) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesUploadImportedMedia) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesUploadImportedMedia.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesUploadImportedMedia proto.InternalMessageInfo

func (m *TLMessagesUploadImportedMedia) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesUploadImportedMedia) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesUploadImportedMedia) GetImportId() int64 {
	if m != nil {
		return m.ImportId
	}
	return 0
}

func (m *TLMessagesUploadImportedMedia) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *TLMessagesUploadImportedMedia) GetMedia() *InputMedia {
	if m != nil {
		return m.Media
	}
	return nil
}

type TLMessagesStartHistoryImport struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	ImportId             int64         `protobuf:"varint,4,opt,name=import_id,json=importId,proto3" json:"import_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesStartHistoryImport) Reset()         { *m = TLMessagesStartHistoryImport{} }
func (m *TLMessagesStartHistoryImport) String() string { return proto.CompactTextString(m) }
func (*TLMessagesStartHistoryImport) ProtoMessage()    {}
func (*TLMessagesStartHistoryImport) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{254}
}
func (m *TLMessagesStartHistoryImport) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesStartHistoryImport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesStartHistoryImport.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesStartHistoryImport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesStartHistoryImport.Merge(m, src)
}
func (m *TLMessagesStartHistoryImport) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesStartHistoryImport) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesStartHistoryImport.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesStartHistoryImport proto.InternalMessageInfo

func (m *TLMessagesStartHistoryImport) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesStartHistoryImport) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesStartHistoryImport) GetImportId() int64 {
	if m != nil {
		return m.ImportId
	}
	return 0
}

type TLMessagesGetExportedChatInvites struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Revoked              bool               `protobuf:"varint,3,opt,name=revoked,proto3" json:"revoked,omitempty"`
	Peer                 *InputPeer         `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	AdminId              *InputUser         `protobuf:"bytes,5,opt,name=admin_id,json=adminId,proto3" json:"admin_id,omitempty"`
	OffsetDate           *types.Int32Value  `protobuf:"bytes,6,opt,name=offset_date,json=offsetDate,proto3" json:"offset_date,omitempty"`
	OffsetLink           *types.StringValue `protobuf:"bytes,7,opt,name=offset_link,json=offsetLink,proto3" json:"offset_link,omitempty"`
	Limit                int32              `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesGetExportedChatInvites) Reset()         { *m = TLMessagesGetExportedChatInvites{} }
func (m *TLMessagesGetExportedChatInvites) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetExportedChatInvites) ProtoMessage()    {}
func (*TLMessagesGetExportedChatInvites) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{255}
}
func (m *TLMessagesGetExportedChatInvites) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetExportedChatInvites) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetExportedChatInvites.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetExportedChatInvites) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetExportedChatInvites.Merge(m, src)
}
func (m *TLMessagesGetExportedChatInvites) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetExportedChatInvites) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetExportedChatInvites.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetExportedChatInvites proto.InternalMessageInfo

func (m *TLMessagesGetExportedChatInvites) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetExportedChatInvites) GetRevoked() bool {
	if m != nil {
		return m.Revoked
	}
	return false
}

func (m *TLMessagesGetExportedChatInvites) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetExportedChatInvites) GetAdminId() *InputUser {
	if m != nil {
		return m.AdminId
	}
	return nil
}

func (m *TLMessagesGetExportedChatInvites) GetOffsetDate() *types.Int32Value {
	if m != nil {
		return m.OffsetDate
	}
	return nil
}

func (m *TLMessagesGetExportedChatInvites) GetOffsetLink() *types.StringValue {
	if m != nil {
		return m.OffsetLink
	}
	return nil
}

func (m *TLMessagesGetExportedChatInvites) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type TLMessagesGetExportedChatInvite struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Link                 string        `protobuf:"bytes,4,opt,name=link,proto3" json:"link,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetExportedChatInvite) Reset()         { *m = TLMessagesGetExportedChatInvite{} }
func (m *TLMessagesGetExportedChatInvite) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetExportedChatInvite) ProtoMessage()    {}
func (*TLMessagesGetExportedChatInvite) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{256}
}
func (m *TLMessagesGetExportedChatInvite) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetExportedChatInvite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetExportedChatInvite.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetExportedChatInvite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetExportedChatInvite.Merge(m, src)
}
func (m *TLMessagesGetExportedChatInvite) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetExportedChatInvite) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetExportedChatInvite.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetExportedChatInvite proto.InternalMessageInfo

func (m *TLMessagesGetExportedChatInvite) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetExportedChatInvite) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetExportedChatInvite) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

type TLMessagesEditExportedChatInvite struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Revoked              bool               `protobuf:"varint,3,opt,name=revoked,proto3" json:"revoked,omitempty"`
	Peer                 *InputPeer         `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	Link                 string             `protobuf:"bytes,5,opt,name=link,proto3" json:"link,omitempty"`
	ExpireDate           *types.Int32Value  `protobuf:"bytes,6,opt,name=expire_date,json=expireDate,proto3" json:"expire_date,omitempty"`
	UsageLimit           *types.Int32Value  `protobuf:"bytes,7,opt,name=usage_limit,json=usageLimit,proto3" json:"usage_limit,omitempty"`
	RequestNeeded        *Bool              `protobuf:"bytes,8,opt,name=request_needed,json=requestNeeded,proto3" json:"request_needed,omitempty"`
	Title                *types.StringValue `protobuf:"bytes,9,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesEditExportedChatInvite) Reset()         { *m = TLMessagesEditExportedChatInvite{} }
func (m *TLMessagesEditExportedChatInvite) String() string { return proto.CompactTextString(m) }
func (*TLMessagesEditExportedChatInvite) ProtoMessage()    {}
func (*TLMessagesEditExportedChatInvite) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{257}
}
func (m *TLMessagesEditExportedChatInvite) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesEditExportedChatInvite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesEditExportedChatInvite.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesEditExportedChatInvite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesEditExportedChatInvite.Merge(m, src)
}
func (m *TLMessagesEditExportedChatInvite) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesEditExportedChatInvite) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesEditExportedChatInvite.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesEditExportedChatInvite proto.InternalMessageInfo

func (m *TLMessagesEditExportedChatInvite) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesEditExportedChatInvite) GetRevoked() bool {
	if m != nil {
		return m.Revoked
	}
	return false
}

func (m *TLMessagesEditExportedChatInvite) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesEditExportedChatInvite) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *TLMessagesEditExportedChatInvite) GetExpireDate() *types.Int32Value {
	if m != nil {
		return m.ExpireDate
	}
	return nil
}

func (m *TLMessagesEditExportedChatInvite) GetUsageLimit() *types.Int32Value {
	if m != nil {
		return m.UsageLimit
	}
	return nil
}

func (m *TLMessagesEditExportedChatInvite) GetRequestNeeded() *Bool {
	if m != nil {
		return m.RequestNeeded
	}
	return nil
}

func (m *TLMessagesEditExportedChatInvite) GetTitle() *types.StringValue {
	if m != nil {
		return m.Title
	}
	return nil
}

type TLMessagesDeleteRevokedExportedChatInvites struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	AdminId              *InputUser    `protobuf:"bytes,4,opt,name=admin_id,json=adminId,proto3" json:"admin_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesDeleteRevokedExportedChatInvites) Reset() {
	*m = TLMessagesDeleteRevokedExportedChatInvites{}
}
func (m *TLMessagesDeleteRevokedExportedChatInvites) String() string {
	return proto.CompactTextString(m)
}
func (*TLMessagesDeleteRevokedExportedChatInvites) ProtoMessage() {}
func (*TLMessagesDeleteRevokedExportedChatInvites) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{258}
}
func (m *TLMessagesDeleteRevokedExportedChatInvites) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesDeleteRevokedExportedChatInvites) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesDeleteRevokedExportedChatInvites.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesDeleteRevokedExportedChatInvites) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesDeleteRevokedExportedChatInvites.Merge(m, src)
}
func (m *TLMessagesDeleteRevokedExportedChatInvites) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesDeleteRevokedExportedChatInvites) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesDeleteRevokedExportedChatInvites.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesDeleteRevokedExportedChatInvites proto.InternalMessageInfo

func (m *TLMessagesDeleteRevokedExportedChatInvites) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesDeleteRevokedExportedChatInvites) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesDeleteRevokedExportedChatInvites) GetAdminId() *InputUser {
	if m != nil {
		return m.AdminId
	}
	return nil
}

type TLMessagesDeleteExportedChatInvite struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Link                 string        `protobuf:"bytes,4,opt,name=link,proto3" json:"link,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesDeleteExportedChatInvite) Reset()         { *m = TLMessagesDeleteExportedChatInvite{} }
func (m *TLMessagesDeleteExportedChatInvite) String() string { return proto.CompactTextString(m) }
func (*TLMessagesDeleteExportedChatInvite) ProtoMessage()    {}
func (*TLMessagesDeleteExportedChatInvite) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{259}
}
func (m *TLMessagesDeleteExportedChatInvite) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesDeleteExportedChatInvite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesDeleteExportedChatInvite.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesDeleteExportedChatInvite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesDeleteExportedChatInvite.Merge(m, src)
}
func (m *TLMessagesDeleteExportedChatInvite) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesDeleteExportedChatInvite) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesDeleteExportedChatInvite.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesDeleteExportedChatInvite proto.InternalMessageInfo

func (m *TLMessagesDeleteExportedChatInvite) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesDeleteExportedChatInvite) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesDeleteExportedChatInvite) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

type TLMessagesGetAdminsWithInvites struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetAdminsWithInvites) Reset()         { *m = TLMessagesGetAdminsWithInvites{} }
func (m *TLMessagesGetAdminsWithInvites) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetAdminsWithInvites) ProtoMessage()    {}
func (*TLMessagesGetAdminsWithInvites) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{260}
}
func (m *TLMessagesGetAdminsWithInvites) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetAdminsWithInvites) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetAdminsWithInvites.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetAdminsWithInvites) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetAdminsWithInvites.Merge(m, src)
}
func (m *TLMessagesGetAdminsWithInvites) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetAdminsWithInvites) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetAdminsWithInvites.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetAdminsWithInvites proto.InternalMessageInfo

func (m *TLMessagesGetAdminsWithInvites) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetAdminsWithInvites) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type TLMessagesGetChatInviteImporters struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Requested            bool               `protobuf:"varint,3,opt,name=requested,proto3" json:"requested,omitempty"`
	Peer                 *InputPeer         `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	Link_FLAGSTRING      *types.StringValue `protobuf:"bytes,5,opt,name=link_FLAGSTRING,json=linkFLAGSTRING,proto3" json:"link_FLAGSTRING,omitempty"`
	Q                    *types.StringValue `protobuf:"bytes,6,opt,name=q,proto3" json:"q,omitempty"`
	OffsetDate           int32              `protobuf:"varint,7,opt,name=offset_date,json=offsetDate,proto3" json:"offset_date,omitempty"`
	OffsetUser           *InputUser         `protobuf:"bytes,8,opt,name=offset_user,json=offsetUser,proto3" json:"offset_user,omitempty"`
	Limit                int32              `protobuf:"varint,9,opt,name=limit,proto3" json:"limit,omitempty"`
	Link_STRING          string             `protobuf:"bytes,10,opt,name=link_STRING,json=linkSTRING,proto3" json:"link_STRING,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesGetChatInviteImporters) Reset()         { *m = TLMessagesGetChatInviteImporters{} }
func (m *TLMessagesGetChatInviteImporters) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetChatInviteImporters) ProtoMessage()    {}
func (*TLMessagesGetChatInviteImporters) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{261}
}
func (m *TLMessagesGetChatInviteImporters) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetChatInviteImporters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetChatInviteImporters.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetChatInviteImporters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetChatInviteImporters.Merge(m, src)
}
func (m *TLMessagesGetChatInviteImporters) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetChatInviteImporters) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetChatInviteImporters.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetChatInviteImporters proto.InternalMessageInfo

func (m *TLMessagesGetChatInviteImporters) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetChatInviteImporters) GetRequested() bool {
	if m != nil {
		return m.Requested
	}
	return false
}

func (m *TLMessagesGetChatInviteImporters) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetChatInviteImporters) GetLink_FLAGSTRING() *types.StringValue {
	if m != nil {
		return m.Link_FLAGSTRING
	}
	return nil
}

func (m *TLMessagesGetChatInviteImporters) GetQ() *types.StringValue {
	if m != nil {
		return m.Q
	}
	return nil
}

func (m *TLMessagesGetChatInviteImporters) GetOffsetDate() int32 {
	if m != nil {
		return m.OffsetDate
	}
	return 0
}

func (m *TLMessagesGetChatInviteImporters) GetOffsetUser() *InputUser {
	if m != nil {
		return m.OffsetUser
	}
	return nil
}

func (m *TLMessagesGetChatInviteImporters) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLMessagesGetChatInviteImporters) GetLink_STRING() string {
	if m != nil {
		return m.Link_STRING
	}
	return ""
}

type TLMessagesSetHistoryTTL struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Period               int32         `protobuf:"varint,4,opt,name=period,proto3" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesSetHistoryTTL) Reset()         { *m = TLMessagesSetHistoryTTL{} }
func (m *TLMessagesSetHistoryTTL) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetHistoryTTL) ProtoMessage()    {}
func (*TLMessagesSetHistoryTTL) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{262}
}
func (m *TLMessagesSetHistoryTTL) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetHistoryTTL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetHistoryTTL.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSetHistoryTTL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetHistoryTTL.Merge(m, src)
}
func (m *TLMessagesSetHistoryTTL) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetHistoryTTL) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetHistoryTTL.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetHistoryTTL proto.InternalMessageInfo

func (m *TLMessagesSetHistoryTTL) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSetHistoryTTL) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSetHistoryTTL) GetPeriod() int32 {
	if m != nil {
		return m.Period
	}
	return 0
}

type TLMessagesCheckHistoryImportPeer struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesCheckHistoryImportPeer) Reset()         { *m = TLMessagesCheckHistoryImportPeer{} }
func (m *TLMessagesCheckHistoryImportPeer) String() string { return proto.CompactTextString(m) }
func (*TLMessagesCheckHistoryImportPeer) ProtoMessage()    {}
func (*TLMessagesCheckHistoryImportPeer) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{263}
}
func (m *TLMessagesCheckHistoryImportPeer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesCheckHistoryImportPeer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesCheckHistoryImportPeer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesCheckHistoryImportPeer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesCheckHistoryImportPeer.Merge(m, src)
}
func (m *TLMessagesCheckHistoryImportPeer) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesCheckHistoryImportPeer) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesCheckHistoryImportPeer.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesCheckHistoryImportPeer proto.InternalMessageInfo

func (m *TLMessagesCheckHistoryImportPeer) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesCheckHistoryImportPeer) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type TLMessagesSetChatTheme struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Emoticon             string        `protobuf:"bytes,4,opt,name=emoticon,proto3" json:"emoticon,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesSetChatTheme) Reset()         { *m = TLMessagesSetChatTheme{} }
func (m *TLMessagesSetChatTheme) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetChatTheme) ProtoMessage()    {}
func (*TLMessagesSetChatTheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{264}
}
func (m *TLMessagesSetChatTheme) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetChatTheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetChatTheme.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSetChatTheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetChatTheme.Merge(m, src)
}
func (m *TLMessagesSetChatTheme) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetChatTheme) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetChatTheme.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetChatTheme proto.InternalMessageInfo

func (m *TLMessagesSetChatTheme) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSetChatTheme) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSetChatTheme) GetEmoticon() string {
	if m != nil {
		return m.Emoticon
	}
	return ""
}

type TLMessagesGetMessageReadParticipants struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32         `protobuf:"varint,4,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetMessageReadParticipants) Reset()         { *m = TLMessagesGetMessageReadParticipants{} }
func (m *TLMessagesGetMessageReadParticipants) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetMessageReadParticipants) ProtoMessage()    {}
func (*TLMessagesGetMessageReadParticipants) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{265}
}
func (m *TLMessagesGetMessageReadParticipants) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetMessageReadParticipants) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetMessageReadParticipants.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetMessageReadParticipants) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetMessageReadParticipants.Merge(m, src)
}
func (m *TLMessagesGetMessageReadParticipants) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetMessageReadParticipants) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetMessageReadParticipants.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetMessageReadParticipants proto.InternalMessageInfo

func (m *TLMessagesGetMessageReadParticipants) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetMessageReadParticipants) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetMessageReadParticipants) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

type TLMessagesGetSearchResultsCalendar struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer      `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Filter               *MessagesFilter `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	OffsetId             int32           `protobuf:"varint,5,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	OffsetDate           int32           `protobuf:"varint,6,opt,name=offset_date,json=offsetDate,proto3" json:"offset_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLMessagesGetSearchResultsCalendar) Reset()         { *m = TLMessagesGetSearchResultsCalendar{} }
func (m *TLMessagesGetSearchResultsCalendar) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetSearchResultsCalendar) ProtoMessage()    {}
func (*TLMessagesGetSearchResultsCalendar) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{266}
}
func (m *TLMessagesGetSearchResultsCalendar) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetSearchResultsCalendar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetSearchResultsCalendar.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetSearchResultsCalendar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetSearchResultsCalendar.Merge(m, src)
}
func (m *TLMessagesGetSearchResultsCalendar) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetSearchResultsCalendar) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetSearchResultsCalendar.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetSearchResultsCalendar proto.InternalMessageInfo

func (m *TLMessagesGetSearchResultsCalendar) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetSearchResultsCalendar) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetSearchResultsCalendar) GetFilter() *MessagesFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *TLMessagesGetSearchResultsCalendar) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLMessagesGetSearchResultsCalendar) GetOffsetDate() int32 {
	if m != nil {
		return m.OffsetDate
	}
	return 0
}

type TLMessagesGetSearchResultsPositions struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer      `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Filter               *MessagesFilter `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	OffsetId             int32           `protobuf:"varint,5,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	Limit                int32           `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLMessagesGetSearchResultsPositions) Reset()         { *m = TLMessagesGetSearchResultsPositions{} }
func (m *TLMessagesGetSearchResultsPositions) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetSearchResultsPositions) ProtoMessage()    {}
func (*TLMessagesGetSearchResultsPositions) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{267}
}
func (m *TLMessagesGetSearchResultsPositions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetSearchResultsPositions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetSearchResultsPositions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetSearchResultsPositions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetSearchResultsPositions.Merge(m, src)
}
func (m *TLMessagesGetSearchResultsPositions) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetSearchResultsPositions) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetSearchResultsPositions.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetSearchResultsPositions proto.InternalMessageInfo

func (m *TLMessagesGetSearchResultsPositions) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetSearchResultsPositions) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetSearchResultsPositions) GetFilter() *MessagesFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *TLMessagesGetSearchResultsPositions) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLMessagesGetSearchResultsPositions) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type TLMessagesHideChatJoinRequest struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Approved             bool          `protobuf:"varint,3,opt,name=approved,proto3" json:"approved,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesHideChatJoinRequest) Reset()         { *m = TLMessagesHideChatJoinRequest{} }
func (m *TLMessagesHideChatJoinRequest) String() string { return proto.CompactTextString(m) }
func (*TLMessagesHideChatJoinRequest) ProtoMessage()    {}
func (*TLMessagesHideChatJoinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{268}
}
func (m *TLMessagesHideChatJoinRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesHideChatJoinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesHideChatJoinRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesHideChatJoinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesHideChatJoinRequest.Merge(m, src)
}
func (m *TLMessagesHideChatJoinRequest) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesHideChatJoinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesHideChatJoinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesHideChatJoinRequest proto.InternalMessageInfo

func (m *TLMessagesHideChatJoinRequest) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesHideChatJoinRequest) GetApproved() bool {
	if m != nil {
		return m.Approved
	}
	return false
}

func (m *TLMessagesHideChatJoinRequest) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesHideChatJoinRequest) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

type TLMessagesHideAllChatJoinRequests struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Approved             bool               `protobuf:"varint,3,opt,name=approved,proto3" json:"approved,omitempty"`
	Peer                 *InputPeer         `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	Link                 *types.StringValue `protobuf:"bytes,5,opt,name=link,proto3" json:"link,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesHideAllChatJoinRequests) Reset()         { *m = TLMessagesHideAllChatJoinRequests{} }
func (m *TLMessagesHideAllChatJoinRequests) String() string { return proto.CompactTextString(m) }
func (*TLMessagesHideAllChatJoinRequests) ProtoMessage()    {}
func (*TLMessagesHideAllChatJoinRequests) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{269}
}
func (m *TLMessagesHideAllChatJoinRequests) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesHideAllChatJoinRequests) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesHideAllChatJoinRequests.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesHideAllChatJoinRequests) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesHideAllChatJoinRequests.Merge(m, src)
}
func (m *TLMessagesHideAllChatJoinRequests) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesHideAllChatJoinRequests) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesHideAllChatJoinRequests.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesHideAllChatJoinRequests proto.InternalMessageInfo

func (m *TLMessagesHideAllChatJoinRequests) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesHideAllChatJoinRequests) GetApproved() bool {
	if m != nil {
		return m.Approved
	}
	return false
}

func (m *TLMessagesHideAllChatJoinRequests) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesHideAllChatJoinRequests) GetLink() *types.StringValue {
	if m != nil {
		return m.Link
	}
	return nil
}

type TLMessagesToggleNoForwards struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Enabled              *Bool         `protobuf:"bytes,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesToggleNoForwards) Reset()         { *m = TLMessagesToggleNoForwards{} }
func (m *TLMessagesToggleNoForwards) String() string { return proto.CompactTextString(m) }
func (*TLMessagesToggleNoForwards) ProtoMessage()    {}
func (*TLMessagesToggleNoForwards) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{270}
}
func (m *TLMessagesToggleNoForwards) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesToggleNoForwards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesToggleNoForwards.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesToggleNoForwards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesToggleNoForwards.Merge(m, src)
}
func (m *TLMessagesToggleNoForwards) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesToggleNoForwards) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesToggleNoForwards.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesToggleNoForwards proto.InternalMessageInfo

func (m *TLMessagesToggleNoForwards) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesToggleNoForwards) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesToggleNoForwards) GetEnabled() *Bool {
	if m != nil {
		return m.Enabled
	}
	return nil
}

type TLMessagesSaveDefaultSendAs struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	SendAs               *InputPeer    `protobuf:"bytes,4,opt,name=send_as,json=sendAs,proto3" json:"send_as,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesSaveDefaultSendAs) Reset()         { *m = TLMessagesSaveDefaultSendAs{} }
func (m *TLMessagesSaveDefaultSendAs) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSaveDefaultSendAs) ProtoMessage()    {}
func (*TLMessagesSaveDefaultSendAs) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{271}
}
func (m *TLMessagesSaveDefaultSendAs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSaveDefaultSendAs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSaveDefaultSendAs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSaveDefaultSendAs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSaveDefaultSendAs.Merge(m, src)
}
func (m *TLMessagesSaveDefaultSendAs) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSaveDefaultSendAs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSaveDefaultSendAs.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSaveDefaultSendAs proto.InternalMessageInfo

func (m *TLMessagesSaveDefaultSendAs) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSaveDefaultSendAs) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSaveDefaultSendAs) GetSendAs() *InputPeer {
	if m != nil {
		return m.SendAs
	}
	return nil
}

type TLMessagesSendReaction struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Big                  bool               `protobuf:"varint,3,opt,name=big,proto3" json:"big,omitempty"`
	Peer                 *InputPeer         `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32              `protobuf:"varint,5,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	Reaction             *types.StringValue `protobuf:"bytes,6,opt,name=reaction,proto3" json:"reaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesSendReaction) Reset()         { *m = TLMessagesSendReaction{} }
func (m *TLMessagesSendReaction) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendReaction) ProtoMessage()    {}
func (*TLMessagesSendReaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{272}
}
func (m *TLMessagesSendReaction) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendReaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendReaction.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSendReaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendReaction.Merge(m, src)
}
func (m *TLMessagesSendReaction) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendReaction) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendReaction.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendReaction proto.InternalMessageInfo

func (m *TLMessagesSendReaction) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSendReaction) GetBig() bool {
	if m != nil {
		return m.Big
	}
	return false
}

func (m *TLMessagesSendReaction) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendReaction) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLMessagesSendReaction) GetReaction() *types.StringValue {
	if m != nil {
		return m.Reaction
	}
	return nil
}

type TLMessagesGetMessagesReactions struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   []int32       `protobuf:"varint,4,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetMessagesReactions) Reset()         { *m = TLMessagesGetMessagesReactions{} }
func (m *TLMessagesGetMessagesReactions) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetMessagesReactions) ProtoMessage()    {}
func (*TLMessagesGetMessagesReactions) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{273}
}
func (m *TLMessagesGetMessagesReactions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetMessagesReactions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetMessagesReactions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetMessagesReactions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetMessagesReactions.Merge(m, src)
}
func (m *TLMessagesGetMessagesReactions) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetMessagesReactions) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetMessagesReactions.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetMessagesReactions proto.InternalMessageInfo

func (m *TLMessagesGetMessagesReactions) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetMessagesReactions) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetMessagesReactions) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

type TLMessagesGetMessageReactionsList struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer         `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   int32              `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	Reaction             *types.StringValue `protobuf:"bytes,5,opt,name=reaction,proto3" json:"reaction,omitempty"`
	Offset               *types.StringValue `protobuf:"bytes,6,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32              `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesGetMessageReactionsList) Reset()         { *m = TLMessagesGetMessageReactionsList{} }
func (m *TLMessagesGetMessageReactionsList) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetMessageReactionsList) ProtoMessage()    {}
func (*TLMessagesGetMessageReactionsList) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{274}
}
func (m *TLMessagesGetMessageReactionsList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetMessageReactionsList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetMessageReactionsList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetMessageReactionsList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetMessageReactionsList.Merge(m, src)
}
func (m *TLMessagesGetMessageReactionsList) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetMessageReactionsList) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetMessageReactionsList.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetMessageReactionsList proto.InternalMessageInfo

func (m *TLMessagesGetMessageReactionsList) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetMessageReactionsList) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetMessageReactionsList) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLMessagesGetMessageReactionsList) GetReaction() *types.StringValue {
	if m != nil {
		return m.Reaction
	}
	return nil
}

func (m *TLMessagesGetMessageReactionsList) GetOffset() *types.StringValue {
	if m != nil {
		return m.Offset
	}
	return nil
}

func (m *TLMessagesGetMessageReactionsList) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type TLMessagesSetChatAvailableReactions struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	AvailableReactions   []string      `protobuf:"bytes,4,rep,name=available_reactions,json=availableReactions,proto3" json:"available_reactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesSetChatAvailableReactions) Reset()         { *m = TLMessagesSetChatAvailableReactions{} }
func (m *TLMessagesSetChatAvailableReactions) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetChatAvailableReactions) ProtoMessage()    {}
func (*TLMessagesSetChatAvailableReactions) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{275}
}
func (m *TLMessagesSetChatAvailableReactions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetChatAvailableReactions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetChatAvailableReactions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSetChatAvailableReactions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetChatAvailableReactions.Merge(m, src)
}
func (m *TLMessagesSetChatAvailableReactions) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetChatAvailableReactions) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetChatAvailableReactions.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetChatAvailableReactions proto.InternalMessageInfo

func (m *TLMessagesSetChatAvailableReactions) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSetChatAvailableReactions) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSetChatAvailableReactions) GetAvailableReactions() []string {
	if m != nil {
		return m.AvailableReactions
	}
	return nil
}

type TLMessagesGetAvailableReactions struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 int32         `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetAvailableReactions) Reset()         { *m = TLMessagesGetAvailableReactions{} }
func (m *TLMessagesGetAvailableReactions) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetAvailableReactions) ProtoMessage()    {}
func (*TLMessagesGetAvailableReactions) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{276}
}
func (m *TLMessagesGetAvailableReactions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetAvailableReactions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetAvailableReactions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetAvailableReactions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetAvailableReactions.Merge(m, src)
}
func (m *TLMessagesGetAvailableReactions) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetAvailableReactions) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetAvailableReactions.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetAvailableReactions proto.InternalMessageInfo

func (m *TLMessagesGetAvailableReactions) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetAvailableReactions) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLMessagesSetDefaultReaction struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Reaction             string        `protobuf:"bytes,3,opt,name=reaction,proto3" json:"reaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesSetDefaultReaction) Reset()         { *m = TLMessagesSetDefaultReaction{} }
func (m *TLMessagesSetDefaultReaction) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetDefaultReaction) ProtoMessage()    {}
func (*TLMessagesSetDefaultReaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{277}
}
func (m *TLMessagesSetDefaultReaction) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetDefaultReaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetDefaultReaction.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSetDefaultReaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetDefaultReaction.Merge(m, src)
}
func (m *TLMessagesSetDefaultReaction) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetDefaultReaction) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetDefaultReaction.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetDefaultReaction proto.InternalMessageInfo

func (m *TLMessagesSetDefaultReaction) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSetDefaultReaction) GetReaction() string {
	if m != nil {
		return m.Reaction
	}
	return ""
}

type TLMessagesTranslateText struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer         `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                *types.Int32Value  `protobuf:"bytes,4,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	Text                 *types.StringValue `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	FromLang             *types.StringValue `protobuf:"bytes,6,opt,name=from_lang,json=fromLang,proto3" json:"from_lang,omitempty"`
	ToLang               string             `protobuf:"bytes,7,opt,name=to_lang,json=toLang,proto3" json:"to_lang,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesTranslateText) Reset()         { *m = TLMessagesTranslateText{} }
func (m *TLMessagesTranslateText) String() string { return proto.CompactTextString(m) }
func (*TLMessagesTranslateText) ProtoMessage()    {}
func (*TLMessagesTranslateText) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{278}
}
func (m *TLMessagesTranslateText) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesTranslateText) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesTranslateText.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesTranslateText) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesTranslateText.Merge(m, src)
}
func (m *TLMessagesTranslateText) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesTranslateText) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesTranslateText.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesTranslateText proto.InternalMessageInfo

func (m *TLMessagesTranslateText) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesTranslateText) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesTranslateText) GetMsgId() *types.Int32Value {
	if m != nil {
		return m.MsgId
	}
	return nil
}

func (m *TLMessagesTranslateText) GetText() *types.StringValue {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *TLMessagesTranslateText) GetFromLang() *types.StringValue {
	if m != nil {
		return m.FromLang
	}
	return nil
}

func (m *TLMessagesTranslateText) GetToLang() string {
	if m != nil {
		return m.ToLang
	}
	return ""
}

type TLMessagesGetUnreadReactions struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	OffsetId             int32         `protobuf:"varint,4,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	AddOffset            int32         `protobuf:"varint,5,opt,name=add_offset,json=addOffset,proto3" json:"add_offset,omitempty"`
	Limit                int32         `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	MaxId                int32         `protobuf:"varint,7,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	MinId                int32         `protobuf:"varint,8,opt,name=min_id,json=minId,proto3" json:"min_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetUnreadReactions) Reset()         { *m = TLMessagesGetUnreadReactions{} }
func (m *TLMessagesGetUnreadReactions) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetUnreadReactions) ProtoMessage()    {}
func (*TLMessagesGetUnreadReactions) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{279}
}
func (m *TLMessagesGetUnreadReactions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetUnreadReactions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetUnreadReactions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetUnreadReactions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetUnreadReactions.Merge(m, src)
}
func (m *TLMessagesGetUnreadReactions) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetUnreadReactions) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetUnreadReactions.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetUnreadReactions proto.InternalMessageInfo

func (m *TLMessagesGetUnreadReactions) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetUnreadReactions) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetUnreadReactions) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLMessagesGetUnreadReactions) GetAddOffset() int32 {
	if m != nil {
		return m.AddOffset
	}
	return 0
}

func (m *TLMessagesGetUnreadReactions) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLMessagesGetUnreadReactions) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLMessagesGetUnreadReactions) GetMinId() int32 {
	if m != nil {
		return m.MinId
	}
	return 0
}

type TLMessagesReadReactions struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesReadReactions) Reset()         { *m = TLMessagesReadReactions{} }
func (m *TLMessagesReadReactions) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReadReactions) ProtoMessage()    {}
func (*TLMessagesReadReactions) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{280}
}
func (m *TLMessagesReadReactions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReadReactions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReadReactions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReadReactions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReadReactions.Merge(m, src)
}
func (m *TLMessagesReadReactions) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReadReactions) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReadReactions.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReadReactions proto.InternalMessageInfo

func (m *TLMessagesReadReactions) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesReadReactions) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type TLMessagesSearchSentMedia struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Q                    string          `protobuf:"bytes,3,opt,name=q,proto3" json:"q,omitempty"`
	Filter               *MessagesFilter `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	Limit                int32           `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLMessagesSearchSentMedia) Reset()         { *m = TLMessagesSearchSentMedia{} }
func (m *TLMessagesSearchSentMedia) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSearchSentMedia) ProtoMessage()    {}
func (*TLMessagesSearchSentMedia) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{281}
}
func (m *TLMessagesSearchSentMedia) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSearchSentMedia) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSearchSentMedia.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSearchSentMedia) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSearchSentMedia.Merge(m, src)
}
func (m *TLMessagesSearchSentMedia) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSearchSentMedia) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSearchSentMedia.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSearchSentMedia proto.InternalMessageInfo

func (m *TLMessagesSearchSentMedia) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesSearchSentMedia) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *TLMessagesSearchSentMedia) GetFilter() *MessagesFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *TLMessagesSearchSentMedia) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type TLUpdatesGetState struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLUpdatesGetState) Reset()         { *m = TLUpdatesGetState{} }
func (m *TLUpdatesGetState) String() string { return proto.CompactTextString(m) }
func (*TLUpdatesGetState) ProtoMessage()    {}
func (*TLUpdatesGetState) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{282}
}
func (m *TLUpdatesGetState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUpdatesGetState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUpdatesGetState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUpdatesGetState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUpdatesGetState.Merge(m, src)
}
func (m *TLUpdatesGetState) XXX_Size() int {
	return m.Size()
}
func (m *TLUpdatesGetState) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUpdatesGetState.DiscardUnknown(m)
}

var xxx_messageInfo_TLUpdatesGetState proto.InternalMessageInfo

func (m *TLUpdatesGetState) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLUpdatesGetDifference struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Pts                  int32             `protobuf:"varint,3,opt,name=pts,proto3" json:"pts,omitempty"`
	PtsTotalLimit        *types.Int32Value `protobuf:"bytes,4,opt,name=pts_total_limit,json=ptsTotalLimit,proto3" json:"pts_total_limit,omitempty"`
	Date                 int32             `protobuf:"varint,5,opt,name=date,proto3" json:"date,omitempty"`
	Qts                  int32             `protobuf:"varint,6,opt,name=qts,proto3" json:"qts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLUpdatesGetDifference) Reset()         { *m = TLUpdatesGetDifference{} }
func (m *TLUpdatesGetDifference) String() string { return proto.CompactTextString(m) }
func (*TLUpdatesGetDifference) ProtoMessage()    {}
func (*TLUpdatesGetDifference) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{283}
}
func (m *TLUpdatesGetDifference) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUpdatesGetDifference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUpdatesGetDifference.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUpdatesGetDifference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUpdatesGetDifference.Merge(m, src)
}
func (m *TLUpdatesGetDifference) XXX_Size() int {
	return m.Size()
}
func (m *TLUpdatesGetDifference) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUpdatesGetDifference.DiscardUnknown(m)
}

var xxx_messageInfo_TLUpdatesGetDifference proto.InternalMessageInfo

func (m *TLUpdatesGetDifference) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUpdatesGetDifference) GetPts() int32 {
	if m != nil {
		return m.Pts
	}
	return 0
}

func (m *TLUpdatesGetDifference) GetPtsTotalLimit() *types.Int32Value {
	if m != nil {
		return m.PtsTotalLimit
	}
	return nil
}

func (m *TLUpdatesGetDifference) GetDate() int32 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *TLUpdatesGetDifference) GetQts() int32 {
	if m != nil {
		return m.Qts
	}
	return 0
}

type TLUpdatesGetChannelDifference struct {
	Constructor          TLConstructor          `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Force                bool                   `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	Channel              *InputChannel          `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"`
	Filter               *ChannelMessagesFilter `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	Pts                  int32                  `protobuf:"varint,6,opt,name=pts,proto3" json:"pts,omitempty"`
	Limit                int32                  `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TLUpdatesGetChannelDifference) Reset()         { *m = TLUpdatesGetChannelDifference{} }
func (m *TLUpdatesGetChannelDifference) String() string { return proto.CompactTextString(m) }
func (*TLUpdatesGetChannelDifference) ProtoMessage()    {}
func (*TLUpdatesGetChannelDifference) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{284}
}
func (m *TLUpdatesGetChannelDifference) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUpdatesGetChannelDifference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUpdatesGetChannelDifference.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUpdatesGetChannelDifference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUpdatesGetChannelDifference.Merge(m, src)
}
func (m *TLUpdatesGetChannelDifference) XXX_Size() int {
	return m.Size()
}
func (m *TLUpdatesGetChannelDifference) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUpdatesGetChannelDifference.DiscardUnknown(m)
}

var xxx_messageInfo_TLUpdatesGetChannelDifference proto.InternalMessageInfo

func (m *TLUpdatesGetChannelDifference) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUpdatesGetChannelDifference) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func (m *TLUpdatesGetChannelDifference) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLUpdatesGetChannelDifference) GetFilter() *ChannelMessagesFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *TLUpdatesGetChannelDifference) GetPts() int32 {
	if m != nil {
		return m.Pts
	}
	return 0
}

func (m *TLUpdatesGetChannelDifference) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type TLPhotosUpdateProfilePhoto struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   *InputPhoto   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPhotosUpdateProfilePhoto) Reset()         { *m = TLPhotosUpdateProfilePhoto{} }
func (m *TLPhotosUpdateProfilePhoto) String() string { return proto.CompactTextString(m) }
func (*TLPhotosUpdateProfilePhoto) ProtoMessage()    {}
func (*TLPhotosUpdateProfilePhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{285}
}
func (m *TLPhotosUpdateProfilePhoto) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhotosUpdateProfilePhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhotosUpdateProfilePhoto.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhotosUpdateProfilePhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhotosUpdateProfilePhoto.Merge(m, src)
}
func (m *TLPhotosUpdateProfilePhoto) XXX_Size() int {
	return m.Size()
}
func (m *TLPhotosUpdateProfilePhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhotosUpdateProfilePhoto.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhotosUpdateProfilePhoto proto.InternalMessageInfo

func (m *TLPhotosUpdateProfilePhoto) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhotosUpdateProfilePhoto) GetId() *InputPhoto {
	if m != nil {
		return m.Id
	}
	return nil
}

type TLPhotosUploadProfilePhoto struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	File                 *InputFile         `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
	Video                *InputFile         `protobuf:"bytes,4,opt,name=video,proto3" json:"video,omitempty"`
	VideoStartTs         *types.DoubleValue `protobuf:"bytes,5,opt,name=video_start_ts,json=videoStartTs,proto3" json:"video_start_ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLPhotosUploadProfilePhoto) Reset()         { *m = TLPhotosUploadProfilePhoto{} }
func (m *TLPhotosUploadProfilePhoto) String() string { return proto.CompactTextString(m) }
func (*TLPhotosUploadProfilePhoto) ProtoMessage()    {}
func (*TLPhotosUploadProfilePhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{286}
}
func (m *TLPhotosUploadProfilePhoto) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhotosUploadProfilePhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhotosUploadProfilePhoto.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhotosUploadProfilePhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhotosUploadProfilePhoto.Merge(m, src)
}
func (m *TLPhotosUploadProfilePhoto) XXX_Size() int {
	return m.Size()
}
func (m *TLPhotosUploadProfilePhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhotosUploadProfilePhoto.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhotosUploadProfilePhoto proto.InternalMessageInfo

func (m *TLPhotosUploadProfilePhoto) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhotosUploadProfilePhoto) GetFile() *InputFile {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *TLPhotosUploadProfilePhoto) GetVideo() *InputFile {
	if m != nil {
		return m.Video
	}
	return nil
}

func (m *TLPhotosUploadProfilePhoto) GetVideoStartTs() *types.DoubleValue {
	if m != nil {
		return m.VideoStartTs
	}
	return nil
}

type TLPhotosDeletePhotos struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   []*InputPhoto `protobuf:"bytes,3,rep,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPhotosDeletePhotos) Reset()         { *m = TLPhotosDeletePhotos{} }
func (m *TLPhotosDeletePhotos) String() string { return proto.CompactTextString(m) }
func (*TLPhotosDeletePhotos) ProtoMessage()    {}
func (*TLPhotosDeletePhotos) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{287}
}
func (m *TLPhotosDeletePhotos) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhotosDeletePhotos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhotosDeletePhotos.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhotosDeletePhotos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhotosDeletePhotos.Merge(m, src)
}
func (m *TLPhotosDeletePhotos) XXX_Size() int {
	return m.Size()
}
func (m *TLPhotosDeletePhotos) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhotosDeletePhotos.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhotosDeletePhotos proto.InternalMessageInfo

func (m *TLPhotosDeletePhotos) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhotosDeletePhotos) GetId() []*InputPhoto {
	if m != nil {
		return m.Id
	}
	return nil
}

type TLPhotosGetUserPhotos struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Offset               int32         `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	MaxId                int64         `protobuf:"varint,5,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	Limit                int32         `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPhotosGetUserPhotos) Reset()         { *m = TLPhotosGetUserPhotos{} }
func (m *TLPhotosGetUserPhotos) String() string { return proto.CompactTextString(m) }
func (*TLPhotosGetUserPhotos) ProtoMessage()    {}
func (*TLPhotosGetUserPhotos) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{288}
}
func (m *TLPhotosGetUserPhotos) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhotosGetUserPhotos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhotosGetUserPhotos.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhotosGetUserPhotos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhotosGetUserPhotos.Merge(m, src)
}
func (m *TLPhotosGetUserPhotos) XXX_Size() int {
	return m.Size()
}
func (m *TLPhotosGetUserPhotos) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhotosGetUserPhotos.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhotosGetUserPhotos proto.InternalMessageInfo

func (m *TLPhotosGetUserPhotos) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhotosGetUserPhotos) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLPhotosGetUserPhotos) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLPhotosGetUserPhotos) GetMaxId() int64 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLPhotosGetUserPhotos) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type TLUploadSaveFilePart struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FileId               int64         `protobuf:"varint,3,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	FilePart             int32         `protobuf:"varint,4,opt,name=file_part,json=filePart,proto3" json:"file_part,omitempty"`
	Bytes                []byte        `protobuf:"bytes,5,opt,name=bytes,proto3" json:"bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLUploadSaveFilePart) Reset()         { *m = TLUploadSaveFilePart{} }
func (m *TLUploadSaveFilePart) String() string { return proto.CompactTextString(m) }
func (*TLUploadSaveFilePart) ProtoMessage()    {}
func (*TLUploadSaveFilePart) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{289}
}
func (m *TLUploadSaveFilePart) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUploadSaveFilePart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUploadSaveFilePart.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUploadSaveFilePart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUploadSaveFilePart.Merge(m, src)
}
func (m *TLUploadSaveFilePart) XXX_Size() int {
	return m.Size()
}
func (m *TLUploadSaveFilePart) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUploadSaveFilePart.DiscardUnknown(m)
}

var xxx_messageInfo_TLUploadSaveFilePart proto.InternalMessageInfo

func (m *TLUploadSaveFilePart) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUploadSaveFilePart) GetFileId() int64 {
	if m != nil {
		return m.FileId
	}
	return 0
}

func (m *TLUploadSaveFilePart) GetFilePart() int32 {
	if m != nil {
		return m.FilePart
	}
	return 0
}

func (m *TLUploadSaveFilePart) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

type TLUploadGetFile struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Precise              bool               `protobuf:"varint,3,opt,name=precise,proto3" json:"precise,omitempty"`
	CdnSupported         bool               `protobuf:"varint,4,opt,name=cdn_supported,json=cdnSupported,proto3" json:"cdn_supported,omitempty"`
	Location             *InputFileLocation `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	Offset               int32              `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32              `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLUploadGetFile) Reset()         { *m = TLUploadGetFile{} }
func (m *TLUploadGetFile) String() string { return proto.CompactTextString(m) }
func (*TLUploadGetFile) ProtoMessage()    {}
func (*TLUploadGetFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{290}
}
func (m *TLUploadGetFile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUploadGetFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUploadGetFile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUploadGetFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUploadGetFile.Merge(m, src)
}
func (m *TLUploadGetFile) XXX_Size() int {
	return m.Size()
}
func (m *TLUploadGetFile) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUploadGetFile.DiscardUnknown(m)
}

var xxx_messageInfo_TLUploadGetFile proto.InternalMessageInfo

func (m *TLUploadGetFile) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUploadGetFile) GetPrecise() bool {
	if m != nil {
		return m.Precise
	}
	return false
}

func (m *TLUploadGetFile) GetCdnSupported() bool {
	if m != nil {
		return m.CdnSupported
	}
	return false
}

func (m *TLUploadGetFile) GetLocation() *InputFileLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *TLUploadGetFile) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLUploadGetFile) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type TLUploadSaveBigFilePart struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FileId               int64         `protobuf:"varint,3,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	FilePart             int32         `protobuf:"varint,4,opt,name=file_part,json=filePart,proto3" json:"file_part,omitempty"`
	FileTotalParts       int32         `protobuf:"varint,5,opt,name=file_total_parts,json=fileTotalParts,proto3" json:"file_total_parts,omitempty"`
	Bytes                []byte        `protobuf:"bytes,6,opt,name=bytes,proto3" json:"bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLUploadSaveBigFilePart) Reset()         { *m = TLUploadSaveBigFilePart{} }
func (m *TLUploadSaveBigFilePart) String() string { return proto.CompactTextString(m) }
func (*TLUploadSaveBigFilePart) ProtoMessage()    {}
func (*TLUploadSaveBigFilePart) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{291}
}
func (m *TLUploadSaveBigFilePart) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUploadSaveBigFilePart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUploadSaveBigFilePart.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUploadSaveBigFilePart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUploadSaveBigFilePart.Merge(m, src)
}
func (m *TLUploadSaveBigFilePart) XXX_Size() int {
	return m.Size()
}
func (m *TLUploadSaveBigFilePart) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUploadSaveBigFilePart.DiscardUnknown(m)
}

var xxx_messageInfo_TLUploadSaveBigFilePart proto.InternalMessageInfo

func (m *TLUploadSaveBigFilePart) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUploadSaveBigFilePart) GetFileId() int64 {
	if m != nil {
		return m.FileId
	}
	return 0
}

func (m *TLUploadSaveBigFilePart) GetFilePart() int32 {
	if m != nil {
		return m.FilePart
	}
	return 0
}

func (m *TLUploadSaveBigFilePart) GetFileTotalParts() int32 {
	if m != nil {
		return m.FileTotalParts
	}
	return 0
}

func (m *TLUploadSaveBigFilePart) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

type TLUploadGetWebFile struct {
	Constructor          TLConstructor         `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Location             *InputWebFileLocation `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Offset               int32                 `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32                 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TLUploadGetWebFile) Reset()         { *m = TLUploadGetWebFile{} }
func (m *TLUploadGetWebFile) String() string { return proto.CompactTextString(m) }
func (*TLUploadGetWebFile) ProtoMessage()    {}
func (*TLUploadGetWebFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{292}
}
func (m *TLUploadGetWebFile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUploadGetWebFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUploadGetWebFile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUploadGetWebFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUploadGetWebFile.Merge(m, src)
}
func (m *TLUploadGetWebFile) XXX_Size() int {
	return m.Size()
}
func (m *TLUploadGetWebFile) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUploadGetWebFile.DiscardUnknown(m)
}

var xxx_messageInfo_TLUploadGetWebFile proto.InternalMessageInfo

func (m *TLUploadGetWebFile) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUploadGetWebFile) GetLocation() *InputWebFileLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *TLUploadGetWebFile) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLUploadGetWebFile) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type TLUploadGetCdnFile struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FileToken            []byte        `protobuf:"bytes,3,opt,name=file_token,json=fileToken,proto3" json:"file_token,omitempty"`
	Offset               int32         `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32         `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLUploadGetCdnFile) Reset()         { *m = TLUploadGetCdnFile{} }
func (m *TLUploadGetCdnFile) String() string { return proto.CompactTextString(m) }
func (*TLUploadGetCdnFile) ProtoMessage()    {}
func (*TLUploadGetCdnFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{293}
}
func (m *TLUploadGetCdnFile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUploadGetCdnFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUploadGetCdnFile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUploadGetCdnFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUploadGetCdnFile.Merge(m, src)
}
func (m *TLUploadGetCdnFile) XXX_Size() int {
	return m.Size()
}
func (m *TLUploadGetCdnFile) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUploadGetCdnFile.DiscardUnknown(m)
}

var xxx_messageInfo_TLUploadGetCdnFile proto.InternalMessageInfo

func (m *TLUploadGetCdnFile) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUploadGetCdnFile) GetFileToken() []byte {
	if m != nil {
		return m.FileToken
	}
	return nil
}

func (m *TLUploadGetCdnFile) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLUploadGetCdnFile) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type TLUploadReuploadCdnFile struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FileToken            []byte        `protobuf:"bytes,3,opt,name=file_token,json=fileToken,proto3" json:"file_token,omitempty"`
	RequestToken         []byte        `protobuf:"bytes,4,opt,name=request_token,json=requestToken,proto3" json:"request_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLUploadReuploadCdnFile) Reset()         { *m = TLUploadReuploadCdnFile{} }
func (m *TLUploadReuploadCdnFile) String() string { return proto.CompactTextString(m) }
func (*TLUploadReuploadCdnFile) ProtoMessage()    {}
func (*TLUploadReuploadCdnFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{294}
}
func (m *TLUploadReuploadCdnFile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUploadReuploadCdnFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUploadReuploadCdnFile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUploadReuploadCdnFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUploadReuploadCdnFile.Merge(m, src)
}
func (m *TLUploadReuploadCdnFile) XXX_Size() int {
	return m.Size()
}
func (m *TLUploadReuploadCdnFile) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUploadReuploadCdnFile.DiscardUnknown(m)
}

var xxx_messageInfo_TLUploadReuploadCdnFile proto.InternalMessageInfo

func (m *TLUploadReuploadCdnFile) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUploadReuploadCdnFile) GetFileToken() []byte {
	if m != nil {
		return m.FileToken
	}
	return nil
}

func (m *TLUploadReuploadCdnFile) GetRequestToken() []byte {
	if m != nil {
		return m.RequestToken
	}
	return nil
}

type TLUploadGetCdnFileHashes struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FileToken            []byte        `protobuf:"bytes,3,opt,name=file_token,json=fileToken,proto3" json:"file_token,omitempty"`
	Offset               int32         `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLUploadGetCdnFileHashes) Reset()         { *m = TLUploadGetCdnFileHashes{} }
func (m *TLUploadGetCdnFileHashes) String() string { return proto.CompactTextString(m) }
func (*TLUploadGetCdnFileHashes) ProtoMessage()    {}
func (*TLUploadGetCdnFileHashes) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{295}
}
func (m *TLUploadGetCdnFileHashes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUploadGetCdnFileHashes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUploadGetCdnFileHashes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUploadGetCdnFileHashes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUploadGetCdnFileHashes.Merge(m, src)
}
func (m *TLUploadGetCdnFileHashes) XXX_Size() int {
	return m.Size()
}
func (m *TLUploadGetCdnFileHashes) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUploadGetCdnFileHashes.DiscardUnknown(m)
}

var xxx_messageInfo_TLUploadGetCdnFileHashes proto.InternalMessageInfo

func (m *TLUploadGetCdnFileHashes) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUploadGetCdnFileHashes) GetFileToken() []byte {
	if m != nil {
		return m.FileToken
	}
	return nil
}

func (m *TLUploadGetCdnFileHashes) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type TLUploadGetFileHashes struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Location             *InputFileLocation `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Offset               int32              `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLUploadGetFileHashes) Reset()         { *m = TLUploadGetFileHashes{} }
func (m *TLUploadGetFileHashes) String() string { return proto.CompactTextString(m) }
func (*TLUploadGetFileHashes) ProtoMessage()    {}
func (*TLUploadGetFileHashes) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{296}
}
func (m *TLUploadGetFileHashes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUploadGetFileHashes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUploadGetFileHashes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUploadGetFileHashes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUploadGetFileHashes.Merge(m, src)
}
func (m *TLUploadGetFileHashes) XXX_Size() int {
	return m.Size()
}
func (m *TLUploadGetFileHashes) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUploadGetFileHashes.DiscardUnknown(m)
}

var xxx_messageInfo_TLUploadGetFileHashes proto.InternalMessageInfo

func (m *TLUploadGetFileHashes) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUploadGetFileHashes) GetLocation() *InputFileLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *TLUploadGetFileHashes) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type TLHelpGetConfig struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetConfig) Reset()         { *m = TLHelpGetConfig{} }
func (m *TLHelpGetConfig) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetConfig) ProtoMessage()    {}
func (*TLHelpGetConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{297}
}
func (m *TLHelpGetConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetConfig.Merge(m, src)
}
func (m *TLHelpGetConfig) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetConfig proto.InternalMessageInfo

func (m *TLHelpGetConfig) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLHelpGetNearestDc struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetNearestDc) Reset()         { *m = TLHelpGetNearestDc{} }
func (m *TLHelpGetNearestDc) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetNearestDc) ProtoMessage()    {}
func (*TLHelpGetNearestDc) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{298}
}
func (m *TLHelpGetNearestDc) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetNearestDc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetNearestDc.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetNearestDc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetNearestDc.Merge(m, src)
}
func (m *TLHelpGetNearestDc) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetNearestDc) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetNearestDc.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetNearestDc proto.InternalMessageInfo

func (m *TLHelpGetNearestDc) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLHelpGetAppUpdate struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Source               string        `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetAppUpdate) Reset()         { *m = TLHelpGetAppUpdate{} }
func (m *TLHelpGetAppUpdate) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetAppUpdate) ProtoMessage()    {}
func (*TLHelpGetAppUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{299}
}
func (m *TLHelpGetAppUpdate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetAppUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetAppUpdate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetAppUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetAppUpdate.Merge(m, src)
}
func (m *TLHelpGetAppUpdate) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetAppUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetAppUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetAppUpdate proto.InternalMessageInfo

func (m *TLHelpGetAppUpdate) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpGetAppUpdate) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

type TLHelpGetInviteText struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetInviteText) Reset()         { *m = TLHelpGetInviteText{} }
func (m *TLHelpGetInviteText) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetInviteText) ProtoMessage()    {}
func (*TLHelpGetInviteText) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{300}
}
func (m *TLHelpGetInviteText) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetInviteText) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetInviteText.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetInviteText) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetInviteText.Merge(m, src)
}
func (m *TLHelpGetInviteText) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetInviteText) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetInviteText.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetInviteText proto.InternalMessageInfo

func (m *TLHelpGetInviteText) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLHelpGetSupport struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetSupport) Reset()         { *m = TLHelpGetSupport{} }
func (m *TLHelpGetSupport) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetSupport) ProtoMessage()    {}
func (*TLHelpGetSupport) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{301}
}
func (m *TLHelpGetSupport) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetSupport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetSupport.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetSupport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetSupport.Merge(m, src)
}
func (m *TLHelpGetSupport) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetSupport) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetSupport.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetSupport proto.InternalMessageInfo

func (m *TLHelpGetSupport) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLHelpGetAppChangelog struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PrevAppVersion       string        `protobuf:"bytes,3,opt,name=prev_app_version,json=prevAppVersion,proto3" json:"prev_app_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetAppChangelog) Reset()         { *m = TLHelpGetAppChangelog{} }
func (m *TLHelpGetAppChangelog) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetAppChangelog) ProtoMessage()    {}
func (*TLHelpGetAppChangelog) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{302}
}
func (m *TLHelpGetAppChangelog) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetAppChangelog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetAppChangelog.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetAppChangelog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetAppChangelog.Merge(m, src)
}
func (m *TLHelpGetAppChangelog) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetAppChangelog) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetAppChangelog.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetAppChangelog proto.InternalMessageInfo

func (m *TLHelpGetAppChangelog) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpGetAppChangelog) GetPrevAppVersion() string {
	if m != nil {
		return m.PrevAppVersion
	}
	return ""
}

type TLHelpSetBotUpdatesStatus struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	PendingUpdatesCount  int32         `protobuf:"varint,3,opt,name=pending_updates_count,json=pendingUpdatesCount,proto3" json:"pending_updates_count,omitempty"`
	Message              string        `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpSetBotUpdatesStatus) Reset()         { *m = TLHelpSetBotUpdatesStatus{} }
func (m *TLHelpSetBotUpdatesStatus) String() string { return proto.CompactTextString(m) }
func (*TLHelpSetBotUpdatesStatus) ProtoMessage()    {}
func (*TLHelpSetBotUpdatesStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{303}
}
func (m *TLHelpSetBotUpdatesStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpSetBotUpdatesStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpSetBotUpdatesStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpSetBotUpdatesStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpSetBotUpdatesStatus.Merge(m, src)
}
func (m *TLHelpSetBotUpdatesStatus) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpSetBotUpdatesStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpSetBotUpdatesStatus.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpSetBotUpdatesStatus proto.InternalMessageInfo

func (m *TLHelpSetBotUpdatesStatus) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpSetBotUpdatesStatus) GetPendingUpdatesCount() int32 {
	if m != nil {
		return m.PendingUpdatesCount
	}
	return 0
}

func (m *TLHelpSetBotUpdatesStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type TLHelpGetCdnConfig struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetCdnConfig) Reset()         { *m = TLHelpGetCdnConfig{} }
func (m *TLHelpGetCdnConfig) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetCdnConfig) ProtoMessage()    {}
func (*TLHelpGetCdnConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{304}
}
func (m *TLHelpGetCdnConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetCdnConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetCdnConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetCdnConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetCdnConfig.Merge(m, src)
}
func (m *TLHelpGetCdnConfig) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetCdnConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetCdnConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetCdnConfig proto.InternalMessageInfo

func (m *TLHelpGetCdnConfig) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLHelpGetRecentMeUrls struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Referer              string        `protobuf:"bytes,3,opt,name=referer,proto3" json:"referer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetRecentMeUrls) Reset()         { *m = TLHelpGetRecentMeUrls{} }
func (m *TLHelpGetRecentMeUrls) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetRecentMeUrls) ProtoMessage()    {}
func (*TLHelpGetRecentMeUrls) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{305}
}
func (m *TLHelpGetRecentMeUrls) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetRecentMeUrls) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetRecentMeUrls.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetRecentMeUrls) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetRecentMeUrls.Merge(m, src)
}
func (m *TLHelpGetRecentMeUrls) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetRecentMeUrls) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetRecentMeUrls.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetRecentMeUrls proto.InternalMessageInfo

func (m *TLHelpGetRecentMeUrls) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpGetRecentMeUrls) GetReferer() string {
	if m != nil {
		return m.Referer
	}
	return ""
}

type TLHelpGetTermsOfServiceUpdate struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetTermsOfServiceUpdate) Reset()         { *m = TLHelpGetTermsOfServiceUpdate{} }
func (m *TLHelpGetTermsOfServiceUpdate) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetTermsOfServiceUpdate) ProtoMessage()    {}
func (*TLHelpGetTermsOfServiceUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{306}
}
func (m *TLHelpGetTermsOfServiceUpdate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetTermsOfServiceUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetTermsOfServiceUpdate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetTermsOfServiceUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetTermsOfServiceUpdate.Merge(m, src)
}
func (m *TLHelpGetTermsOfServiceUpdate) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetTermsOfServiceUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetTermsOfServiceUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetTermsOfServiceUpdate proto.InternalMessageInfo

func (m *TLHelpGetTermsOfServiceUpdate) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLHelpAcceptTermsOfService struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   *DataJSON     `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpAcceptTermsOfService) Reset()         { *m = TLHelpAcceptTermsOfService{} }
func (m *TLHelpAcceptTermsOfService) String() string { return proto.CompactTextString(m) }
func (*TLHelpAcceptTermsOfService) ProtoMessage()    {}
func (*TLHelpAcceptTermsOfService) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{307}
}
func (m *TLHelpAcceptTermsOfService) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpAcceptTermsOfService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpAcceptTermsOfService.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpAcceptTermsOfService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpAcceptTermsOfService.Merge(m, src)
}
func (m *TLHelpAcceptTermsOfService) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpAcceptTermsOfService) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpAcceptTermsOfService.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpAcceptTermsOfService proto.InternalMessageInfo

func (m *TLHelpAcceptTermsOfService) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpAcceptTermsOfService) GetId() *DataJSON {
	if m != nil {
		return m.Id
	}
	return nil
}

type TLHelpGetDeepLinkInfo struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Path                 string        `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetDeepLinkInfo) Reset()         { *m = TLHelpGetDeepLinkInfo{} }
func (m *TLHelpGetDeepLinkInfo) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetDeepLinkInfo) ProtoMessage()    {}
func (*TLHelpGetDeepLinkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{308}
}
func (m *TLHelpGetDeepLinkInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetDeepLinkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetDeepLinkInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetDeepLinkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetDeepLinkInfo.Merge(m, src)
}
func (m *TLHelpGetDeepLinkInfo) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetDeepLinkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetDeepLinkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetDeepLinkInfo proto.InternalMessageInfo

func (m *TLHelpGetDeepLinkInfo) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpGetDeepLinkInfo) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type TLHelpGetAppConfig struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetAppConfig) Reset()         { *m = TLHelpGetAppConfig{} }
func (m *TLHelpGetAppConfig) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetAppConfig) ProtoMessage()    {}
func (*TLHelpGetAppConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{309}
}
func (m *TLHelpGetAppConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetAppConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetAppConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetAppConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetAppConfig.Merge(m, src)
}
func (m *TLHelpGetAppConfig) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetAppConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetAppConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetAppConfig proto.InternalMessageInfo

func (m *TLHelpGetAppConfig) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLHelpSaveAppLog struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Events               []*InputAppEvent `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLHelpSaveAppLog) Reset()         { *m = TLHelpSaveAppLog{} }
func (m *TLHelpSaveAppLog) String() string { return proto.CompactTextString(m) }
func (*TLHelpSaveAppLog) ProtoMessage()    {}
func (*TLHelpSaveAppLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{310}
}
func (m *TLHelpSaveAppLog) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpSaveAppLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpSaveAppLog.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpSaveAppLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpSaveAppLog.Merge(m, src)
}
func (m *TLHelpSaveAppLog) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpSaveAppLog) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpSaveAppLog.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpSaveAppLog proto.InternalMessageInfo

func (m *TLHelpSaveAppLog) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpSaveAppLog) GetEvents() []*InputAppEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

type TLHelpGetPassportConfig struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 int32         `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetPassportConfig) Reset()         { *m = TLHelpGetPassportConfig{} }
func (m *TLHelpGetPassportConfig) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetPassportConfig) ProtoMessage()    {}
func (*TLHelpGetPassportConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{311}
}
func (m *TLHelpGetPassportConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetPassportConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetPassportConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetPassportConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetPassportConfig.Merge(m, src)
}
func (m *TLHelpGetPassportConfig) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetPassportConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetPassportConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetPassportConfig proto.InternalMessageInfo

func (m *TLHelpGetPassportConfig) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpGetPassportConfig) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLHelpGetSupportName struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetSupportName) Reset()         { *m = TLHelpGetSupportName{} }
func (m *TLHelpGetSupportName) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetSupportName) ProtoMessage()    {}
func (*TLHelpGetSupportName) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{312}
}
func (m *TLHelpGetSupportName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetSupportName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetSupportName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetSupportName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetSupportName.Merge(m, src)
}
func (m *TLHelpGetSupportName) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetSupportName) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetSupportName.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetSupportName proto.InternalMessageInfo

func (m *TLHelpGetSupportName) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLHelpGetUserInfo struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetUserInfo) Reset()         { *m = TLHelpGetUserInfo{} }
func (m *TLHelpGetUserInfo) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetUserInfo) ProtoMessage()    {}
func (*TLHelpGetUserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{313}
}
func (m *TLHelpGetUserInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetUserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetUserInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetUserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetUserInfo.Merge(m, src)
}
func (m *TLHelpGetUserInfo) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetUserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetUserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetUserInfo proto.InternalMessageInfo

func (m *TLHelpGetUserInfo) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpGetUserInfo) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

type TLHelpEditUserInfo struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	UserId               *InputUser       `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Message              string           `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Entities             []*MessageEntity `protobuf:"bytes,5,rep,name=entities,proto3" json:"entities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLHelpEditUserInfo) Reset()         { *m = TLHelpEditUserInfo{} }
func (m *TLHelpEditUserInfo) String() string { return proto.CompactTextString(m) }
func (*TLHelpEditUserInfo) ProtoMessage()    {}
func (*TLHelpEditUserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{314}
}
func (m *TLHelpEditUserInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpEditUserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpEditUserInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpEditUserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpEditUserInfo.Merge(m, src)
}
func (m *TLHelpEditUserInfo) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpEditUserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpEditUserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpEditUserInfo proto.InternalMessageInfo

func (m *TLHelpEditUserInfo) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpEditUserInfo) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLHelpEditUserInfo) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TLHelpEditUserInfo) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

type TLHelpGetPromoData struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetPromoData) Reset()         { *m = TLHelpGetPromoData{} }
func (m *TLHelpGetPromoData) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetPromoData) ProtoMessage()    {}
func (*TLHelpGetPromoData) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{315}
}
func (m *TLHelpGetPromoData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetPromoData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetPromoData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetPromoData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetPromoData.Merge(m, src)
}
func (m *TLHelpGetPromoData) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetPromoData) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetPromoData.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetPromoData proto.InternalMessageInfo

func (m *TLHelpGetPromoData) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLHelpHidePromoData struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpHidePromoData) Reset()         { *m = TLHelpHidePromoData{} }
func (m *TLHelpHidePromoData) String() string { return proto.CompactTextString(m) }
func (*TLHelpHidePromoData) ProtoMessage()    {}
func (*TLHelpHidePromoData) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{316}
}
func (m *TLHelpHidePromoData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpHidePromoData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpHidePromoData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpHidePromoData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpHidePromoData.Merge(m, src)
}
func (m *TLHelpHidePromoData) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpHidePromoData) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpHidePromoData.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpHidePromoData proto.InternalMessageInfo

func (m *TLHelpHidePromoData) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpHidePromoData) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type TLHelpDismissSuggestion struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Suggestion           string        `protobuf:"bytes,4,opt,name=suggestion,proto3" json:"suggestion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpDismissSuggestion) Reset()         { *m = TLHelpDismissSuggestion{} }
func (m *TLHelpDismissSuggestion) String() string { return proto.CompactTextString(m) }
func (*TLHelpDismissSuggestion) ProtoMessage()    {}
func (*TLHelpDismissSuggestion) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{317}
}
func (m *TLHelpDismissSuggestion) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpDismissSuggestion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpDismissSuggestion.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpDismissSuggestion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpDismissSuggestion.Merge(m, src)
}
func (m *TLHelpDismissSuggestion) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpDismissSuggestion) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpDismissSuggestion.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpDismissSuggestion proto.InternalMessageInfo

func (m *TLHelpDismissSuggestion) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpDismissSuggestion) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLHelpDismissSuggestion) GetSuggestion() string {
	if m != nil {
		return m.Suggestion
	}
	return ""
}

type TLHelpGetCountriesList struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	LangCode             string        `protobuf:"bytes,3,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	Hash                 int32         `protobuf:"varint,4,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpGetCountriesList) Reset()         { *m = TLHelpGetCountriesList{} }
func (m *TLHelpGetCountriesList) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetCountriesList) ProtoMessage()    {}
func (*TLHelpGetCountriesList) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{318}
}
func (m *TLHelpGetCountriesList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetCountriesList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetCountriesList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetCountriesList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetCountriesList.Merge(m, src)
}
func (m *TLHelpGetCountriesList) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetCountriesList) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetCountriesList.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetCountriesList proto.InternalMessageInfo

func (m *TLHelpGetCountriesList) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLHelpGetCountriesList) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

func (m *TLHelpGetCountriesList) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLChannelsReadHistory struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	MaxId                int32         `protobuf:"varint,4,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsReadHistory) Reset()         { *m = TLChannelsReadHistory{} }
func (m *TLChannelsReadHistory) String() string { return proto.CompactTextString(m) }
func (*TLChannelsReadHistory) ProtoMessage()    {}
func (*TLChannelsReadHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{319}
}
func (m *TLChannelsReadHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsReadHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsReadHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsReadHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsReadHistory.Merge(m, src)
}
func (m *TLChannelsReadHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsReadHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsReadHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsReadHistory proto.InternalMessageInfo

func (m *TLChannelsReadHistory) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsReadHistory) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsReadHistory) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

type TLChannelsDeleteMessages struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Id                   []int32       `protobuf:"varint,4,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsDeleteMessages) Reset()         { *m = TLChannelsDeleteMessages{} }
func (m *TLChannelsDeleteMessages) String() string { return proto.CompactTextString(m) }
func (*TLChannelsDeleteMessages) ProtoMessage()    {}
func (*TLChannelsDeleteMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{320}
}
func (m *TLChannelsDeleteMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsDeleteMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsDeleteMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsDeleteMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsDeleteMessages.Merge(m, src)
}
func (m *TLChannelsDeleteMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsDeleteMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsDeleteMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsDeleteMessages proto.InternalMessageInfo

func (m *TLChannelsDeleteMessages) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsDeleteMessages) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsDeleteMessages) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

type TLChannelsReportSpam struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Participant          *InputPeer    `protobuf:"bytes,4,opt,name=participant,proto3" json:"participant,omitempty"`
	Id                   []int32       `protobuf:"varint,5,rep,packed,name=id,proto3" json:"id,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsReportSpam) Reset()         { *m = TLChannelsReportSpam{} }
func (m *TLChannelsReportSpam) String() string { return proto.CompactTextString(m) }
func (*TLChannelsReportSpam) ProtoMessage()    {}
func (*TLChannelsReportSpam) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{321}
}
func (m *TLChannelsReportSpam) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsReportSpam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsReportSpam.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsReportSpam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsReportSpam.Merge(m, src)
}
func (m *TLChannelsReportSpam) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsReportSpam) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsReportSpam.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsReportSpam proto.InternalMessageInfo

func (m *TLChannelsReportSpam) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsReportSpam) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsReportSpam) GetParticipant() *InputPeer {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *TLChannelsReportSpam) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLChannelsReportSpam) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

type TLChannelsGetMessages struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel   `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Id                   []*InputMessage `protobuf:"bytes,4,rep,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLChannelsGetMessages) Reset()         { *m = TLChannelsGetMessages{} }
func (m *TLChannelsGetMessages) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetMessages) ProtoMessage()    {}
func (*TLChannelsGetMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{322}
}
func (m *TLChannelsGetMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsGetMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetMessages.Merge(m, src)
}
func (m *TLChannelsGetMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetMessages proto.InternalMessageInfo

func (m *TLChannelsGetMessages) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsGetMessages) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsGetMessages) GetId() []*InputMessage {
	if m != nil {
		return m.Id
	}
	return nil
}

type TLChannelsGetParticipants struct {
	Constructor          TLConstructor              `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel              `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Filter               *ChannelParticipantsFilter `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	Offset               int32                      `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32                      `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Hash                 int64                      `protobuf:"varint,7,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *TLChannelsGetParticipants) Reset()         { *m = TLChannelsGetParticipants{} }
func (m *TLChannelsGetParticipants) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetParticipants) ProtoMessage()    {}
func (*TLChannelsGetParticipants) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{323}
}
func (m *TLChannelsGetParticipants) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetParticipants) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetParticipants.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsGetParticipants) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetParticipants.Merge(m, src)
}
func (m *TLChannelsGetParticipants) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetParticipants) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetParticipants.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetParticipants proto.InternalMessageInfo

func (m *TLChannelsGetParticipants) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsGetParticipants) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsGetParticipants) GetFilter() *ChannelParticipantsFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *TLChannelsGetParticipants) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLChannelsGetParticipants) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLChannelsGetParticipants) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLChannelsGetParticipant struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Participant          *InputPeer    `protobuf:"bytes,4,opt,name=participant,proto3" json:"participant,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsGetParticipant) Reset()         { *m = TLChannelsGetParticipant{} }
func (m *TLChannelsGetParticipant) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetParticipant) ProtoMessage()    {}
func (*TLChannelsGetParticipant) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{324}
}
func (m *TLChannelsGetParticipant) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetParticipant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetParticipant.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsGetParticipant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetParticipant.Merge(m, src)
}
func (m *TLChannelsGetParticipant) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetParticipant) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetParticipant.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetParticipant proto.InternalMessageInfo

func (m *TLChannelsGetParticipant) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsGetParticipant) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsGetParticipant) GetParticipant() *InputPeer {
	if m != nil {
		return m.Participant
	}
	return nil
}

type TLChannelsGetChannels struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   []*InputChannel `protobuf:"bytes,3,rep,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLChannelsGetChannels) Reset()         { *m = TLChannelsGetChannels{} }
func (m *TLChannelsGetChannels) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetChannels) ProtoMessage()    {}
func (*TLChannelsGetChannels) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{325}
}
func (m *TLChannelsGetChannels) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetChannels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetChannels.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsGetChannels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetChannels.Merge(m, src)
}
func (m *TLChannelsGetChannels) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetChannels) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetChannels.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetChannels proto.InternalMessageInfo

func (m *TLChannelsGetChannels) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsGetChannels) GetId() []*InputChannel {
	if m != nil {
		return m.Id
	}
	return nil
}

type TLChannelsGetFullChannel struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsGetFullChannel) Reset()         { *m = TLChannelsGetFullChannel{} }
func (m *TLChannelsGetFullChannel) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetFullChannel) ProtoMessage()    {}
func (*TLChannelsGetFullChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{326}
}
func (m *TLChannelsGetFullChannel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetFullChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetFullChannel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsGetFullChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetFullChannel.Merge(m, src)
}
func (m *TLChannelsGetFullChannel) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetFullChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetFullChannel.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetFullChannel proto.InternalMessageInfo

func (m *TLChannelsGetFullChannel) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsGetFullChannel) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

type TLChannelsCreateChannel struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Broadcast            bool               `protobuf:"varint,3,opt,name=broadcast,proto3" json:"broadcast,omitempty"`
	Megagroup            bool               `protobuf:"varint,4,opt,name=megagroup,proto3" json:"megagroup,omitempty"`
	ForImport            bool               `protobuf:"varint,5,opt,name=for_import,json=forImport,proto3" json:"for_import,omitempty"`
	Title                string             `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	About                string             `protobuf:"bytes,7,opt,name=about,proto3" json:"about,omitempty"`
	GeoPoint             *InputGeoPoint     `protobuf:"bytes,8,opt,name=geo_point,json=geoPoint,proto3" json:"geo_point,omitempty"`
	Address              *types.StringValue `protobuf:"bytes,9,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLChannelsCreateChannel) Reset()         { *m = TLChannelsCreateChannel{} }
func (m *TLChannelsCreateChannel) String() string { return proto.CompactTextString(m) }
func (*TLChannelsCreateChannel) ProtoMessage()    {}
func (*TLChannelsCreateChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{327}
}
func (m *TLChannelsCreateChannel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsCreateChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsCreateChannel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsCreateChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsCreateChannel.Merge(m, src)
}
func (m *TLChannelsCreateChannel) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsCreateChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsCreateChannel.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsCreateChannel proto.InternalMessageInfo

func (m *TLChannelsCreateChannel) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsCreateChannel) GetBroadcast() bool {
	if m != nil {
		return m.Broadcast
	}
	return false
}

func (m *TLChannelsCreateChannel) GetMegagroup() bool {
	if m != nil {
		return m.Megagroup
	}
	return false
}

func (m *TLChannelsCreateChannel) GetForImport() bool {
	if m != nil {
		return m.ForImport
	}
	return false
}

func (m *TLChannelsCreateChannel) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TLChannelsCreateChannel) GetAbout() string {
	if m != nil {
		return m.About
	}
	return ""
}

func (m *TLChannelsCreateChannel) GetGeoPoint() *InputGeoPoint {
	if m != nil {
		return m.GeoPoint
	}
	return nil
}

func (m *TLChannelsCreateChannel) GetAddress() *types.StringValue {
	if m != nil {
		return m.Address
	}
	return nil
}

type TLChannelsEditAdmin struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel    `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	UserId               *InputUser       `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AdminRights          *ChatAdminRights `protobuf:"bytes,5,opt,name=admin_rights,json=adminRights,proto3" json:"admin_rights,omitempty"`
	Rank                 string           `protobuf:"bytes,6,opt,name=rank,proto3" json:"rank,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLChannelsEditAdmin) Reset()         { *m = TLChannelsEditAdmin{} }
func (m *TLChannelsEditAdmin) String() string { return proto.CompactTextString(m) }
func (*TLChannelsEditAdmin) ProtoMessage()    {}
func (*TLChannelsEditAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{328}
}
func (m *TLChannelsEditAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsEditAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsEditAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsEditAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsEditAdmin.Merge(m, src)
}
func (m *TLChannelsEditAdmin) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsEditAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsEditAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsEditAdmin proto.InternalMessageInfo

func (m *TLChannelsEditAdmin) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsEditAdmin) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsEditAdmin) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLChannelsEditAdmin) GetAdminRights() *ChatAdminRights {
	if m != nil {
		return m.AdminRights
	}
	return nil
}

func (m *TLChannelsEditAdmin) GetRank() string {
	if m != nil {
		return m.Rank
	}
	return ""
}

type TLChannelsEditTitle struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Title                string        `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsEditTitle) Reset()         { *m = TLChannelsEditTitle{} }
func (m *TLChannelsEditTitle) String() string { return proto.CompactTextString(m) }
func (*TLChannelsEditTitle) ProtoMessage()    {}
func (*TLChannelsEditTitle) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{329}
}
func (m *TLChannelsEditTitle) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsEditTitle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsEditTitle.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsEditTitle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsEditTitle.Merge(m, src)
}
func (m *TLChannelsEditTitle) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsEditTitle) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsEditTitle.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsEditTitle proto.InternalMessageInfo

func (m *TLChannelsEditTitle) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsEditTitle) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsEditTitle) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type TLChannelsEditPhoto struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel   `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Photo                *InputChatPhoto `protobuf:"bytes,4,opt,name=photo,proto3" json:"photo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLChannelsEditPhoto) Reset()         { *m = TLChannelsEditPhoto{} }
func (m *TLChannelsEditPhoto) String() string { return proto.CompactTextString(m) }
func (*TLChannelsEditPhoto) ProtoMessage()    {}
func (*TLChannelsEditPhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{330}
}
func (m *TLChannelsEditPhoto) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsEditPhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsEditPhoto.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsEditPhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsEditPhoto.Merge(m, src)
}
func (m *TLChannelsEditPhoto) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsEditPhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsEditPhoto.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsEditPhoto proto.InternalMessageInfo

func (m *TLChannelsEditPhoto) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsEditPhoto) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsEditPhoto) GetPhoto() *InputChatPhoto {
	if m != nil {
		return m.Photo
	}
	return nil
}

type TLChannelsCheckUsername struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Username             string        `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsCheckUsername) Reset()         { *m = TLChannelsCheckUsername{} }
func (m *TLChannelsCheckUsername) String() string { return proto.CompactTextString(m) }
func (*TLChannelsCheckUsername) ProtoMessage()    {}
func (*TLChannelsCheckUsername) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{331}
}
func (m *TLChannelsCheckUsername) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsCheckUsername) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsCheckUsername.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsCheckUsername) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsCheckUsername.Merge(m, src)
}
func (m *TLChannelsCheckUsername) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsCheckUsername) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsCheckUsername.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsCheckUsername proto.InternalMessageInfo

func (m *TLChannelsCheckUsername) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsCheckUsername) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsCheckUsername) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type TLChannelsUpdateUsername struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Username             string        `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsUpdateUsername) Reset()         { *m = TLChannelsUpdateUsername{} }
func (m *TLChannelsUpdateUsername) String() string { return proto.CompactTextString(m) }
func (*TLChannelsUpdateUsername) ProtoMessage()    {}
func (*TLChannelsUpdateUsername) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{332}
}
func (m *TLChannelsUpdateUsername) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsUpdateUsername) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsUpdateUsername.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsUpdateUsername) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsUpdateUsername.Merge(m, src)
}
func (m *TLChannelsUpdateUsername) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsUpdateUsername) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsUpdateUsername.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsUpdateUsername proto.InternalMessageInfo

func (m *TLChannelsUpdateUsername) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsUpdateUsername) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsUpdateUsername) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type TLChannelsJoinChannel struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsJoinChannel) Reset()         { *m = TLChannelsJoinChannel{} }
func (m *TLChannelsJoinChannel) String() string { return proto.CompactTextString(m) }
func (*TLChannelsJoinChannel) ProtoMessage()    {}
func (*TLChannelsJoinChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{333}
}
func (m *TLChannelsJoinChannel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsJoinChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsJoinChannel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsJoinChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsJoinChannel.Merge(m, src)
}
func (m *TLChannelsJoinChannel) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsJoinChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsJoinChannel.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsJoinChannel proto.InternalMessageInfo

func (m *TLChannelsJoinChannel) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsJoinChannel) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

type TLChannelsLeaveChannel struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsLeaveChannel) Reset()         { *m = TLChannelsLeaveChannel{} }
func (m *TLChannelsLeaveChannel) String() string { return proto.CompactTextString(m) }
func (*TLChannelsLeaveChannel) ProtoMessage()    {}
func (*TLChannelsLeaveChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{334}
}
func (m *TLChannelsLeaveChannel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsLeaveChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsLeaveChannel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsLeaveChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsLeaveChannel.Merge(m, src)
}
func (m *TLChannelsLeaveChannel) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsLeaveChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsLeaveChannel.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsLeaveChannel proto.InternalMessageInfo

func (m *TLChannelsLeaveChannel) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsLeaveChannel) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

type TLChannelsInviteToChannel struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Users                []*InputUser  `protobuf:"bytes,4,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsInviteToChannel) Reset()         { *m = TLChannelsInviteToChannel{} }
func (m *TLChannelsInviteToChannel) String() string { return proto.CompactTextString(m) }
func (*TLChannelsInviteToChannel) ProtoMessage()    {}
func (*TLChannelsInviteToChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{335}
}
func (m *TLChannelsInviteToChannel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsInviteToChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsInviteToChannel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsInviteToChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsInviteToChannel.Merge(m, src)
}
func (m *TLChannelsInviteToChannel) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsInviteToChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsInviteToChannel.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsInviteToChannel proto.InternalMessageInfo

func (m *TLChannelsInviteToChannel) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsInviteToChannel) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsInviteToChannel) GetUsers() []*InputUser {
	if m != nil {
		return m.Users
	}
	return nil
}

type TLChannelsDeleteChannel struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsDeleteChannel) Reset()         { *m = TLChannelsDeleteChannel{} }
func (m *TLChannelsDeleteChannel) String() string { return proto.CompactTextString(m) }
func (*TLChannelsDeleteChannel) ProtoMessage()    {}
func (*TLChannelsDeleteChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{336}
}
func (m *TLChannelsDeleteChannel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsDeleteChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsDeleteChannel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsDeleteChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsDeleteChannel.Merge(m, src)
}
func (m *TLChannelsDeleteChannel) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsDeleteChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsDeleteChannel.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsDeleteChannel proto.InternalMessageInfo

func (m *TLChannelsDeleteChannel) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsDeleteChannel) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

type TLChannelsExportMessageLink struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Grouped              bool          `protobuf:"varint,3,opt,name=grouped,proto3" json:"grouped,omitempty"`
	Thread               bool          `protobuf:"varint,4,opt,name=thread,proto3" json:"thread,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	Id                   int32         `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsExportMessageLink) Reset()         { *m = TLChannelsExportMessageLink{} }
func (m *TLChannelsExportMessageLink) String() string { return proto.CompactTextString(m) }
func (*TLChannelsExportMessageLink) ProtoMessage()    {}
func (*TLChannelsExportMessageLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{337}
}
func (m *TLChannelsExportMessageLink) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsExportMessageLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsExportMessageLink.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsExportMessageLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsExportMessageLink.Merge(m, src)
}
func (m *TLChannelsExportMessageLink) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsExportMessageLink) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsExportMessageLink.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsExportMessageLink proto.InternalMessageInfo

func (m *TLChannelsExportMessageLink) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsExportMessageLink) GetGrouped() bool {
	if m != nil {
		return m.Grouped
	}
	return false
}

func (m *TLChannelsExportMessageLink) GetThread() bool {
	if m != nil {
		return m.Thread
	}
	return false
}

func (m *TLChannelsExportMessageLink) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsExportMessageLink) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type TLChannelsToggleSignatures struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Enabled              *Bool         `protobuf:"bytes,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsToggleSignatures) Reset()         { *m = TLChannelsToggleSignatures{} }
func (m *TLChannelsToggleSignatures) String() string { return proto.CompactTextString(m) }
func (*TLChannelsToggleSignatures) ProtoMessage()    {}
func (*TLChannelsToggleSignatures) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{338}
}
func (m *TLChannelsToggleSignatures) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsToggleSignatures) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsToggleSignatures.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsToggleSignatures) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsToggleSignatures.Merge(m, src)
}
func (m *TLChannelsToggleSignatures) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsToggleSignatures) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsToggleSignatures.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsToggleSignatures proto.InternalMessageInfo

func (m *TLChannelsToggleSignatures) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsToggleSignatures) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsToggleSignatures) GetEnabled() *Bool {
	if m != nil {
		return m.Enabled
	}
	return nil
}

type TLChannelsGetAdminedPublicChannels struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ByLocation           bool          `protobuf:"varint,3,opt,name=by_location,json=byLocation,proto3" json:"by_location,omitempty"`
	CheckLimit           bool          `protobuf:"varint,4,opt,name=check_limit,json=checkLimit,proto3" json:"check_limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsGetAdminedPublicChannels) Reset()         { *m = TLChannelsGetAdminedPublicChannels{} }
func (m *TLChannelsGetAdminedPublicChannels) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetAdminedPublicChannels) ProtoMessage()    {}
func (*TLChannelsGetAdminedPublicChannels) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{339}
}
func (m *TLChannelsGetAdminedPublicChannels) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetAdminedPublicChannels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetAdminedPublicChannels.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsGetAdminedPublicChannels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetAdminedPublicChannels.Merge(m, src)
}
func (m *TLChannelsGetAdminedPublicChannels) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetAdminedPublicChannels) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetAdminedPublicChannels.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetAdminedPublicChannels proto.InternalMessageInfo

func (m *TLChannelsGetAdminedPublicChannels) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsGetAdminedPublicChannels) GetByLocation() bool {
	if m != nil {
		return m.ByLocation
	}
	return false
}

func (m *TLChannelsGetAdminedPublicChannels) GetCheckLimit() bool {
	if m != nil {
		return m.CheckLimit
	}
	return false
}

type TLChannelsEditBanned struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel     `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Participant          *InputPeer        `protobuf:"bytes,4,opt,name=participant,proto3" json:"participant,omitempty"`
	BannedRights         *ChatBannedRights `protobuf:"bytes,5,opt,name=banned_rights,json=bannedRights,proto3" json:"banned_rights,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLChannelsEditBanned) Reset()         { *m = TLChannelsEditBanned{} }
func (m *TLChannelsEditBanned) String() string { return proto.CompactTextString(m) }
func (*TLChannelsEditBanned) ProtoMessage()    {}
func (*TLChannelsEditBanned) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{340}
}
func (m *TLChannelsEditBanned) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsEditBanned) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsEditBanned.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsEditBanned) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsEditBanned.Merge(m, src)
}
func (m *TLChannelsEditBanned) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsEditBanned) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsEditBanned.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsEditBanned proto.InternalMessageInfo

func (m *TLChannelsEditBanned) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsEditBanned) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsEditBanned) GetParticipant() *InputPeer {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *TLChannelsEditBanned) GetBannedRights() *ChatBannedRights {
	if m != nil {
		return m.BannedRights
	}
	return nil
}

type TLChannelsGetAdminLog struct {
	Constructor          TLConstructor                `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel                `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Q                    string                       `protobuf:"bytes,4,opt,name=q,proto3" json:"q,omitempty"`
	EventsFilter         *ChannelAdminLogEventsFilter `protobuf:"bytes,5,opt,name=events_filter,json=eventsFilter,proto3" json:"events_filter,omitempty"`
	Admins               []*InputUser                 `protobuf:"bytes,6,rep,name=admins,proto3" json:"admins,omitempty"`
	MaxId                int64                        `protobuf:"varint,7,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	MinId                int64                        `protobuf:"varint,8,opt,name=min_id,json=minId,proto3" json:"min_id,omitempty"`
	Limit                int32                        `protobuf:"varint,9,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *TLChannelsGetAdminLog) Reset()         { *m = TLChannelsGetAdminLog{} }
func (m *TLChannelsGetAdminLog) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetAdminLog) ProtoMessage()    {}
func (*TLChannelsGetAdminLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{341}
}
func (m *TLChannelsGetAdminLog) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetAdminLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetAdminLog.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsGetAdminLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetAdminLog.Merge(m, src)
}
func (m *TLChannelsGetAdminLog) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetAdminLog) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetAdminLog.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetAdminLog proto.InternalMessageInfo

func (m *TLChannelsGetAdminLog) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsGetAdminLog) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsGetAdminLog) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *TLChannelsGetAdminLog) GetEventsFilter() *ChannelAdminLogEventsFilter {
	if m != nil {
		return m.EventsFilter
	}
	return nil
}

func (m *TLChannelsGetAdminLog) GetAdmins() []*InputUser {
	if m != nil {
		return m.Admins
	}
	return nil
}

func (m *TLChannelsGetAdminLog) GetMaxId() int64 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLChannelsGetAdminLog) GetMinId() int64 {
	if m != nil {
		return m.MinId
	}
	return 0
}

func (m *TLChannelsGetAdminLog) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type TLChannelsSetStickers struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel    `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Stickerset           *InputStickerSet `protobuf:"bytes,4,opt,name=stickerset,proto3" json:"stickerset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLChannelsSetStickers) Reset()         { *m = TLChannelsSetStickers{} }
func (m *TLChannelsSetStickers) String() string { return proto.CompactTextString(m) }
func (*TLChannelsSetStickers) ProtoMessage()    {}
func (*TLChannelsSetStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{342}
}
func (m *TLChannelsSetStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsSetStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsSetStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsSetStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsSetStickers.Merge(m, src)
}
func (m *TLChannelsSetStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsSetStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsSetStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsSetStickers proto.InternalMessageInfo

func (m *TLChannelsSetStickers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsSetStickers) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsSetStickers) GetStickerset() *InputStickerSet {
	if m != nil {
		return m.Stickerset
	}
	return nil
}

type TLChannelsReadMessageContents struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Id                   []int32       `protobuf:"varint,4,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsReadMessageContents) Reset()         { *m = TLChannelsReadMessageContents{} }
func (m *TLChannelsReadMessageContents) String() string { return proto.CompactTextString(m) }
func (*TLChannelsReadMessageContents) ProtoMessage()    {}
func (*TLChannelsReadMessageContents) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{343}
}
func (m *TLChannelsReadMessageContents) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsReadMessageContents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsReadMessageContents.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsReadMessageContents) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsReadMessageContents.Merge(m, src)
}
func (m *TLChannelsReadMessageContents) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsReadMessageContents) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsReadMessageContents.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsReadMessageContents proto.InternalMessageInfo

func (m *TLChannelsReadMessageContents) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsReadMessageContents) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsReadMessageContents) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

type TLChannelsDeleteHistory struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	MaxId                int32         `protobuf:"varint,4,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsDeleteHistory) Reset()         { *m = TLChannelsDeleteHistory{} }
func (m *TLChannelsDeleteHistory) String() string { return proto.CompactTextString(m) }
func (*TLChannelsDeleteHistory) ProtoMessage()    {}
func (*TLChannelsDeleteHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{344}
}
func (m *TLChannelsDeleteHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsDeleteHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsDeleteHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsDeleteHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsDeleteHistory.Merge(m, src)
}
func (m *TLChannelsDeleteHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsDeleteHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsDeleteHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsDeleteHistory proto.InternalMessageInfo

func (m *TLChannelsDeleteHistory) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsDeleteHistory) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsDeleteHistory) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

type TLChannelsTogglePreHistoryHidden struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Enabled              *Bool         `protobuf:"bytes,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsTogglePreHistoryHidden) Reset()         { *m = TLChannelsTogglePreHistoryHidden{} }
func (m *TLChannelsTogglePreHistoryHidden) String() string { return proto.CompactTextString(m) }
func (*TLChannelsTogglePreHistoryHidden) ProtoMessage()    {}
func (*TLChannelsTogglePreHistoryHidden) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{345}
}
func (m *TLChannelsTogglePreHistoryHidden) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsTogglePreHistoryHidden) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsTogglePreHistoryHidden.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsTogglePreHistoryHidden) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsTogglePreHistoryHidden.Merge(m, src)
}
func (m *TLChannelsTogglePreHistoryHidden) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsTogglePreHistoryHidden) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsTogglePreHistoryHidden.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsTogglePreHistoryHidden proto.InternalMessageInfo

func (m *TLChannelsTogglePreHistoryHidden) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsTogglePreHistoryHidden) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsTogglePreHistoryHidden) GetEnabled() *Bool {
	if m != nil {
		return m.Enabled
	}
	return nil
}

type TLChannelsGetLeftChannels struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Offset               int32         `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsGetLeftChannels) Reset()         { *m = TLChannelsGetLeftChannels{} }
func (m *TLChannelsGetLeftChannels) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetLeftChannels) ProtoMessage()    {}
func (*TLChannelsGetLeftChannels) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{346}
}
func (m *TLChannelsGetLeftChannels) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetLeftChannels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetLeftChannels.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsGetLeftChannels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetLeftChannels.Merge(m, src)
}
func (m *TLChannelsGetLeftChannels) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetLeftChannels) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetLeftChannels.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetLeftChannels proto.InternalMessageInfo

func (m *TLChannelsGetLeftChannels) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsGetLeftChannels) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type TLChannelsGetGroupsForDiscussion struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsGetGroupsForDiscussion) Reset()         { *m = TLChannelsGetGroupsForDiscussion{} }
func (m *TLChannelsGetGroupsForDiscussion) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetGroupsForDiscussion) ProtoMessage()    {}
func (*TLChannelsGetGroupsForDiscussion) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{347}
}
func (m *TLChannelsGetGroupsForDiscussion) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetGroupsForDiscussion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetGroupsForDiscussion.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsGetGroupsForDiscussion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetGroupsForDiscussion.Merge(m, src)
}
func (m *TLChannelsGetGroupsForDiscussion) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetGroupsForDiscussion) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetGroupsForDiscussion.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetGroupsForDiscussion proto.InternalMessageInfo

func (m *TLChannelsGetGroupsForDiscussion) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLChannelsSetDiscussionGroup struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Broadcast            *InputChannel `protobuf:"bytes,3,opt,name=broadcast,proto3" json:"broadcast,omitempty"`
	Group                *InputChannel `protobuf:"bytes,4,opt,name=group,proto3" json:"group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsSetDiscussionGroup) Reset()         { *m = TLChannelsSetDiscussionGroup{} }
func (m *TLChannelsSetDiscussionGroup) String() string { return proto.CompactTextString(m) }
func (*TLChannelsSetDiscussionGroup) ProtoMessage()    {}
func (*TLChannelsSetDiscussionGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{348}
}
func (m *TLChannelsSetDiscussionGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsSetDiscussionGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsSetDiscussionGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsSetDiscussionGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsSetDiscussionGroup.Merge(m, src)
}
func (m *TLChannelsSetDiscussionGroup) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsSetDiscussionGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsSetDiscussionGroup.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsSetDiscussionGroup proto.InternalMessageInfo

func (m *TLChannelsSetDiscussionGroup) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsSetDiscussionGroup) GetBroadcast() *InputChannel {
	if m != nil {
		return m.Broadcast
	}
	return nil
}

func (m *TLChannelsSetDiscussionGroup) GetGroup() *InputChannel {
	if m != nil {
		return m.Group
	}
	return nil
}

type TLChannelsEditCreator struct {
	Constructor          TLConstructor          `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel          `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	UserId               *InputUser             `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Password             *InputCheckPasswordSRP `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TLChannelsEditCreator) Reset()         { *m = TLChannelsEditCreator{} }
func (m *TLChannelsEditCreator) String() string { return proto.CompactTextString(m) }
func (*TLChannelsEditCreator) ProtoMessage()    {}
func (*TLChannelsEditCreator) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{349}
}
func (m *TLChannelsEditCreator) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsEditCreator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsEditCreator.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsEditCreator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsEditCreator.Merge(m, src)
}
func (m *TLChannelsEditCreator) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsEditCreator) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsEditCreator.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsEditCreator proto.InternalMessageInfo

func (m *TLChannelsEditCreator) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsEditCreator) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsEditCreator) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLChannelsEditCreator) GetPassword() *InputCheckPasswordSRP {
	if m != nil {
		return m.Password
	}
	return nil
}

type TLChannelsEditLocation struct {
	Constructor          TLConstructor  `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel  `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	GeoPoint             *InputGeoPoint `protobuf:"bytes,4,opt,name=geo_point,json=geoPoint,proto3" json:"geo_point,omitempty"`
	Address              string         `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TLChannelsEditLocation) Reset()         { *m = TLChannelsEditLocation{} }
func (m *TLChannelsEditLocation) String() string { return proto.CompactTextString(m) }
func (*TLChannelsEditLocation) ProtoMessage()    {}
func (*TLChannelsEditLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{350}
}
func (m *TLChannelsEditLocation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsEditLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsEditLocation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsEditLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsEditLocation.Merge(m, src)
}
func (m *TLChannelsEditLocation) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsEditLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsEditLocation.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsEditLocation proto.InternalMessageInfo

func (m *TLChannelsEditLocation) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsEditLocation) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsEditLocation) GetGeoPoint() *InputGeoPoint {
	if m != nil {
		return m.GeoPoint
	}
	return nil
}

func (m *TLChannelsEditLocation) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type TLChannelsToggleSlowMode struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Seconds              int32         `protobuf:"varint,4,opt,name=seconds,proto3" json:"seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsToggleSlowMode) Reset()         { *m = TLChannelsToggleSlowMode{} }
func (m *TLChannelsToggleSlowMode) String() string { return proto.CompactTextString(m) }
func (*TLChannelsToggleSlowMode) ProtoMessage()    {}
func (*TLChannelsToggleSlowMode) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{351}
}
func (m *TLChannelsToggleSlowMode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsToggleSlowMode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsToggleSlowMode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsToggleSlowMode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsToggleSlowMode.Merge(m, src)
}
func (m *TLChannelsToggleSlowMode) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsToggleSlowMode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsToggleSlowMode.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsToggleSlowMode proto.InternalMessageInfo

func (m *TLChannelsToggleSlowMode) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsToggleSlowMode) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsToggleSlowMode) GetSeconds() int32 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

type TLChannelsGetInactiveChannels struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsGetInactiveChannels) Reset()         { *m = TLChannelsGetInactiveChannels{} }
func (m *TLChannelsGetInactiveChannels) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetInactiveChannels) ProtoMessage()    {}
func (*TLChannelsGetInactiveChannels) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{352}
}
func (m *TLChannelsGetInactiveChannels) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetInactiveChannels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetInactiveChannels.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsGetInactiveChannels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetInactiveChannels.Merge(m, src)
}
func (m *TLChannelsGetInactiveChannels) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetInactiveChannels) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetInactiveChannels.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetInactiveChannels proto.InternalMessageInfo

func (m *TLChannelsGetInactiveChannels) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLChannelsConvertToGigagroup struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsConvertToGigagroup) Reset()         { *m = TLChannelsConvertToGigagroup{} }
func (m *TLChannelsConvertToGigagroup) String() string { return proto.CompactTextString(m) }
func (*TLChannelsConvertToGigagroup) ProtoMessage()    {}
func (*TLChannelsConvertToGigagroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{353}
}
func (m *TLChannelsConvertToGigagroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsConvertToGigagroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsConvertToGigagroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsConvertToGigagroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsConvertToGigagroup.Merge(m, src)
}
func (m *TLChannelsConvertToGigagroup) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsConvertToGigagroup) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsConvertToGigagroup.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsConvertToGigagroup proto.InternalMessageInfo

func (m *TLChannelsConvertToGigagroup) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsConvertToGigagroup) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

type TLChannelsViewSponsoredMessage struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	RandomId             []byte        `protobuf:"bytes,4,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsViewSponsoredMessage) Reset()         { *m = TLChannelsViewSponsoredMessage{} }
func (m *TLChannelsViewSponsoredMessage) String() string { return proto.CompactTextString(m) }
func (*TLChannelsViewSponsoredMessage) ProtoMessage()    {}
func (*TLChannelsViewSponsoredMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{354}
}
func (m *TLChannelsViewSponsoredMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsViewSponsoredMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsViewSponsoredMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsViewSponsoredMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsViewSponsoredMessage.Merge(m, src)
}
func (m *TLChannelsViewSponsoredMessage) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsViewSponsoredMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsViewSponsoredMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsViewSponsoredMessage proto.InternalMessageInfo

func (m *TLChannelsViewSponsoredMessage) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsViewSponsoredMessage) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsViewSponsoredMessage) GetRandomId() []byte {
	if m != nil {
		return m.RandomId
	}
	return nil
}

type TLChannelsGetSponsoredMessages struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsGetSponsoredMessages) Reset()         { *m = TLChannelsGetSponsoredMessages{} }
func (m *TLChannelsGetSponsoredMessages) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetSponsoredMessages) ProtoMessage()    {}
func (*TLChannelsGetSponsoredMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{355}
}
func (m *TLChannelsGetSponsoredMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetSponsoredMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetSponsoredMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsGetSponsoredMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetSponsoredMessages.Merge(m, src)
}
func (m *TLChannelsGetSponsoredMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetSponsoredMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetSponsoredMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetSponsoredMessages proto.InternalMessageInfo

func (m *TLChannelsGetSponsoredMessages) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsGetSponsoredMessages) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

type TLChannelsGetSendAs struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsGetSendAs) Reset()         { *m = TLChannelsGetSendAs{} }
func (m *TLChannelsGetSendAs) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetSendAs) ProtoMessage()    {}
func (*TLChannelsGetSendAs) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{356}
}
func (m *TLChannelsGetSendAs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetSendAs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetSendAs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsGetSendAs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetSendAs.Merge(m, src)
}
func (m *TLChannelsGetSendAs) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetSendAs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetSendAs.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetSendAs proto.InternalMessageInfo

func (m *TLChannelsGetSendAs) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsGetSendAs) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type TLChannelsDeleteParticipantHistory struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Participant          *InputPeer    `protobuf:"bytes,4,opt,name=participant,proto3" json:"participant,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsDeleteParticipantHistory) Reset()         { *m = TLChannelsDeleteParticipantHistory{} }
func (m *TLChannelsDeleteParticipantHistory) String() string { return proto.CompactTextString(m) }
func (*TLChannelsDeleteParticipantHistory) ProtoMessage()    {}
func (*TLChannelsDeleteParticipantHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{357}
}
func (m *TLChannelsDeleteParticipantHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsDeleteParticipantHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsDeleteParticipantHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsDeleteParticipantHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsDeleteParticipantHistory.Merge(m, src)
}
func (m *TLChannelsDeleteParticipantHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsDeleteParticipantHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsDeleteParticipantHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsDeleteParticipantHistory proto.InternalMessageInfo

func (m *TLChannelsDeleteParticipantHistory) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsDeleteParticipantHistory) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsDeleteParticipantHistory) GetParticipant() *InputPeer {
	if m != nil {
		return m.Participant
	}
	return nil
}

type TLBotsSendCustomRequest struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	CustomMethod         string        `protobuf:"bytes,3,opt,name=custom_method,json=customMethod,proto3" json:"custom_method,omitempty"`
	Params               *DataJSON     `protobuf:"bytes,4,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBotsSendCustomRequest) Reset()         { *m = TLBotsSendCustomRequest{} }
func (m *TLBotsSendCustomRequest) String() string { return proto.CompactTextString(m) }
func (*TLBotsSendCustomRequest) ProtoMessage()    {}
func (*TLBotsSendCustomRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{358}
}
func (m *TLBotsSendCustomRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBotsSendCustomRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBotsSendCustomRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLBotsSendCustomRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBotsSendCustomRequest.Merge(m, src)
}
func (m *TLBotsSendCustomRequest) XXX_Size() int {
	return m.Size()
}
func (m *TLBotsSendCustomRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBotsSendCustomRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TLBotsSendCustomRequest proto.InternalMessageInfo

func (m *TLBotsSendCustomRequest) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBotsSendCustomRequest) GetCustomMethod() string {
	if m != nil {
		return m.CustomMethod
	}
	return ""
}

func (m *TLBotsSendCustomRequest) GetParams() *DataJSON {
	if m != nil {
		return m.Params
	}
	return nil
}

type TLBotsAnswerWebhookJSONQuery struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	QueryId              int64         `protobuf:"varint,3,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Data                 *DataJSON     `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBotsAnswerWebhookJSONQuery) Reset()         { *m = TLBotsAnswerWebhookJSONQuery{} }
func (m *TLBotsAnswerWebhookJSONQuery) String() string { return proto.CompactTextString(m) }
func (*TLBotsAnswerWebhookJSONQuery) ProtoMessage()    {}
func (*TLBotsAnswerWebhookJSONQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{359}
}
func (m *TLBotsAnswerWebhookJSONQuery) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBotsAnswerWebhookJSONQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBotsAnswerWebhookJSONQuery.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLBotsAnswerWebhookJSONQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBotsAnswerWebhookJSONQuery.Merge(m, src)
}
func (m *TLBotsAnswerWebhookJSONQuery) XXX_Size() int {
	return m.Size()
}
func (m *TLBotsAnswerWebhookJSONQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBotsAnswerWebhookJSONQuery.DiscardUnknown(m)
}

var xxx_messageInfo_TLBotsAnswerWebhookJSONQuery proto.InternalMessageInfo

func (m *TLBotsAnswerWebhookJSONQuery) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBotsAnswerWebhookJSONQuery) GetQueryId() int64 {
	if m != nil {
		return m.QueryId
	}
	return 0
}

func (m *TLBotsAnswerWebhookJSONQuery) GetData() *DataJSON {
	if m != nil {
		return m.Data
	}
	return nil
}

type TLBotsSetBotCommands struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Scope                *BotCommandScope `protobuf:"bytes,3,opt,name=scope,proto3" json:"scope,omitempty"`
	LangCode             string           `protobuf:"bytes,4,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	Commands             []*BotCommand    `protobuf:"bytes,5,rep,name=commands,proto3" json:"commands,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLBotsSetBotCommands) Reset()         { *m = TLBotsSetBotCommands{} }
func (m *TLBotsSetBotCommands) String() string { return proto.CompactTextString(m) }
func (*TLBotsSetBotCommands) ProtoMessage()    {}
func (*TLBotsSetBotCommands) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{360}
}
func (m *TLBotsSetBotCommands) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBotsSetBotCommands) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBotsSetBotCommands.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLBotsSetBotCommands) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBotsSetBotCommands.Merge(m, src)
}
func (m *TLBotsSetBotCommands) XXX_Size() int {
	return m.Size()
}
func (m *TLBotsSetBotCommands) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBotsSetBotCommands.DiscardUnknown(m)
}

var xxx_messageInfo_TLBotsSetBotCommands proto.InternalMessageInfo

func (m *TLBotsSetBotCommands) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBotsSetBotCommands) GetScope() *BotCommandScope {
	if m != nil {
		return m.Scope
	}
	return nil
}

func (m *TLBotsSetBotCommands) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

func (m *TLBotsSetBotCommands) GetCommands() []*BotCommand {
	if m != nil {
		return m.Commands
	}
	return nil
}

type TLBotsResetBotCommands struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Scope                *BotCommandScope `protobuf:"bytes,3,opt,name=scope,proto3" json:"scope,omitempty"`
	LangCode             string           `protobuf:"bytes,4,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLBotsResetBotCommands) Reset()         { *m = TLBotsResetBotCommands{} }
func (m *TLBotsResetBotCommands) String() string { return proto.CompactTextString(m) }
func (*TLBotsResetBotCommands) ProtoMessage()    {}
func (*TLBotsResetBotCommands) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{361}
}
func (m *TLBotsResetBotCommands) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBotsResetBotCommands) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBotsResetBotCommands.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLBotsResetBotCommands) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBotsResetBotCommands.Merge(m, src)
}
func (m *TLBotsResetBotCommands) XXX_Size() int {
	return m.Size()
}
func (m *TLBotsResetBotCommands) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBotsResetBotCommands.DiscardUnknown(m)
}

var xxx_messageInfo_TLBotsResetBotCommands proto.InternalMessageInfo

func (m *TLBotsResetBotCommands) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBotsResetBotCommands) GetScope() *BotCommandScope {
	if m != nil {
		return m.Scope
	}
	return nil
}

func (m *TLBotsResetBotCommands) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

type TLBotsGetBotCommands struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Scope                *BotCommandScope `protobuf:"bytes,3,opt,name=scope,proto3" json:"scope,omitempty"`
	LangCode             string           `protobuf:"bytes,4,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLBotsGetBotCommands) Reset()         { *m = TLBotsGetBotCommands{} }
func (m *TLBotsGetBotCommands) String() string { return proto.CompactTextString(m) }
func (*TLBotsGetBotCommands) ProtoMessage()    {}
func (*TLBotsGetBotCommands) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{362}
}
func (m *TLBotsGetBotCommands) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBotsGetBotCommands) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBotsGetBotCommands.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLBotsGetBotCommands) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBotsGetBotCommands.Merge(m, src)
}
func (m *TLBotsGetBotCommands) XXX_Size() int {
	return m.Size()
}
func (m *TLBotsGetBotCommands) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBotsGetBotCommands.DiscardUnknown(m)
}

var xxx_messageInfo_TLBotsGetBotCommands proto.InternalMessageInfo

func (m *TLBotsGetBotCommands) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBotsGetBotCommands) GetScope() *BotCommandScope {
	if m != nil {
		return m.Scope
	}
	return nil
}

func (m *TLBotsGetBotCommands) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

type TLPaymentsGetPaymentForm struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32         `protobuf:"varint,4,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	ThemeParams          *DataJSON     `protobuf:"bytes,5,opt,name=theme_params,json=themeParams,proto3" json:"theme_params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPaymentsGetPaymentForm) Reset()         { *m = TLPaymentsGetPaymentForm{} }
func (m *TLPaymentsGetPaymentForm) String() string { return proto.CompactTextString(m) }
func (*TLPaymentsGetPaymentForm) ProtoMessage()    {}
func (*TLPaymentsGetPaymentForm) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{363}
}
func (m *TLPaymentsGetPaymentForm) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPaymentsGetPaymentForm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPaymentsGetPaymentForm.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPaymentsGetPaymentForm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPaymentsGetPaymentForm.Merge(m, src)
}
func (m *TLPaymentsGetPaymentForm) XXX_Size() int {
	return m.Size()
}
func (m *TLPaymentsGetPaymentForm) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPaymentsGetPaymentForm.DiscardUnknown(m)
}

var xxx_messageInfo_TLPaymentsGetPaymentForm proto.InternalMessageInfo

func (m *TLPaymentsGetPaymentForm) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPaymentsGetPaymentForm) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLPaymentsGetPaymentForm) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLPaymentsGetPaymentForm) GetThemeParams() *DataJSON {
	if m != nil {
		return m.ThemeParams
	}
	return nil
}

type TLPaymentsGetPaymentReceipt struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32         `protobuf:"varint,4,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPaymentsGetPaymentReceipt) Reset()         { *m = TLPaymentsGetPaymentReceipt{} }
func (m *TLPaymentsGetPaymentReceipt) String() string { return proto.CompactTextString(m) }
func (*TLPaymentsGetPaymentReceipt) ProtoMessage()    {}
func (*TLPaymentsGetPaymentReceipt) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{364}
}
func (m *TLPaymentsGetPaymentReceipt) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPaymentsGetPaymentReceipt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPaymentsGetPaymentReceipt.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPaymentsGetPaymentReceipt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPaymentsGetPaymentReceipt.Merge(m, src)
}
func (m *TLPaymentsGetPaymentReceipt) XXX_Size() int {
	return m.Size()
}
func (m *TLPaymentsGetPaymentReceipt) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPaymentsGetPaymentReceipt.DiscardUnknown(m)
}

var xxx_messageInfo_TLPaymentsGetPaymentReceipt proto.InternalMessageInfo

func (m *TLPaymentsGetPaymentReceipt) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPaymentsGetPaymentReceipt) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLPaymentsGetPaymentReceipt) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

type TLPaymentsValidateRequestedInfo struct {
	Constructor          TLConstructor         `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Save                 bool                  `protobuf:"varint,3,opt,name=save,proto3" json:"save,omitempty"`
	Peer                 *InputPeer            `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32                 `protobuf:"varint,5,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	Info                 *PaymentRequestedInfo `protobuf:"bytes,6,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TLPaymentsValidateRequestedInfo) Reset()         { *m = TLPaymentsValidateRequestedInfo{} }
func (m *TLPaymentsValidateRequestedInfo) String() string { return proto.CompactTextString(m) }
func (*TLPaymentsValidateRequestedInfo) ProtoMessage()    {}
func (*TLPaymentsValidateRequestedInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{365}
}
func (m *TLPaymentsValidateRequestedInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPaymentsValidateRequestedInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPaymentsValidateRequestedInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPaymentsValidateRequestedInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPaymentsValidateRequestedInfo.Merge(m, src)
}
func (m *TLPaymentsValidateRequestedInfo) XXX_Size() int {
	return m.Size()
}
func (m *TLPaymentsValidateRequestedInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPaymentsValidateRequestedInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TLPaymentsValidateRequestedInfo proto.InternalMessageInfo

func (m *TLPaymentsValidateRequestedInfo) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPaymentsValidateRequestedInfo) GetSave() bool {
	if m != nil {
		return m.Save
	}
	return false
}

func (m *TLPaymentsValidateRequestedInfo) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLPaymentsValidateRequestedInfo) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLPaymentsValidateRequestedInfo) GetInfo() *PaymentRequestedInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type TLPaymentsSendPaymentForm struct {
	Constructor          TLConstructor            `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FormId               int64                    `protobuf:"varint,3,opt,name=form_id,json=formId,proto3" json:"form_id,omitempty"`
	Peer                 *InputPeer               `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32                    `protobuf:"varint,5,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	RequestedInfoId      *types.StringValue       `protobuf:"bytes,6,opt,name=requested_info_id,json=requestedInfoId,proto3" json:"requested_info_id,omitempty"`
	ShippingOptionId     *types.StringValue       `protobuf:"bytes,7,opt,name=shipping_option_id,json=shippingOptionId,proto3" json:"shipping_option_id,omitempty"`
	Credentials          *InputPaymentCredentials `protobuf:"bytes,8,opt,name=credentials,proto3" json:"credentials,omitempty"`
	TipAmount            *types.Int64Value        `protobuf:"bytes,9,opt,name=tip_amount,json=tipAmount,proto3" json:"tip_amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TLPaymentsSendPaymentForm) Reset()         { *m = TLPaymentsSendPaymentForm{} }
func (m *TLPaymentsSendPaymentForm) String() string { return proto.CompactTextString(m) }
func (*TLPaymentsSendPaymentForm) ProtoMessage()    {}
func (*TLPaymentsSendPaymentForm) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{366}
}
func (m *TLPaymentsSendPaymentForm) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPaymentsSendPaymentForm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPaymentsSendPaymentForm.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPaymentsSendPaymentForm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPaymentsSendPaymentForm.Merge(m, src)
}
func (m *TLPaymentsSendPaymentForm) XXX_Size() int {
	return m.Size()
}
func (m *TLPaymentsSendPaymentForm) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPaymentsSendPaymentForm.DiscardUnknown(m)
}

var xxx_messageInfo_TLPaymentsSendPaymentForm proto.InternalMessageInfo

func (m *TLPaymentsSendPaymentForm) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPaymentsSendPaymentForm) GetFormId() int64 {
	if m != nil {
		return m.FormId
	}
	return 0
}

func (m *TLPaymentsSendPaymentForm) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLPaymentsSendPaymentForm) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLPaymentsSendPaymentForm) GetRequestedInfoId() *types.StringValue {
	if m != nil {
		return m.RequestedInfoId
	}
	return nil
}

func (m *TLPaymentsSendPaymentForm) GetShippingOptionId() *types.StringValue {
	if m != nil {
		return m.ShippingOptionId
	}
	return nil
}

func (m *TLPaymentsSendPaymentForm) GetCredentials() *InputPaymentCredentials {
	if m != nil {
		return m.Credentials
	}
	return nil
}

func (m *TLPaymentsSendPaymentForm) GetTipAmount() *types.Int64Value {
	if m != nil {
		return m.TipAmount
	}
	return nil
}

type TLPaymentsGetSavedInfo struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPaymentsGetSavedInfo) Reset()         { *m = TLPaymentsGetSavedInfo{} }
func (m *TLPaymentsGetSavedInfo) String() string { return proto.CompactTextString(m) }
func (*TLPaymentsGetSavedInfo) ProtoMessage()    {}
func (*TLPaymentsGetSavedInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{367}
}
func (m *TLPaymentsGetSavedInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPaymentsGetSavedInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPaymentsGetSavedInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPaymentsGetSavedInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPaymentsGetSavedInfo.Merge(m, src)
}
func (m *TLPaymentsGetSavedInfo) XXX_Size() int {
	return m.Size()
}
func (m *TLPaymentsGetSavedInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPaymentsGetSavedInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TLPaymentsGetSavedInfo proto.InternalMessageInfo

func (m *TLPaymentsGetSavedInfo) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLPaymentsClearSavedInfo struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Credentials          bool          `protobuf:"varint,3,opt,name=credentials,proto3" json:"credentials,omitempty"`
	Info                 bool          `protobuf:"varint,4,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPaymentsClearSavedInfo) Reset()         { *m = TLPaymentsClearSavedInfo{} }
func (m *TLPaymentsClearSavedInfo) String() string { return proto.CompactTextString(m) }
func (*TLPaymentsClearSavedInfo) ProtoMessage()    {}
func (*TLPaymentsClearSavedInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{368}
}
func (m *TLPaymentsClearSavedInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPaymentsClearSavedInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPaymentsClearSavedInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPaymentsClearSavedInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPaymentsClearSavedInfo.Merge(m, src)
}
func (m *TLPaymentsClearSavedInfo) XXX_Size() int {
	return m.Size()
}
func (m *TLPaymentsClearSavedInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPaymentsClearSavedInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TLPaymentsClearSavedInfo proto.InternalMessageInfo

func (m *TLPaymentsClearSavedInfo) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPaymentsClearSavedInfo) GetCredentials() bool {
	if m != nil {
		return m.Credentials
	}
	return false
}

func (m *TLPaymentsClearSavedInfo) GetInfo() bool {
	if m != nil {
		return m.Info
	}
	return false
}

type TLPaymentsGetBankCardData struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Number               string        `protobuf:"bytes,3,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPaymentsGetBankCardData) Reset()         { *m = TLPaymentsGetBankCardData{} }
func (m *TLPaymentsGetBankCardData) String() string { return proto.CompactTextString(m) }
func (*TLPaymentsGetBankCardData) ProtoMessage()    {}
func (*TLPaymentsGetBankCardData) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{369}
}
func (m *TLPaymentsGetBankCardData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPaymentsGetBankCardData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPaymentsGetBankCardData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPaymentsGetBankCardData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPaymentsGetBankCardData.Merge(m, src)
}
func (m *TLPaymentsGetBankCardData) XXX_Size() int {
	return m.Size()
}
func (m *TLPaymentsGetBankCardData) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPaymentsGetBankCardData.DiscardUnknown(m)
}

var xxx_messageInfo_TLPaymentsGetBankCardData proto.InternalMessageInfo

func (m *TLPaymentsGetBankCardData) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPaymentsGetBankCardData) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

type TLStickersCreateStickerSet struct {
	Constructor          TLConstructor          `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Masks                bool                   `protobuf:"varint,3,opt,name=masks,proto3" json:"masks,omitempty"`
	Animated             bool                   `protobuf:"varint,4,opt,name=animated,proto3" json:"animated,omitempty"`
	Videos               bool                   `protobuf:"varint,5,opt,name=videos,proto3" json:"videos,omitempty"`
	UserId               *InputUser             `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title                string                 `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	ShortName            string                 `protobuf:"bytes,8,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	Thumb                *InputDocument         `protobuf:"bytes,9,opt,name=thumb,proto3" json:"thumb,omitempty"`
	Stickers             []*InputStickerSetItem `protobuf:"bytes,10,rep,name=stickers,proto3" json:"stickers,omitempty"`
	Software             *types.StringValue     `protobuf:"bytes,11,opt,name=software,proto3" json:"software,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TLStickersCreateStickerSet) Reset()         { *m = TLStickersCreateStickerSet{} }
func (m *TLStickersCreateStickerSet) String() string { return proto.CompactTextString(m) }
func (*TLStickersCreateStickerSet) ProtoMessage()    {}
func (*TLStickersCreateStickerSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{370}
}
func (m *TLStickersCreateStickerSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStickersCreateStickerSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStickersCreateStickerSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLStickersCreateStickerSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStickersCreateStickerSet.Merge(m, src)
}
func (m *TLStickersCreateStickerSet) XXX_Size() int {
	return m.Size()
}
func (m *TLStickersCreateStickerSet) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStickersCreateStickerSet.DiscardUnknown(m)
}

var xxx_messageInfo_TLStickersCreateStickerSet proto.InternalMessageInfo

func (m *TLStickersCreateStickerSet) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLStickersCreateStickerSet) GetMasks() bool {
	if m != nil {
		return m.Masks
	}
	return false
}

func (m *TLStickersCreateStickerSet) GetAnimated() bool {
	if m != nil {
		return m.Animated
	}
	return false
}

func (m *TLStickersCreateStickerSet) GetVideos() bool {
	if m != nil {
		return m.Videos
	}
	return false
}

func (m *TLStickersCreateStickerSet) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLStickersCreateStickerSet) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TLStickersCreateStickerSet) GetShortName() string {
	if m != nil {
		return m.ShortName
	}
	return ""
}

func (m *TLStickersCreateStickerSet) GetThumb() *InputDocument {
	if m != nil {
		return m.Thumb
	}
	return nil
}

func (m *TLStickersCreateStickerSet) GetStickers() []*InputStickerSetItem {
	if m != nil {
		return m.Stickers
	}
	return nil
}

func (m *TLStickersCreateStickerSet) GetSoftware() *types.StringValue {
	if m != nil {
		return m.Software
	}
	return nil
}

type TLStickersRemoveStickerFromSet struct {
	Constructor          TLConstructor  `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Sticker              *InputDocument `protobuf:"bytes,3,opt,name=sticker,proto3" json:"sticker,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TLStickersRemoveStickerFromSet) Reset()         { *m = TLStickersRemoveStickerFromSet{} }
func (m *TLStickersRemoveStickerFromSet) String() string { return proto.CompactTextString(m) }
func (*TLStickersRemoveStickerFromSet) ProtoMessage()    {}
func (*TLStickersRemoveStickerFromSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{371}
}
func (m *TLStickersRemoveStickerFromSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStickersRemoveStickerFromSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStickersRemoveStickerFromSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLStickersRemoveStickerFromSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStickersRemoveStickerFromSet.Merge(m, src)
}
func (m *TLStickersRemoveStickerFromSet) XXX_Size() int {
	return m.Size()
}
func (m *TLStickersRemoveStickerFromSet) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStickersRemoveStickerFromSet.DiscardUnknown(m)
}

var xxx_messageInfo_TLStickersRemoveStickerFromSet proto.InternalMessageInfo

func (m *TLStickersRemoveStickerFromSet) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLStickersRemoveStickerFromSet) GetSticker() *InputDocument {
	if m != nil {
		return m.Sticker
	}
	return nil
}

type TLStickersChangeStickerPosition struct {
	Constructor          TLConstructor  `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Sticker              *InputDocument `protobuf:"bytes,3,opt,name=sticker,proto3" json:"sticker,omitempty"`
	Position             int32          `protobuf:"varint,4,opt,name=position,proto3" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TLStickersChangeStickerPosition) Reset()         { *m = TLStickersChangeStickerPosition{} }
func (m *TLStickersChangeStickerPosition) String() string { return proto.CompactTextString(m) }
func (*TLStickersChangeStickerPosition) ProtoMessage()    {}
func (*TLStickersChangeStickerPosition) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{372}
}
func (m *TLStickersChangeStickerPosition) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStickersChangeStickerPosition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStickersChangeStickerPosition.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLStickersChangeStickerPosition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStickersChangeStickerPosition.Merge(m, src)
}
func (m *TLStickersChangeStickerPosition) XXX_Size() int {
	return m.Size()
}
func (m *TLStickersChangeStickerPosition) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStickersChangeStickerPosition.DiscardUnknown(m)
}

var xxx_messageInfo_TLStickersChangeStickerPosition proto.InternalMessageInfo

func (m *TLStickersChangeStickerPosition) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLStickersChangeStickerPosition) GetSticker() *InputDocument {
	if m != nil {
		return m.Sticker
	}
	return nil
}

func (m *TLStickersChangeStickerPosition) GetPosition() int32 {
	if m != nil {
		return m.Position
	}
	return 0
}

type TLStickersAddStickerToSet struct {
	Constructor          TLConstructor        `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Stickerset           *InputStickerSet     `protobuf:"bytes,3,opt,name=stickerset,proto3" json:"stickerset,omitempty"`
	Sticker              *InputStickerSetItem `protobuf:"bytes,4,opt,name=sticker,proto3" json:"sticker,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TLStickersAddStickerToSet) Reset()         { *m = TLStickersAddStickerToSet{} }
func (m *TLStickersAddStickerToSet) String() string { return proto.CompactTextString(m) }
func (*TLStickersAddStickerToSet) ProtoMessage()    {}
func (*TLStickersAddStickerToSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{373}
}
func (m *TLStickersAddStickerToSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStickersAddStickerToSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStickersAddStickerToSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLStickersAddStickerToSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStickersAddStickerToSet.Merge(m, src)
}
func (m *TLStickersAddStickerToSet) XXX_Size() int {
	return m.Size()
}
func (m *TLStickersAddStickerToSet) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStickersAddStickerToSet.DiscardUnknown(m)
}

var xxx_messageInfo_TLStickersAddStickerToSet proto.InternalMessageInfo

func (m *TLStickersAddStickerToSet) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLStickersAddStickerToSet) GetStickerset() *InputStickerSet {
	if m != nil {
		return m.Stickerset
	}
	return nil
}

func (m *TLStickersAddStickerToSet) GetSticker() *InputStickerSetItem {
	if m != nil {
		return m.Sticker
	}
	return nil
}

type TLStickersSetStickerSetThumb struct {
	Constructor          TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Stickerset           *InputStickerSet `protobuf:"bytes,3,opt,name=stickerset,proto3" json:"stickerset,omitempty"`
	Thumb                *InputDocument   `protobuf:"bytes,4,opt,name=thumb,proto3" json:"thumb,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLStickersSetStickerSetThumb) Reset()         { *m = TLStickersSetStickerSetThumb{} }
func (m *TLStickersSetStickerSetThumb) String() string { return proto.CompactTextString(m) }
func (*TLStickersSetStickerSetThumb) ProtoMessage()    {}
func (*TLStickersSetStickerSetThumb) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{374}
}
func (m *TLStickersSetStickerSetThumb) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStickersSetStickerSetThumb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStickersSetStickerSetThumb.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLStickersSetStickerSetThumb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStickersSetStickerSetThumb.Merge(m, src)
}
func (m *TLStickersSetStickerSetThumb) XXX_Size() int {
	return m.Size()
}
func (m *TLStickersSetStickerSetThumb) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStickersSetStickerSetThumb.DiscardUnknown(m)
}

var xxx_messageInfo_TLStickersSetStickerSetThumb proto.InternalMessageInfo

func (m *TLStickersSetStickerSetThumb) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLStickersSetStickerSetThumb) GetStickerset() *InputStickerSet {
	if m != nil {
		return m.Stickerset
	}
	return nil
}

func (m *TLStickersSetStickerSetThumb) GetThumb() *InputDocument {
	if m != nil {
		return m.Thumb
	}
	return nil
}

type TLStickersCheckShortName struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ShortName            string        `protobuf:"bytes,3,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLStickersCheckShortName) Reset()         { *m = TLStickersCheckShortName{} }
func (m *TLStickersCheckShortName) String() string { return proto.CompactTextString(m) }
func (*TLStickersCheckShortName) ProtoMessage()    {}
func (*TLStickersCheckShortName) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{375}
}
func (m *TLStickersCheckShortName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStickersCheckShortName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStickersCheckShortName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLStickersCheckShortName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStickersCheckShortName.Merge(m, src)
}
func (m *TLStickersCheckShortName) XXX_Size() int {
	return m.Size()
}
func (m *TLStickersCheckShortName) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStickersCheckShortName.DiscardUnknown(m)
}

var xxx_messageInfo_TLStickersCheckShortName proto.InternalMessageInfo

func (m *TLStickersCheckShortName) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLStickersCheckShortName) GetShortName() string {
	if m != nil {
		return m.ShortName
	}
	return ""
}

type TLStickersSuggestShortName struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Title                string        `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLStickersSuggestShortName) Reset()         { *m = TLStickersSuggestShortName{} }
func (m *TLStickersSuggestShortName) String() string { return proto.CompactTextString(m) }
func (*TLStickersSuggestShortName) ProtoMessage()    {}
func (*TLStickersSuggestShortName) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{376}
}
func (m *TLStickersSuggestShortName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStickersSuggestShortName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStickersSuggestShortName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLStickersSuggestShortName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStickersSuggestShortName.Merge(m, src)
}
func (m *TLStickersSuggestShortName) XXX_Size() int {
	return m.Size()
}
func (m *TLStickersSuggestShortName) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStickersSuggestShortName.DiscardUnknown(m)
}

var xxx_messageInfo_TLStickersSuggestShortName proto.InternalMessageInfo

func (m *TLStickersSuggestShortName) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLStickersSuggestShortName) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type TLPhoneGetCallConfig struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPhoneGetCallConfig) Reset()         { *m = TLPhoneGetCallConfig{} }
func (m *TLPhoneGetCallConfig) String() string { return proto.CompactTextString(m) }
func (*TLPhoneGetCallConfig) ProtoMessage()    {}
func (*TLPhoneGetCallConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{377}
}
func (m *TLPhoneGetCallConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneGetCallConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneGetCallConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneGetCallConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneGetCallConfig.Merge(m, src)
}
func (m *TLPhoneGetCallConfig) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneGetCallConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneGetCallConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneGetCallConfig proto.InternalMessageInfo

func (m *TLPhoneGetCallConfig) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLPhoneRequestCall struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Video                bool               `protobuf:"varint,3,opt,name=video,proto3" json:"video,omitempty"`
	UserId               *InputUser         `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RandomId             int32              `protobuf:"varint,5,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	GAHash               []byte             `protobuf:"bytes,6,opt,name=g_a_hash,json=gAHash,proto3" json:"g_a_hash,omitempty"`
	Protocol             *PhoneCallProtocol `protobuf:"bytes,7,opt,name=protocol,proto3" json:"protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLPhoneRequestCall) Reset()         { *m = TLPhoneRequestCall{} }
func (m *TLPhoneRequestCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneRequestCall) ProtoMessage()    {}
func (*TLPhoneRequestCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{378}
}
func (m *TLPhoneRequestCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneRequestCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneRequestCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneRequestCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneRequestCall.Merge(m, src)
}
func (m *TLPhoneRequestCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneRequestCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneRequestCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneRequestCall proto.InternalMessageInfo

func (m *TLPhoneRequestCall) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneRequestCall) GetVideo() bool {
	if m != nil {
		return m.Video
	}
	return false
}

func (m *TLPhoneRequestCall) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLPhoneRequestCall) GetRandomId() int32 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLPhoneRequestCall) GetGAHash() []byte {
	if m != nil {
		return m.GAHash
	}
	return nil
}

func (m *TLPhoneRequestCall) GetProtocol() *PhoneCallProtocol {
	if m != nil {
		return m.Protocol
	}
	return nil
}

type TLPhoneAcceptCall struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPhoneCall    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	GB                   []byte             `protobuf:"bytes,4,opt,name=g_b,json=gB,proto3" json:"g_b,omitempty"`
	Protocol             *PhoneCallProtocol `protobuf:"bytes,5,opt,name=protocol,proto3" json:"protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLPhoneAcceptCall) Reset()         { *m = TLPhoneAcceptCall{} }
func (m *TLPhoneAcceptCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneAcceptCall) ProtoMessage()    {}
func (*TLPhoneAcceptCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{379}
}
func (m *TLPhoneAcceptCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneAcceptCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneAcceptCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneAcceptCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneAcceptCall.Merge(m, src)
}
func (m *TLPhoneAcceptCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneAcceptCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneAcceptCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneAcceptCall proto.InternalMessageInfo

func (m *TLPhoneAcceptCall) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneAcceptCall) GetPeer() *InputPhoneCall {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLPhoneAcceptCall) GetGB() []byte {
	if m != nil {
		return m.GB
	}
	return nil
}

func (m *TLPhoneAcceptCall) GetProtocol() *PhoneCallProtocol {
	if m != nil {
		return m.Protocol
	}
	return nil
}

type TLPhoneConfirmCall struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPhoneCall    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	GA                   []byte             `protobuf:"bytes,4,opt,name=g_a,json=gA,proto3" json:"g_a,omitempty"`
	KeyFingerprint       int64              `protobuf:"varint,5,opt,name=key_fingerprint,json=keyFingerprint,proto3" json:"key_fingerprint,omitempty"`
	Protocol             *PhoneCallProtocol `protobuf:"bytes,6,opt,name=protocol,proto3" json:"protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLPhoneConfirmCall) Reset()         { *m = TLPhoneConfirmCall{} }
func (m *TLPhoneConfirmCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneConfirmCall) ProtoMessage()    {}
func (*TLPhoneConfirmCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{380}
}
func (m *TLPhoneConfirmCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneConfirmCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneConfirmCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneConfirmCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneConfirmCall.Merge(m, src)
}
func (m *TLPhoneConfirmCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneConfirmCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneConfirmCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneConfirmCall proto.InternalMessageInfo

func (m *TLPhoneConfirmCall) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneConfirmCall) GetPeer() *InputPhoneCall {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLPhoneConfirmCall) GetGA() []byte {
	if m != nil {
		return m.GA
	}
	return nil
}

func (m *TLPhoneConfirmCall) GetKeyFingerprint() int64 {
	if m != nil {
		return m.KeyFingerprint
	}
	return 0
}

func (m *TLPhoneConfirmCall) GetProtocol() *PhoneCallProtocol {
	if m != nil {
		return m.Protocol
	}
	return nil
}

type TLPhoneReceivedCall struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPhoneCall `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneReceivedCall) Reset()         { *m = TLPhoneReceivedCall{} }
func (m *TLPhoneReceivedCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneReceivedCall) ProtoMessage()    {}
func (*TLPhoneReceivedCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{381}
}
func (m *TLPhoneReceivedCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneReceivedCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneReceivedCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneReceivedCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneReceivedCall.Merge(m, src)
}
func (m *TLPhoneReceivedCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneReceivedCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneReceivedCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneReceivedCall proto.InternalMessageInfo

func (m *TLPhoneReceivedCall) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneReceivedCall) GetPeer() *InputPhoneCall {
	if m != nil {
		return m.Peer
	}
	return nil
}

type TLPhoneDiscardCall struct {
	Constructor          TLConstructor           `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Video                bool                    `protobuf:"varint,3,opt,name=video,proto3" json:"video,omitempty"`
	Peer                 *InputPhoneCall         `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	Duration             int32                   `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Reason               *PhoneCallDiscardReason `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
	ConnectionId         int64                   `protobuf:"varint,7,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TLPhoneDiscardCall) Reset()         { *m = TLPhoneDiscardCall{} }
func (m *TLPhoneDiscardCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneDiscardCall) ProtoMessage()    {}
func (*TLPhoneDiscardCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{382}
}
func (m *TLPhoneDiscardCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneDiscardCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneDiscardCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneDiscardCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneDiscardCall.Merge(m, src)
}
func (m *TLPhoneDiscardCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneDiscardCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneDiscardCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneDiscardCall proto.InternalMessageInfo

func (m *TLPhoneDiscardCall) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneDiscardCall) GetVideo() bool {
	if m != nil {
		return m.Video
	}
	return false
}

func (m *TLPhoneDiscardCall) GetPeer() *InputPhoneCall {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLPhoneDiscardCall) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *TLPhoneDiscardCall) GetReason() *PhoneCallDiscardReason {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *TLPhoneDiscardCall) GetConnectionId() int64 {
	if m != nil {
		return m.ConnectionId
	}
	return 0
}

type TLPhoneSetCallRating struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	UserInitiative       bool            `protobuf:"varint,3,opt,name=user_initiative,json=userInitiative,proto3" json:"user_initiative,omitempty"`
	Peer                 *InputPhoneCall `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	Rating               int32           `protobuf:"varint,5,opt,name=rating,proto3" json:"rating,omitempty"`
	Comment              string          `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneSetCallRating) Reset()         { *m = TLPhoneSetCallRating{} }
func (m *TLPhoneSetCallRating) String() string { return proto.CompactTextString(m) }
func (*TLPhoneSetCallRating) ProtoMessage()    {}
func (*TLPhoneSetCallRating) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{383}
}
func (m *TLPhoneSetCallRating) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneSetCallRating) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneSetCallRating.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneSetCallRating) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneSetCallRating.Merge(m, src)
}
func (m *TLPhoneSetCallRating) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneSetCallRating) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneSetCallRating.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneSetCallRating proto.InternalMessageInfo

func (m *TLPhoneSetCallRating) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneSetCallRating) GetUserInitiative() bool {
	if m != nil {
		return m.UserInitiative
	}
	return false
}

func (m *TLPhoneSetCallRating) GetPeer() *InputPhoneCall {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLPhoneSetCallRating) GetRating() int32 {
	if m != nil {
		return m.Rating
	}
	return 0
}

func (m *TLPhoneSetCallRating) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

type TLPhoneSaveCallDebug struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPhoneCall `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Debug                *DataJSON       `protobuf:"bytes,4,opt,name=debug,proto3" json:"debug,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneSaveCallDebug) Reset()         { *m = TLPhoneSaveCallDebug{} }
func (m *TLPhoneSaveCallDebug) String() string { return proto.CompactTextString(m) }
func (*TLPhoneSaveCallDebug) ProtoMessage()    {}
func (*TLPhoneSaveCallDebug) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{384}
}
func (m *TLPhoneSaveCallDebug) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneSaveCallDebug) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneSaveCallDebug.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneSaveCallDebug) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneSaveCallDebug.Merge(m, src)
}
func (m *TLPhoneSaveCallDebug) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneSaveCallDebug) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneSaveCallDebug.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneSaveCallDebug proto.InternalMessageInfo

func (m *TLPhoneSaveCallDebug) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneSaveCallDebug) GetPeer() *InputPhoneCall {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLPhoneSaveCallDebug) GetDebug() *DataJSON {
	if m != nil {
		return m.Debug
	}
	return nil
}

type TLPhoneSendSignalingData struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPhoneCall `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Data                 []byte          `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneSendSignalingData) Reset()         { *m = TLPhoneSendSignalingData{} }
func (m *TLPhoneSendSignalingData) String() string { return proto.CompactTextString(m) }
func (*TLPhoneSendSignalingData) ProtoMessage()    {}
func (*TLPhoneSendSignalingData) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{385}
}
func (m *TLPhoneSendSignalingData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneSendSignalingData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneSendSignalingData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneSendSignalingData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneSendSignalingData.Merge(m, src)
}
func (m *TLPhoneSendSignalingData) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneSendSignalingData) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneSendSignalingData.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneSendSignalingData proto.InternalMessageInfo

func (m *TLPhoneSendSignalingData) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneSendSignalingData) GetPeer() *InputPhoneCall {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLPhoneSendSignalingData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type TLPhoneCreateGroupCall struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	RtmpStream           bool               `protobuf:"varint,3,opt,name=rtmp_stream,json=rtmpStream,proto3" json:"rtmp_stream,omitempty"`
	Peer                 *InputPeer         `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	RandomId             int32              `protobuf:"varint,5,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	Title                *types.StringValue `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	ScheduleDate         *types.Int32Value  `protobuf:"bytes,7,opt,name=schedule_date,json=scheduleDate,proto3" json:"schedule_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLPhoneCreateGroupCall) Reset()         { *m = TLPhoneCreateGroupCall{} }
func (m *TLPhoneCreateGroupCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneCreateGroupCall) ProtoMessage()    {}
func (*TLPhoneCreateGroupCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{386}
}
func (m *TLPhoneCreateGroupCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneCreateGroupCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneCreateGroupCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneCreateGroupCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneCreateGroupCall.Merge(m, src)
}
func (m *TLPhoneCreateGroupCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneCreateGroupCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneCreateGroupCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneCreateGroupCall proto.InternalMessageInfo

func (m *TLPhoneCreateGroupCall) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneCreateGroupCall) GetRtmpStream() bool {
	if m != nil {
		return m.RtmpStream
	}
	return false
}

func (m *TLPhoneCreateGroupCall) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLPhoneCreateGroupCall) GetRandomId() int32 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLPhoneCreateGroupCall) GetTitle() *types.StringValue {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *TLPhoneCreateGroupCall) GetScheduleDate() *types.Int32Value {
	if m != nil {
		return m.ScheduleDate
	}
	return nil
}

type TLPhoneJoinGroupCall struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Muted                bool               `protobuf:"varint,3,opt,name=muted,proto3" json:"muted,omitempty"`
	VideoStopped         bool               `protobuf:"varint,4,opt,name=video_stopped,json=videoStopped,proto3" json:"video_stopped,omitempty"`
	Call                 *InputGroupCall    `protobuf:"bytes,5,opt,name=call,proto3" json:"call,omitempty"`
	JoinAs               *InputPeer         `protobuf:"bytes,6,opt,name=join_as,json=joinAs,proto3" json:"join_as,omitempty"`
	InviteHash           *types.StringValue `protobuf:"bytes,7,opt,name=invite_hash,json=inviteHash,proto3" json:"invite_hash,omitempty"`
	Params               *DataJSON          `protobuf:"bytes,8,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLPhoneJoinGroupCall) Reset()         { *m = TLPhoneJoinGroupCall{} }
func (m *TLPhoneJoinGroupCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneJoinGroupCall) ProtoMessage()    {}
func (*TLPhoneJoinGroupCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{387}
}
func (m *TLPhoneJoinGroupCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneJoinGroupCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneJoinGroupCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneJoinGroupCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneJoinGroupCall.Merge(m, src)
}
func (m *TLPhoneJoinGroupCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneJoinGroupCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneJoinGroupCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneJoinGroupCall proto.InternalMessageInfo

func (m *TLPhoneJoinGroupCall) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneJoinGroupCall) GetMuted() bool {
	if m != nil {
		return m.Muted
	}
	return false
}

func (m *TLPhoneJoinGroupCall) GetVideoStopped() bool {
	if m != nil {
		return m.VideoStopped
	}
	return false
}

func (m *TLPhoneJoinGroupCall) GetCall() *InputGroupCall {
	if m != nil {
		return m.Call
	}
	return nil
}

func (m *TLPhoneJoinGroupCall) GetJoinAs() *InputPeer {
	if m != nil {
		return m.JoinAs
	}
	return nil
}

func (m *TLPhoneJoinGroupCall) GetInviteHash() *types.StringValue {
	if m != nil {
		return m.InviteHash
	}
	return nil
}

func (m *TLPhoneJoinGroupCall) GetParams() *DataJSON {
	if m != nil {
		return m.Params
	}
	return nil
}

type TLPhoneLeaveGroupCall struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Call                 *InputGroupCall `protobuf:"bytes,3,opt,name=call,proto3" json:"call,omitempty"`
	Source               int32           `protobuf:"varint,4,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneLeaveGroupCall) Reset()         { *m = TLPhoneLeaveGroupCall{} }
func (m *TLPhoneLeaveGroupCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneLeaveGroupCall) ProtoMessage()    {}
func (*TLPhoneLeaveGroupCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{388}
}
func (m *TLPhoneLeaveGroupCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneLeaveGroupCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneLeaveGroupCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneLeaveGroupCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneLeaveGroupCall.Merge(m, src)
}
func (m *TLPhoneLeaveGroupCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneLeaveGroupCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneLeaveGroupCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneLeaveGroupCall proto.InternalMessageInfo

func (m *TLPhoneLeaveGroupCall) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneLeaveGroupCall) GetCall() *InputGroupCall {
	if m != nil {
		return m.Call
	}
	return nil
}

func (m *TLPhoneLeaveGroupCall) GetSource() int32 {
	if m != nil {
		return m.Source
	}
	return 0
}

type TLPhoneInviteToGroupCall struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Call                 *InputGroupCall `protobuf:"bytes,3,opt,name=call,proto3" json:"call,omitempty"`
	Users                []*InputUser    `protobuf:"bytes,4,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneInviteToGroupCall) Reset()         { *m = TLPhoneInviteToGroupCall{} }
func (m *TLPhoneInviteToGroupCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneInviteToGroupCall) ProtoMessage()    {}
func (*TLPhoneInviteToGroupCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{389}
}
func (m *TLPhoneInviteToGroupCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneInviteToGroupCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneInviteToGroupCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneInviteToGroupCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneInviteToGroupCall.Merge(m, src)
}
func (m *TLPhoneInviteToGroupCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneInviteToGroupCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneInviteToGroupCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneInviteToGroupCall proto.InternalMessageInfo

func (m *TLPhoneInviteToGroupCall) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneInviteToGroupCall) GetCall() *InputGroupCall {
	if m != nil {
		return m.Call
	}
	return nil
}

func (m *TLPhoneInviteToGroupCall) GetUsers() []*InputUser {
	if m != nil {
		return m.Users
	}
	return nil
}

type TLPhoneDiscardGroupCall struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Call                 *InputGroupCall `protobuf:"bytes,3,opt,name=call,proto3" json:"call,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneDiscardGroupCall) Reset()         { *m = TLPhoneDiscardGroupCall{} }
func (m *TLPhoneDiscardGroupCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneDiscardGroupCall) ProtoMessage()    {}
func (*TLPhoneDiscardGroupCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{390}
}
func (m *TLPhoneDiscardGroupCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneDiscardGroupCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneDiscardGroupCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneDiscardGroupCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneDiscardGroupCall.Merge(m, src)
}
func (m *TLPhoneDiscardGroupCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneDiscardGroupCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneDiscardGroupCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneDiscardGroupCall proto.InternalMessageInfo

func (m *TLPhoneDiscardGroupCall) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneDiscardGroupCall) GetCall() *InputGroupCall {
	if m != nil {
		return m.Call
	}
	return nil
}

type TLPhoneToggleGroupCallSettings struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	ResetInviteHash      bool            `protobuf:"varint,3,opt,name=reset_invite_hash,json=resetInviteHash,proto3" json:"reset_invite_hash,omitempty"`
	Call                 *InputGroupCall `protobuf:"bytes,4,opt,name=call,proto3" json:"call,omitempty"`
	JoinMuted            *Bool           `protobuf:"bytes,5,opt,name=join_muted,json=joinMuted,proto3" json:"join_muted,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneToggleGroupCallSettings) Reset()         { *m = TLPhoneToggleGroupCallSettings{} }
func (m *TLPhoneToggleGroupCallSettings) String() string { return proto.CompactTextString(m) }
func (*TLPhoneToggleGroupCallSettings) ProtoMessage()    {}
func (*TLPhoneToggleGroupCallSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{391}
}
func (m *TLPhoneToggleGroupCallSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneToggleGroupCallSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneToggleGroupCallSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneToggleGroupCallSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneToggleGroupCallSettings.Merge(m, src)
}
func (m *TLPhoneToggleGroupCallSettings) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneToggleGroupCallSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneToggleGroupCallSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneToggleGroupCallSettings proto.InternalMessageInfo

func (m *TLPhoneToggleGroupCallSettings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneToggleGroupCallSettings) GetResetInviteHash() bool {
	if m != nil {
		return m.ResetInviteHash
	}
	return false
}

func (m *TLPhoneToggleGroupCallSettings) GetCall() *InputGroupCall {
	if m != nil {
		return m.Call
	}
	return nil
}

func (m *TLPhoneToggleGroupCallSettings) GetJoinMuted() *Bool {
	if m != nil {
		return m.JoinMuted
	}
	return nil
}

type TLPhoneGetGroupCall struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Call                 *InputGroupCall `protobuf:"bytes,3,opt,name=call,proto3" json:"call,omitempty"`
	Limit                int32           `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneGetGroupCall) Reset()         { *m = TLPhoneGetGroupCall{} }
func (m *TLPhoneGetGroupCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneGetGroupCall) ProtoMessage()    {}
func (*TLPhoneGetGroupCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{392}
}
func (m *TLPhoneGetGroupCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneGetGroupCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneGetGroupCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneGetGroupCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneGetGroupCall.Merge(m, src)
}
func (m *TLPhoneGetGroupCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneGetGroupCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneGetGroupCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneGetGroupCall proto.InternalMessageInfo

func (m *TLPhoneGetGroupCall) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneGetGroupCall) GetCall() *InputGroupCall {
	if m != nil {
		return m.Call
	}
	return nil
}

func (m *TLPhoneGetGroupCall) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type TLPhoneGetGroupParticipants struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Call                 *InputGroupCall `protobuf:"bytes,3,opt,name=call,proto3" json:"call,omitempty"`
	Ids                  []*InputPeer    `protobuf:"bytes,4,rep,name=ids,proto3" json:"ids,omitempty"`
	Sources              []int32         `protobuf:"varint,5,rep,packed,name=sources,proto3" json:"sources,omitempty"`
	Offset               string          `protobuf:"bytes,6,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32           `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneGetGroupParticipants) Reset()         { *m = TLPhoneGetGroupParticipants{} }
func (m *TLPhoneGetGroupParticipants) String() string { return proto.CompactTextString(m) }
func (*TLPhoneGetGroupParticipants) ProtoMessage()    {}
func (*TLPhoneGetGroupParticipants) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{393}
}
func (m *TLPhoneGetGroupParticipants) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneGetGroupParticipants) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneGetGroupParticipants.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneGetGroupParticipants) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneGetGroupParticipants.Merge(m, src)
}
func (m *TLPhoneGetGroupParticipants) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneGetGroupParticipants) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneGetGroupParticipants.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneGetGroupParticipants proto.InternalMessageInfo

func (m *TLPhoneGetGroupParticipants) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneGetGroupParticipants) GetCall() *InputGroupCall {
	if m != nil {
		return m.Call
	}
	return nil
}

func (m *TLPhoneGetGroupParticipants) GetIds() []*InputPeer {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *TLPhoneGetGroupParticipants) GetSources() []int32 {
	if m != nil {
		return m.Sources
	}
	return nil
}

func (m *TLPhoneGetGroupParticipants) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

func (m *TLPhoneGetGroupParticipants) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type TLPhoneCheckGroupCall struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Call                 *InputGroupCall `protobuf:"bytes,3,opt,name=call,proto3" json:"call,omitempty"`
	Sources              []int32         `protobuf:"varint,4,rep,packed,name=sources,proto3" json:"sources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneCheckGroupCall) Reset()         { *m = TLPhoneCheckGroupCall{} }
func (m *TLPhoneCheckGroupCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneCheckGroupCall) ProtoMessage()    {}
func (*TLPhoneCheckGroupCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{394}
}
func (m *TLPhoneCheckGroupCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneCheckGroupCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneCheckGroupCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneCheckGroupCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneCheckGroupCall.Merge(m, src)
}
func (m *TLPhoneCheckGroupCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneCheckGroupCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneCheckGroupCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneCheckGroupCall proto.InternalMessageInfo

func (m *TLPhoneCheckGroupCall) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneCheckGroupCall) GetCall() *InputGroupCall {
	if m != nil {
		return m.Call
	}
	return nil
}

func (m *TLPhoneCheckGroupCall) GetSources() []int32 {
	if m != nil {
		return m.Sources
	}
	return nil
}

type TLPhoneToggleGroupCallRecord struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Start                bool               `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	Video                bool               `protobuf:"varint,4,opt,name=video,proto3" json:"video,omitempty"`
	Call                 *InputGroupCall    `protobuf:"bytes,5,opt,name=call,proto3" json:"call,omitempty"`
	Title                *types.StringValue `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	VideoPortrait        *Bool              `protobuf:"bytes,7,opt,name=video_portrait,json=videoPortrait,proto3" json:"video_portrait,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLPhoneToggleGroupCallRecord) Reset()         { *m = TLPhoneToggleGroupCallRecord{} }
func (m *TLPhoneToggleGroupCallRecord) String() string { return proto.CompactTextString(m) }
func (*TLPhoneToggleGroupCallRecord) ProtoMessage()    {}
func (*TLPhoneToggleGroupCallRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{395}
}
func (m *TLPhoneToggleGroupCallRecord) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneToggleGroupCallRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneToggleGroupCallRecord.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneToggleGroupCallRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneToggleGroupCallRecord.Merge(m, src)
}
func (m *TLPhoneToggleGroupCallRecord) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneToggleGroupCallRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneToggleGroupCallRecord.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneToggleGroupCallRecord proto.InternalMessageInfo

func (m *TLPhoneToggleGroupCallRecord) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneToggleGroupCallRecord) GetStart() bool {
	if m != nil {
		return m.Start
	}
	return false
}

func (m *TLPhoneToggleGroupCallRecord) GetVideo() bool {
	if m != nil {
		return m.Video
	}
	return false
}

func (m *TLPhoneToggleGroupCallRecord) GetCall() *InputGroupCall {
	if m != nil {
		return m.Call
	}
	return nil
}

func (m *TLPhoneToggleGroupCallRecord) GetTitle() *types.StringValue {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *TLPhoneToggleGroupCallRecord) GetVideoPortrait() *Bool {
	if m != nil {
		return m.VideoPortrait
	}
	return nil
}

type TLPhoneEditGroupCallParticipant struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Call                 *InputGroupCall   `protobuf:"bytes,3,opt,name=call,proto3" json:"call,omitempty"`
	Participant          *InputPeer        `protobuf:"bytes,4,opt,name=participant,proto3" json:"participant,omitempty"`
	Muted                *Bool             `protobuf:"bytes,5,opt,name=muted,proto3" json:"muted,omitempty"`
	Volume               *types.Int32Value `protobuf:"bytes,6,opt,name=volume,proto3" json:"volume,omitempty"`
	RaiseHand            *Bool             `protobuf:"bytes,7,opt,name=raise_hand,json=raiseHand,proto3" json:"raise_hand,omitempty"`
	VideoStopped         *Bool             `protobuf:"bytes,8,opt,name=video_stopped,json=videoStopped,proto3" json:"video_stopped,omitempty"`
	VideoPaused          *Bool             `protobuf:"bytes,9,opt,name=video_paused,json=videoPaused,proto3" json:"video_paused,omitempty"`
	PresentationPaused   *Bool             `protobuf:"bytes,10,opt,name=presentation_paused,json=presentationPaused,proto3" json:"presentation_paused,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLPhoneEditGroupCallParticipant) Reset()         { *m = TLPhoneEditGroupCallParticipant{} }
func (m *TLPhoneEditGroupCallParticipant) String() string { return proto.CompactTextString(m) }
func (*TLPhoneEditGroupCallParticipant) ProtoMessage()    {}
func (*TLPhoneEditGroupCallParticipant) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{396}
}
func (m *TLPhoneEditGroupCallParticipant) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneEditGroupCallParticipant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneEditGroupCallParticipant.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneEditGroupCallParticipant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneEditGroupCallParticipant.Merge(m, src)
}
func (m *TLPhoneEditGroupCallParticipant) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneEditGroupCallParticipant) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneEditGroupCallParticipant.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneEditGroupCallParticipant proto.InternalMessageInfo

func (m *TLPhoneEditGroupCallParticipant) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneEditGroupCallParticipant) GetCall() *InputGroupCall {
	if m != nil {
		return m.Call
	}
	return nil
}

func (m *TLPhoneEditGroupCallParticipant) GetParticipant() *InputPeer {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *TLPhoneEditGroupCallParticipant) GetMuted() *Bool {
	if m != nil {
		return m.Muted
	}
	return nil
}

func (m *TLPhoneEditGroupCallParticipant) GetVolume() *types.Int32Value {
	if m != nil {
		return m.Volume
	}
	return nil
}

func (m *TLPhoneEditGroupCallParticipant) GetRaiseHand() *Bool {
	if m != nil {
		return m.RaiseHand
	}
	return nil
}

func (m *TLPhoneEditGroupCallParticipant) GetVideoStopped() *Bool {
	if m != nil {
		return m.VideoStopped
	}
	return nil
}

func (m *TLPhoneEditGroupCallParticipant) GetVideoPaused() *Bool {
	if m != nil {
		return m.VideoPaused
	}
	return nil
}

func (m *TLPhoneEditGroupCallParticipant) GetPresentationPaused() *Bool {
	if m != nil {
		return m.PresentationPaused
	}
	return nil
}

type TLPhoneEditGroupCallTitle struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Call                 *InputGroupCall `protobuf:"bytes,3,opt,name=call,proto3" json:"call,omitempty"`
	Title                string          `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneEditGroupCallTitle) Reset()         { *m = TLPhoneEditGroupCallTitle{} }
func (m *TLPhoneEditGroupCallTitle) String() string { return proto.CompactTextString(m) }
func (*TLPhoneEditGroupCallTitle) ProtoMessage()    {}
func (*TLPhoneEditGroupCallTitle) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{397}
}
func (m *TLPhoneEditGroupCallTitle) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneEditGroupCallTitle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneEditGroupCallTitle.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneEditGroupCallTitle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneEditGroupCallTitle.Merge(m, src)
}
func (m *TLPhoneEditGroupCallTitle) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneEditGroupCallTitle) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneEditGroupCallTitle.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneEditGroupCallTitle proto.InternalMessageInfo

func (m *TLPhoneEditGroupCallTitle) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneEditGroupCallTitle) GetCall() *InputGroupCall {
	if m != nil {
		return m.Call
	}
	return nil
}

func (m *TLPhoneEditGroupCallTitle) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type TLPhoneGetGroupCallJoinAs struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPhoneGetGroupCallJoinAs) Reset()         { *m = TLPhoneGetGroupCallJoinAs{} }
func (m *TLPhoneGetGroupCallJoinAs) String() string { return proto.CompactTextString(m) }
func (*TLPhoneGetGroupCallJoinAs) ProtoMessage()    {}
func (*TLPhoneGetGroupCallJoinAs) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{398}
}
func (m *TLPhoneGetGroupCallJoinAs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneGetGroupCallJoinAs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneGetGroupCallJoinAs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneGetGroupCallJoinAs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneGetGroupCallJoinAs.Merge(m, src)
}
func (m *TLPhoneGetGroupCallJoinAs) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneGetGroupCallJoinAs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneGetGroupCallJoinAs.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneGetGroupCallJoinAs proto.InternalMessageInfo

func (m *TLPhoneGetGroupCallJoinAs) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneGetGroupCallJoinAs) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type TLPhoneExportGroupCallInvite struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	CanSelfUnmute        bool            `protobuf:"varint,3,opt,name=can_self_unmute,json=canSelfUnmute,proto3" json:"can_self_unmute,omitempty"`
	Call                 *InputGroupCall `protobuf:"bytes,4,opt,name=call,proto3" json:"call,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneExportGroupCallInvite) Reset()         { *m = TLPhoneExportGroupCallInvite{} }
func (m *TLPhoneExportGroupCallInvite) String() string { return proto.CompactTextString(m) }
func (*TLPhoneExportGroupCallInvite) ProtoMessage()    {}
func (*TLPhoneExportGroupCallInvite) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{399}
}
func (m *TLPhoneExportGroupCallInvite) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneExportGroupCallInvite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneExportGroupCallInvite.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneExportGroupCallInvite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneExportGroupCallInvite.Merge(m, src)
}
func (m *TLPhoneExportGroupCallInvite) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneExportGroupCallInvite) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneExportGroupCallInvite.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneExportGroupCallInvite proto.InternalMessageInfo

func (m *TLPhoneExportGroupCallInvite) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneExportGroupCallInvite) GetCanSelfUnmute() bool {
	if m != nil {
		return m.CanSelfUnmute
	}
	return false
}

func (m *TLPhoneExportGroupCallInvite) GetCall() *InputGroupCall {
	if m != nil {
		return m.Call
	}
	return nil
}

type TLPhoneToggleGroupCallStartSubscription struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Call                 *InputGroupCall `protobuf:"bytes,3,opt,name=call,proto3" json:"call,omitempty"`
	Subscribed           *Bool           `protobuf:"bytes,4,opt,name=subscribed,proto3" json:"subscribed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneToggleGroupCallStartSubscription) Reset() {
	*m = TLPhoneToggleGroupCallStartSubscription{}
}
func (m *TLPhoneToggleGroupCallStartSubscription) String() string { return proto.CompactTextString(m) }
func (*TLPhoneToggleGroupCallStartSubscription) ProtoMessage()    {}
func (*TLPhoneToggleGroupCallStartSubscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{400}
}
func (m *TLPhoneToggleGroupCallStartSubscription) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneToggleGroupCallStartSubscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneToggleGroupCallStartSubscription.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneToggleGroupCallStartSubscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneToggleGroupCallStartSubscription.Merge(m, src)
}
func (m *TLPhoneToggleGroupCallStartSubscription) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneToggleGroupCallStartSubscription) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneToggleGroupCallStartSubscription.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneToggleGroupCallStartSubscription proto.InternalMessageInfo

func (m *TLPhoneToggleGroupCallStartSubscription) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneToggleGroupCallStartSubscription) GetCall() *InputGroupCall {
	if m != nil {
		return m.Call
	}
	return nil
}

func (m *TLPhoneToggleGroupCallStartSubscription) GetSubscribed() *Bool {
	if m != nil {
		return m.Subscribed
	}
	return nil
}

type TLPhoneStartScheduledGroupCall struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Call                 *InputGroupCall `protobuf:"bytes,3,opt,name=call,proto3" json:"call,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneStartScheduledGroupCall) Reset()         { *m = TLPhoneStartScheduledGroupCall{} }
func (m *TLPhoneStartScheduledGroupCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneStartScheduledGroupCall) ProtoMessage()    {}
func (*TLPhoneStartScheduledGroupCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{401}
}
func (m *TLPhoneStartScheduledGroupCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneStartScheduledGroupCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneStartScheduledGroupCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneStartScheduledGroupCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneStartScheduledGroupCall.Merge(m, src)
}
func (m *TLPhoneStartScheduledGroupCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneStartScheduledGroupCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneStartScheduledGroupCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneStartScheduledGroupCall proto.InternalMessageInfo

func (m *TLPhoneStartScheduledGroupCall) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneStartScheduledGroupCall) GetCall() *InputGroupCall {
	if m != nil {
		return m.Call
	}
	return nil
}

type TLPhoneSaveDefaultGroupCallJoinAs struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	JoinAs               *InputPeer    `protobuf:"bytes,4,opt,name=join_as,json=joinAs,proto3" json:"join_as,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPhoneSaveDefaultGroupCallJoinAs) Reset()         { *m = TLPhoneSaveDefaultGroupCallJoinAs{} }
func (m *TLPhoneSaveDefaultGroupCallJoinAs) String() string { return proto.CompactTextString(m) }
func (*TLPhoneSaveDefaultGroupCallJoinAs) ProtoMessage()    {}
func (*TLPhoneSaveDefaultGroupCallJoinAs) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{402}
}
func (m *TLPhoneSaveDefaultGroupCallJoinAs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneSaveDefaultGroupCallJoinAs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneSaveDefaultGroupCallJoinAs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneSaveDefaultGroupCallJoinAs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneSaveDefaultGroupCallJoinAs.Merge(m, src)
}
func (m *TLPhoneSaveDefaultGroupCallJoinAs) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneSaveDefaultGroupCallJoinAs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneSaveDefaultGroupCallJoinAs.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneSaveDefaultGroupCallJoinAs proto.InternalMessageInfo

func (m *TLPhoneSaveDefaultGroupCallJoinAs) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneSaveDefaultGroupCallJoinAs) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLPhoneSaveDefaultGroupCallJoinAs) GetJoinAs() *InputPeer {
	if m != nil {
		return m.JoinAs
	}
	return nil
}

type TLPhoneJoinGroupCallPresentation struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Call                 *InputGroupCall `protobuf:"bytes,3,opt,name=call,proto3" json:"call,omitempty"`
	Params               *DataJSON       `protobuf:"bytes,4,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneJoinGroupCallPresentation) Reset()         { *m = TLPhoneJoinGroupCallPresentation{} }
func (m *TLPhoneJoinGroupCallPresentation) String() string { return proto.CompactTextString(m) }
func (*TLPhoneJoinGroupCallPresentation) ProtoMessage()    {}
func (*TLPhoneJoinGroupCallPresentation) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{403}
}
func (m *TLPhoneJoinGroupCallPresentation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneJoinGroupCallPresentation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneJoinGroupCallPresentation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneJoinGroupCallPresentation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneJoinGroupCallPresentation.Merge(m, src)
}
func (m *TLPhoneJoinGroupCallPresentation) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneJoinGroupCallPresentation) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneJoinGroupCallPresentation.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneJoinGroupCallPresentation proto.InternalMessageInfo

func (m *TLPhoneJoinGroupCallPresentation) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneJoinGroupCallPresentation) GetCall() *InputGroupCall {
	if m != nil {
		return m.Call
	}
	return nil
}

func (m *TLPhoneJoinGroupCallPresentation) GetParams() *DataJSON {
	if m != nil {
		return m.Params
	}
	return nil
}

type TLPhoneLeaveGroupCallPresentation struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Call                 *InputGroupCall `protobuf:"bytes,3,opt,name=call,proto3" json:"call,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneLeaveGroupCallPresentation) Reset()         { *m = TLPhoneLeaveGroupCallPresentation{} }
func (m *TLPhoneLeaveGroupCallPresentation) String() string { return proto.CompactTextString(m) }
func (*TLPhoneLeaveGroupCallPresentation) ProtoMessage()    {}
func (*TLPhoneLeaveGroupCallPresentation) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{404}
}
func (m *TLPhoneLeaveGroupCallPresentation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneLeaveGroupCallPresentation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneLeaveGroupCallPresentation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneLeaveGroupCallPresentation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneLeaveGroupCallPresentation.Merge(m, src)
}
func (m *TLPhoneLeaveGroupCallPresentation) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneLeaveGroupCallPresentation) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneLeaveGroupCallPresentation.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneLeaveGroupCallPresentation proto.InternalMessageInfo

func (m *TLPhoneLeaveGroupCallPresentation) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneLeaveGroupCallPresentation) GetCall() *InputGroupCall {
	if m != nil {
		return m.Call
	}
	return nil
}

type TLPhoneGetGroupCallStreamChannels struct {
	Constructor          TLConstructor   `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Call                 *InputGroupCall `protobuf:"bytes,3,opt,name=call,proto3" json:"call,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneGetGroupCallStreamChannels) Reset()         { *m = TLPhoneGetGroupCallStreamChannels{} }
func (m *TLPhoneGetGroupCallStreamChannels) String() string { return proto.CompactTextString(m) }
func (*TLPhoneGetGroupCallStreamChannels) ProtoMessage()    {}
func (*TLPhoneGetGroupCallStreamChannels) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{405}
}
func (m *TLPhoneGetGroupCallStreamChannels) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneGetGroupCallStreamChannels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneGetGroupCallStreamChannels.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneGetGroupCallStreamChannels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneGetGroupCallStreamChannels.Merge(m, src)
}
func (m *TLPhoneGetGroupCallStreamChannels) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneGetGroupCallStreamChannels) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneGetGroupCallStreamChannels.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneGetGroupCallStreamChannels proto.InternalMessageInfo

func (m *TLPhoneGetGroupCallStreamChannels) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneGetGroupCallStreamChannels) GetCall() *InputGroupCall {
	if m != nil {
		return m.Call
	}
	return nil
}

type TLPhoneGetGroupCallStreamRtmpUrl struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Revoke               *Bool         `protobuf:"bytes,4,opt,name=revoke,proto3" json:"revoke,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPhoneGetGroupCallStreamRtmpUrl) Reset()         { *m = TLPhoneGetGroupCallStreamRtmpUrl{} }
func (m *TLPhoneGetGroupCallStreamRtmpUrl) String() string { return proto.CompactTextString(m) }
func (*TLPhoneGetGroupCallStreamRtmpUrl) ProtoMessage()    {}
func (*TLPhoneGetGroupCallStreamRtmpUrl) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{406}
}
func (m *TLPhoneGetGroupCallStreamRtmpUrl) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneGetGroupCallStreamRtmpUrl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneGetGroupCallStreamRtmpUrl.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneGetGroupCallStreamRtmpUrl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneGetGroupCallStreamRtmpUrl.Merge(m, src)
}
func (m *TLPhoneGetGroupCallStreamRtmpUrl) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneGetGroupCallStreamRtmpUrl) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneGetGroupCallStreamRtmpUrl.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneGetGroupCallStreamRtmpUrl proto.InternalMessageInfo

func (m *TLPhoneGetGroupCallStreamRtmpUrl) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPhoneGetGroupCallStreamRtmpUrl) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLPhoneGetGroupCallStreamRtmpUrl) GetRevoke() *Bool {
	if m != nil {
		return m.Revoke
	}
	return nil
}

type TLLangpackGetLangPack struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	LangPack             string        `protobuf:"bytes,3,opt,name=lang_pack,json=langPack,proto3" json:"lang_pack,omitempty"`
	LangCode             string        `protobuf:"bytes,4,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLLangpackGetLangPack) Reset()         { *m = TLLangpackGetLangPack{} }
func (m *TLLangpackGetLangPack) String() string { return proto.CompactTextString(m) }
func (*TLLangpackGetLangPack) ProtoMessage()    {}
func (*TLLangpackGetLangPack) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{407}
}
func (m *TLLangpackGetLangPack) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLLangpackGetLangPack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLLangpackGetLangPack.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLLangpackGetLangPack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLLangpackGetLangPack.Merge(m, src)
}
func (m *TLLangpackGetLangPack) XXX_Size() int {
	return m.Size()
}
func (m *TLLangpackGetLangPack) XXX_DiscardUnknown() {
	xxx_messageInfo_TLLangpackGetLangPack.DiscardUnknown(m)
}

var xxx_messageInfo_TLLangpackGetLangPack proto.InternalMessageInfo

func (m *TLLangpackGetLangPack) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLLangpackGetLangPack) GetLangPack() string {
	if m != nil {
		return m.LangPack
	}
	return ""
}

func (m *TLLangpackGetLangPack) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

type TLLangpackGetStrings struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	LangPack             string        `protobuf:"bytes,3,opt,name=lang_pack,json=langPack,proto3" json:"lang_pack,omitempty"`
	LangCode             string        `protobuf:"bytes,4,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	Keys                 []string      `protobuf:"bytes,5,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLLangpackGetStrings) Reset()         { *m = TLLangpackGetStrings{} }
func (m *TLLangpackGetStrings) String() string { return proto.CompactTextString(m) }
func (*TLLangpackGetStrings) ProtoMessage()    {}
func (*TLLangpackGetStrings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{408}
}
func (m *TLLangpackGetStrings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLLangpackGetStrings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLLangpackGetStrings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLLangpackGetStrings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLLangpackGetStrings.Merge(m, src)
}
func (m *TLLangpackGetStrings) XXX_Size() int {
	return m.Size()
}
func (m *TLLangpackGetStrings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLLangpackGetStrings.DiscardUnknown(m)
}

var xxx_messageInfo_TLLangpackGetStrings proto.InternalMessageInfo

func (m *TLLangpackGetStrings) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLLangpackGetStrings) GetLangPack() string {
	if m != nil {
		return m.LangPack
	}
	return ""
}

func (m *TLLangpackGetStrings) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

func (m *TLLangpackGetStrings) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

type TLLangpackGetDifference struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	LangPack             string        `protobuf:"bytes,3,opt,name=lang_pack,json=langPack,proto3" json:"lang_pack,omitempty"`
	LangCode             string        `protobuf:"bytes,4,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	FromVersion          int32         `protobuf:"varint,5,opt,name=from_version,json=fromVersion,proto3" json:"from_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLLangpackGetDifference) Reset()         { *m = TLLangpackGetDifference{} }
func (m *TLLangpackGetDifference) String() string { return proto.CompactTextString(m) }
func (*TLLangpackGetDifference) ProtoMessage()    {}
func (*TLLangpackGetDifference) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{409}
}
func (m *TLLangpackGetDifference) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLLangpackGetDifference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLLangpackGetDifference.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLLangpackGetDifference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLLangpackGetDifference.Merge(m, src)
}
func (m *TLLangpackGetDifference) XXX_Size() int {
	return m.Size()
}
func (m *TLLangpackGetDifference) XXX_DiscardUnknown() {
	xxx_messageInfo_TLLangpackGetDifference.DiscardUnknown(m)
}

var xxx_messageInfo_TLLangpackGetDifference proto.InternalMessageInfo

func (m *TLLangpackGetDifference) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLLangpackGetDifference) GetLangPack() string {
	if m != nil {
		return m.LangPack
	}
	return ""
}

func (m *TLLangpackGetDifference) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

func (m *TLLangpackGetDifference) GetFromVersion() int32 {
	if m != nil {
		return m.FromVersion
	}
	return 0
}

type TLLangpackGetLanguages struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	LangPack             string        `protobuf:"bytes,3,opt,name=lang_pack,json=langPack,proto3" json:"lang_pack,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLLangpackGetLanguages) Reset()         { *m = TLLangpackGetLanguages{} }
func (m *TLLangpackGetLanguages) String() string { return proto.CompactTextString(m) }
func (*TLLangpackGetLanguages) ProtoMessage()    {}
func (*TLLangpackGetLanguages) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{410}
}
func (m *TLLangpackGetLanguages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLLangpackGetLanguages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLLangpackGetLanguages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLLangpackGetLanguages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLLangpackGetLanguages.Merge(m, src)
}
func (m *TLLangpackGetLanguages) XXX_Size() int {
	return m.Size()
}
func (m *TLLangpackGetLanguages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLLangpackGetLanguages.DiscardUnknown(m)
}

var xxx_messageInfo_TLLangpackGetLanguages proto.InternalMessageInfo

func (m *TLLangpackGetLanguages) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLLangpackGetLanguages) GetLangPack() string {
	if m != nil {
		return m.LangPack
	}
	return ""
}

type TLLangpackGetLanguage struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	LangPack             string        `protobuf:"bytes,3,opt,name=lang_pack,json=langPack,proto3" json:"lang_pack,omitempty"`
	LangCode             string        `protobuf:"bytes,4,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLLangpackGetLanguage) Reset()         { *m = TLLangpackGetLanguage{} }
func (m *TLLangpackGetLanguage) String() string { return proto.CompactTextString(m) }
func (*TLLangpackGetLanguage) ProtoMessage()    {}
func (*TLLangpackGetLanguage) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{411}
}
func (m *TLLangpackGetLanguage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLLangpackGetLanguage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLLangpackGetLanguage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLLangpackGetLanguage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLLangpackGetLanguage.Merge(m, src)
}
func (m *TLLangpackGetLanguage) XXX_Size() int {
	return m.Size()
}
func (m *TLLangpackGetLanguage) XXX_DiscardUnknown() {
	xxx_messageInfo_TLLangpackGetLanguage.DiscardUnknown(m)
}

var xxx_messageInfo_TLLangpackGetLanguage proto.InternalMessageInfo

func (m *TLLangpackGetLanguage) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLLangpackGetLanguage) GetLangPack() string {
	if m != nil {
		return m.LangPack
	}
	return ""
}

func (m *TLLangpackGetLanguage) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

type TLFoldersEditPeerFolders struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FolderPeers          []*InputFolderPeer `protobuf:"bytes,3,rep,name=folder_peers,json=folderPeers,proto3" json:"folder_peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLFoldersEditPeerFolders) Reset()         { *m = TLFoldersEditPeerFolders{} }
func (m *TLFoldersEditPeerFolders) String() string { return proto.CompactTextString(m) }
func (*TLFoldersEditPeerFolders) ProtoMessage()    {}
func (*TLFoldersEditPeerFolders) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{412}
}
func (m *TLFoldersEditPeerFolders) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLFoldersEditPeerFolders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLFoldersEditPeerFolders.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLFoldersEditPeerFolders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLFoldersEditPeerFolders.Merge(m, src)
}
func (m *TLFoldersEditPeerFolders) XXX_Size() int {
	return m.Size()
}
func (m *TLFoldersEditPeerFolders) XXX_DiscardUnknown() {
	xxx_messageInfo_TLFoldersEditPeerFolders.DiscardUnknown(m)
}

var xxx_messageInfo_TLFoldersEditPeerFolders proto.InternalMessageInfo

func (m *TLFoldersEditPeerFolders) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLFoldersEditPeerFolders) GetFolderPeers() []*InputFolderPeer {
	if m != nil {
		return m.FolderPeers
	}
	return nil
}

type TLFoldersDeleteFolder struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	FolderId             int32         `protobuf:"varint,3,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLFoldersDeleteFolder) Reset()         { *m = TLFoldersDeleteFolder{} }
func (m *TLFoldersDeleteFolder) String() string { return proto.CompactTextString(m) }
func (*TLFoldersDeleteFolder) ProtoMessage()    {}
func (*TLFoldersDeleteFolder) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{413}
}
func (m *TLFoldersDeleteFolder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLFoldersDeleteFolder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLFoldersDeleteFolder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLFoldersDeleteFolder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLFoldersDeleteFolder.Merge(m, src)
}
func (m *TLFoldersDeleteFolder) XXX_Size() int {
	return m.Size()
}
func (m *TLFoldersDeleteFolder) XXX_DiscardUnknown() {
	xxx_messageInfo_TLFoldersDeleteFolder.DiscardUnknown(m)
}

var xxx_messageInfo_TLFoldersDeleteFolder proto.InternalMessageInfo

func (m *TLFoldersDeleteFolder) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLFoldersDeleteFolder) GetFolderId() int32 {
	if m != nil {
		return m.FolderId
	}
	return 0
}

type TLStatsGetBroadcastStats struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Dark                 bool          `protobuf:"varint,3,opt,name=dark,proto3" json:"dark,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLStatsGetBroadcastStats) Reset()         { *m = TLStatsGetBroadcastStats{} }
func (m *TLStatsGetBroadcastStats) String() string { return proto.CompactTextString(m) }
func (*TLStatsGetBroadcastStats) ProtoMessage()    {}
func (*TLStatsGetBroadcastStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{414}
}
func (m *TLStatsGetBroadcastStats) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStatsGetBroadcastStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStatsGetBroadcastStats.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLStatsGetBroadcastStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStatsGetBroadcastStats.Merge(m, src)
}
func (m *TLStatsGetBroadcastStats) XXX_Size() int {
	return m.Size()
}
func (m *TLStatsGetBroadcastStats) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStatsGetBroadcastStats.DiscardUnknown(m)
}

var xxx_messageInfo_TLStatsGetBroadcastStats proto.InternalMessageInfo

func (m *TLStatsGetBroadcastStats) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLStatsGetBroadcastStats) GetDark() bool {
	if m != nil {
		return m.Dark
	}
	return false
}

func (m *TLStatsGetBroadcastStats) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

type TLStatsLoadAsyncGraph struct {
	Constructor          TLConstructor     `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Token                string            `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	X                    *types.Int64Value `protobuf:"bytes,4,opt,name=x,proto3" json:"x,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLStatsLoadAsyncGraph) Reset()         { *m = TLStatsLoadAsyncGraph{} }
func (m *TLStatsLoadAsyncGraph) String() string { return proto.CompactTextString(m) }
func (*TLStatsLoadAsyncGraph) ProtoMessage()    {}
func (*TLStatsLoadAsyncGraph) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{415}
}
func (m *TLStatsLoadAsyncGraph) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStatsLoadAsyncGraph) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStatsLoadAsyncGraph.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLStatsLoadAsyncGraph) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStatsLoadAsyncGraph.Merge(m, src)
}
func (m *TLStatsLoadAsyncGraph) XXX_Size() int {
	return m.Size()
}
func (m *TLStatsLoadAsyncGraph) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStatsLoadAsyncGraph.DiscardUnknown(m)
}

var xxx_messageInfo_TLStatsLoadAsyncGraph proto.InternalMessageInfo

func (m *TLStatsLoadAsyncGraph) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLStatsLoadAsyncGraph) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *TLStatsLoadAsyncGraph) GetX() *types.Int64Value {
	if m != nil {
		return m.X
	}
	return nil
}

type TLStatsGetMegagroupStats struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Dark                 bool          `protobuf:"varint,3,opt,name=dark,proto3" json:"dark,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLStatsGetMegagroupStats) Reset()         { *m = TLStatsGetMegagroupStats{} }
func (m *TLStatsGetMegagroupStats) String() string { return proto.CompactTextString(m) }
func (*TLStatsGetMegagroupStats) ProtoMessage()    {}
func (*TLStatsGetMegagroupStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{416}
}
func (m *TLStatsGetMegagroupStats) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStatsGetMegagroupStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStatsGetMegagroupStats.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLStatsGetMegagroupStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStatsGetMegagroupStats.Merge(m, src)
}
func (m *TLStatsGetMegagroupStats) XXX_Size() int {
	return m.Size()
}
func (m *TLStatsGetMegagroupStats) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStatsGetMegagroupStats.DiscardUnknown(m)
}

var xxx_messageInfo_TLStatsGetMegagroupStats proto.InternalMessageInfo

func (m *TLStatsGetMegagroupStats) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLStatsGetMegagroupStats) GetDark() bool {
	if m != nil {
		return m.Dark
	}
	return false
}

func (m *TLStatsGetMegagroupStats) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

type TLStatsGetMessagePublicForwards struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	MsgId                int32         `protobuf:"varint,4,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	OffsetRate           int32         `protobuf:"varint,5,opt,name=offset_rate,json=offsetRate,proto3" json:"offset_rate,omitempty"`
	OffsetPeer           *InputPeer    `protobuf:"bytes,6,opt,name=offset_peer,json=offsetPeer,proto3" json:"offset_peer,omitempty"`
	OffsetId             int32         `protobuf:"varint,7,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	Limit                int32         `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLStatsGetMessagePublicForwards) Reset()         { *m = TLStatsGetMessagePublicForwards{} }
func (m *TLStatsGetMessagePublicForwards) String() string { return proto.CompactTextString(m) }
func (*TLStatsGetMessagePublicForwards) ProtoMessage()    {}
func (*TLStatsGetMessagePublicForwards) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{417}
}
func (m *TLStatsGetMessagePublicForwards) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStatsGetMessagePublicForwards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStatsGetMessagePublicForwards.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLStatsGetMessagePublicForwards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStatsGetMessagePublicForwards.Merge(m, src)
}
func (m *TLStatsGetMessagePublicForwards) XXX_Size() int {
	return m.Size()
}
func (m *TLStatsGetMessagePublicForwards) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStatsGetMessagePublicForwards.DiscardUnknown(m)
}

var xxx_messageInfo_TLStatsGetMessagePublicForwards proto.InternalMessageInfo

func (m *TLStatsGetMessagePublicForwards) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLStatsGetMessagePublicForwards) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLStatsGetMessagePublicForwards) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLStatsGetMessagePublicForwards) GetOffsetRate() int32 {
	if m != nil {
		return m.OffsetRate
	}
	return 0
}

func (m *TLStatsGetMessagePublicForwards) GetOffsetPeer() *InputPeer {
	if m != nil {
		return m.OffsetPeer
	}
	return nil
}

func (m *TLStatsGetMessagePublicForwards) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLStatsGetMessagePublicForwards) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type TLStatsGetMessageStats struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Dark                 bool          `protobuf:"varint,3,opt,name=dark,proto3" json:"dark,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"`
	MsgId                int32         `protobuf:"varint,5,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLStatsGetMessageStats) Reset()         { *m = TLStatsGetMessageStats{} }
func (m *TLStatsGetMessageStats) String() string { return proto.CompactTextString(m) }
func (*TLStatsGetMessageStats) ProtoMessage()    {}
func (*TLStatsGetMessageStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{418}
}
func (m *TLStatsGetMessageStats) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStatsGetMessageStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStatsGetMessageStats.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLStatsGetMessageStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStatsGetMessageStats.Merge(m, src)
}
func (m *TLStatsGetMessageStats) XXX_Size() int {
	return m.Size()
}
func (m *TLStatsGetMessageStats) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStatsGetMessageStats.DiscardUnknown(m)
}

var xxx_messageInfo_TLStatsGetMessageStats proto.InternalMessageInfo

func (m *TLStatsGetMessageStats) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLStatsGetMessageStats) GetDark() bool {
	if m != nil {
		return m.Dark
	}
	return false
}

func (m *TLStatsGetMessageStats) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLStatsGetMessageStats) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

type TLAuthLogOut5717DA40 struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthLogOut5717DA40) Reset()         { *m = TLAuthLogOut5717DA40{} }
func (m *TLAuthLogOut5717DA40) String() string { return proto.CompactTextString(m) }
func (*TLAuthLogOut5717DA40) ProtoMessage()    {}
func (*TLAuthLogOut5717DA40) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{419}
}
func (m *TLAuthLogOut5717DA40) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthLogOut5717DA40) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthLogOut5717DA40.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthLogOut5717DA40) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthLogOut5717DA40.Merge(m, src)
}
func (m *TLAuthLogOut5717DA40) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthLogOut5717DA40) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthLogOut5717DA40.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthLogOut5717DA40 proto.InternalMessageInfo

func (m *TLAuthLogOut5717DA40) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLUsersGetFullUserCA30A5B1 struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   *InputUser    `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLUsersGetFullUserCA30A5B1) Reset()         { *m = TLUsersGetFullUserCA30A5B1{} }
func (m *TLUsersGetFullUserCA30A5B1) String() string { return proto.CompactTextString(m) }
func (*TLUsersGetFullUserCA30A5B1) ProtoMessage()    {}
func (*TLUsersGetFullUserCA30A5B1) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{420}
}
func (m *TLUsersGetFullUserCA30A5B1) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUsersGetFullUserCA30A5B1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUsersGetFullUserCA30A5B1.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUsersGetFullUserCA30A5B1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUsersGetFullUserCA30A5B1.Merge(m, src)
}
func (m *TLUsersGetFullUserCA30A5B1) XXX_Size() int {
	return m.Size()
}
func (m *TLUsersGetFullUserCA30A5B1) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUsersGetFullUserCA30A5B1.DiscardUnknown(m)
}

var xxx_messageInfo_TLUsersGetFullUserCA30A5B1 proto.InternalMessageInfo

func (m *TLUsersGetFullUserCA30A5B1) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUsersGetFullUserCA30A5B1) GetId() *InputUser {
	if m != nil {
		return m.Id
	}
	return nil
}

type TLMessagesGetPeerSettings3672E09C struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetPeerSettings3672E09C) Reset()         { *m = TLMessagesGetPeerSettings3672E09C{} }
func (m *TLMessagesGetPeerSettings3672E09C) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetPeerSettings3672E09C) ProtoMessage()    {}
func (*TLMessagesGetPeerSettings3672E09C) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{421}
}
func (m *TLMessagesGetPeerSettings3672E09C) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetPeerSettings3672E09C) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetPeerSettings3672E09C.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetPeerSettings3672E09C) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetPeerSettings3672E09C.Merge(m, src)
}
func (m *TLMessagesGetPeerSettings3672E09C) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetPeerSettings3672E09C) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetPeerSettings3672E09C.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetPeerSettings3672E09C proto.InternalMessageInfo

func (m *TLMessagesGetPeerSettings3672E09C) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetPeerSettings3672E09C) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type TLChannelsDeleteUserHistory struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsDeleteUserHistory) Reset()         { *m = TLChannelsDeleteUserHistory{} }
func (m *TLChannelsDeleteUserHistory) String() string { return proto.CompactTextString(m) }
func (*TLChannelsDeleteUserHistory) ProtoMessage()    {}
func (*TLChannelsDeleteUserHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{422}
}
func (m *TLChannelsDeleteUserHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsDeleteUserHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsDeleteUserHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsDeleteUserHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsDeleteUserHistory.Merge(m, src)
}
func (m *TLChannelsDeleteUserHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsDeleteUserHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsDeleteUserHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsDeleteUserHistory proto.InternalMessageInfo

func (m *TLChannelsDeleteUserHistory) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLChannelsDeleteUserHistory) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsDeleteUserHistory) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

type TLAccountGetChatThemesD6D71D7B struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Hash                 int32         `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountGetChatThemesD6D71D7B) Reset()         { *m = TLAccountGetChatThemesD6D71D7B{} }
func (m *TLAccountGetChatThemesD6D71D7B) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetChatThemesD6D71D7B) ProtoMessage()    {}
func (*TLAccountGetChatThemesD6D71D7B) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{423}
}
func (m *TLAccountGetChatThemesD6D71D7B) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetChatThemesD6D71D7B) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetChatThemesD6D71D7B.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetChatThemesD6D71D7B) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetChatThemesD6D71D7B.Merge(m, src)
}
func (m *TLAccountGetChatThemesD6D71D7B) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetChatThemesD6D71D7B) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetChatThemesD6D71D7B.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetChatThemesD6D71D7B proto.InternalMessageInfo

func (m *TLAccountGetChatThemesD6D71D7B) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountGetChatThemesD6D71D7B) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type TLMessagesGetStatsURL struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Dark                 bool          `protobuf:"varint,3,opt,name=dark,proto3" json:"dark,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	Params               string        `protobuf:"bytes,5,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesGetStatsURL) Reset()         { *m = TLMessagesGetStatsURL{} }
func (m *TLMessagesGetStatsURL) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetStatsURL) ProtoMessage()    {}
func (*TLMessagesGetStatsURL) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{424}
}
func (m *TLMessagesGetStatsURL) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetStatsURL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetStatsURL.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetStatsURL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetStatsURL.Merge(m, src)
}
func (m *TLMessagesGetStatsURL) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetStatsURL) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetStatsURL.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetStatsURL proto.InternalMessageInfo

func (m *TLMessagesGetStatsURL) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLMessagesGetStatsURL) GetDark() bool {
	if m != nil {
		return m.Dark
	}
	return false
}

func (m *TLMessagesGetStatsURL) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetStatsURL) GetParams() string {
	if m != nil {
		return m.Params
	}
	return ""
}

type TLHelpTest struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLHelpTest) Reset()         { *m = TLHelpTest{} }
func (m *TLHelpTest) String() string { return proto.CompactTextString(m) }
func (*TLHelpTest) ProtoMessage()    {}
func (*TLHelpTest) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{425}
}
func (m *TLHelpTest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpTest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpTest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpTest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpTest.Merge(m, src)
}
func (m *TLHelpTest) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpTest) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpTest.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpTest proto.InternalMessageInfo

func (m *TLHelpTest) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLPredefinedCreatePredefinedUser struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Phone                string             `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	FirstName            *types.StringValue `protobuf:"bytes,4,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             *types.StringValue `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Username             *types.StringValue `protobuf:"bytes,6,opt,name=username,proto3" json:"username,omitempty"`
	Code                 string             `protobuf:"bytes,7,opt,name=code,proto3" json:"code,omitempty"`
	Verified             bool               `protobuf:"varint,8,opt,name=verified,proto3" json:"verified,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLPredefinedCreatePredefinedUser) Reset()         { *m = TLPredefinedCreatePredefinedUser{} }
func (m *TLPredefinedCreatePredefinedUser) String() string { return proto.CompactTextString(m) }
func (*TLPredefinedCreatePredefinedUser) ProtoMessage()    {}
func (*TLPredefinedCreatePredefinedUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{426}
}
func (m *TLPredefinedCreatePredefinedUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPredefinedCreatePredefinedUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPredefinedCreatePredefinedUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPredefinedCreatePredefinedUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPredefinedCreatePredefinedUser.Merge(m, src)
}
func (m *TLPredefinedCreatePredefinedUser) XXX_Size() int {
	return m.Size()
}
func (m *TLPredefinedCreatePredefinedUser) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPredefinedCreatePredefinedUser.DiscardUnknown(m)
}

var xxx_messageInfo_TLPredefinedCreatePredefinedUser proto.InternalMessageInfo

func (m *TLPredefinedCreatePredefinedUser) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPredefinedCreatePredefinedUser) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *TLPredefinedCreatePredefinedUser) GetFirstName() *types.StringValue {
	if m != nil {
		return m.FirstName
	}
	return nil
}

func (m *TLPredefinedCreatePredefinedUser) GetLastName() *types.StringValue {
	if m != nil {
		return m.LastName
	}
	return nil
}

func (m *TLPredefinedCreatePredefinedUser) GetUsername() *types.StringValue {
	if m != nil {
		return m.Username
	}
	return nil
}

func (m *TLPredefinedCreatePredefinedUser) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *TLPredefinedCreatePredefinedUser) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

type TLPredefinedUpdatePredefinedUsername struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Phone                string        `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Username             string        `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPredefinedUpdatePredefinedUsername) Reset()         { *m = TLPredefinedUpdatePredefinedUsername{} }
func (m *TLPredefinedUpdatePredefinedUsername) String() string { return proto.CompactTextString(m) }
func (*TLPredefinedUpdatePredefinedUsername) ProtoMessage()    {}
func (*TLPredefinedUpdatePredefinedUsername) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{427}
}
func (m *TLPredefinedUpdatePredefinedUsername) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPredefinedUpdatePredefinedUsername) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPredefinedUpdatePredefinedUsername.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPredefinedUpdatePredefinedUsername) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPredefinedUpdatePredefinedUsername.Merge(m, src)
}
func (m *TLPredefinedUpdatePredefinedUsername) XXX_Size() int {
	return m.Size()
}
func (m *TLPredefinedUpdatePredefinedUsername) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPredefinedUpdatePredefinedUsername.DiscardUnknown(m)
}

var xxx_messageInfo_TLPredefinedUpdatePredefinedUsername proto.InternalMessageInfo

func (m *TLPredefinedUpdatePredefinedUsername) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPredefinedUpdatePredefinedUsername) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *TLPredefinedUpdatePredefinedUsername) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type TLPredefinedUpdatePredefinedProfile struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Phone                string             `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	FirstName            *types.StringValue `protobuf:"bytes,4,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             *types.StringValue `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	About                *types.StringValue `protobuf:"bytes,6,opt,name=about,proto3" json:"about,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLPredefinedUpdatePredefinedProfile) Reset()         { *m = TLPredefinedUpdatePredefinedProfile{} }
func (m *TLPredefinedUpdatePredefinedProfile) String() string { return proto.CompactTextString(m) }
func (*TLPredefinedUpdatePredefinedProfile) ProtoMessage()    {}
func (*TLPredefinedUpdatePredefinedProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{428}
}
func (m *TLPredefinedUpdatePredefinedProfile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPredefinedUpdatePredefinedProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPredefinedUpdatePredefinedProfile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPredefinedUpdatePredefinedProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPredefinedUpdatePredefinedProfile.Merge(m, src)
}
func (m *TLPredefinedUpdatePredefinedProfile) XXX_Size() int {
	return m.Size()
}
func (m *TLPredefinedUpdatePredefinedProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPredefinedUpdatePredefinedProfile.DiscardUnknown(m)
}

var xxx_messageInfo_TLPredefinedUpdatePredefinedProfile proto.InternalMessageInfo

func (m *TLPredefinedUpdatePredefinedProfile) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPredefinedUpdatePredefinedProfile) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *TLPredefinedUpdatePredefinedProfile) GetFirstName() *types.StringValue {
	if m != nil {
		return m.FirstName
	}
	return nil
}

func (m *TLPredefinedUpdatePredefinedProfile) GetLastName() *types.StringValue {
	if m != nil {
		return m.LastName
	}
	return nil
}

func (m *TLPredefinedUpdatePredefinedProfile) GetAbout() *types.StringValue {
	if m != nil {
		return m.About
	}
	return nil
}

type TLPredefinedUpdatePredefinedVerified struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Phone                string        `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Verified             bool          `protobuf:"varint,4,opt,name=verified,proto3" json:"verified,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPredefinedUpdatePredefinedVerified) Reset()         { *m = TLPredefinedUpdatePredefinedVerified{} }
func (m *TLPredefinedUpdatePredefinedVerified) String() string { return proto.CompactTextString(m) }
func (*TLPredefinedUpdatePredefinedVerified) ProtoMessage()    {}
func (*TLPredefinedUpdatePredefinedVerified) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{429}
}
func (m *TLPredefinedUpdatePredefinedVerified) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPredefinedUpdatePredefinedVerified) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPredefinedUpdatePredefinedVerified.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPredefinedUpdatePredefinedVerified) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPredefinedUpdatePredefinedVerified.Merge(m, src)
}
func (m *TLPredefinedUpdatePredefinedVerified) XXX_Size() int {
	return m.Size()
}
func (m *TLPredefinedUpdatePredefinedVerified) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPredefinedUpdatePredefinedVerified.DiscardUnknown(m)
}

var xxx_messageInfo_TLPredefinedUpdatePredefinedVerified proto.InternalMessageInfo

func (m *TLPredefinedUpdatePredefinedVerified) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPredefinedUpdatePredefinedVerified) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *TLPredefinedUpdatePredefinedVerified) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

type TLPredefinedUpdatePredefinedCode struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Phone                string        `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Code                 string        `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPredefinedUpdatePredefinedCode) Reset()         { *m = TLPredefinedUpdatePredefinedCode{} }
func (m *TLPredefinedUpdatePredefinedCode) String() string { return proto.CompactTextString(m) }
func (*TLPredefinedUpdatePredefinedCode) ProtoMessage()    {}
func (*TLPredefinedUpdatePredefinedCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{430}
}
func (m *TLPredefinedUpdatePredefinedCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPredefinedUpdatePredefinedCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPredefinedUpdatePredefinedCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPredefinedUpdatePredefinedCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPredefinedUpdatePredefinedCode.Merge(m, src)
}
func (m *TLPredefinedUpdatePredefinedCode) XXX_Size() int {
	return m.Size()
}
func (m *TLPredefinedUpdatePredefinedCode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPredefinedUpdatePredefinedCode.DiscardUnknown(m)
}

var xxx_messageInfo_TLPredefinedUpdatePredefinedCode proto.InternalMessageInfo

func (m *TLPredefinedUpdatePredefinedCode) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPredefinedUpdatePredefinedCode) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *TLPredefinedUpdatePredefinedCode) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type TLPredefinedGetPredefinedUser struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Phone                string        `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPredefinedGetPredefinedUser) Reset()         { *m = TLPredefinedGetPredefinedUser{} }
func (m *TLPredefinedGetPredefinedUser) String() string { return proto.CompactTextString(m) }
func (*TLPredefinedGetPredefinedUser) ProtoMessage()    {}
func (*TLPredefinedGetPredefinedUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{431}
}
func (m *TLPredefinedGetPredefinedUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPredefinedGetPredefinedUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPredefinedGetPredefinedUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPredefinedGetPredefinedUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPredefinedGetPredefinedUser.Merge(m, src)
}
func (m *TLPredefinedGetPredefinedUser) XXX_Size() int {
	return m.Size()
}
func (m *TLPredefinedGetPredefinedUser) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPredefinedGetPredefinedUser.DiscardUnknown(m)
}

var xxx_messageInfo_TLPredefinedGetPredefinedUser proto.InternalMessageInfo

func (m *TLPredefinedGetPredefinedUser) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLPredefinedGetPredefinedUser) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type TLPredefinedGetPredefinedUsers struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPredefinedGetPredefinedUsers) Reset()         { *m = TLPredefinedGetPredefinedUsers{} }
func (m *TLPredefinedGetPredefinedUsers) String() string { return proto.CompactTextString(m) }
func (*TLPredefinedGetPredefinedUsers) ProtoMessage()    {}
func (*TLPredefinedGetPredefinedUsers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{432}
}
func (m *TLPredefinedGetPredefinedUsers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPredefinedGetPredefinedUsers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPredefinedGetPredefinedUsers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPredefinedGetPredefinedUsers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPredefinedGetPredefinedUsers.Merge(m, src)
}
func (m *TLPredefinedGetPredefinedUsers) XXX_Size() int {
	return m.Size()
}
func (m *TLPredefinedGetPredefinedUsers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPredefinedGetPredefinedUsers.DiscardUnknown(m)
}

var xxx_messageInfo_TLPredefinedGetPredefinedUsers proto.InternalMessageInfo

func (m *TLPredefinedGetPredefinedUsers) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

type TLUsersGetMe struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   int64         `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Token                string        `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLUsersGetMe) Reset()         { *m = TLUsersGetMe{} }
func (m *TLUsersGetMe) String() string { return proto.CompactTextString(m) }
func (*TLUsersGetMe) ProtoMessage()    {}
func (*TLUsersGetMe) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{433}
}
func (m *TLUsersGetMe) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUsersGetMe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUsersGetMe.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUsersGetMe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUsersGetMe.Merge(m, src)
}
func (m *TLUsersGetMe) XXX_Size() int {
	return m.Size()
}
func (m *TLUsersGetMe) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUsersGetMe.DiscardUnknown(m)
}

var xxx_messageInfo_TLUsersGetMe proto.InternalMessageInfo

func (m *TLUsersGetMe) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLUsersGetMe) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLUsersGetMe) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type TLAccountUpdateVerified struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Id                   int64         `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Verified             bool          `protobuf:"varint,4,opt,name=verified,proto3" json:"verified,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountUpdateVerified) Reset()         { *m = TLAccountUpdateVerified{} }
func (m *TLAccountUpdateVerified) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdateVerified) ProtoMessage()    {}
func (*TLAccountUpdateVerified) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{434}
}
func (m *TLAccountUpdateVerified) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdateVerified) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdateVerified.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountUpdateVerified) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdateVerified.Merge(m, src)
}
func (m *TLAccountUpdateVerified) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdateVerified) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdateVerified.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdateVerified proto.InternalMessageInfo

func (m *TLAccountUpdateVerified) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAccountUpdateVerified) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLAccountUpdateVerified) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

type TLAuthToggleBan struct {
	Constructor          TLConstructor      `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Phone                string             `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Predefined           bool               `protobuf:"varint,4,opt,name=predefined,proto3" json:"predefined,omitempty"`
	Expires              *types.Int32Value  `protobuf:"bytes,5,opt,name=expires,proto3" json:"expires,omitempty"`
	Reason               *types.StringValue `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLAuthToggleBan) Reset()         { *m = TLAuthToggleBan{} }
func (m *TLAuthToggleBan) String() string { return proto.CompactTextString(m) }
func (*TLAuthToggleBan) ProtoMessage()    {}
func (*TLAuthToggleBan) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{435}
}
func (m *TLAuthToggleBan) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthToggleBan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthToggleBan.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthToggleBan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthToggleBan.Merge(m, src)
}
func (m *TLAuthToggleBan) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthToggleBan) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthToggleBan.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthToggleBan proto.InternalMessageInfo

func (m *TLAuthToggleBan) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLAuthToggleBan) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *TLAuthToggleBan) GetPredefined() bool {
	if m != nil {
		return m.Predefined
	}
	return false
}

func (m *TLAuthToggleBan) GetExpires() *types.Int32Value {
	if m != nil {
		return m.Expires
	}
	return nil
}

func (m *TLAuthToggleBan) GetReason() *types.StringValue {
	if m != nil {
		return m.Reason
	}
	return nil
}

type TLBizInvokeBizDataRaw struct {
	Constructor          TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	BizData              *BizDataRaw   `protobuf:"bytes,3,opt,name=biz_data,json=bizData,proto3" json:"biz_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBizInvokeBizDataRaw) Reset()         { *m = TLBizInvokeBizDataRaw{} }
func (m *TLBizInvokeBizDataRaw) String() string { return proto.CompactTextString(m) }
func (*TLBizInvokeBizDataRaw) ProtoMessage()    {}
func (*TLBizInvokeBizDataRaw) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{436}
}
func (m *TLBizInvokeBizDataRaw) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBizInvokeBizDataRaw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBizInvokeBizDataRaw.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLBizInvokeBizDataRaw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBizInvokeBizDataRaw.Merge(m, src)
}
func (m *TLBizInvokeBizDataRaw) XXX_Size() int {
	return m.Size()
}
func (m *TLBizInvokeBizDataRaw) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBizInvokeBizDataRaw.DiscardUnknown(m)
}

var xxx_messageInfo_TLBizInvokeBizDataRaw proto.InternalMessageInfo

func (m *TLBizInvokeBizDataRaw) GetConstructor() TLConstructor {
	if m != nil {
		return m.Constructor
	}
	return CRC32_UNKNOWN
}

func (m *TLBizInvokeBizDataRaw) GetBizData() *BizDataRaw {
	if m != nil {
		return m.BizData
	}
	return nil
}

//--------------------------------------------------------------------------------------------
// Vector api result type
type Vector_SecureValue struct {
	Datas                []*SecureValue `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Vector_SecureValue) Reset()         { *m = Vector_SecureValue{} }
func (m *Vector_SecureValue) String() string { return proto.CompactTextString(m) }
func (*Vector_SecureValue) ProtoMessage()    {}
func (*Vector_SecureValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{437}
}
func (m *Vector_SecureValue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_SecureValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_SecureValue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_SecureValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_SecureValue.Merge(m, src)
}
func (m *Vector_SecureValue) XXX_Size() int {
	return m.Size()
}
func (m *Vector_SecureValue) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_SecureValue.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_SecureValue proto.InternalMessageInfo

func (m *Vector_SecureValue) GetDatas() []*SecureValue {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_WallPaper struct {
	Datas                []*WallPaper `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Vector_WallPaper) Reset()         { *m = Vector_WallPaper{} }
func (m *Vector_WallPaper) String() string { return proto.CompactTextString(m) }
func (*Vector_WallPaper) ProtoMessage()    {}
func (*Vector_WallPaper) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{438}
}
func (m *Vector_WallPaper) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_WallPaper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_WallPaper.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_WallPaper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_WallPaper.Merge(m, src)
}
func (m *Vector_WallPaper) XXX_Size() int {
	return m.Size()
}
func (m *Vector_WallPaper) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_WallPaper.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_WallPaper proto.InternalMessageInfo

func (m *Vector_WallPaper) GetDatas() []*WallPaper {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_User struct {
	Datas                []*User  `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vector_User) Reset()         { *m = Vector_User{} }
func (m *Vector_User) String() string { return proto.CompactTextString(m) }
func (*Vector_User) ProtoMessage()    {}
func (*Vector_User) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{439}
}
func (m *Vector_User) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_User.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_User.Merge(m, src)
}
func (m *Vector_User) XXX_Size() int {
	return m.Size()
}
func (m *Vector_User) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_User.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_User proto.InternalMessageInfo

func (m *Vector_User) GetDatas() []*User {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_Int struct {
	Datas                []int32  `protobuf:"varint,1,rep,packed,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vector_Int) Reset()         { *m = Vector_Int{} }
func (m *Vector_Int) String() string { return proto.CompactTextString(m) }
func (*Vector_Int) ProtoMessage()    {}
func (*Vector_Int) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{440}
}
func (m *Vector_Int) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_Int) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_Int.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_Int) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_Int.Merge(m, src)
}
func (m *Vector_Int) XXX_Size() int {
	return m.Size()
}
func (m *Vector_Int) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_Int.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_Int proto.InternalMessageInfo

func (m *Vector_Int) GetDatas() []int32 {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_ContactStatus struct {
	Datas                []*ContactStatus `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Vector_ContactStatus) Reset()         { *m = Vector_ContactStatus{} }
func (m *Vector_ContactStatus) String() string { return proto.CompactTextString(m) }
func (*Vector_ContactStatus) ProtoMessage()    {}
func (*Vector_ContactStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{441}
}
func (m *Vector_ContactStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_ContactStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_ContactStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_ContactStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_ContactStatus.Merge(m, src)
}
func (m *Vector_ContactStatus) XXX_Size() int {
	return m.Size()
}
func (m *Vector_ContactStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_ContactStatus.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_ContactStatus proto.InternalMessageInfo

func (m *Vector_ContactStatus) GetDatas() []*ContactStatus {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_SavedContact struct {
	Datas                []*SavedContact `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Vector_SavedContact) Reset()         { *m = Vector_SavedContact{} }
func (m *Vector_SavedContact) String() string { return proto.CompactTextString(m) }
func (*Vector_SavedContact) ProtoMessage()    {}
func (*Vector_SavedContact) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{442}
}
func (m *Vector_SavedContact) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_SavedContact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_SavedContact.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_SavedContact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_SavedContact.Merge(m, src)
}
func (m *Vector_SavedContact) XXX_Size() int {
	return m.Size()
}
func (m *Vector_SavedContact) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_SavedContact.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_SavedContact proto.InternalMessageInfo

func (m *Vector_SavedContact) GetDatas() []*SavedContact {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_ReceivedNotifyMessage struct {
	Datas                []*ReceivedNotifyMessage `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Vector_ReceivedNotifyMessage) Reset()         { *m = Vector_ReceivedNotifyMessage{} }
func (m *Vector_ReceivedNotifyMessage) String() string { return proto.CompactTextString(m) }
func (*Vector_ReceivedNotifyMessage) ProtoMessage()    {}
func (*Vector_ReceivedNotifyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{443}
}
func (m *Vector_ReceivedNotifyMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_ReceivedNotifyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_ReceivedNotifyMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_ReceivedNotifyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_ReceivedNotifyMessage.Merge(m, src)
}
func (m *Vector_ReceivedNotifyMessage) XXX_Size() int {
	return m.Size()
}
func (m *Vector_ReceivedNotifyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_ReceivedNotifyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_ReceivedNotifyMessage proto.InternalMessageInfo

func (m *Vector_ReceivedNotifyMessage) GetDatas() []*ReceivedNotifyMessage {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_Long struct {
	Datas                []int64  `protobuf:"varint,1,rep,packed,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vector_Long) Reset()         { *m = Vector_Long{} }
func (m *Vector_Long) String() string { return proto.CompactTextString(m) }
func (*Vector_Long) ProtoMessage()    {}
func (*Vector_Long) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{444}
}
func (m *Vector_Long) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_Long) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_Long.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_Long) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_Long.Merge(m, src)
}
func (m *Vector_Long) XXX_Size() int {
	return m.Size()
}
func (m *Vector_Long) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_Long.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_Long proto.InternalMessageInfo

func (m *Vector_Long) GetDatas() []int64 {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_StickerSetCovered struct {
	Datas                []*StickerSetCovered `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Vector_StickerSetCovered) Reset()         { *m = Vector_StickerSetCovered{} }
func (m *Vector_StickerSetCovered) String() string { return proto.CompactTextString(m) }
func (*Vector_StickerSetCovered) ProtoMessage()    {}
func (*Vector_StickerSetCovered) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{445}
}
func (m *Vector_StickerSetCovered) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_StickerSetCovered) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_StickerSetCovered.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_StickerSetCovered) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_StickerSetCovered.Merge(m, src)
}
func (m *Vector_StickerSetCovered) XXX_Size() int {
	return m.Size()
}
func (m *Vector_StickerSetCovered) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_StickerSetCovered.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_StickerSetCovered proto.InternalMessageInfo

func (m *Vector_StickerSetCovered) GetDatas() []*StickerSetCovered {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_MessageRange struct {
	Datas                []*MessageRange `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Vector_MessageRange) Reset()         { *m = Vector_MessageRange{} }
func (m *Vector_MessageRange) String() string { return proto.CompactTextString(m) }
func (*Vector_MessageRange) ProtoMessage()    {}
func (*Vector_MessageRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{446}
}
func (m *Vector_MessageRange) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_MessageRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_MessageRange.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_MessageRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_MessageRange.Merge(m, src)
}
func (m *Vector_MessageRange) XXX_Size() int {
	return m.Size()
}
func (m *Vector_MessageRange) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_MessageRange.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_MessageRange proto.InternalMessageInfo

func (m *Vector_MessageRange) GetDatas() []*MessageRange {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_DialogPeer struct {
	Datas                []*DialogPeer `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Vector_DialogPeer) Reset()         { *m = Vector_DialogPeer{} }
func (m *Vector_DialogPeer) String() string { return proto.CompactTextString(m) }
func (*Vector_DialogPeer) ProtoMessage()    {}
func (*Vector_DialogPeer) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{447}
}
func (m *Vector_DialogPeer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_DialogPeer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_DialogPeer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_DialogPeer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_DialogPeer.Merge(m, src)
}
func (m *Vector_DialogPeer) XXX_Size() int {
	return m.Size()
}
func (m *Vector_DialogPeer) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_DialogPeer.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_DialogPeer proto.InternalMessageInfo

func (m *Vector_DialogPeer) GetDatas() []*DialogPeer {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_EmojiLanguage struct {
	Datas                []*EmojiLanguage `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Vector_EmojiLanguage) Reset()         { *m = Vector_EmojiLanguage{} }
func (m *Vector_EmojiLanguage) String() string { return proto.CompactTextString(m) }
func (*Vector_EmojiLanguage) ProtoMessage()    {}
func (*Vector_EmojiLanguage) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{448}
}
func (m *Vector_EmojiLanguage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_EmojiLanguage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_EmojiLanguage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_EmojiLanguage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_EmojiLanguage.Merge(m, src)
}
func (m *Vector_EmojiLanguage) XXX_Size() int {
	return m.Size()
}
func (m *Vector_EmojiLanguage) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_EmojiLanguage.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_EmojiLanguage proto.InternalMessageInfo

func (m *Vector_EmojiLanguage) GetDatas() []*EmojiLanguage {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_Messages_SearchCounter struct {
	Datas                []*Messages_SearchCounter `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Vector_Messages_SearchCounter) Reset()         { *m = Vector_Messages_SearchCounter{} }
func (m *Vector_Messages_SearchCounter) String() string { return proto.CompactTextString(m) }
func (*Vector_Messages_SearchCounter) ProtoMessage()    {}
func (*Vector_Messages_SearchCounter) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{449}
}
func (m *Vector_Messages_SearchCounter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_Messages_SearchCounter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_Messages_SearchCounter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_Messages_SearchCounter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_Messages_SearchCounter.Merge(m, src)
}
func (m *Vector_Messages_SearchCounter) XXX_Size() int {
	return m.Size()
}
func (m *Vector_Messages_SearchCounter) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_Messages_SearchCounter.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_Messages_SearchCounter proto.InternalMessageInfo

func (m *Vector_Messages_SearchCounter) GetDatas() []*Messages_SearchCounter {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_DialogFilter struct {
	Datas                []*DialogFilter `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Vector_DialogFilter) Reset()         { *m = Vector_DialogFilter{} }
func (m *Vector_DialogFilter) String() string { return proto.CompactTextString(m) }
func (*Vector_DialogFilter) ProtoMessage()    {}
func (*Vector_DialogFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{450}
}
func (m *Vector_DialogFilter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_DialogFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_DialogFilter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_DialogFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_DialogFilter.Merge(m, src)
}
func (m *Vector_DialogFilter) XXX_Size() int {
	return m.Size()
}
func (m *Vector_DialogFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_DialogFilter.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_DialogFilter proto.InternalMessageInfo

func (m *Vector_DialogFilter) GetDatas() []*DialogFilter {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_DialogFilterSuggested struct {
	Datas                []*DialogFilterSuggested `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Vector_DialogFilterSuggested) Reset()         { *m = Vector_DialogFilterSuggested{} }
func (m *Vector_DialogFilterSuggested) String() string { return proto.CompactTextString(m) }
func (*Vector_DialogFilterSuggested) ProtoMessage()    {}
func (*Vector_DialogFilterSuggested) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{451}
}
func (m *Vector_DialogFilterSuggested) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_DialogFilterSuggested) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_DialogFilterSuggested.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_DialogFilterSuggested) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_DialogFilterSuggested.Merge(m, src)
}
func (m *Vector_DialogFilterSuggested) XXX_Size() int {
	return m.Size()
}
func (m *Vector_DialogFilterSuggested) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_DialogFilterSuggested.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_DialogFilterSuggested proto.InternalMessageInfo

func (m *Vector_DialogFilterSuggested) GetDatas() []*DialogFilterSuggested {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_FileHash struct {
	Datas                []*FileHash `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Vector_FileHash) Reset()         { *m = Vector_FileHash{} }
func (m *Vector_FileHash) String() string { return proto.CompactTextString(m) }
func (*Vector_FileHash) ProtoMessage()    {}
func (*Vector_FileHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{452}
}
func (m *Vector_FileHash) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_FileHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_FileHash.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_FileHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_FileHash.Merge(m, src)
}
func (m *Vector_FileHash) XXX_Size() int {
	return m.Size()
}
func (m *Vector_FileHash) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_FileHash.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_FileHash proto.InternalMessageInfo

func (m *Vector_FileHash) GetDatas() []*FileHash {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_BotCommand struct {
	Datas                []*BotCommand `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Vector_BotCommand) Reset()         { *m = Vector_BotCommand{} }
func (m *Vector_BotCommand) String() string { return proto.CompactTextString(m) }
func (*Vector_BotCommand) ProtoMessage()    {}
func (*Vector_BotCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{453}
}
func (m *Vector_BotCommand) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_BotCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_BotCommand.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_BotCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_BotCommand.Merge(m, src)
}
func (m *Vector_BotCommand) XXX_Size() int {
	return m.Size()
}
func (m *Vector_BotCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_BotCommand.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_BotCommand proto.InternalMessageInfo

func (m *Vector_BotCommand) GetDatas() []*BotCommand {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_LangPackString struct {
	Datas                []*LangPackString `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Vector_LangPackString) Reset()         { *m = Vector_LangPackString{} }
func (m *Vector_LangPackString) String() string { return proto.CompactTextString(m) }
func (*Vector_LangPackString) ProtoMessage()    {}
func (*Vector_LangPackString) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{454}
}
func (m *Vector_LangPackString) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_LangPackString) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_LangPackString.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_LangPackString) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_LangPackString.Merge(m, src)
}
func (m *Vector_LangPackString) XXX_Size() int {
	return m.Size()
}
func (m *Vector_LangPackString) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_LangPackString.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_LangPackString proto.InternalMessageInfo

func (m *Vector_LangPackString) GetDatas() []*LangPackString {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_LangPackLanguage struct {
	Datas                []*LangPackLanguage `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Vector_LangPackLanguage) Reset()         { *m = Vector_LangPackLanguage{} }
func (m *Vector_LangPackLanguage) String() string { return proto.CompactTextString(m) }
func (*Vector_LangPackLanguage) ProtoMessage()    {}
func (*Vector_LangPackLanguage) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{455}
}
func (m *Vector_LangPackLanguage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_LangPackLanguage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_LangPackLanguage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_LangPackLanguage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_LangPackLanguage.Merge(m, src)
}
func (m *Vector_LangPackLanguage) XXX_Size() int {
	return m.Size()
}
func (m *Vector_LangPackLanguage) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_LangPackLanguage.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_LangPackLanguage proto.InternalMessageInfo

func (m *Vector_LangPackLanguage) GetDatas() []*LangPackLanguage {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_PredefinedUser struct {
	Datas                []*PredefinedUser `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Vector_PredefinedUser) Reset()         { *m = Vector_PredefinedUser{} }
func (m *Vector_PredefinedUser) String() string { return proto.CompactTextString(m) }
func (*Vector_PredefinedUser) ProtoMessage()    {}
func (*Vector_PredefinedUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{456}
}
func (m *Vector_PredefinedUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_PredefinedUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_PredefinedUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_PredefinedUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_PredefinedUser.Merge(m, src)
}
func (m *Vector_PredefinedUser) XXX_Size() int {
	return m.Size()
}
func (m *Vector_PredefinedUser) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_PredefinedUser.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_PredefinedUser proto.InternalMessageInfo

func (m *Vector_PredefinedUser) GetDatas() []*PredefinedUser {
	if m != nil {
		return m.Datas
	}
	return nil
}

func init() {
	proto.RegisterType((*TLInvokeAfterMsg)(nil), "mtproto.TL_invokeAfterMsg")
	proto.RegisterType((*TLInvokeAfterMsgs)(nil), "mtproto.TL_invokeAfterMsgs")
	proto.RegisterType((*TLInitConnection)(nil), "mtproto.TL_initConnection")
	proto.RegisterType((*TLInvokeWithLayer)(nil), "mtproto.TL_invokeWithLayer")
	proto.RegisterType((*TLInvokeWithoutUpdates)(nil), "mtproto.TL_invokeWithoutUpdates")
	proto.RegisterType((*TLInvokeWithMessagesRange)(nil), "mtproto.TL_invokeWithMessagesRange")
	proto.RegisterType((*TLInvokeWithTakeout)(nil), "mtproto.TL_invokeWithTakeout")
	proto.RegisterType((*TLAuthSendCode)(nil), "mtproto.TL_auth_sendCode")
	proto.RegisterType((*TLAuthSignUp)(nil), "mtproto.TL_auth_signUp")
	proto.RegisterType((*TLAuthSignIn)(nil), "mtproto.TL_auth_signIn")
	proto.RegisterType((*TLAuthLogOut3E72BA19)(nil), "mtproto.TL_auth_logOut3E72BA19")
	proto.RegisterType((*TLAuthResetAuthorizations)(nil), "mtproto.TL_auth_resetAuthorizations")
	proto.RegisterType((*TLAuthExportAuthorization)(nil), "mtproto.TL_auth_exportAuthorization")
	proto.RegisterType((*TLAuthImportAuthorization)(nil), "mtproto.TL_auth_importAuthorization")
	proto.RegisterType((*TLAuthBindTempAuthKey)(nil), "mtproto.TL_auth_bindTempAuthKey")
	proto.RegisterType((*TLAuthImportBotAuthorization)(nil), "mtproto.TL_auth_importBotAuthorization")
	proto.RegisterType((*TLAuthCheckPassword)(nil), "mtproto.TL_auth_checkPassword")
	proto.RegisterType((*TLAuthRequestPasswordRecovery)(nil), "mtproto.TL_auth_requestPasswordRecovery")
	proto.RegisterType((*TLAuthRecoverPassword)(nil), "mtproto.TL_auth_recoverPassword")
	proto.RegisterType((*TLAuthResendCode)(nil), "mtproto.TL_auth_resendCode")
	proto.RegisterType((*TLAuthCancelCode)(nil), "mtproto.TL_auth_cancelCode")
	proto.RegisterType((*TLAuthDropTempAuthKeys)(nil), "mtproto.TL_auth_dropTempAuthKeys")
	proto.RegisterType((*TLAuthExportLoginToken)(nil), "mtproto.TL_auth_exportLoginToken")
	proto.RegisterType((*TLAuthImportLoginToken)(nil), "mtproto.TL_auth_importLoginToken")
	proto.RegisterType((*TLAuthAcceptLoginToken)(nil), "mtproto.TL_auth_acceptLoginToken")
	proto.RegisterType((*TLAuthCheckRecoveryPassword)(nil), "mtproto.TL_auth_checkRecoveryPassword")
	proto.RegisterType((*TLAccountRegisterDevice)(nil), "mtproto.TL_account_registerDevice")
	proto.RegisterType((*TLAccountUnregisterDevice)(nil), "mtproto.TL_account_unregisterDevice")
	proto.RegisterType((*TLAccountUpdateNotifySettings)(nil), "mtproto.TL_account_updateNotifySettings")
	proto.RegisterType((*TLAccountGetNotifySettings)(nil), "mtproto.TL_account_getNotifySettings")
	proto.RegisterType((*TLAccountResetNotifySettings)(nil), "mtproto.TL_account_resetNotifySettings")
	proto.RegisterType((*TLAccountUpdateProfile)(nil), "mtproto.TL_account_updateProfile")
	proto.RegisterType((*TLAccountUpdateStatus)(nil), "mtproto.TL_account_updateStatus")
	proto.RegisterType((*TLAccountGetWallPapers)(nil), "mtproto.TL_account_getWallPapers")
	proto.RegisterType((*TLAccountReportPeer)(nil), "mtproto.TL_account_reportPeer")
	proto.RegisterType((*TLAccountCheckUsername)(nil), "mtproto.TL_account_checkUsername")
	proto.RegisterType((*TLAccountUpdateUsername)(nil), "mtproto.TL_account_updateUsername")
	proto.RegisterType((*TLAccountGetPrivacy)(nil), "mtproto.TL_account_getPrivacy")
	proto.RegisterType((*TLAccountSetPrivacy)(nil), "mtproto.TL_account_setPrivacy")
	proto.RegisterType((*TLAccountDeleteAccount)(nil), "mtproto.TL_account_deleteAccount")
	proto.RegisterType((*TLAccountGetAccountTTL)(nil), "mtproto.TL_account_getAccountTTL")
	proto.RegisterType((*TLAccountSetAccountTTL)(nil), "mtproto.TL_account_setAccountTTL")
	proto.RegisterType((*TLAccountSendChangePhoneCode)(nil), "mtproto.TL_account_sendChangePhoneCode")
	proto.RegisterType((*TLAccountChangePhone)(nil), "mtproto.TL_account_changePhone")
	proto.RegisterType((*TLAccountUpdateDeviceLocked)(nil), "mtproto.TL_account_updateDeviceLocked")
	proto.RegisterType((*TLAccountGetAuthorizations)(nil), "mtproto.TL_account_getAuthorizations")
	proto.RegisterType((*TLAccountResetAuthorization)(nil), "mtproto.TL_account_resetAuthorization")
	proto.RegisterType((*TLAccountGetPassword)(nil), "mtproto.TL_account_getPassword")
	proto.RegisterType((*TLAccountGetPasswordSettings)(nil), "mtproto.TL_account_getPasswordSettings")
	proto.RegisterType((*TLAccountUpdatePasswordSettings)(nil), "mtproto.TL_account_updatePasswordSettings")
	proto.RegisterType((*TLAccountSendConfirmPhoneCode)(nil), "mtproto.TL_account_sendConfirmPhoneCode")
	proto.RegisterType((*TLAccountConfirmPhone)(nil), "mtproto.TL_account_confirmPhone")
	proto.RegisterType((*TLAccountGetTmpPassword)(nil), "mtproto.TL_account_getTmpPassword")
	proto.RegisterType((*TLAccountGetWebAuthorizations)(nil), "mtproto.TL_account_getWebAuthorizations")
	proto.RegisterType((*TLAccountResetWebAuthorization)(nil), "mtproto.TL_account_resetWebAuthorization")
	proto.RegisterType((*TLAccountResetWebAuthorizations)(nil), "mtproto.TL_account_resetWebAuthorizations")
	proto.RegisterType((*TLAccountGetAllSecureValues)(nil), "mtproto.TL_account_getAllSecureValues")
	proto.RegisterType((*TLAccountGetSecureValue)(nil), "mtproto.TL_account_getSecureValue")
	proto.RegisterType((*TLAccountSaveSecureValue)(nil), "mtproto.TL_account_saveSecureValue")
	proto.RegisterType((*TLAccountDeleteSecureValue)(nil), "mtproto.TL_account_deleteSecureValue")
	proto.RegisterType((*TLAccountGetAuthorizationForm)(nil), "mtproto.TL_account_getAuthorizationForm")
	proto.RegisterType((*TLAccountAcceptAuthorization)(nil), "mtproto.TL_account_acceptAuthorization")
	proto.RegisterType((*TLAccountSendVerifyPhoneCode)(nil), "mtproto.TL_account_sendVerifyPhoneCode")
	proto.RegisterType((*TLAccountVerifyPhone)(nil), "mtproto.TL_account_verifyPhone")
	proto.RegisterType((*TLAccountSendVerifyEmailCode)(nil), "mtproto.TL_account_sendVerifyEmailCode")
	proto.RegisterType((*TLAccountVerifyEmail)(nil), "mtproto.TL_account_verifyEmail")
	proto.RegisterType((*TLAccountInitTakeoutSession)(nil), "mtproto.TL_account_initTakeoutSession")
	proto.RegisterType((*TLAccountFinishTakeoutSession)(nil), "mtproto.TL_account_finishTakeoutSession")
	proto.RegisterType((*TLAccountConfirmPasswordEmail)(nil), "mtproto.TL_account_confirmPasswordEmail")
	proto.RegisterType((*TLAccountResendPasswordEmail)(nil), "mtproto.TL_account_resendPasswordEmail")
	proto.RegisterType((*TLAccountCancelPasswordEmail)(nil), "mtproto.TL_account_cancelPasswordEmail")
	proto.RegisterType((*TLAccountGetContactSignUpNotification)(nil), "mtproto.TL_account_getContactSignUpNotification")
	proto.RegisterType((*TLAccountSetContactSignUpNotification)(nil), "mtproto.TL_account_setContactSignUpNotification")
	proto.RegisterType((*TLAccountGetNotifyExceptions)(nil), "mtproto.TL_account_getNotifyExceptions")
	proto.RegisterType((*TLAccountGetWallPaper)(nil), "mtproto.TL_account_getWallPaper")
	proto.RegisterType((*TLAccountUploadWallPaper)(nil), "mtproto.TL_account_uploadWallPaper")
	proto.RegisterType((*TLAccountSaveWallPaper)(nil), "mtproto.TL_account_saveWallPaper")
	proto.RegisterType((*TLAccountInstallWallPaper)(nil), "mtproto.TL_account_installWallPaper")
	proto.RegisterType((*TLAccountResetWallPapers)(nil), "mtproto.TL_account_resetWallPapers")
	proto.RegisterType((*TLAccountGetAutoDownloadSettings)(nil), "mtproto.TL_account_getAutoDownloadSettings")
	proto.RegisterType((*TLAccountSaveAutoDownloadSettings)(nil), "mtproto.TL_account_saveAutoDownloadSettings")
	proto.RegisterType((*TLAccountUploadTheme)(nil), "mtproto.TL_account_uploadTheme")
	proto.RegisterType((*TLAccountCreateTheme)(nil), "mtproto.TL_account_createTheme")
	proto.RegisterType((*TLAccountUpdateTheme)(nil), "mtproto.TL_account_updateTheme")
	proto.RegisterType((*TLAccountSaveTheme)(nil), "mtproto.TL_account_saveTheme")
	proto.RegisterType((*TLAccountInstallTheme)(nil), "mtproto.TL_account_installTheme")
	proto.RegisterType((*TLAccountGetTheme)(nil), "mtproto.TL_account_getTheme")
	proto.RegisterType((*TLAccountGetThemes)(nil), "mtproto.TL_account_getThemes")
	proto.RegisterType((*TLAccountSetContentSettings)(nil), "mtproto.TL_account_setContentSettings")
	proto.RegisterType((*TLAccountGetContentSettings)(nil), "mtproto.TL_account_getContentSettings")
	proto.RegisterType((*TLAccountGetMultiWallPapers)(nil), "mtproto.TL_account_getMultiWallPapers")
	proto.RegisterType((*TLAccountGetGlobalPrivacySettings)(nil), "mtproto.TL_account_getGlobalPrivacySettings")
	proto.RegisterType((*TLAccountSetGlobalPrivacySettings)(nil), "mtproto.TL_account_setGlobalPrivacySettings")
	proto.RegisterType((*TLAccountReportProfilePhoto)(nil), "mtproto.TL_account_reportProfilePhoto")
	proto.RegisterType((*TLAccountResetPassword)(nil), "mtproto.TL_account_resetPassword")
	proto.RegisterType((*TLAccountDeclinePasswordReset)(nil), "mtproto.TL_account_declinePasswordReset")
	proto.RegisterType((*TLAccountGetChatThemesD638DE89)(nil), "mtproto.TL_account_getChatThemesD638DE89")
	proto.RegisterType((*TLAccountSetAuthorizationTTL)(nil), "mtproto.TL_account_setAuthorizationTTL")
	proto.RegisterType((*TLAccountChangeAuthorizationSettings)(nil), "mtproto.TL_account_changeAuthorizationSettings")
	proto.RegisterType((*TLUsersGetUsers)(nil), "mtproto.TL_users_getUsers")
	proto.RegisterType((*TLUsersGetFullUserB60F5918)(nil), "mtproto.TL_users_getFullUserB60F5918")
	proto.RegisterType((*TLUsersSetSecureValueErrors)(nil), "mtproto.TL_users_setSecureValueErrors")
	proto.RegisterType((*TLContactsGetContactIDs)(nil), "mtproto.TL_contacts_getContactIDs")
	proto.RegisterType((*TLContactsGetStatuses)(nil), "mtproto.TL_contacts_getStatuses")
	proto.RegisterType((*TLContactsGetContacts)(nil), "mtproto.TL_contacts_getContacts")
	proto.RegisterType((*TLContactsImportContacts)(nil), "mtproto.TL_contacts_importContacts")
	proto.RegisterType((*TLContactsDeleteContacts)(nil), "mtproto.TL_contacts_deleteContacts")
	proto.RegisterType((*TLContactsDeleteByPhones)(nil), "mtproto.TL_contacts_deleteByPhones")
	proto.RegisterType((*TLContactsBlock)(nil), "mtproto.TL_contacts_block")
	proto.RegisterType((*TLContactsUnblock)(nil), "mtproto.TL_contacts_unblock")
	proto.RegisterType((*TLContactsGetBlocked)(nil), "mtproto.TL_contacts_getBlocked")
	proto.RegisterType((*TLContactsSearch)(nil), "mtproto.TL_contacts_search")
	proto.RegisterType((*TLContactsResolveUsername)(nil), "mtproto.TL_contacts_resolveUsername")
	proto.RegisterType((*TLContactsGetTopPeers)(nil), "mtproto.TL_contacts_getTopPeers")
	proto.RegisterType((*TLContactsResetTopPeerRating)(nil), "mtproto.TL_contacts_resetTopPeerRating")
	proto.RegisterType((*TLContactsResetSaved)(nil), "mtproto.TL_contacts_resetSaved")
	proto.RegisterType((*TLContactsGetSaved)(nil), "mtproto.TL_contacts_getSaved")
	proto.RegisterType((*TLContactsToggleTopPeers)(nil), "mtproto.TL_contacts_toggleTopPeers")
	proto.RegisterType((*TLContactsAddContact)(nil), "mtproto.TL_contacts_addContact")
	proto.RegisterType((*TLContactsAcceptContact)(nil), "mtproto.TL_contacts_acceptContact")
	proto.RegisterType((*TLContactsGetLocated)(nil), "mtproto.TL_contacts_getLocated")
	proto.RegisterType((*TLContactsBlockFromReplies)(nil), "mtproto.TL_contacts_blockFromReplies")
	proto.RegisterType((*TLContactsResolvePhone)(nil), "mtproto.TL_contacts_resolvePhone")
	proto.RegisterType((*TLMessagesGetMessages)(nil), "mtproto.TL_messages_getMessages")
	proto.RegisterType((*TLMessagesGetDialogs)(nil), "mtproto.TL_messages_getDialogs")
	proto.RegisterType((*TLMessagesGetHistory)(nil), "mtproto.TL_messages_getHistory")
	proto.RegisterType((*TLMessagesSearch)(nil), "mtproto.TL_messages_search")
	proto.RegisterType((*TLMessagesReadHistory)(nil), "mtproto.TL_messages_readHistory")
	proto.RegisterType((*TLMessagesDeleteHistory)(nil), "mtproto.TL_messages_deleteHistory")
	proto.RegisterType((*TLMessagesDeleteMessages)(nil), "mtproto.TL_messages_deleteMessages")
	proto.RegisterType((*TLMessagesReceivedMessages)(nil), "mtproto.TL_messages_receivedMessages")
	proto.RegisterType((*TLMessagesSetTyping)(nil), "mtproto.TL_messages_setTyping")
	proto.RegisterType((*TLMessagesSendMessage)(nil), "mtproto.TL_messages_sendMessage")
	proto.RegisterType((*TLMessagesSendMedia)(nil), "mtproto.TL_messages_sendMedia")
	proto.RegisterType((*TLMessagesForwardMessages)(nil), "mtproto.TL_messages_forwardMessages")
	proto.RegisterType((*TLMessagesReportSpam)(nil), "mtproto.TL_messages_reportSpam")
	proto.RegisterType((*TLMessagesGetPeerSettingsEFD9A6A2)(nil), "mtproto.TL_messages_getPeerSettingsEFD9A6A2")
	proto.RegisterType((*TLMessagesReport)(nil), "mtproto.TL_messages_report")
	proto.RegisterType((*TLMessagesGetChats)(nil), "mtproto.TL_messages_getChats")
	proto.RegisterType((*TLMessagesGetFullChat)(nil), "mtproto.TL_messages_getFullChat")
	proto.RegisterType((*TLMessagesEditChatTitle)(nil), "mtproto.TL_messages_editChatTitle")
	proto.RegisterType((*TLMessagesEditChatPhoto)(nil), "mtproto.TL_messages_editChatPhoto")
	proto.RegisterType((*TLMessagesAddChatUser)(nil), "mtproto.TL_messages_addChatUser")
	proto.RegisterType((*TLMessagesDeleteChatUser)(nil), "mtproto.TL_messages_deleteChatUser")
	proto.RegisterType((*TLMessagesCreateChat)(nil), "mtproto.TL_messages_createChat")
	proto.RegisterType((*TLMessagesGetDhConfig)(nil), "mtproto.TL_messages_getDhConfig")
	proto.RegisterType((*TLMessagesRequestEncryption)(nil), "mtproto.TL_messages_requestEncryption")
	proto.RegisterType((*TLMessagesAcceptEncryption)(nil), "mtproto.TL_messages_acceptEncryption")
	proto.RegisterType((*TLMessagesDiscardEncryption)(nil), "mtproto.TL_messages_discardEncryption")
	proto.RegisterType((*TLMessagesSetEncryptedTyping)(nil), "mtproto.TL_messages_setEncryptedTyping")
	proto.RegisterType((*TLMessagesReadEncryptedHistory)(nil), "mtproto.TL_messages_readEncryptedHistory")
	proto.RegisterType((*TLMessagesSendEncrypted)(nil), "mtproto.TL_messages_sendEncrypted")
	proto.RegisterType((*TLMessagesSendEncryptedFile)(nil), "mtproto.TL_messages_sendEncryptedFile")
	proto.RegisterType((*TLMessagesSendEncryptedService)(nil), "mtproto.TL_messages_sendEncryptedService")
	proto.RegisterType((*TLMessagesReceivedQueue)(nil), "mtproto.TL_messages_receivedQueue")
	proto.RegisterType((*TLMessagesReportEncryptedSpam)(nil), "mtproto.TL_messages_reportEncryptedSpam")
	proto.RegisterType((*TLMessagesReadMessageContents)(nil), "mtproto.TL_messages_readMessageContents")
	proto.RegisterType((*TLMessagesGetStickers)(nil), "mtproto.TL_messages_getStickers")
	proto.RegisterType((*TLMessagesGetAllStickers)(nil), "mtproto.TL_messages_getAllStickers")
	proto.RegisterType((*TLMessagesGetWebPagePreview)(nil), "mtproto.TL_messages_getWebPagePreview")
	proto.RegisterType((*TLMessagesExportChatInvite)(nil), "mtproto.TL_messages_exportChatInvite")
	proto.RegisterType((*TLMessagesCheckChatInvite)(nil), "mtproto.TL_messages_checkChatInvite")
	proto.RegisterType((*TLMessagesImportChatInvite)(nil), "mtproto.TL_messages_importChatInvite")
	proto.RegisterType((*TLMessagesGetStickerSet)(nil), "mtproto.TL_messages_getStickerSet")
	proto.RegisterType((*TLMessagesInstallStickerSet)(nil), "mtproto.TL_messages_installStickerSet")
	proto.RegisterType((*TLMessagesUninstallStickerSet)(nil), "mtproto.TL_messages_uninstallStickerSet")
	proto.RegisterType((*TLMessagesStartBot)(nil), "mtproto.TL_messages_startBot")
	proto.RegisterType((*TLMessagesGetMessagesViews)(nil), "mtproto.TL_messages_getMessagesViews")
	proto.RegisterType((*TLMessagesEditChatAdmin)(nil), "mtproto.TL_messages_editChatAdmin")
	proto.RegisterType((*TLMessagesMigrateChat)(nil), "mtproto.TL_messages_migrateChat")
	proto.RegisterType((*TLMessagesSearchGlobal)(nil), "mtproto.TL_messages_searchGlobal")
	proto.RegisterType((*TLMessagesReorderStickerSets)(nil), "mtproto.TL_messages_reorderStickerSets")
	proto.RegisterType((*TLMessagesGetDocumentByHash)(nil), "mtproto.TL_messages_getDocumentByHash")
	proto.RegisterType((*TLMessagesGetSavedGifs)(nil), "mtproto.TL_messages_getSavedGifs")
	proto.RegisterType((*TLMessagesSaveGif)(nil), "mtproto.TL_messages_saveGif")
	proto.RegisterType((*TLMessagesGetInlineBotResults)(nil), "mtproto.TL_messages_getInlineBotResults")
	proto.RegisterType((*TLMessagesSetInlineBotResults)(nil), "mtproto.TL_messages_setInlineBotResults")
	proto.RegisterType((*TLMessagesSendInlineBotResult)(nil), "mtproto.TL_messages_sendInlineBotResult")
	proto.RegisterType((*TLMessagesGetMessageEditData)(nil), "mtproto.TL_messages_getMessageEditData")
	proto.RegisterType((*TLMessagesEditMessage)(nil), "mtproto.TL_messages_editMessage")
	proto.RegisterType((*TLMessagesEditInlineBotMessage)(nil), "mtproto.TL_messages_editInlineBotMessage")
	proto.RegisterType((*TLMessagesGetBotCallbackAnswer)(nil), "mtproto.TL_messages_getBotCallbackAnswer")
	proto.RegisterType((*TLMessagesSetBotCallbackAnswer)(nil), "mtproto.TL_messages_setBotCallbackAnswer")
	proto.RegisterType((*TLMessagesGetPeerDialogs)(nil), "mtproto.TL_messages_getPeerDialogs")
	proto.RegisterType((*TLMessagesSaveDraft)(nil), "mtproto.TL_messages_saveDraft")
	proto.RegisterType((*TLMessagesGetAllDrafts)(nil), "mtproto.TL_messages_getAllDrafts")
	proto.RegisterType((*TLMessagesGetFeaturedStickers)(nil), "mtproto.TL_messages_getFeaturedStickers")
	proto.RegisterType((*TLMessagesReadFeaturedStickers)(nil), "mtproto.TL_messages_readFeaturedStickers")
	proto.RegisterType((*TLMessagesGetRecentStickers)(nil), "mtproto.TL_messages_getRecentStickers")
	proto.RegisterType((*TLMessagesSaveRecentSticker)(nil), "mtproto.TL_messages_saveRecentSticker")
	proto.RegisterType((*TLMessagesClearRecentStickers)(nil), "mtproto.TL_messages_clearRecentStickers")
	proto.RegisterType((*TLMessagesGetArchivedStickers)(nil), "mtproto.TL_messages_getArchivedStickers")
	proto.RegisterType((*TLMessagesGetMaskStickers)(nil), "mtproto.TL_messages_getMaskStickers")
	proto.RegisterType((*TLMessagesGetAttachedStickers)(nil), "mtproto.TL_messages_getAttachedStickers")
	proto.RegisterType((*TLMessagesSetGameScore)(nil), "mtproto.TL_messages_setGameScore")
	proto.RegisterType((*TLMessagesSetInlineGameScore)(nil), "mtproto.TL_messages_setInlineGameScore")
	proto.RegisterType((*TLMessagesGetGameHighScores)(nil), "mtproto.TL_messages_getGameHighScores")
	proto.RegisterType((*TLMessagesGetInlineGameHighScores)(nil), "mtproto.TL_messages_getInlineGameHighScores")
	proto.RegisterType((*TLMessagesGetCommonChats)(nil), "mtproto.TL_messages_getCommonChats")
	proto.RegisterType((*TLMessagesGetAllChats)(nil), "mtproto.TL_messages_getAllChats")
	proto.RegisterType((*TLMessagesGetWebPage)(nil), "mtproto.TL_messages_getWebPage")
	proto.RegisterType((*TLMessagesToggleDialogPin)(nil), "mtproto.TL_messages_toggleDialogPin")
	proto.RegisterType((*TLMessagesReorderPinnedDialogs)(nil), "mtproto.TL_messages_reorderPinnedDialogs")
	proto.RegisterType((*TLMessagesGetPinnedDialogs)(nil), "mtproto.TL_messages_getPinnedDialogs")
	proto.RegisterType((*TLMessagesSetBotShippingResults)(nil), "mtproto.TL_messages_setBotShippingResults")
	proto.RegisterType((*TLMessagesSetBotPrecheckoutResults)(nil), "mtproto.TL_messages_setBotPrecheckoutResults")
	proto.RegisterType((*TLMessagesUploadMedia)(nil), "mtproto.TL_messages_uploadMedia")
	proto.RegisterType((*TLMessagesSendScreenshotNotification)(nil), "mtproto.TL_messages_sendScreenshotNotification")
	proto.RegisterType((*TLMessagesGetFavedStickers)(nil), "mtproto.TL_messages_getFavedStickers")
	proto.RegisterType((*TLMessagesFaveSticker)(nil), "mtproto.TL_messages_faveSticker")
	proto.RegisterType((*TLMessagesGetUnreadMentions)(nil), "mtproto.TL_messages_getUnreadMentions")
	proto.RegisterType((*TLMessagesReadMentions)(nil), "mtproto.TL_messages_readMentions")
	proto.RegisterType((*TLMessagesGetRecentLocations)(nil), "mtproto.TL_messages_getRecentLocations")
	proto.RegisterType((*TLMessagesSendMultiMedia)(nil), "mtproto.TL_messages_sendMultiMedia")
	proto.RegisterType((*TLMessagesUploadEncryptedFile)(nil), "mtproto.TL_messages_uploadEncryptedFile")
	proto.RegisterType((*TLMessagesSearchStickerSets)(nil), "mtproto.TL_messages_searchStickerSets")
	proto.RegisterType((*TLMessagesGetSplitRanges)(nil), "mtproto.TL_messages_getSplitRanges")
	proto.RegisterType((*TLMessagesMarkDialogUnread)(nil), "mtproto.TL_messages_markDialogUnread")
	proto.RegisterType((*TLMessagesGetDialogUnreadMarks)(nil), "mtproto.TL_messages_getDialogUnreadMarks")
	proto.RegisterType((*TLMessagesClearAllDrafts)(nil), "mtproto.TL_messages_clearAllDrafts")
	proto.RegisterType((*TLMessagesUpdatePinnedMessage)(nil), "mtproto.TL_messages_updatePinnedMessage")
	proto.RegisterType((*TLMessagesSendVote)(nil), "mtproto.TL_messages_sendVote")
	proto.RegisterType((*TLMessagesGetPollResults)(nil), "mtproto.TL_messages_getPollResults")
	proto.RegisterType((*TLMessagesGetOnlines)(nil), "mtproto.TL_messages_getOnlines")
	proto.RegisterType((*TLMessagesEditChatAbout)(nil), "mtproto.TL_messages_editChatAbout")
	proto.RegisterType((*TLMessagesEditChatDefaultBannedRights)(nil), "mtproto.TL_messages_editChatDefaultBannedRights")
	proto.RegisterType((*TLMessagesGetEmojiKeywords)(nil), "mtproto.TL_messages_getEmojiKeywords")
	proto.RegisterType((*TLMessagesGetEmojiKeywordsDifference)(nil), "mtproto.TL_messages_getEmojiKeywordsDifference")
	proto.RegisterType((*TLMessagesGetEmojiKeywordsLanguages)(nil), "mtproto.TL_messages_getEmojiKeywordsLanguages")
	proto.RegisterType((*TLMessagesGetEmojiURL)(nil), "mtproto.TL_messages_getEmojiURL")
	proto.RegisterType((*TLMessagesGetSearchCounters)(nil), "mtproto.TL_messages_getSearchCounters")
	proto.RegisterType((*TLMessagesRequestUrlAuth)(nil), "mtproto.TL_messages_requestUrlAuth")
	proto.RegisterType((*TLMessagesAcceptUrlAuth)(nil), "mtproto.TL_messages_acceptUrlAuth")
	proto.RegisterType((*TLMessagesHidePeerSettingsBar)(nil), "mtproto.TL_messages_hidePeerSettingsBar")
	proto.RegisterType((*TLMessagesGetScheduledHistory)(nil), "mtproto.TL_messages_getScheduledHistory")
	proto.RegisterType((*TLMessagesGetScheduledMessages)(nil), "mtproto.TL_messages_getScheduledMessages")
	proto.RegisterType((*TLMessagesSendScheduledMessages)(nil), "mtproto.TL_messages_sendScheduledMessages")
	proto.RegisterType((*TLMessagesDeleteScheduledMessages)(nil), "mtproto.TL_messages_deleteScheduledMessages")
	proto.RegisterType((*TLMessagesGetPollVotes)(nil), "mtproto.TL_messages_getPollVotes")
	proto.RegisterType((*TLMessagesToggleStickerSets)(nil), "mtproto.TL_messages_toggleStickerSets")
	proto.RegisterType((*TLMessagesGetDialogFilters)(nil), "mtproto.TL_messages_getDialogFilters")
	proto.RegisterType((*TLMessagesGetSuggestedDialogFilters)(nil), "mtproto.TL_messages_getSuggestedDialogFilters")
	proto.RegisterType((*TLMessagesUpdateDialogFilter)(nil), "mtproto.TL_messages_updateDialogFilter")
	proto.RegisterType((*TLMessagesUpdateDialogFiltersOrder)(nil), "mtproto.TL_messages_updateDialogFiltersOrder")
	proto.RegisterType((*TLMessagesGetOldFeaturedStickers)(nil), "mtproto.TL_messages_getOldFeaturedStickers")
	proto.RegisterType((*TLMessagesGetReplies)(nil), "mtproto.TL_messages_getReplies")
	proto.RegisterType((*TLMessagesGetDiscussionMessage)(nil), "mtproto.TL_messages_getDiscussionMessage")
	proto.RegisterType((*TLMessagesReadDiscussion)(nil), "mtproto.TL_messages_readDiscussion")
	proto.RegisterType((*TLMessagesUnpinAllMessages)(nil), "mtproto.TL_messages_unpinAllMessages")
	proto.RegisterType((*TLMessagesDeleteChat)(nil), "mtproto.TL_messages_deleteChat")
	proto.RegisterType((*TLMessagesDeletePhoneCallHistory)(nil), "mtproto.TL_messages_deletePhoneCallHistory")
	proto.RegisterType((*TLMessagesCheckHistoryImport)(nil), "mtproto.TL_messages_checkHistoryImport")
	proto.RegisterType((*TLMessagesInitHistoryImport)(nil), "mtproto.TL_messages_initHistoryImport")
	proto.RegisterType((*TLMessagesUploadImportedMedia)(nil), "mtproto.TL_messages_uploadImportedMedia")
	proto.RegisterType((*TLMessagesStartHistoryImport)(nil), "mtproto.TL_messages_startHistoryImport")
	proto.RegisterType((*TLMessagesGetExportedChatInvites)(nil), "mtproto.TL_messages_getExportedChatInvites")
	proto.RegisterType((*TLMessagesGetExportedChatInvite)(nil), "mtproto.TL_messages_getExportedChatInvite")
	proto.RegisterType((*TLMessagesEditExportedChatInvite)(nil), "mtproto.TL_messages_editExportedChatInvite")
	proto.RegisterType((*TLMessagesDeleteRevokedExportedChatInvites)(nil), "mtproto.TL_messages_deleteRevokedExportedChatInvites")
	proto.RegisterType((*TLMessagesDeleteExportedChatInvite)(nil), "mtproto.TL_messages_deleteExportedChatInvite")
	proto.RegisterType((*TLMessagesGetAdminsWithInvites)(nil), "mtproto.TL_messages_getAdminsWithInvites")
	proto.RegisterType((*TLMessagesGetChatInviteImporters)(nil), "mtproto.TL_messages_getChatInviteImporters")
	proto.RegisterType((*TLMessagesSetHistoryTTL)(nil), "mtproto.TL_messages_setHistoryTTL")
	proto.RegisterType((*TLMessagesCheckHistoryImportPeer)(nil), "mtproto.TL_messages_checkHistoryImportPeer")
	proto.RegisterType((*TLMessagesSetChatTheme)(nil), "mtproto.TL_messages_setChatTheme")
	proto.RegisterType((*TLMessagesGetMessageReadParticipants)(nil), "mtproto.TL_messages_getMessageReadParticipants")
	proto.RegisterType((*TLMessagesGetSearchResultsCalendar)(nil), "mtproto.TL_messages_getSearchResultsCalendar")
	proto.RegisterType((*TLMessagesGetSearchResultsPositions)(nil), "mtproto.TL_messages_getSearchResultsPositions")
	proto.RegisterType((*TLMessagesHideChatJoinRequest)(nil), "mtproto.TL_messages_hideChatJoinRequest")
	proto.RegisterType((*TLMessagesHideAllChatJoinRequests)(nil), "mtproto.TL_messages_hideAllChatJoinRequests")
	proto.RegisterType((*TLMessagesToggleNoForwards)(nil), "mtproto.TL_messages_toggleNoForwards")
	proto.RegisterType((*TLMessagesSaveDefaultSendAs)(nil), "mtproto.TL_messages_saveDefaultSendAs")
	proto.RegisterType((*TLMessagesSendReaction)(nil), "mtproto.TL_messages_sendReaction")
	proto.RegisterType((*TLMessagesGetMessagesReactions)(nil), "mtproto.TL_messages_getMessagesReactions")
	proto.RegisterType((*TLMessagesGetMessageReactionsList)(nil), "mtproto.TL_messages_getMessageReactionsList")
	proto.RegisterType((*TLMessagesSetChatAvailableReactions)(nil), "mtproto.TL_messages_setChatAvailableReactions")
	proto.RegisterType((*TLMessagesGetAvailableReactions)(nil), "mtproto.TL_messages_getAvailableReactions")
	proto.RegisterType((*TLMessagesSetDefaultReaction)(nil), "mtproto.TL_messages_setDefaultReaction")
	proto.RegisterType((*TLMessagesTranslateText)(nil), "mtproto.TL_messages_translateText")
	proto.RegisterType((*TLMessagesGetUnreadReactions)(nil), "mtproto.TL_messages_getUnreadReactions")
	proto.RegisterType((*TLMessagesReadReactions)(nil), "mtproto.TL_messages_readReactions")
	proto.RegisterType((*TLMessagesSearchSentMedia)(nil), "mtproto.TL_messages_searchSentMedia")
	proto.RegisterType((*TLUpdatesGetState)(nil), "mtproto.TL_updates_getState")
	proto.RegisterType((*TLUpdatesGetDifference)(nil), "mtproto.TL_updates_getDifference")
	proto.RegisterType((*TLUpdatesGetChannelDifference)(nil), "mtproto.TL_updates_getChannelDifference")
	proto.RegisterType((*TLPhotosUpdateProfilePhoto)(nil), "mtproto.TL_photos_updateProfilePhoto")
	proto.RegisterType((*TLPhotosUploadProfilePhoto)(nil), "mtproto.TL_photos_uploadProfilePhoto")
	proto.RegisterType((*TLPhotosDeletePhotos)(nil), "mtproto.TL_photos_deletePhotos")
	proto.RegisterType((*TLPhotosGetUserPhotos)(nil), "mtproto.TL_photos_getUserPhotos")
	proto.RegisterType((*TLUploadSaveFilePart)(nil), "mtproto.TL_upload_saveFilePart")
	proto.RegisterType((*TLUploadGetFile)(nil), "mtproto.TL_upload_getFile")
	proto.RegisterType((*TLUploadSaveBigFilePart)(nil), "mtproto.TL_upload_saveBigFilePart")
	proto.RegisterType((*TLUploadGetWebFile)(nil), "mtproto.TL_upload_getWebFile")
	proto.RegisterType((*TLUploadGetCdnFile)(nil), "mtproto.TL_upload_getCdnFile")
	proto.RegisterType((*TLUploadReuploadCdnFile)(nil), "mtproto.TL_upload_reuploadCdnFile")
	proto.RegisterType((*TLUploadGetCdnFileHashes)(nil), "mtproto.TL_upload_getCdnFileHashes")
	proto.RegisterType((*TLUploadGetFileHashes)(nil), "mtproto.TL_upload_getFileHashes")
	proto.RegisterType((*TLHelpGetConfig)(nil), "mtproto.TL_help_getConfig")
	proto.RegisterType((*TLHelpGetNearestDc)(nil), "mtproto.TL_help_getNearestDc")
	proto.RegisterType((*TLHelpGetAppUpdate)(nil), "mtproto.TL_help_getAppUpdate")
	proto.RegisterType((*TLHelpGetInviteText)(nil), "mtproto.TL_help_getInviteText")
	proto.RegisterType((*TLHelpGetSupport)(nil), "mtproto.TL_help_getSupport")
	proto.RegisterType((*TLHelpGetAppChangelog)(nil), "mtproto.TL_help_getAppChangelog")
	proto.RegisterType((*TLHelpSetBotUpdatesStatus)(nil), "mtproto.TL_help_setBotUpdatesStatus")
	proto.RegisterType((*TLHelpGetCdnConfig)(nil), "mtproto.TL_help_getCdnConfig")
	proto.RegisterType((*TLHelpGetRecentMeUrls)(nil), "mtproto.TL_help_getRecentMeUrls")
	proto.RegisterType((*TLHelpGetTermsOfServiceUpdate)(nil), "mtproto.TL_help_getTermsOfServiceUpdate")
	proto.RegisterType((*TLHelpAcceptTermsOfService)(nil), "mtproto.TL_help_acceptTermsOfService")
	proto.RegisterType((*TLHelpGetDeepLinkInfo)(nil), "mtproto.TL_help_getDeepLinkInfo")
	proto.RegisterType((*TLHelpGetAppConfig)(nil), "mtproto.TL_help_getAppConfig")
	proto.RegisterType((*TLHelpSaveAppLog)(nil), "mtproto.TL_help_saveAppLog")
	proto.RegisterType((*TLHelpGetPassportConfig)(nil), "mtproto.TL_help_getPassportConfig")
	proto.RegisterType((*TLHelpGetSupportName)(nil), "mtproto.TL_help_getSupportName")
	proto.RegisterType((*TLHelpGetUserInfo)(nil), "mtproto.TL_help_getUserInfo")
	proto.RegisterType((*TLHelpEditUserInfo)(nil), "mtproto.TL_help_editUserInfo")
	proto.RegisterType((*TLHelpGetPromoData)(nil), "mtproto.TL_help_getPromoData")
	proto.RegisterType((*TLHelpHidePromoData)(nil), "mtproto.TL_help_hidePromoData")
	proto.RegisterType((*TLHelpDismissSuggestion)(nil), "mtproto.TL_help_dismissSuggestion")
	proto.RegisterType((*TLHelpGetCountriesList)(nil), "mtproto.TL_help_getCountriesList")
	proto.RegisterType((*TLChannelsReadHistory)(nil), "mtproto.TL_channels_readHistory")
	proto.RegisterType((*TLChannelsDeleteMessages)(nil), "mtproto.TL_channels_deleteMessages")
	proto.RegisterType((*TLChannelsReportSpam)(nil), "mtproto.TL_channels_reportSpam")
	proto.RegisterType((*TLChannelsGetMessages)(nil), "mtproto.TL_channels_getMessages")
	proto.RegisterType((*TLChannelsGetParticipants)(nil), "mtproto.TL_channels_getParticipants")
	proto.RegisterType((*TLChannelsGetParticipant)(nil), "mtproto.TL_channels_getParticipant")
	proto.RegisterType((*TLChannelsGetChannels)(nil), "mtproto.TL_channels_getChannels")
	proto.RegisterType((*TLChannelsGetFullChannel)(nil), "mtproto.TL_channels_getFullChannel")
	proto.RegisterType((*TLChannelsCreateChannel)(nil), "mtproto.TL_channels_createChannel")
	proto.RegisterType((*TLChannelsEditAdmin)(nil), "mtproto.TL_channels_editAdmin")
	proto.RegisterType((*TLChannelsEditTitle)(nil), "mtproto.TL_channels_editTitle")
	proto.RegisterType((*TLChannelsEditPhoto)(nil), "mtproto.TL_channels_editPhoto")
	proto.RegisterType((*TLChannelsCheckUsername)(nil), "mtproto.TL_channels_checkUsername")
	proto.RegisterType((*TLChannelsUpdateUsername)(nil), "mtproto.TL_channels_updateUsername")
	proto.RegisterType((*TLChannelsJoinChannel)(nil), "mtproto.TL_channels_joinChannel")
	proto.RegisterType((*TLChannelsLeaveChannel)(nil), "mtproto.TL_channels_leaveChannel")
	proto.RegisterType((*TLChannelsInviteToChannel)(nil), "mtproto.TL_channels_inviteToChannel")
	proto.RegisterType((*TLChannelsDeleteChannel)(nil), "mtproto.TL_channels_deleteChannel")
	proto.RegisterType((*TLChannelsExportMessageLink)(nil), "mtproto.TL_channels_exportMessageLink")
	proto.RegisterType((*TLChannelsToggleSignatures)(nil), "mtproto.TL_channels_toggleSignatures")
	proto.RegisterType((*TLChannelsGetAdminedPublicChannels)(nil), "mtproto.TL_channels_getAdminedPublicChannels")
	proto.RegisterType((*TLChannelsEditBanned)(nil), "mtproto.TL_channels_editBanned")
	proto.RegisterType((*TLChannelsGetAdminLog)(nil), "mtproto.TL_channels_getAdminLog")
	proto.RegisterType((*TLChannelsSetStickers)(nil), "mtproto.TL_channels_setStickers")
	proto.RegisterType((*TLChannelsReadMessageContents)(nil), "mtproto.TL_channels_readMessageContents")
	proto.RegisterType((*TLChannelsDeleteHistory)(nil), "mtproto.TL_channels_deleteHistory")
	proto.RegisterType((*TLChannelsTogglePreHistoryHidden)(nil), "mtproto.TL_channels_togglePreHistoryHidden")
	proto.RegisterType((*TLChannelsGetLeftChannels)(nil), "mtproto.TL_channels_getLeftChannels")
	proto.RegisterType((*TLChannelsGetGroupsForDiscussion)(nil), "mtproto.TL_channels_getGroupsForDiscussion")
	proto.RegisterType((*TLChannelsSetDiscussionGroup)(nil), "mtproto.TL_channels_setDiscussionGroup")
	proto.RegisterType((*TLChannelsEditCreator)(nil), "mtproto.TL_channels_editCreator")
	proto.RegisterType((*TLChannelsEditLocation)(nil), "mtproto.TL_channels_editLocation")
	proto.RegisterType((*TLChannelsToggleSlowMode)(nil), "mtproto.TL_channels_toggleSlowMode")
	proto.RegisterType((*TLChannelsGetInactiveChannels)(nil), "mtproto.TL_channels_getInactiveChannels")
	proto.RegisterType((*TLChannelsConvertToGigagroup)(nil), "mtproto.TL_channels_convertToGigagroup")
	proto.RegisterType((*TLChannelsViewSponsoredMessage)(nil), "mtproto.TL_channels_viewSponsoredMessage")
	proto.RegisterType((*TLChannelsGetSponsoredMessages)(nil), "mtproto.TL_channels_getSponsoredMessages")
	proto.RegisterType((*TLChannelsGetSendAs)(nil), "mtproto.TL_channels_getSendAs")
	proto.RegisterType((*TLChannelsDeleteParticipantHistory)(nil), "mtproto.TL_channels_deleteParticipantHistory")
	proto.RegisterType((*TLBotsSendCustomRequest)(nil), "mtproto.TL_bots_sendCustomRequest")
	proto.RegisterType((*TLBotsAnswerWebhookJSONQuery)(nil), "mtproto.TL_bots_answerWebhookJSONQuery")
	proto.RegisterType((*TLBotsSetBotCommands)(nil), "mtproto.TL_bots_setBotCommands")
	proto.RegisterType((*TLBotsResetBotCommands)(nil), "mtproto.TL_bots_resetBotCommands")
	proto.RegisterType((*TLBotsGetBotCommands)(nil), "mtproto.TL_bots_getBotCommands")
	proto.RegisterType((*TLPaymentsGetPaymentForm)(nil), "mtproto.TL_payments_getPaymentForm")
	proto.RegisterType((*TLPaymentsGetPaymentReceipt)(nil), "mtproto.TL_payments_getPaymentReceipt")
	proto.RegisterType((*TLPaymentsValidateRequestedInfo)(nil), "mtproto.TL_payments_validateRequestedInfo")
	proto.RegisterType((*TLPaymentsSendPaymentForm)(nil), "mtproto.TL_payments_sendPaymentForm")
	proto.RegisterType((*TLPaymentsGetSavedInfo)(nil), "mtproto.TL_payments_getSavedInfo")
	proto.RegisterType((*TLPaymentsClearSavedInfo)(nil), "mtproto.TL_payments_clearSavedInfo")
	proto.RegisterType((*TLPaymentsGetBankCardData)(nil), "mtproto.TL_payments_getBankCardData")
	proto.RegisterType((*TLStickersCreateStickerSet)(nil), "mtproto.TL_stickers_createStickerSet")
	proto.RegisterType((*TLStickersRemoveStickerFromSet)(nil), "mtproto.TL_stickers_removeStickerFromSet")
	proto.RegisterType((*TLStickersChangeStickerPosition)(nil), "mtproto.TL_stickers_changeStickerPosition")
	proto.RegisterType((*TLStickersAddStickerToSet)(nil), "mtproto.TL_stickers_addStickerToSet")
	proto.RegisterType((*TLStickersSetStickerSetThumb)(nil), "mtproto.TL_stickers_setStickerSetThumb")
	proto.RegisterType((*TLStickersCheckShortName)(nil), "mtproto.TL_stickers_checkShortName")
	proto.RegisterType((*TLStickersSuggestShortName)(nil), "mtproto.TL_stickers_suggestShortName")
	proto.RegisterType((*TLPhoneGetCallConfig)(nil), "mtproto.TL_phone_getCallConfig")
	proto.RegisterType((*TLPhoneRequestCall)(nil), "mtproto.TL_phone_requestCall")
	proto.RegisterType((*TLPhoneAcceptCall)(nil), "mtproto.TL_phone_acceptCall")
	proto.RegisterType((*TLPhoneConfirmCall)(nil), "mtproto.TL_phone_confirmCall")
	proto.RegisterType((*TLPhoneReceivedCall)(nil), "mtproto.TL_phone_receivedCall")
	proto.RegisterType((*TLPhoneDiscardCall)(nil), "mtproto.TL_phone_discardCall")
	proto.RegisterType((*TLPhoneSetCallRating)(nil), "mtproto.TL_phone_setCallRating")
	proto.RegisterType((*TLPhoneSaveCallDebug)(nil), "mtproto.TL_phone_saveCallDebug")
	proto.RegisterType((*TLPhoneSendSignalingData)(nil), "mtproto.TL_phone_sendSignalingData")
	proto.RegisterType((*TLPhoneCreateGroupCall)(nil), "mtproto.TL_phone_createGroupCall")
	proto.RegisterType((*TLPhoneJoinGroupCall)(nil), "mtproto.TL_phone_joinGroupCall")
	proto.RegisterType((*TLPhoneLeaveGroupCall)(nil), "mtproto.TL_phone_leaveGroupCall")
	proto.RegisterType((*TLPhoneInviteToGroupCall)(nil), "mtproto.TL_phone_inviteToGroupCall")
	proto.RegisterType((*TLPhoneDiscardGroupCall)(nil), "mtproto.TL_phone_discardGroupCall")
	proto.RegisterType((*TLPhoneToggleGroupCallSettings)(nil), "mtproto.TL_phone_toggleGroupCallSettings")
	proto.RegisterType((*TLPhoneGetGroupCall)(nil), "mtproto.TL_phone_getGroupCall")
	proto.RegisterType((*TLPhoneGetGroupParticipants)(nil), "mtproto.TL_phone_getGroupParticipants")
	proto.RegisterType((*TLPhoneCheckGroupCall)(nil), "mtproto.TL_phone_checkGroupCall")
	proto.RegisterType((*TLPhoneToggleGroupCallRecord)(nil), "mtproto.TL_phone_toggleGroupCallRecord")
	proto.RegisterType((*TLPhoneEditGroupCallParticipant)(nil), "mtproto.TL_phone_editGroupCallParticipant")
	proto.RegisterType((*TLPhoneEditGroupCallTitle)(nil), "mtproto.TL_phone_editGroupCallTitle")
	proto.RegisterType((*TLPhoneGetGroupCallJoinAs)(nil), "mtproto.TL_phone_getGroupCallJoinAs")
	proto.RegisterType((*TLPhoneExportGroupCallInvite)(nil), "mtproto.TL_phone_exportGroupCallInvite")
	proto.RegisterType((*TLPhoneToggleGroupCallStartSubscription)(nil), "mtproto.TL_phone_toggleGroupCallStartSubscription")
	proto.RegisterType((*TLPhoneStartScheduledGroupCall)(nil), "mtproto.TL_phone_startScheduledGroupCall")
	proto.RegisterType((*TLPhoneSaveDefaultGroupCallJoinAs)(nil), "mtproto.TL_phone_saveDefaultGroupCallJoinAs")
	proto.RegisterType((*TLPhoneJoinGroupCallPresentation)(nil), "mtproto.TL_phone_joinGroupCallPresentation")
	proto.RegisterType((*TLPhoneLeaveGroupCallPresentation)(nil), "mtproto.TL_phone_leaveGroupCallPresentation")
	proto.RegisterType((*TLPhoneGetGroupCallStreamChannels)(nil), "mtproto.TL_phone_getGroupCallStreamChannels")
	proto.RegisterType((*TLPhoneGetGroupCallStreamRtmpUrl)(nil), "mtproto.TL_phone_getGroupCallStreamRtmpUrl")
	proto.RegisterType((*TLLangpackGetLangPack)(nil), "mtproto.TL_langpack_getLangPack")
	proto.RegisterType((*TLLangpackGetStrings)(nil), "mtproto.TL_langpack_getStrings")
	proto.RegisterType((*TLLangpackGetDifference)(nil), "mtproto.TL_langpack_getDifference")
	proto.RegisterType((*TLLangpackGetLanguages)(nil), "mtproto.TL_langpack_getLanguages")
	proto.RegisterType((*TLLangpackGetLanguage)(nil), "mtproto.TL_langpack_getLanguage")
	proto.RegisterType((*TLFoldersEditPeerFolders)(nil), "mtproto.TL_folders_editPeerFolders")
	proto.RegisterType((*TLFoldersDeleteFolder)(nil), "mtproto.TL_folders_deleteFolder")
	proto.RegisterType((*TLStatsGetBroadcastStats)(nil), "mtproto.TL_stats_getBroadcastStats")
	proto.RegisterType((*TLStatsLoadAsyncGraph)(nil), "mtproto.TL_stats_loadAsyncGraph")
	proto.RegisterType((*TLStatsGetMegagroupStats)(nil), "mtproto.TL_stats_getMegagroupStats")
	proto.RegisterType((*TLStatsGetMessagePublicForwards)(nil), "mtproto.TL_stats_getMessagePublicForwards")
	proto.RegisterType((*TLStatsGetMessageStats)(nil), "mtproto.TL_stats_getMessageStats")
	proto.RegisterType((*TLAuthLogOut5717DA40)(nil), "mtproto.TL_auth_logOut5717DA40")
	proto.RegisterType((*TLUsersGetFullUserCA30A5B1)(nil), "mtproto.TL_users_getFullUserCA30A5B1")
	proto.RegisterType((*TLMessagesGetPeerSettings3672E09C)(nil), "mtproto.TL_messages_getPeerSettings3672E09C")
	proto.RegisterType((*TLChannelsDeleteUserHistory)(nil), "mtproto.TL_channels_deleteUserHistory")
	proto.RegisterType((*TLAccountGetChatThemesD6D71D7B)(nil), "mtproto.TL_account_getChatThemesD6D71D7B")
	proto.RegisterType((*TLMessagesGetStatsURL)(nil), "mtproto.TL_messages_getStatsURL")
	proto.RegisterType((*TLHelpTest)(nil), "mtproto.TL_help_test")
	proto.RegisterType((*TLPredefinedCreatePredefinedUser)(nil), "mtproto.TL_predefined_createPredefinedUser")
	proto.RegisterType((*TLPredefinedUpdatePredefinedUsername)(nil), "mtproto.TL_predefined_updatePredefinedUsername")
	proto.RegisterType((*TLPredefinedUpdatePredefinedProfile)(nil), "mtproto.TL_predefined_updatePredefinedProfile")
	proto.RegisterType((*TLPredefinedUpdatePredefinedVerified)(nil), "mtproto.TL_predefined_updatePredefinedVerified")
	proto.RegisterType((*TLPredefinedUpdatePredefinedCode)(nil), "mtproto.TL_predefined_updatePredefinedCode")
	proto.RegisterType((*TLPredefinedGetPredefinedUser)(nil), "mtproto.TL_predefined_getPredefinedUser")
	proto.RegisterType((*TLPredefinedGetPredefinedUsers)(nil), "mtproto.TL_predefined_getPredefinedUsers")
	proto.RegisterType((*TLUsersGetMe)(nil), "mtproto.TL_users_getMe")
	proto.RegisterType((*TLAccountUpdateVerified)(nil), "mtproto.TL_account_updateVerified")
	proto.RegisterType((*TLAuthToggleBan)(nil), "mtproto.TL_auth_toggleBan")
	proto.RegisterType((*TLBizInvokeBizDataRaw)(nil), "mtproto.TL_biz_invokeBizDataRaw")
	proto.RegisterType((*Vector_SecureValue)(nil), "mtproto.Vector_SecureValue")
	proto.RegisterType((*Vector_WallPaper)(nil), "mtproto.Vector_WallPaper")
	proto.RegisterType((*Vector_User)(nil), "mtproto.Vector_User")
	proto.RegisterType((*Vector_Int)(nil), "mtproto.Vector_Int")
	proto.RegisterType((*Vector_ContactStatus)(nil), "mtproto.Vector_ContactStatus")
	proto.RegisterType((*Vector_SavedContact)(nil), "mtproto.Vector_SavedContact")
	proto.RegisterType((*Vector_ReceivedNotifyMessage)(nil), "mtproto.Vector_ReceivedNotifyMessage")
	proto.RegisterType((*Vector_Long)(nil), "mtproto.Vector_Long")
	proto.RegisterType((*Vector_StickerSetCovered)(nil), "mtproto.Vector_StickerSetCovered")
	proto.RegisterType((*Vector_MessageRange)(nil), "mtproto.Vector_MessageRange")
	proto.RegisterType((*Vector_DialogPeer)(nil), "mtproto.Vector_DialogPeer")
	proto.RegisterType((*Vector_EmojiLanguage)(nil), "mtproto.Vector_EmojiLanguage")
	proto.RegisterType((*Vector_Messages_SearchCounter)(nil), "mtproto.Vector_Messages_SearchCounter")
	proto.RegisterType((*Vector_DialogFilter)(nil), "mtproto.Vector_DialogFilter")
	proto.RegisterType((*Vector_DialogFilterSuggested)(nil), "mtproto.Vector_DialogFilterSuggested")
	proto.RegisterType((*Vector_FileHash)(nil), "mtproto.Vector_FileHash")
	proto.RegisterType((*Vector_BotCommand)(nil), "mtproto.Vector_BotCommand")
	proto.RegisterType((*Vector_LangPackString)(nil), "mtproto.Vector_LangPackString")
	proto.RegisterType((*Vector_LangPackLanguage)(nil), "mtproto.Vector_LangPackLanguage")
	proto.RegisterType((*Vector_PredefinedUser)(nil), "mtproto.Vector_PredefinedUser")
}

func init() { proto.RegisterFile("schema.tl.sync_service.proto", fileDescriptor_171aad061a6a5831) }

var fileDescriptor_171aad061a6a5831 = []byte{
	// 21744 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0xbd, 0x79, 0x94, 0x24, 0xc9,
	0x79, 0x1f, 0xd6, 0x35, 0xd5, 0xd5, 0x47, 0xf4, 0x5c, 0x9b, 0xdb, 0x73, 0x6c, 0xcf, 0x9d, 0x73,
	0xec, 0xcc, 0x1e, 0x33, 0xbb, 0xbd, 0xbb, 0xb3, 0xbb, 0x38, 0x08, 0xf5, 0x35, 0xb3, 0xbd, 0xdb,
	0x33, 0xd3, 0x5b, 0xdd, 0x33, 0x83, 0xbb, 0x90, 0x5d, 0x19, 0x5d, 0x9d, 0xdb, 0x59, 0x99, 0xb5,
	0x99, 0x59, 0x3d, 0xd3, 0x2b, 0x80, 0x04, 0x0f, 0x80, 0x20, 0x05, 0x98, 0x36, 0x48, 0x8a, 0x04,
	0x49, 0x80, 0x22, 0x48, 0x82, 0x22, 0x29, 0x52, 0x20, 0x0d, 0x8b, 0x94, 0x4d, 0x82, 0xb2, 0x6c,
	0x92, 0xa2, 0x28, 0x59, 0xe4, 0x33, 0x7d, 0x3c, 0x3f, 0x3f, 0x5a, 0x86, 0xf4, 0x24, 0x59, 0x7a,
	0xa4, 0xf1, 0x64, 0xf9, 0x92, 0x9f, 0x9e, 0xfd, 0xe2, 0x8b, 0x23, 0x23, 0x22, 0x23, 0xb3, 0xaa,
	0x27, 0x6b, 0x7a, 0x96, 0x7e, 0xfa, 0xab, 0xbb, 0x22, 0x7e, 0x19, 0x77, 0x7c, 0xf1, 0xc5, 0x77,
	0x05, 0x3a, 0x1e, 0x37, 0x37, 0x70, 0xdb, 0xb9, 0x9c, 0xf8, 0x97, 0xe3, 0xed, 0xa0, 0xd9, 0x88,
	0x71, 0xb4, 0xe5, 0x35, 0xf1, 0xe5, 0x4e, 0x14, 0x26, 0xa1, 0x35, 0xda, 0x4e, 0xe0, 0x9f, 0xa9,
	0x67, 0x5b, 0x5e, 0xb2, 0xd1, 0x5d, 0xbb, 0xdc, 0x0c, 0xdb, 0x57, 0x5a, 0x61, 0x2b, 0xbc, 0x02,
	0xc9, 0x6b, 0xdd, 0x75, 0xf8, 0x05, 0x3f, 0xe0, 0x3f, 0xfa, 0xdd, 0xd4, 0xc9, 0x56, 0x18, 0xb6,
	0x7c, 0x9c, 0xa2, 0xee, 0x45, 0x4e, 0xa7, 0x83, 0xa3, 0x98, 0xe5, 0x4f, 0xa5, 0xb5, 0x36, 0xc3,
	0x08, 0x37, 0x92, 0xed, 0x0e, 0xe6, 0x79, 0x87, 0xa4, 0xbc, 0xa8, 0xf9, 0xc2, 0x34, 0x4b, 0x9e,
	0x54, 0x1b, 0x4a, 0x53, 0xed, 0x77, 0xd0, 0x63, 0xab, 0x4b, 0x0d, 0x2f, 0xd8, 0x0a, 0x37, 0xf1,
	0xcc, 0x7a, 0x82, 0xa3, 0x1b, 0x71, 0xcb, 0x7a, 0x05, 0x4d, 0x34, 0xc3, 0x20, 0x4e, 0xa2, 0x6e,
	0x33, 0x09, 0xa3, 0xa3, 0x95, 0xd3, 0x95, 0x8b, 0xfb, 0xa7, 0x0f, 0x5f, 0x66, 0x7d, 0xb9, 0xbc,
	0xba, 0x34, 0x97, 0xe6, 0xd6, 0x65, 0xa8, 0x75, 0x08, 0x8d, 0xb4, 0xe3, 0x56, 0xc3, 0x73, 0x8f,
	0x56, 0x4f, 0x57, 0x2e, 0x56, 0xeb, 0xb5, 0x76, 0xdc, 0x5a, 0x74, 0xad, 0x49, 0x54, 0x7b, 0xbb,
	0x8b, 0xa3, 0xed, 0xa3, 0xc3, 0xa7, 0x2b, 0x17, 0xf7, 0xd6, 0xe9, 0x0f, 0xfb, 0x53, 0xc8, 0xca,
	0xd4, 0x1d, 0x97, 0xa8, 0xfc, 0x08, 0x1a, 0xa5, 0x95, 0xc7, 0x47, 0xab, 0xa7, 0xab, 0x17, 0xab,
	0xf5, 0x11, 0xa8, 0x3d, 0xce, 0xa9, 0xfe, 0x6b, 0x55, 0xd6, 0x77, 0x2f, 0x99, 0x0b, 0x83, 0x00,
	0x37, 0x13, 0x2f, 0x0c, 0xca, 0xf5, 0xdd, 0xe9, 0x78, 0xbc, 0xef, 0xb5, 0x7a, 0xcd, 0xe9, 0x78,
	0x8b, 0xae, 0x75, 0x06, 0xed, 0x75, 0x31, 0x59, 0x12, 0x8d, 0x76, 0xe8, 0x62, 0x1f, 0xda, 0x30,
	0x5e, 0x9f, 0xa0, 0x69, 0x37, 0x48, 0x92, 0x75, 0x1e, 0xed, 0x8f, 0xb7, 0xe3, 0x04, 0xb7, 0x1b,
	0x5b, 0x38, 0x8a, 0xbd, 0x30, 0x38, 0x5a, 0x03, 0xd0, 0x3e, 0x9a, 0x7a, 0x87, 0x26, 0x5a, 0xa7,
	0xd0, 0x84, 0xd3, 0xe9, 0x08, 0xcc, 0x08, 0x60, 0x90, 0xd3, 0xe9, 0x70, 0xc0, 0x45, 0x74, 0x90,
	0x95, 0xe3, 0x3b, 0x41, 0xab, 0xd1, 0x0c, 0x5d, 0x7c, 0x74, 0x14, 0x50, 0xac, 0xfc, 0x25, 0x27,
	0x68, 0xcd, 0x85, 0x2e, 0xb6, 0x8e, 0xa1, 0x71, 0x80, 0x74, 0x9c, 0xe6, 0xe6, 0xd1, 0x31, 0x80,
	0x8c, 0x91, 0x84, 0x65, 0xa7, 0xb9, 0x29, 0x32, 0xe1, 0xfb, 0xf1, 0x34, 0x13, 0xbe, 0xbc, 0x82,
	0x6a, 0x9d, 0x28, 0xbc, 0xbf, 0x7d, 0x14, 0x9d, 0xae, 0x5c, 0x9c, 0x98, 0x7e, 0x42, 0x8c, 0xcc,
	0x62, 0xd0, 0xe9, 0x26, 0x73, 0xbe, 0x87, 0x83, 0x64, 0x99, 0x00, 0xea, 0x14, 0x67, 0x3d, 0x85,
	0x46, 0x3a, 0x4e, 0xe4, 0xb4, 0xe3, 0xa3, 0x13, 0xf0, 0x85, 0x25, 0xbe, 0x78, 0x7d, 0xe5, 0xd6,
	0xcd, 0x3b, 0x8e, 0xdf, 0xc5, 0x75, 0x86, 0x48, 0x27, 0x6a, 0xaf, 0x3c, 0x51, 0xef, 0x48, 0xeb,
	0xe4, 0xae, 0x97, 0x6c, 0x2c, 0x39, 0xdb, 0x38, 0x2a, 0x31, 0x51, 0x93, 0xa8, 0xe6, 0x93, 0x22,
	0xf8, 0x3c, 0xc1, 0x8f, 0x9c, 0x45, 0xe2, 0xa1, 0x23, 0x4a, 0xdd, 0x61, 0x37, 0xb9, 0xdd, 0x71,
	0x9d, 0x04, 0xc7, 0xe5, 0x1a, 0x40, 0xab, 0xaa, 0xca, 0x55, 0x7d, 0xa9, 0x82, 0xa6, 0x94, 0xba,
	0x6e, 0xe0, 0x38, 0x76, 0x5a, 0x38, 0xae, 0x3b, 0x41, 0x0b, 0x97, 0xa8, 0xee, 0x69, 0x54, 0x8b,
	0x48, 0x11, 0x50, 0xdd, 0xc4, 0xf4, 0x21, 0xf1, 0x0d, 0xab, 0x00, 0xca, 0xaf, 0x53, 0x4c, 0xce,
	0x30, 0x7c, 0xa6, 0x82, 0x26, 0x95, 0xb6, 0xad, 0x3a, 0x9b, 0x38, 0xec, 0x26, 0x25, 0x5a, 0x75,
	0x02, 0xa1, 0x84, 0x16, 0x92, 0x92, 0x8b, 0x71, 0x96, 0x92, 0x4b, 0x32, 0xfe, 0xa4, 0x82, 0x0e,
	0xae, 0x2e, 0x35, 0x9c, 0x6e, 0xb2, 0xd1, 0x88, 0x71, 0xe0, 0xc2, 0x92, 0x7c, 0xf0, 0x36, 0x9c,
	0x41, 0x7b, 0x3b, 0x1b, 0x61, 0x80, 0x1b, 0x41, 0xb7, 0xbd, 0xc6, 0x16, 0xc4, 0x78, 0x7d, 0x02,
	0xd2, 0x6e, 0x42, 0x92, 0xb4, 0xab, 0x87, 0xe5, 0x5d, 0xfd, 0x04, 0x1a, 0x23, 0xc9, 0x1b, 0x4e,
	0xbc, 0xc1, 0x36, 0xeb, 0xa8, 0xd3, 0xf1, 0x5e, 0x73, 0xe2, 0x0d, 0xeb, 0x79, 0x34, 0x16, 0xe3,
	0x24, 0xf1, 0x82, 0x56, 0x0c, 0x7b, 0x54, 0x1e, 0x71, 0xd2, 0xde, 0x15, 0x96, 0x59, 0x17, 0x30,
	0xfb, 0x8f, 0x2b, 0x68, 0xbf, 0xe8, 0x96, 0xd7, 0x0a, 0x6e, 0x77, 0x1e, 0x6e, 0xa7, 0x2e, 0xa0,
	0x03, 0x14, 0x42, 0xb6, 0x38, 0xed, 0x04, 0x25, 0x4b, 0xfb, 0x20, 0x99, 0xb4, 0x12, 0xba, 0x72,
	0x02, 0xa1, 0x75, 0x2f, 0x8a, 0x93, 0x46, 0xe0, 0xb4, 0x31, 0xeb, 0xe7, 0x38, 0xa4, 0xdc, 0x74,
	0xda, 0x8c, 0x8a, 0xf0, 0xdc, 0x11, 0x4e, 0x28, 0x68, 0xa6, 0xfd, 0x0d, 0xad, 0x4f, 0x8b, 0xc1,
	0xbb, 0xa6, 0x4f, 0x29, 0x8e, 0xf7, 0x49, 0x40, 0xec, 0x3a, 0x3a, 0xcc, 0x5b, 0xed, 0x87, 0xad,
	0x5b, 0xdd, 0xe4, 0x85, 0x85, 0x97, 0xa7, 0x67, 0x67, 0x9e, 0x7f, 0xf5, 0xc1, 0x5b, 0x6f, 0xdf,
	0x45, 0xc7, 0x78, 0x99, 0x11, 0x8e, 0x71, 0x32, 0xd3, 0x4d, 0x36, 0xc2, 0xc8, 0x7b, 0xc7, 0x21,
	0x27, 0x4e, 0x09, 0x42, 0x62, 0xfb, 0x69, 0xc1, 0xf8, 0x7e, 0x27, 0x8c, 0xd4, 0x92, 0x4b, 0x8c,
	0xf7, 0xe3, 0xa8, 0xe6, 0x36, 0xd3, 0xa3, 0x6c, 0xd8, 0x6d, 0x2e, 0xba, 0xf6, 0xa7, 0xd2, 0xda,
	0xbc, 0xf6, 0x20, 0x6b, 0xdb, 0x8f, 0xf6, 0x08, 0x12, 0xb0, 0xc7, 0x83, 0xbd, 0xbf, 0xb6, 0x9d,
	0xe0, 0x98, 0xef, 0x7d, 0xf8, 0x61, 0xff, 0x69, 0x05, 0x68, 0x31, 0xd4, 0xbf, 0xe6, 0x05, 0xee,
	0x2a, 0x6e, 0x77, 0x48, 0x0b, 0xde, 0xc0, 0xdb, 0x25, 0xea, 0x7e, 0x12, 0x1d, 0xec, 0xe0, 0xa8,
	0x4d, 0x8b, 0xdd, 0xc4, 0xdb, 0x29, 0x31, 0xda, 0x47, 0xd2, 0x59, 0x05, 0x94, 0x20, 0x05, 0x61,
	0xd0, 0xc4, 0xd0, 0xa8, 0x6a, 0x9d, 0xfe, 0x20, 0xab, 0x09, 0xdf, 0xef, 0x78, 0x11, 0x8e, 0x1b,
	0x4e, 0x02, 0xab, 0xa9, 0x56, 0x1f, 0x67, 0x29, 0x33, 0x89, 0xf5, 0x34, 0x7a, 0x0c, 0x07, 0xcd,
	0x68, 0xbb, 0x93, 0x60, 0xb7, 0xd1, 0xa6, 0xe4, 0x16, 0x76, 0xca, 0xde, 0xfa, 0x41, 0x91, 0xc1,
	0xc8, 0xb0, 0xfd, 0xf7, 0x2a, 0xe8, 0xa4, 0x3a, 0xc0, 0xb3, 0xe1, 0xc0, 0xc6, 0x78, 0x12, 0xd5,
	0xd6, 0x7d, 0xa7, 0x15, 0xf3, 0x43, 0x0f, 0x7e, 0x3c, 0x00, 0x75, 0x3b, 0x87, 0xf6, 0xaf, 0x85,
	0x09, 0x6d, 0x64, 0x12, 0x6e, 0x62, 0xce, 0x87, 0xec, 0x5d, 0xa3, 0x6d, 0x5d, 0x25, 0x69, 0xf6,
	0x17, 0x2a, 0xe8, 0x10, 0xef, 0x4a, 0x73, 0x03, 0x37, 0x37, 0x97, 0x9d, 0x38, 0xbe, 0x17, 0x46,
	0x6e, 0x89, 0x1e, 0xbc, 0x07, 0x8d, 0x75, 0x58, 0x29, 0xec, 0x24, 0x3b, 0xa9, 0x31, 0x1f, 0x72,
	0x45, 0x2b, 0xf5, 0xe5, 0xba, 0xc0, 0xdb, 0x1f, 0x41, 0xa7, 0xd2, 0x1d, 0xf8, 0x76, 0x17, 0xc7,
	0x09, 0xc7, 0xd5, 0x71, 0x33, 0xdc, 0xc2, 0x51, 0x89, 0x25, 0x64, 0xff, 0xba, 0xb4, 0x30, 0x23,
	0x5a, 0xdc, 0x00, 0xba, 0x6b, 0xa1, 0x61, 0xa0, 0x50, 0x94, 0xd4, 0xc1, 0xff, 0xd6, 0x22, 0xda,
	0x1b, 0xe0, 0x7b, 0x0d, 0x71, 0xbc, 0x0c, 0xc3, 0x30, 0x5c, 0x10, 0xc5, 0x39, 0xcd, 0x66, 0xd8,
	0x0d, 0x92, 0x06, 0xaf, 0x1e, 0x86, 0x45, 0x9c, 0x37, 0x13, 0x01, 0xbe, 0xc7, 0x7f, 0x10, 0x6e,
	0xc3, 0x92, 0x89, 0xd2, 0x6e, 0x9c, 0xa5, 0x7d, 0x92, 0x68, 0xa5, 0x6d, 0x4d, 0x27, 0x68, 0x62,
	0xff, 0xdd, 0xd3, 0xb6, 0xef, 0x44, 0x47, 0x79, 0xd3, 0xdc, 0x28, 0xec, 0x48, 0x44, 0xa8, 0x0c,
	0x47, 0x78, 0x11, 0x1d, 0xc4, 0xf7, 0x9b, 0xb8, 0x93, 0x08, 0x3a, 0xc4, 0xef, 0x30, 0xfb, 0x69,
	0x3a, 0xaf, 0xc3, 0xfe, 0xf9, 0x4a, 0xda, 0x00, 0x4a, 0xf3, 0x97, 0xc2, 0x96, 0x17, 0xc0, 0xb6,
	0x1b, 0xfc, 0xe5, 0x45, 0x26, 0x04, 0xc3, 0x2a, 0x21, 0x00, 0xca, 0x07, 0x4d, 0x26, 0x17, 0xae,
	0x1a, 0x34, 0x76, 0x9c, 0xa6, 0x2c, 0xba, 0xb1, 0xfd, 0x56, 0xda, 0x4c, 0x4a, 0xcb, 0x06, 0xd2,
	0xcc, 0x49, 0x54, 0xa3, 0x44, 0x87, 0x71, 0xce, 0xf0, 0x43, 0xae, 0xcb, 0x69, 0x92, 0x06, 0x3c,
	0xc4, 0xba, 0xda, 0xe8, 0x84, 0x42, 0xd8, 0x38, 0xfd, 0x78, 0x38, 0x3b, 0xde, 0xfe, 0xfc, 0x1e,
	0xf4, 0x04, 0xa9, 0x8f, 0x6d, 0xec, 0x08, 0xb7, 0xbc, 0x38, 0xc1, 0xd1, 0x3c, 0xdc, 0x1e, 0x4b,
	0xd4, 0xf5, 0x04, 0x1a, 0x0b, 0xc2, 0x46, 0xbb, 0x9b, 0x60, 0x3a, 0xe3, 0x63, 0xf5, 0xd1, 0x20,
	0xbc, 0x41, 0x7e, 0x02, 0x63, 0x4e, 0xba, 0x0a, 0x42, 0x05, 0x76, 0x2e, 0x8c, 0x43, 0xca, 0xea,
	0x76, 0x07, 0xa7, 0xc3, 0x42, 0x0f, 0x06, 0xfa, 0xc3, 0xba, 0x4c, 0xef, 0xa6, 0xb1, 0x13, 0xb8,
	0x6b, 0xe1, 0x7d, 0xc6, 0xf7, 0xee, 0x13, 0x2d, 0x99, 0x0d, 0x43, 0x1f, 0xae, 0xaa, 0x2b, 0x14,
	0x60, 0x1d, 0x46, 0x23, 0x31, 0x6e, 0x46, 0x38, 0x81, 0x0b, 0xea, 0xde, 0x3a, 0xfb, 0x45, 0x2a,
	0x0f, 0x93, 0x0d, 0x1c, 0x35, 0xba, 0x64, 0x55, 0x8d, 0xd1, 0x55, 0x05, 0x29, 0xb7, 0x3d, 0x37,
	0xb6, 0x7f, 0xb9, 0x42, 0x79, 0x10, 0x36, 0x1c, 0xdd, 0x60, 0x60, 0x03, 0xa2, 0xf6, 0xba, 0x9a,
	0xdb, 0xeb, 0x61, 0xb9, 0xd7, 0x6a, 0x6b, 0x6b, 0x7a, 0x6b, 0x7f, 0xbf, 0x42, 0x8f, 0x1d, 0xde,
	0x5a, 0xb8, 0x38, 0xde, 0x0c, 0x13, 0x6f, 0x7d, 0x9b, 0xd3, 0xe1, 0x12, 0x2d, 0x7e, 0x06, 0x0d,
	0x77, 0x30, 0x23, 0x66, 0x13, 0xd3, 0x47, 0xd5, 0xb3, 0x90, 0xd6, 0xb2, 0x8c, 0x71, 0x54, 0x07,
	0x94, 0xf5, 0x3e, 0xe9, 0x56, 0x42, 0x8f, 0x8d, 0xd3, 0xea, 0x17, 0x04, 0xab, 0xb6, 0x4d, 0xba,
	0xa0, 0x7c, 0xb6, 0x82, 0x8e, 0x4b, 0x3d, 0x69, 0xe1, 0xe4, 0xd1, 0x74, 0xc3, 0xfe, 0x30, 0x65,
	0x91, 0xc4, 0x76, 0x88, 0x07, 0xd7, 0x12, 0xfb, 0xd3, 0x7b, 0x28, 0x1d, 0x51, 0xa6, 0x6b, 0x39,
	0x0a, 0xd7, 0x3d, 0xbf, 0xcc, 0xca, 0x7a, 0xaf, 0x72, 0x89, 0xa2, 0xdd, 0x3c, 0x7e, 0x99, 0x0a,
	0xf8, 0x2e, 0x73, 0x01, 0xdf, 0xe5, 0x95, 0x24, 0xf2, 0x82, 0x16, 0x15, 0x87, 0x48, 0x57, 0xac,
	0x57, 0xe5, 0x2b, 0xd6, 0x70, 0x1f, 0xdf, 0x8a, 0x0b, 0x98, 0x35, 0x8d, 0x6a, 0xce, 0x5a, 0xd8,
	0xa5, 0x5c, 0x69, 0xaf, 0xcf, 0x28, 0xd4, 0xfe, 0x24, 0xe5, 0x64, 0x94, 0x11, 0x58, 0x49, 0x9c,
	0xa4, 0x1b, 0x97, 0x62, 0xb1, 0x47, 0xc3, 0xf5, 0x75, 0xdf, 0x0b, 0x78, 0xef, 0x35, 0xba, 0xc0,
	0x73, 0xed, 0x0d, 0x65, 0xfc, 0x5b, 0x38, 0xb9, 0xeb, 0xf8, 0xfe, 0xb2, 0xd3, 0xc1, 0x51, 0x5c,
	0x8e, 0xac, 0xc2, 0xf9, 0x45, 0xb9, 0x7a, 0xf8, 0xdf, 0xfe, 0xbb, 0x8c, 0x3f, 0x15, 0xeb, 0x88,
	0x9c, 0x50, 0x64, 0x99, 0x95, 0xa8, 0xe7, 0x82, 0xb2, 0x90, 0xad, 0xec, 0xee, 0x62, 0x3b, 0xf1,
	0x59, 0x34, 0x12, 0x61, 0x27, 0x0e, 0x03, 0x36, 0x9f, 0xa9, 0x74, 0xa0, 0x0e, 0xcd, 0xa8, 0x43,
	0x66, 0x9d, 0x81, 0xac, 0xa3, 0x68, 0x94, 0x5f, 0x1c, 0x18, 0x2b, 0xce, 0x7e, 0xda, 0x1d, 0x65,
	0xb8, 0xe0, 0x34, 0xba, 0x1d, 0xe3, 0x88, 0x2c, 0x95, 0x12, 0xdd, 0x98, 0x42, 0x63, 0x5d, 0x56,
	0x0a, 0x3b, 0x89, 0xc4, 0x6f, 0xfb, 0x6d, 0xe5, 0x30, 0xa2, 0xcb, 0xe3, 0x21, 0x57, 0xf9, 0x29,
	0x65, 0xa2, 0x5a, 0x38, 0x59, 0x8e, 0xbc, 0x2d, 0xa7, 0x59, 0xe6, 0xca, 0xf7, 0x14, 0xaa, 0x6e,
	0xe2, 0x6d, 0x33, 0xc1, 0x61, 0xa5, 0xbf, 0x81, 0xb7, 0xeb, 0x04, 0x64, 0xff, 0xaa, 0xba, 0x50,
	0xe2, 0x5d, 0xae, 0xdf, 0xba, 0x82, 0x6a, 0x51, 0xd7, 0x87, 0xab, 0x70, 0x35, 0x2b, 0x6e, 0x65,
	0xe8, 0x7a, 0xd7, 0xc7, 0x75, 0x8a, 0xb3, 0x7d, 0x65, 0x51, 0xb8, 0xd8, 0xc7, 0x09, 0x9e, 0xa1,
	0xbf, 0x4a, 0x34, 0xf9, 0xb0, 0x58, 0xb3, 0x74, 0x7e, 0xd8, 0x2f, 0x7b, 0x55, 0xdf, 0xb1, 0xac,
	0xaa, 0xd5, 0xd5, 0xa5, 0x12, 0x84, 0xf8, 0xbb, 0x94, 0x52, 0xe3, 0xc1, 0x94, 0x6a, 0x5d, 0x42,
	0xd5, 0x24, 0xf1, 0xd9, 0xb0, 0x1f, 0x11, 0x5f, 0xb0, 0xb2, 0xe7, 0x9d, 0xed, 0x78, 0x75, 0x75,
	0xa9, 0x4e, 0x30, 0xf6, 0xd7, 0x2b, 0xca, 0x31, 0x03, 0xb7, 0xa3, 0x0d, 0x27, 0x68, 0xe1, 0x65,
	0x7e, 0x17, 0x78, 0xb8, 0x97, 0x91, 0xe7, 0x33, 0x87, 0x75, 0x4f, 0x11, 0xe2, 0x6f, 0x55, 0xa8,
	0xe0, 0x4a, 0x50, 0x03, 0xd1, 0xdc, 0xbf, 0x10, 0x62, 0xb7, 0xb7, 0x29, 0x5b, 0xad, 0x50, 0x16,
	0xca, 0xd3, 0x2d, 0x85, 0xcd, 0x4d, 0xec, 0x96, 0x5b, 0xbb, 0x1d, 0x1c, 0x79, 0x21, 0xbf, 0xda,
	0xb0, 0x5f, 0xf6, 0x07, 0x75, 0x96, 0x66, 0x60, 0x62, 0xb9, 0xb6, 0xd2, 0x99, 0xac, 0xc8, 0x6f,
	0xc0, 0x87, 0x59, 0x5d, 0x99, 0x79, 0x42, 0x22, 0x4b, 0xdf, 0x45, 0xec, 0xbf, 0xaa, 0xee, 0x00,
	0xa9, 0xd0, 0x01, 0xb0, 0x7c, 0x65, 0x24, 0x39, 0xff, 0xb4, 0x82, 0xce, 0x64, 0x99, 0xb4, 0x77,
	0x45, 0xdb, 0x06, 0x29, 0x9e, 0xf9, 0xaa, 0x7a, 0x75, 0xa0, 0xf2, 0x99, 0x60, 0xdd, 0x8b, 0xda,
	0x83, 0x20, 0x41, 0xf2, 0x2a, 0x1a, 0xa7, 0xab, 0xe8, 0x41, 0x68, 0xce, 0x4f, 0x54, 0x14, 0x76,
	0xb1, 0x29, 0x35, 0xb0, 0x14, 0x1f, 0x95, 0xa1, 0x28, 0xd5, 0xde, 0x14, 0x65, 0x58, 0xa7, 0x28,
	0xbf, 0x58, 0x51, 0x98, 0x95, 0x16, 0x4e, 0x56, 0xdb, 0x9d, 0x47, 0x2b, 0x86, 0x94, 0x48, 0xd1,
	0xb0, 0x42, 0x8a, 0x3e, 0xa2, 0x4c, 0x36, 0x61, 0x7c, 0xf1, 0xda, 0xc0, 0xa8, 0x51, 0x07, 0x9d,
	0xd6, 0xa9, 0x91, 0x5e, 0xfc, 0x80, 0x09, 0xd2, 0xc7, 0x94, 0x2d, 0x6a, 0xac, 0xb1, 0x4c, 0x87,
	0x3e, 0xa4, 0x90, 0x57, 0x42, 0xb8, 0x7d, 0x7f, 0x05, 0x37, 0xbb, 0x11, 0x86, 0xbb, 0x4c, 0x99,
	0xa2, 0x3f, 0x93, 0x59, 0x34, 0x52, 0xc1, 0x25, 0x46, 0xe9, 0x32, 0xaa, 0x81, 0x89, 0x06, 0x08,
	0xf5, 0x64, 0xa6, 0x4f, 0x2a, 0x7e, 0x75, 0xbb, 0x83, 0xeb, 0x14, 0x66, 0xff, 0x1a, 0xd5, 0x05,
	0x8b, 0xed, 0xef, 0x6c, 0xe1, 0xc1, 0x34, 0xe4, 0x0a, 0xaa, 0x6d, 0x91, 0x22, 0xd8, 0xd2, 0xd5,
	0xf8, 0x49, 0xa9, 0x8e, 0x3a, 0xc5, 0x81, 0x4d, 0x01, 0xa4, 0x36, 0xa8, 0x84, 0x86, 0xeb, 0x0a,
	0xaa, 0xf5, 0xfd, 0x34, 0x7d, 0x05, 0x92, 0x17, 0x5d, 0xfb, 0x73, 0xaa, 0x8c, 0x80, 0xb2, 0x9e,
	0x8f, 0x66, 0xf8, 0x7e, 0xa1, 0xa2, 0x6f, 0x28, 0x65, 0xf1, 0x5d, 0x0b, 0xa3, 0x76, 0x39, 0x59,
	0xe9, 0x5a, 0x28, 0x69, 0xad, 0x6b, 0x6b, 0x21, 0xd3, 0x58, 0xc7, 0xcd, 0xb0, 0xc3, 0x49, 0x11,
	0xfd, 0x01, 0x54, 0xaa, 0xbb, 0xe6, 0x7b, 0xcd, 0x06, 0xe1, 0xf9, 0x39, 0xdf, 0x03, 0x29, 0x6f,
	0xe0, 0x6d, 0xfb, 0x97, 0xf6, 0x28, 0xe7, 0x2c, 0x15, 0x5f, 0x0e, 0x6a, 0x6f, 0x0e, 0xb0, 0xa1,
	0xd6, 0x7b, 0xd1, 0x5e, 0x58, 0x10, 0x40, 0x90, 0x71, 0x7c, 0x74, 0x24, 0x7f, 0x26, 0x08, 0x75,
	0xae, 0x4f, 0x6c, 0xf1, 0x7f, 0x71, 0x6c, 0x2d, 0xa0, 0x89, 0x66, 0x84, 0x5d, 0x1c, 0x24, 0x9e,
	0xe3, 0xc7, 0x20, 0xf2, 0x9b, 0x98, 0x3e, 0xab, 0x7d, 0x3b, 0x97, 0x22, 0x16, 0xb8, 0x6a, 0xac,
	0x2e, 0x7f, 0x67, 0x62, 0xcb, 0xef, 0xe0, 0xc8, 0x5b, 0xdf, 0xfe, 0x0b, 0xc3, 0x96, 0x6f, 0xa5,
	0xcd, 0xfd, 0x0b, 0xc1, 0x96, 0x77, 0x72, 0x06, 0x7c, 0xa1, 0xed, 0x78, 0x65, 0x95, 0x32, 0x93,
	0xa8, 0x86, 0x49, 0x31, 0xac, 0xf9, 0xf4, 0x87, 0xfd, 0x49, 0xc3, 0x78, 0x41, 0x6d, 0x83, 0xae,
	0x49, 0x88, 0xdb, 0x87, 0x25, 0x71, 0xfb, 0xb7, 0xf7, 0x28, 0x67, 0x8b, 0x17, 0x78, 0x09, 0xb3,
	0x74, 0x59, 0xc1, 0x71, 0x5c, 0x6e, 0x37, 0x4e, 0xa1, 0xb1, 0x66, 0x18, 0x24, 0x4e, 0x33, 0x89,
	0x99, 0xc8, 0x5d, 0xfc, 0xb6, 0xce, 0xa2, 0x7d, 0x4c, 0xaa, 0xd3, 0xe8, 0xc6, 0x38, 0xa2, 0xcb,
	0x6b, 0xac, 0xbe, 0x97, 0x25, 0xde, 0x26, 0x69, 0x32, 0xa8, 0xb9, 0xe1, 0x24, 0x31, 0x4c, 0x57,
	0x0a, 0x9a, 0x23, 0x69, 0xd6, 0xb3, 0xc8, 0xe2, 0xa0, 0x36, 0x6e, 0x39, 0xad, 0x28, 0xec, 0x76,
	0xa8, 0x1d, 0xca, 0x58, 0xfd, 0x31, 0x96, 0x73, 0x43, 0x64, 0x58, 0x97, 0xd0, 0x41, 0xa9, 0xcc,
	0x20, 0xc0, 0x6c, 0x7b, 0x8e, 0xd5, 0x0f, 0xa4, 0xc5, 0x42, 0x32, 0x68, 0x90, 0x3d, 0x1f, 0xc7,
	0x60, 0x2f, 0x36, 0x56, 0xa7, 0x3f, 0xac, 0x0f, 0xa0, 0x7d, 0xe4, 0x9f, 0x46, 0xdb, 0xb9, 0xdf,
	0x88, 0xbd, 0x77, 0xa8, 0xc1, 0xd8, 0xc4, 0xf4, 0xb1, 0x8c, 0xb4, 0x71, 0x31, 0x48, 0x5e, 0x98,
	0xa6, 0x47, 0xcb, 0x04, 0xf9, 0xe2, 0x86, 0x73, 0x7f, 0xc5, 0x7b, 0x07, 0xdb, 0x5d, 0x85, 0x54,
	0xaf, 0x7b, 0x81, 0x17, 0x6f, 0x0c, 0x6c, 0xcc, 0x8f, 0xa2, 0xd1, 0xb8, 0xdb, 0x6c, 0xe2, 0x98,
	0x0f, 0x39, 0xff, 0x69, 0x87, 0x4a, 0xb5, 0x9c, 0x75, 0x65, 0x8c, 0x5a, 0xd9, 0x05, 0x67, 0xd2,
	0xe4, 0x64, 0x25, 0xd7, 0x81, 0x3b, 0xa0, 0xfa, 0xb4, 0xb2, 0xa9, 0xca, 0x74, 0x50, 0x65, 0x37,
	0xd1, 0x93, 0xea, 0x51, 0x3a, 0x47, 0x17, 0xed, 0x0a, 0xd8, 0x29, 0x81, 0xf0, 0xdd, 0x6b, 0x96,
	0x3c, 0xa9, 0xec, 0x1f, 0xac, 0x28, 0xb5, 0xc4, 0x0f, 0xa5, 0x16, 0xeb, 0x3c, 0x1a, 0x89, 0x3d,
	0x1f, 0x07, 0x89, 0x59, 0x0e, 0xcd, 0x32, 0xed, 0x5f, 0xc9, 0xdc, 0x7d, 0xa9, 0x8a, 0x61, 0x01,
	0x94, 0x9b, 0xe5, 0x98, 0x57, 0xb2, 0x89, 0x9b, 0x61, 0xbb, 0xe3, 0x10, 0x86, 0x2a, 0xec, 0x06,
	0x5c, 0xfb, 0xb6, 0x97, 0x25, 0xae, 0x90, 0x34, 0xa1, 0x13, 0x19, 0xee, 0x4b, 0x27, 0xf2, 0x83,
	0xea, 0x35, 0x4c, 0x96, 0x9b, 0x97, 0x68, 0xe8, 0x4b, 0x68, 0xfc, 0x9e, 0xe3, 0xfb, 0x1d, 0x52,
	0x4c, 0x46, 0x68, 0x06, 0x0d, 0x11, 0xb5, 0xd4, 0x53, 0xa4, 0xfd, 0x5f, 0xab, 0x9c, 0x6b, 0xb7,
	0xe3, 0x87, 0x8e, 0x3b, 0x88, 0xf6, 0x5c, 0x40, 0xc3, 0x84, 0x6c, 0x98, 0xc5, 0xeb, 0xd7, 0x3c,
	0x1f, 0xd7, 0x21, 0xdf, 0x3a, 0x86, 0xc6, 0xdb, 0x5e, 0x1b, 0xa7, 0xda, 0xcb, 0xf1, 0xfa, 0x18,
	0x49, 0x00, 0x35, 0xde, 0x55, 0xe9, 0x04, 0xa7, 0x6a, 0x91, 0x29, 0x51, 0x90, 0x68, 0xa4, 0xe1,
	0x18, 0xff, 0x97, 0x15, 0x55, 0x24, 0xe9, 0x6c, 0xe1, 0x47, 0x37, 0xc6, 0x64, 0x1d, 0x77, 0x03,
	0xd2, 0x06, 0xb6, 0x40, 0xf4, 0x75, 0x4c, 0x33, 0x1f, 0xb8, 0xb3, 0xbf, 0xa7, 0x2a, 0x59, 0xbd,
	0x20, 0x4e, 0x1c, 0xdf, 0x7f, 0x84, 0xfd, 0xbd, 0x9a, 0xe1, 0xbb, 0xfa, 0xeb, 0xc8, 0x1d, 0x65,
	0x29, 0xd2, 0x7b, 0xe8, 0x00, 0x34, 0x4a, 0xf6, 0xc7, 0x91, 0x9d, 0xb9, 0x5d, 0x84, 0xf3, 0xe1,
	0xbd, 0x80, 0xac, 0xf5, 0x01, 0x28, 0x22, 0xff, 0x4e, 0x05, 0x9d, 0xd5, 0x56, 0xdb, 0x60, 0x6b,
	0xb0, 0x0e, 0xa2, 0xaa, 0x1f, 0xde, 0x63, 0xb4, 0x87, 0xfc, 0x0b, 0xf7, 0x78, 0xaf, 0xb5, 0xc1,
	0x18, 0x0f, 0xf8, 0xdf, 0x7a, 0x35, 0xb3, 0x80, 0x4e, 0xa4, 0x62, 0x73, 0x43, 0x83, 0xa4, 0xa1,
	0xff, 0x53, 0x95, 0xef, 0xa5, 0x64, 0x60, 0x75, 0x03, 0xb7, 0xf1, 0x2e, 0x90, 0x80, 0x8b, 0xa8,
	0x96, 0x6c, 0x74, 0xdb, 0x6b, 0x6c, 0xb1, 0x98, 0x80, 0x14, 0x40, 0x88, 0x05, 0x70, 0x2f, 0x92,
	0x7d, 0xeb, 0x18, 0x49, 0xe0, 0xe6, 0xad, 0x29, 0x25, 0x19, 0x51, 0x29, 0x89, 0xfd, 0xb9, 0xaa,
	0x2a, 0x6f, 0x8f, 0xb0, 0x93, 0xe0, 0xb2, 0x1d, 0xb4, 0xd0, 0x70, 0xec, 0x77, 0x5b, 0x9c, 0x6f,
	0x20, 0xff, 0x83, 0xe5, 0x81, 0x97, 0xf8, 0xe2, 0xb6, 0x06, 0x3f, 0xac, 0x69, 0x34, 0xe6, 0x86,
	0xcd, 0x6e, 0x9b, 0x1c, 0x66, 0x74, 0x6a, 0x0e, 0xab, 0xbd, 0x9c, 0x67, 0xb9, 0x75, 0x81, 0xb3,
	0x3a, 0xe8, 0x3c, 0x9f, 0x9f, 0xc6, 0xb5, 0xa5, 0x99, 0xeb, 0x77, 0x16, 0xe6, 0x56, 0x6f, 0xd5,
	0x17, 0x6f, 0x2e, 0xdf, 0x5e, 0x5d, 0x7d, 0x6d, 0xe1, 0xc6, 0xc2, 0xca, 0xc2, 0xea, 0xea, 0xe2,
	0xcd, 0xeb, 0x2b, 0xec, 0x6e, 0x77, 0x4c, 0x2d, 0x10, 0xfa, 0x26, 0x66, 0xfa, 0x1c, 0x2f, 0xa9,
	0xa8, 0x20, 0xcb, 0x45, 0xa7, 0x94, 0x1a, 0x0d, 0x75, 0x8d, 0x32, 0x76, 0xb1, 0xa0, 0xae, 0x93,
	0x72, 0x5d, 0xd9, 0x22, 0xec, 0xef, 0x1f, 0xd6, 0xd6, 0x9a, 0x3b, 0x80, 0xa9, 0x38, 0x8c, 0x46,
	0xd6, 0xc3, 0xa8, 0xed, 0x24, 0x5c, 0xe3, 0x45, 0x7f, 0x59, 0x97, 0xc8, 0xda, 0xc2, 0x42, 0x19,
	0xff, 0xb8, 0xa1, 0xe1, 0x75, 0x8a, 0xb0, 0x9e, 0x63, 0xb3, 0xd9, 0x8f, 0xfe, 0x9d, 0xce, 0xf5,
	0x34, 0x9f, 0xeb, 0x91, 0x7e, 0x54, 0xf6, 0xd9, 0x95, 0x30, 0x3a, 0xe8, 0x95, 0x30, 0xb6, 0x8b,
	0x2b, 0x61, 0xbc, 0xfc, 0x4a, 0xf8, 0x2a, 0x75, 0x53, 0x90, 0x09, 0x67, 0xd9, 0x75, 0x20, 0xe6,
	0xbb, 0xda, 0x73, 0xbe, 0xfb, 0x3b, 0x96, 0xed, 0xff, 0x47, 0x65, 0xd7, 0xd8, 0xf1, 0x3a, 0x00,
	0xd2, 0xe1, 0x3a, 0xd1, 0x26, 0x23, 0xe9, 0xf0, 0xff, 0x4e, 0xd6, 0xea, 0x8b, 0x62, 0xb9, 0xf7,
	0xb3, 0x5a, 0xf9, 0x66, 0x78, 0x1e, 0xa1, 0x35, 0x27, 0xc6, 0x0d, 0x5a, 0xcb, 0x88, 0x46, 0x6d,
	0x67, 0x9d, 0x98, 0x0e, 0x7f, 0x7d, 0x7c, 0x8d, 0xff, 0x6b, 0xff, 0xc7, 0x15, 0xf4, 0xb8, 0x26,
	0x96, 0x7f, 0xf4, 0x3b, 0xf5, 0x14, 0x9a, 0xe0, 0x7b, 0xa3, 0xe1, 0xb9, 0x30, 0x04, 0xd5, 0x3a,
	0xe2, 0x49, 0x8b, 0xae, 0xfd, 0x49, 0x65, 0x5d, 0xf1, 0x46, 0xc7, 0x0f, 0xa1, 0xd5, 0x5c, 0x9e,
	0x3e, 0x2c, 0xc9, 0xd3, 0x3f, 0x5b, 0x51, 0xa4, 0x12, 0xec, 0x76, 0x84, 0x83, 0x64, 0x00, 0x9c,
	0xc0, 0xd3, 0xe8, 0xb1, 0x18, 0x07, 0xb1, 0x97, 0x78, 0x5b, 0xb8, 0x81, 0x03, 0x67, 0xcd, 0x17,
	0x16, 0x81, 0x07, 0x45, 0xc6, 0x02, 0x4d, 0xcf, 0x4a, 0xde, 0x07, 0xd6, 0x0e, 0xfb, 0x8b, 0x15,
	0xbd, 0xec, 0x1b, 0x5d, 0x3f, 0xf1, 0x06, 0x62, 0x01, 0xf4, 0x32, 0x42, 0x82, 0x99, 0xe4, 0x32,
	0xe4, 0x5c, 0xbe, 0x53, 0x82, 0xda, 0x0d, 0x85, 0x0f, 0x6b, 0xe1, 0xe4, 0xba, 0x1f, 0xae, 0x39,
	0x3e, 0x33, 0xbb, 0x18, 0x40, 0xaf, 0x7f, 0x52, 0xe3, 0xf4, 0x06, 0x5e, 0x83, 0xf5, 0x1e, 0x89,
	0x87, 0xd3, 0xd5, 0x55, 0xc6, 0xba, 0x24, 0x26, 0xee, 0xdf, 0x56, 0x34, 0x45, 0x36, 0x58, 0x49,
	0x51, 0x83, 0xb8, 0xe5, 0x8d, 0x30, 0x09, 0x77, 0xc1, 0x5a, 0xea, 0x32, 0x1a, 0xeb, 0x90, 0xaa,
	0xb8, 0xde, 0x21, 0xb3, 0x91, 0xa1, 0x21, 0xf5, 0x51, 0x00, 0x2d, 0xba, 0x92, 0x75, 0x55, 0x6d,
	0x87, 0xd6, 0x55, 0x23, 0xaa, 0x75, 0x95, 0x6a, 0xda, 0x02, 0x97, 0x87, 0x01, 0xe8, 0xd5, 0x55,
	0x4d, 0x9f, 0x8b, 0x9b, 0xbe, 0x17, 0xe0, 0xd4, 0x17, 0x21, 0xc6, 0xc9, 0xc0, 0x34, 0x7d, 0x64,
	0x7b, 0x6e, 0x38, 0x8c, 0x52, 0xcd, 0x5f, 0x7d, 0xe1, 0x95, 0xf9, 0x85, 0x57, 0x5e, 0x1d, 0xb0,
	0xa6, 0xef, 0x3f, 0xd4, 0x25, 0xf2, 0xaa, 0xee, 0xa2, 0x9c, 0xc1, 0xce, 0x8b, 0xe8, 0xb0, 0x23,
	0x97, 0xd6, 0x48, 0x12, 0xbf, 0xe1, 0x3a, 0xdb, 0xdc, 0x87, 0x65, 0x52, 0xc9, 0x5d, 0x4d, 0xfc,
	0x79, 0x67, 0x3b, 0xb6, 0x7f, 0x70, 0x0f, 0xba, 0x90, 0x31, 0x84, 0x51, 0x5a, 0x35, 0x80, 0x5d,
	0x65, 0x18, 0x0b, 0xeb, 0x06, 0x3a, 0x96, 0xfa, 0xfa, 0x30, 0x2f, 0x93, 0xb8, 0xe1, 0x7a, 0x31,
	0xa5, 0xa9, 0x46, 0x9e, 0xe0, 0x09, 0xf1, 0x45, 0x9d, 0x7d, 0x30, 0xcf, 0xf0, 0xd6, 0x1c, 0x3a,
	0xdc, 0x74, 0x7c, 0xdf, 0x50, 0x52, 0xcd, 0x54, 0xd2, 0x24, 0x01, 0xeb, 0x85, 0xd8, 0x6f, 0x83,
	0x8b, 0x33, 0x88, 0x94, 0xc9, 0x7a, 0xa0, 0x72, 0xe4, 0x07, 0xef, 0xb6, 0xcd, 0x1c, 0xb5, 0xaa,
	0xd9, 0x2d, 0x4b, 0x8a, 0xae, 0xef, 0xf1, 0xc8, 0x51, 0x79, 0x5c, 0xae, 0xf2, 0x5a, 0xd7, 0xf7,
	0x49, 0xde, 0xec, 0xd5, 0xe7, 0xae, 0xbd, 0xf4, 0xea, 0xf3, 0xaf, 0x0c, 0xa0, 0xf6, 0x4a, 0x41,
	0xed, 0x5f, 0xa7, 0x24, 0x8b, 0x56, 0x1f, 0x2b, 0xea, 0xdb, 0x85, 0x28, 0x0a, 0x07, 0xd2, 0xfb,
	0x82, 0xfa, 0xad, 0xe7, 0xd1, 0x08, 0x86, 0x7a, 0x32, 0x06, 0x7b, 0x7a, 0x4b, 0xea, 0x0c, 0x68,
	0x7b, 0xa0, 0x72, 0xe6, 0xaa, 0x00, 0x49, 0xc2, 0xba, 0x38, 0x3f, 0x68, 0xb3, 0xd7, 0x15, 0xe0,
	0x3c, 0xe5, 0xaa, 0xa8, 0x71, 0x6f, 0x29, 0x9d, 0x79, 0x2b, 0x53, 0xe8, 0x1c, 0x57, 0x6b, 0x0c,
	0xb6, 0xf5, 0x3f, 0x40, 0x45, 0x8b, 0xa2, 0x26, 0xea, 0x57, 0x32, 0x80, 0xca, 0x9e, 0x57, 0x34,
	0x33, 0x55, 0xe5, 0xd4, 0xa0, 0x26, 0x1d, 0x34, 0x37, 0x55, 0xd8, 0xd8, 0xef, 0xa8, 0x4d, 0xa1,
	0xca, 0xee, 0x01, 0x34, 0xa5, 0x9f, 0x1d, 0x16, 0x98, 0xea, 0x9e, 0xa5, 0x5a, 0xc5, 0x92, 0x2c,
	0x29, 0x68, 0xfe, 0xe8, 0x20, 0x8c, 0xd7, 0xd9, 0x2f, 0x46, 0x44, 0x44, 0x7d, 0x6b, 0x7e, 0xd8,
	0xdc, 0x7c, 0x38, 0xdb, 0x08, 0xce, 0x7d, 0xd2, 0xc5, 0x18, 0x2e, 0x09, 0xa2, 0xca, 0x6e, 0xb0,
	0x1b, 0x95, 0x7e, 0x9a, 0xca, 0xac, 0xe4, 0x95, 0x3c, 0xeb, 0x0f, 0xc0, 0xfa, 0x30, 0x5c, 0x5f,
	0x8f, 0x71, 0xc2, 0xad, 0x0f, 0xe9, 0x2f, 0x08, 0x42, 0xe0, 0xb5, 0xbd, 0x84, 0x3b, 0x5e, 0xc2,
	0x0f, 0x3b, 0x02, 0xc7, 0x37, 0xd1, 0x82, 0x18, 0x3b, 0x51, 0x73, 0xa3, 0x44, 0xed, 0x7b, 0x51,
	0xe5, 0x6d, 0x76, 0xc1, 0xa8, 0xbc, 0x9d, 0x53, 0x67, 0x0c, 0xd2, 0x5e, 0x51, 0x67, 0x84, 0xe3,
	0xd0, 0xdf, 0x7a, 0xd8, 0x66, 0xdd, 0x7f, 0xb5, 0x9a, 0xa1, 0x1a, 0xab, 0x61, 0x87, 0x4c, 0x45,
	0x5c, 0x8a, 0xa9, 0xdc, 0xdf, 0x0c, 0xa3, 0x08, 0xc7, 0x9d, 0x30, 0x70, 0x71, 0x20, 0x14, 0xad,
	0x5a, 0xaa, 0x75, 0x04, 0x8d, 0xae, 0x85, 0x49, 0xdc, 0xe8, 0xb4, 0x99, 0xbc, 0x73, 0x84, 0xfc,
	0x5c, 0x6e, 0x93, 0x8b, 0x20, 0x64, 0x78, 0x01, 0xb8, 0x2b, 0x50, 0x05, 0x2b, 0x22, 0x49, 0x8b,
	0x90, 0x42, 0x00, 0x4c, 0x5f, 0xee, 0xf8, 0x3e, 0xd7, 0xab, 0x52, 0x15, 0xfa, 0x1c, 0x49, 0xb1,
	0xce, 0xa2, 0x7d, 0xeb, 0x61, 0x74, 0xcf, 0x89, 0x5c, 0xa6, 0xc9, 0xa5, 0xda, 0xd4, 0xbd, 0x2c,
	0x51, 0x68, 0x72, 0x39, 0x88, 0x6a, 0x72, 0xc7, 0x14, 0x10, 0xd5, 0xe4, 0x1e, 0x46, 0x23, 0x4c,
	0x7b, 0x3b, 0x4e, 0xdb, 0xc8, 0x54, 0xb6, 0x53, 0x68, 0x4c, 0xa8, 0x6a, 0x11, 0xd3, 0x23, 0x73,
	0x1d, 0x6d, 0xba, 0xda, 0x26, 0xcc, 0xab, 0x6d, 0xaf, 0x34, 0xf3, 0x82, 0xc8, 0xee, 0x93, 0x88,
	0xec, 0x6f, 0x52, 0x8e, 0x4e, 0x5e, 0x0e, 0x62, 0x6a, 0xea, 0x0e, 0xe1, 0x9b, 0x4a, 0x71, 0x74,
	0x63, 0x4d, 0x27, 0xc1, 0xad, 0x30, 0xca, 0x9a, 0xbf, 0xb3, 0x3a, 0xe6, 0x58, 0x7e, 0x5d, 0x20,
	0xc5, 0x55, 0x61, 0xb8, 0xf8, 0xaa, 0xc0, 0xec, 0x60, 0xd5, 0x96, 0xaf, 0x38, 0x5b, 0x65, 0xb6,
	0xaf, 0xbd, 0x0c, 0x17, 0x7f, 0xe5, 0xc4, 0x2c, 0x59, 0xe2, 0x77, 0xa9, 0xd4, 0x3b, 0x09, 0x5b,
	0x2d, 0x1f, 0x0f, 0x60, 0xed, 0x3f, 0x89, 0x46, 0xe5, 0xeb, 0x7b, 0xd6, 0xcb, 0x86, 0xe5, 0xda,
	0xdf, 0xbf, 0x47, 0x1d, 0x27, 0xc7, 0x75, 0xd9, 0xc1, 0x55, 0xa2, 0xf6, 0xf7, 0xa3, 0x63, 0x8e,
	0xeb, 0x36, 0xe8, 0xde, 0xe8, 0xd0, 0x1b, 0x65, 0x03, 0x73, 0x85, 0x29, 0xdb, 0x86, 0x47, 0x1d,
	0xd7, 0x85, 0x53, 0x8a, 0x5d, 0x39, 0x85, 0x42, 0x95, 0x91, 0xe7, 0xe1, 0x42, 0xd6, 0xaa, 0x44,
	0x30, 0x0a, 0xb2, 0xfe, 0xa1, 0x69, 0x2c, 0x1c, 0x0e, 0xfd, 0x61, 0x6f, 0xab, 0x9c, 0x17, 0x35,
	0xbe, 0x2a, 0x3f, 0x16, 0xfd, 0xf0, 0xa9, 0xff, 0x3c, 0x7b, 0xd6, 0x2c, 0x85, 0x64, 0xc5, 0x97,
	0x39, 0x6b, 0x4e, 0x22, 0xb4, 0xe6, 0x34, 0x37, 0x09, 0x9d, 0x10, 0x8a, 0x65, 0x29, 0xc5, 0x7a,
	0x01, 0x8d, 0xb7, 0x70, 0xd8, 0xe8, 0x84, 0x5e, 0x90, 0xb0, 0xc1, 0xd6, 0x64, 0xc5, 0xd7, 0x71,
	0xb8, 0x4c, 0x72, 0xeb, 0x63, 0x2d, 0xf6, 0x9f, 0xf5, 0x1d, 0x68, 0x6f, 0x8c, 0xfd, 0xf5, 0x06,
	0x0b, 0x6a, 0xc0, 0x6e, 0x1f, 0xc5, 0xf6, 0x1d, 0xe4, 0x83, 0x05, 0x8a, 0xb7, 0xff, 0x94, 0x9a,
	0x05, 0xaa, 0xec, 0xc3, 0xb5, 0x28, 0x6c, 0xd7, 0x71, 0xc7, 0xf7, 0x4a, 0x31, 0x2c, 0xe7, 0xd1,
	0x7e, 0xca, 0xfc, 0x88, 0xd0, 0x0a, 0xb4, 0xcf, 0xfb, 0x68, 0x2a, 0x8b, 0xab, 0x20, 0xc1, 0x36,
	0xbc, 0x38, 0x09, 0x59, 0x4c, 0x19, 0x01, 0x7b, 0x8d, 0x26, 0x12, 0xd2, 0x4e, 0x25, 0x1c, 0x8d,
	0xb8, 0xe3, 0xb4, 0x39, 0xed, 0xa7, 0x49, 0x2b, 0x1d, 0xa7, 0x2d, 0x05, 0xb7, 0x1a, 0xa1, 0x54,
	0x14, 0xc2, 0x4b, 0x31, 0xef, 0x63, 0xfd, 0xfc, 0x2c, 0x6b, 0xe3, 0x25, 0x56, 0x6c, 0x55, 0x5e,
	0xb1, 0xbf, 0x47, 0x65, 0xc7, 0xac, 0xbb, 0xb0, 0x6c, 0x78, 0x94, 0xa0, 0x12, 0x75, 0xbd, 0x8e,
	0x0e, 0x79, 0x6e, 0x43, 0x92, 0xdd, 0xdf, 0x58, 0x58, 0x59, 0x99, 0xb9, 0xbe, 0x60, 0x66, 0x86,
	0x79, 0xd4, 0xa0, 0x49, 0xcf, 0xcd, 0x7e, 0x42, 0x06, 0x5b, 0x2a, 0x6b, 0xf5, 0x85, 0x69, 0xb8,
	0x08, 0xd5, 0xea, 0xfb, 0x52, 0xf4, 0xea, 0x0b, 0xd3, 0xf6, 0x1f, 0x51, 0x22, 0x24, 0x77, 0x64,
	0xde, 0x73, 0xfc, 0xb0, 0x55, 0x72, 0x3d, 0xe0, 0xfb, 0x4d, 0xbf, 0xeb, 0xe2, 0x46, 0xc7, 0x0b,
	0x02, 0x21, 0xc8, 0xdc, 0xc7, 0x52, 0x97, 0x21, 0xd1, 0x7a, 0x05, 0x8d, 0xaf, 0x87, 0xbe, 0x8b,
	0xa3, 0x54, 0xa6, 0x54, 0xb8, 0x9c, 0xc7, 0x28, 0x7a, 0xd1, 0x25, 0x4b, 0x84, 0x1e, 0xa8, 0x0d,
	0xd7, 0x49, 0x30, 0x0b, 0xf7, 0x81, 0x68, 0xd2, 0xbc, 0x93, 0x00, 0x11, 0x62, 0x00, 0xb1, 0x4a,
	0xc6, 0x68, 0xc2, 0x22, 0xd9, 0x7e, 0xfc, 0x6b, 0x38, 0xce, 0x46, 0x73, 0x8f, 0x33, 0x56, 0x22,
	0xf8, 0x23, 0x8a, 0x93, 0x7b, 0xcc, 0x74, 0x72, 0x8f, 0x4b, 0x27, 0xf7, 0xdf, 0xcc, 0x0e, 0x29,
	0x5f, 0xda, 0x0f, 0x5f, 0x4c, 0xa7, 0x74, 0x7c, 0x58, 0xeb, 0x78, 0xcf, 0x61, 0x3b, 0x81, 0x10,
	0x39, 0x3d, 0x18, 0xeb, 0x42, 0xc7, 0x6d, 0xdc, 0x71, 0xdd, 0x5b, 0x1a, 0xf7, 0x32, 0x2a, 0x8f,
	0x01, 0xd9, 0x8e, 0xce, 0x7d, 0x52, 0x1f, 0x1b, 0x9a, 0xb6, 0x73, 0x7f, 0xd1, 0x85, 0x64, 0x2f,
	0x20, 0xc9, 0xe3, 0x2c, 0xd9, 0x0b, 0x16, 0x5d, 0x31, 0x62, 0x48, 0x1a, 0xb1, 0x7f, 0x5e, 0x05,
	0x76, 0x5b, 0x8c, 0x58, 0x69, 0x76, 0xbb, 0xdf, 0xd1, 0x02, 0xb6, 0x7c, 0x98, 0xb3, 0xe5, 0x4f,
	0xa3, 0xd1, 0xf5, 0x28, 0x6c, 0x73, 0xcd, 0x83, 0xf9, 0xc3, 0x11, 0x02, 0x59, 0x74, 0xad, 0x57,
	0x11, 0x4a, 0xc2, 0x4e, 0x43, 0x22, 0x44, 0xbd, 0x56, 0x6f, 0x12, 0x76, 0x6e, 0x40, 0x14, 0xbe,
	0x2b, 0x68, 0x64, 0xdd, 0xf3, 0x13, 0xb1, 0xf4, 0x8e, 0xe8, 0x81, 0xc0, 0xe2, 0x6b, 0x90, 0x5d,
	0x67, 0x30, 0xeb, 0x09, 0x34, 0x46, 0x86, 0x12, 0x26, 0x8d, 0x8e, 0xf1, 0x68, 0xdb, 0x0b, 0x60,
	0xc6, 0x48, 0x96, 0x73, 0x9f, 0x66, 0x8d, 0xb3, 0x2c, 0xe7, 0x7e, 0x76, 0x0f, 0x20, 0x6d, 0x29,
	0xa8, 0x33, 0x3d, 0x91, 0x3b, 0xd3, 0x7b, 0xcd, 0x33, 0xbd, 0xcf, 0x3c, 0xd3, 0xfb, 0x4d, 0x33,
	0x7d, 0x40, 0x9a, 0xe9, 0x2f, 0x6a, 0x74, 0x33, 0xc2, 0x8e, 0xbb, 0x7b, 0x9b, 0x23, 0x6d, 0xff,
	0xb0, 0xd4, 0x7e, 0xfb, 0x3f, 0xa3, 0xb1, 0x1d, 0x44, 0xa3, 0xd4, 0xe3, 0xa8, 0x54, 0x28, 0x83,
	0xb7, 0xba, 0x71, 0xd2, 0x68, 0xfa, 0xd8, 0x89, 0x18, 0x09, 0x1c, 0x27, 0x29, 0x73, 0x24, 0x81,
	0xfa, 0x72, 0x6e, 0x85, 0x9b, 0x98, 0xdf, 0x7d, 0xe8, 0x2f, 0xd1, 0x9b, 0x5a, 0xdf, 0xbd, 0x19,
	0x91, 0x67, 0xe3, 0xaa, 0xb4, 0x58, 0x46, 0x7b, 0x2f, 0x4b, 0xb1, 0x92, 0xae, 0x4a, 0x2b, 0x69,
	0xac, 0x9f, 0xef, 0xe8, 0x32, 0xb3, 0xbf, 0x13, 0xf8, 0x68, 0x6d, 0xf0, 0x06, 0x70, 0x18, 0xa6,
	0xc3, 0x53, 0x55, 0x86, 0x67, 0x3f, 0x63, 0x51, 0xc9, 0x61, 0x46, 0x38, 0xb8, 0x10, 0xd8, 0x1a,
	0x69, 0x45, 0x35, 0xb1, 0xb7, 0x25, 0x82, 0x39, 0xc5, 0x25, 0x83, 0x68, 0xd2, 0x01, 0xae, 0xca,
	0xcb, 0xe5, 0x5f, 0x50, 0x57, 0x64, 0x89, 0x5a, 0x25, 0xab, 0xdb, 0x9d, 0x72, 0x17, 0xb2, 0x7e,
	0x57, 0xb0, 0x4a, 0x75, 0x86, 0x77, 0x42, 0x75, 0xa6, 0xd1, 0x88, 0x03, 0xa1, 0x35, 0x33, 0x36,
	0x68, 0x2b, 0x38, 0xe0, 0xc3, 0x35, 0x03, 0x88, 0x3a, 0x43, 0xda, 0xff, 0x72, 0x58, 0xdd, 0xae,
	0x71, 0x8a, 0x2c, 0xb7, 0x2f, 0x82, 0xb0, 0x71, 0x0f, 0xaf, 0x75, 0x52, 0x56, 0x71, 0x3c, 0x08,
	0xef, 0xd2, 0x04, 0x08, 0x49, 0x42, 0xad, 0x43, 0xd9, 0xbe, 0xa0, 0xbf, 0x34, 0xae, 0xba, 0x96,
	0xe1, 0xaa, 0x4f, 0xa1, 0x09, 0xd8, 0x69, 0x0d, 0x37, 0x72, 0xd6, 0x13, 0x2e, 0x12, 0x80, 0xa4,
	0x79, 0x92, 0x42, 0x0a, 0x08, 0x42, 0x76, 0xb5, 0xe7, 0xf2, 0x00, 0x29, 0x45, 0x4c, 0xc2, 0x58,
	0x8f, 0x49, 0x98, 0x45, 0x07, 0x22, 0xdc, 0xf1, 0xb7, 0x1b, 0x49, 0xc8, 0x67, 0xa2, 0x0f, 0x63,
	0xeb, 0xbd, 0xf0, 0xcd, 0x6a, 0x48, 0x67, 0x43, 0xd2, 0x77, 0x21, 0x45, 0xdf, 0x45, 0xc8, 0x76,
	0xe4, 0x04, 0x2e, 0x3d, 0x87, 0x26, 0x80, 0x76, 0x8e, 0xd1, 0x84, 0x45, 0xd7, 0x7a, 0x19, 0xd1,
	0x62, 0x1a, 0x6d, 0x27, 0xda, 0xec, 0x76, 0x80, 0x3c, 0x4f, 0x4c, 0x4f, 0xca, 0xba, 0x35, 0x7f,
	0xfb, 0x06, 0xe4, 0xd5, 0x27, 0xa2, 0xf4, 0x87, 0x35, 0x8d, 0xc6, 0x70, 0x90, 0x78, 0x89, 0x87,
	0xe3, 0xa3, 0xfb, 0x80, 0x9b, 0x3c, 0xac, 0x9f, 0x3a, 0x0b, 0x24, 0x7f, 0xbb, 0x2e, 0x70, 0xd6,
	0x5f, 0x42, 0xfb, 0xe2, 0xe6, 0x06, 0x76, 0xbb, 0x3e, 0xa6, 0x64, 0x61, 0x7f, 0x1f, 0xbd, 0xe4,
	0x5f, 0x00, 0x4d, 0x79, 0x1a, 0x8d, 0x92, 0x25, 0xd3, 0x70, 0x62, 0x38, 0x05, 0x72, 0x4e, 0x54,
	0x02, 0x99, 0x89, 0xed, 0x7f, 0x33, 0xac, 0xef, 0x2b, 0xb2, 0xd8, 0x5c, 0xcf, 0x29, 0x47, 0x44,
	0x24, 0x4b, 0xe3, 0xbc, 0xb5, 0x34, 0xdc, 0x6b, 0x2d, 0xd5, 0x7a, 0xac, 0xa5, 0x91, 0xdc, 0xb5,
	0x34, 0xba, 0xf3, 0xb5, 0x34, 0xb6, 0xd3, 0xb5, 0x74, 0x09, 0xd5, 0xda, 0x64, 0x9c, 0xd8, 0x2a,
	0x7c, 0x5c, 0xbf, 0x26, 0xb8, 0x9e, 0x53, 0xa7, 0x88, 0x7f, 0xbf, 0xec, 0xb2, 0xcb, 0xee, 0x2b,
	0xc3, 0x20, 0x77, 0x15, 0xcb, 0x8e, 0x4d, 0xe1, 0x60, 0x4e, 0xb0, 0x07, 0x5a, 0x7c, 0x36, 0xda,
	0x77, 0xcf, 0x4b, 0x36, 0x1a, 0xed, 0xed, 0x46, 0xdc, 0x0c, 0x23, 0x2e, 0xfe, 0x9c, 0x20, 0x89,
	0x37, 0xb6, 0x57, 0x48, 0x12, 0x58, 0xca, 0x44, 0x61, 0xa7, 0x41, 0x55, 0xaf, 0x7c, 0x01, 0x92,
	0x24, 0xaa, 0x62, 0xb5, 0x2e, 0xa3, 0xc7, 0x01, 0x00, 0xf3, 0xde, 0x68, 0x3a, 0xd4, 0x60, 0x9e,
	0x51, 0xbd, 0xc7, 0x48, 0x16, 0x2c, 0x8c, 0x39, 0x96, 0xa1, 0x2d, 0xe8, 0xb1, 0xcc, 0x82, 0xbe,
	0x82, 0xc6, 0x81, 0x39, 0x86, 0x55, 0x3d, 0x9e, 0x3b, 0xaa, 0x63, 0x04, 0x04, 0x17, 0x26, 0x7a,
	0x4e, 0x23, 0x7e, 0x4e, 0xeb, 0x0b, 0xac, 0xaa, 0x2c, 0xb0, 0xa7, 0xd1, 0x68, 0x12, 0xd2, 0xb2,
	0xf7, 0xe6, 0xcf, 0x58, 0x12, 0x42, 0xc9, 0x99, 0x05, 0xb2, 0xaf, 0xc4, 0x02, 0xd9, 0xdf, 0x73,
	0x81, 0xbc, 0xa3, 0x5e, 0xe7, 0x24, 0x41, 0xc4, 0x43, 0x3f, 0xef, 0xed, 0xef, 0xa7, 0x76, 0x29,
	0xf2, 0x5d, 0x92, 0xe4, 0x72, 0xcd, 0xf9, 0xc2, 0xb5, 0xf9, 0x57, 0x67, 0xae, 0xce, 0x4c, 0xef,
	0x42, 0x4b, 0xfe, 0x51, 0x45, 0xbd, 0xa3, 0xd1, 0x61, 0xd8, 0x05, 0x96, 0x47, 0xe3, 0xf7, 0x06,
	0x67, 0x58, 0xf2, 0x09, 0x10, 0x29, 0xcb, 0x43, 0x4b, 0xe5, 0xfd, 0xe5, 0xe3, 0xa7, 0x56, 0x69,
	0xfc, 0x54, 0xdb, 0xcf, 0x08, 0x89, 0xae, 0x75, 0x7d, 0x9f, 0xd4, 0x52, 0x2e, 0xba, 0x7a, 0x73,
	0xc3, 0x91, 0xbc, 0x49, 0x47, 0xc8, 0xcf, 0x45, 0xd7, 0xfe, 0xbe, 0x8a, 0x7a, 0x8d, 0xc1, 0xae,
	0x47, 0x0d, 0x4f, 0xc0, 0x3c, 0x75, 0xf0, 0x15, 0x9a, 0x2d, 0xa2, 0xed, 0x2f, 0xe7, 0x34, 0xa3,
	0xac, 0xa1, 0x52, 0x6e, 0x33, 0x9e, 0x05, 0x09, 0x5d, 0x12, 0x32, 0x76, 0xf8, 0x88, 0x1e, 0x05,
	0x80, 0x55, 0x5d, 0xa7, 0x28, 0xfb, 0x6f, 0x69, 0x57, 0x50, 0xc7, 0x05, 0x3d, 0xcf, 0xed, 0xb8,
	0x94, 0x47, 0x45, 0x6e, 0xeb, 0x9e, 0x46, 0xa3, 0xdd, 0x58, 0x16, 0x71, 0x99, 0x24, 0xd1, 0x23,
	0x04, 0xb2, 0x08, 0x34, 0x72, 0xfd, 0x9e, 0xdb, 0xa0, 0x57, 0x6f, 0x2a, 0x9e, 0x19, 0x5b, 0xbf,
	0xe7, 0x2e, 0x81, 0x7e, 0xf0, 0xbf, 0xa8, 0x98, 0x6e, 0x5a, 0x03, 0x68, 0xfb, 0x79, 0xb4, 0x9f,
	0xde, 0xad, 0x84, 0x5c, 0x96, 0x89, 0xeb, 0x68, 0x2a, 0xbf, 0x08, 0x4b, 0x5d, 0x1c, 0xce, 0xeb,
	0x62, 0xad, 0x57, 0x17, 0xed, 0x2f, 0x56, 0x54, 0x72, 0x4a, 0x0d, 0xf6, 0x4b, 0xee, 0x89, 0x8b,
	0xa8, 0x46, 0x95, 0x7c, 0xf9, 0x0a, 0x7b, 0x0a, 0xc8, 0x59, 0xb3, 0x5f, 0xcc, 0x8a, 0x73, 0xe7,
	0x37, 0x20, 0xce, 0x47, 0xab, 0x9c, 0xd3, 0x23, 0x7f, 0x23, 0x80, 0x5e, 0x20, 0xf9, 0x4f, 0xeb,
	0x2c, 0xda, 0xc7, 0xce, 0x42, 0x1f, 0x07, 0xad, 0x64, 0x83, 0xc9, 0x23, 0xf6, 0xd2, 0xc4, 0x25,
	0x48, 0xb3, 0xbf, 0x41, 0x4d, 0x68, 0x24, 0x8a, 0x0b, 0x46, 0x45, 0xcc, 0x27, 0xbb, 0x9c, 0x07,
	0x9e, 0x34, 0x65, 0xd5, 0x7e, 0x56, 0x65, 0x7a, 0x72, 0x33, 0x99, 0xa2, 0x38, 0xb9, 0x0f, 0xa0,
	0x6a, 0xab, 0xe1, 0xc0, 0xc4, 0xef, 0xad, 0xef, 0x69, 0xcd, 0x90, 0x65, 0xaa, 0x5c, 0xc8, 0xa9,
	0x36, 0x67, 0x20, 0xad, 0xbe, 0xa2, 0x1c, 0x19, 0x9a, 0x85, 0xba, 0xf0, 0x55, 0x27, 0x6b, 0x89,
	0x9d, 0x1d, 0xd0, 0xb8, 0x35, 0x16, 0xbe, 0x7a, 0x4f, 0x6b, 0xd6, 0x7a, 0x12, 0x1d, 0xd8, 0xc4,
	0xdb, 0x8d, 0x75, 0x2f, 0x68, 0xe1, 0xa8, 0x13, 0x79, 0xcc, 0x6b, 0xa3, 0x5a, 0xdf, 0xbf, 0x89,
	0xb7, 0xaf, 0xa5, 0xa9, 0xf6, 0x97, 0xb4, 0xc1, 0x77, 0xbd, 0xb8, 0xe9, 0x44, 0xee, 0x40, 0xba,
	0x91, 0xd5, 0x83, 0x54, 0x4d, 0x7a, 0x10, 0x6d, 0xbf, 0xd5, 0x04, 0xa1, 0xff, 0x75, 0xaa, 0x1a,
	0x96, 0x05, 0x10, 0xa2, 0xf3, 0xa5, 0x25, 0x11, 0x3b, 0x1e, 0xe3, 0xf3, 0x68, 0x24, 0x81, 0x4a,
	0x73, 0xac, 0xed, 0x69, 0xa6, 0xfd, 0xd7, 0x2b, 0x60, 0x14, 0xa9, 0x48, 0xfe, 0x44, 0x71, 0xe5,
	0x65, 0x6d, 0x3b, 0x6e, 0xb6, 0x2c, 0x38, 0x1d, 0x56, 0x04, 0xa7, 0x84, 0xd5, 0x79, 0x42, 0xbf,
	0x88, 0x8a, 0x22, 0x1e, 0xc2, 0x7d, 0xe0, 0x8a, 0xa2, 0x57, 0xef, 0xa3, 0xed, 0xca, 0x86, 0xac,
	0x69, 0x77, 0x35, 0x70, 0x40, 0x48, 0x1c, 0x16, 0xdd, 0x1c, 0xfe, 0xb7, 0xbf, 0x6f, 0x8f, 0xba,
	0x9a, 0x95, 0x1e, 0x5d, 0x2b, 0x17, 0x56, 0xf3, 0x91, 0xf5, 0x8a, 0xd4, 0x00, 0x6e, 0x68, 0xa3,
	0x85, 0x35, 0xa4, 0xfe, 0x68, 0xf6, 0x37, 0xb5, 0x35, 0xa8, 0x0c, 0xc3, 0x0a, 0x7d, 0x30, 0x68,
	0x37, 0xd7, 0x60, 0x86, 0xb0, 0x9a, 0x7a, 0x5c, 0x93, 0xe6, 0x31, 0x50, 0x17, 0x26, 0x97, 0x75,
	0xbe, 0xd9, 0xc5, 0xdd, 0x92, 0x1c, 0x1e, 0xd9, 0x0b, 0x6f, 0x27, 0xdc, 0xa2, 0x77, 0xa4, 0xed,
	0xdc, 0x7f, 0x33, 0x89, 0xed, 0xcf, 0xd3, 0xf8, 0x2d, 0x1a, 0xd3, 0x9f, 0x0e, 0x59, 0xb9, 0x4b,
	0xd0, 0x4e, 0xc7, 0xcb, 0xde, 0xd4, 0x5b, 0xe3, 0xf0, 0x6b, 0x3a, 0xf3, 0x7f, 0x18, 0x0c, 0xf3,
	0x4e, 0xe5, 0xca, 0xdf, 0x9b, 0xe5, 0x09, 0x56, 0x12, 0xaf, 0xb9, 0x59, 0xce, 0x3a, 0x64, 0x0a,
	0x8d, 0xe1, 0x76, 0x98, 0x78, 0x4d, 0x11, 0xc2, 0x51, 0xfc, 0x36, 0xba, 0x9c, 0xbc, 0xa5, 0xf2,
	0x7c, 0x2c, 0xc8, 0x52, 0xf9, 0x76, 0x98, 0xec, 0x3a, 0x7f, 0x41, 0x3b, 0xf3, 0x68, 0xfc, 0xab,
	0x65, 0xa7, 0x85, 0x97, 0x23, 0xbc, 0xe5, 0xe1, 0x7b, 0xe5, 0x78, 0x21, 0xd9, 0x36, 0x40, 0x12,
	0x3c, 0xc9, 0x22, 0xa2, 0xe1, 0xfe, 0x44, 0x44, 0xf6, 0x0f, 0x55, 0x55, 0x1e, 0x83, 0x06, 0x60,
	0x27, 0x2b, 0x65, 0x31, 0xd8, 0xf2, 0x92, 0x32, 0x7b, 0xe1, 0x2a, 0x3a, 0xe2, 0xe3, 0x96, 0xd3,
	0xdc, 0x6e, 0x30, 0x9e, 0xb8, 0x83, 0xa3, 0xb6, 0x13, 0xa4, 0xf4, 0xed, 0x10, 0xcd, 0xae, 0x43,
	0xee, 0x32, 0xcf, 0xa4, 0x4c, 0x34, 0x30, 0x68, 0x8d, 0x00, 0x63, 0x17, 0x73, 0xc1, 0xce, 0x3e,
	0x96, 0x7a, 0x13, 0x12, 0xfb, 0x56, 0xee, 0xbc, 0x0f, 0x4d, 0x50, 0x43, 0x0f, 0x7a, 0x42, 0xf5,
	0xa1, 0x5f, 0x64, 0xef, 0x5f, 0x80, 0x7c, 0xe3, 0x7d, 0x68, 0xa2, 0x0b, 0xb1, 0x44, 0x52, 0x75,
	0x6d, 0xaf, 0xaf, 0x01, 0x0f, 0x17, 0x8d, 0xd4, 0xfb, 0x71, 0xac, 0x6f, 0xef, 0x47, 0x7b, 0x53,
	0x15, 0xa2, 0x41, 0x10, 0xdc, 0x81, 0xcc, 0x87, 0x21, 0x44, 0x9e, 0xed, 0xab, 0xb3, 0xcf, 0xec,
	0x8f, 0x1f, 0x56, 0x6d, 0x3f, 0xab, 0xb1, 0x03, 0x29, 0x21, 0x58, 0x29, 0xe3, 0x25, 0x62, 0xbd,
	0x82, 0x50, 0xcc, 0x36, 0x32, 0x4e, 0xcc, 0x51, 0x68, 0xd3, 0x7a, 0xea, 0x12, 0x56, 0x21, 0x14,
	0x35, 0xd6, 0xca, 0x6f, 0x6a, 0x9b, 0x97, 0xb9, 0x33, 0x3e, 0xe2, 0x96, 0x5e, 0x42, 0x63, 0x4e,
	0xd4, 0xdc, 0x20, 0x87, 0x94, 0x99, 0x3d, 0x14, 0xd9, 0xf6, 0x8f, 0x6a, 0x67, 0x4d, 0x37, 0x78,
	0x57, 0x74, 0xc1, 0xfe, 0x1f, 0x2b, 0xaa, 0x9c, 0x28, 0x4e, 0x1c, 0x78, 0x10, 0xa6, 0x44, 0x63,
	0xce, 0xa1, 0xea, 0x5a, 0x98, 0x14, 0xdc, 0xbc, 0x48, 0x76, 0xbf, 0xe6, 0x96, 0xc5, 0x7c, 0xd3,
	0x29, 0x34, 0x01, 0x0d, 0x6e, 0xc0, 0xcb, 0x6e, 0xfc, 0xad, 0x3a, 0x48, 0x5a, 0x26, 0x29, 0xf6,
	0x6f, 0x6b, 0xd7, 0x35, 0xc9, 0x92, 0xe9, 0x8e, 0x87, 0xef, 0xc5, 0x8f, 0x40, 0xc2, 0xf7, 0x34,
	0x1a, 0xf7, 0x82, 0x66, 0x84, 0x25, 0xa7, 0x7a, 0x6d, 0xd5, 0xa4, 0xf9, 0xf6, 0xef, 0xe6, 0x88,
	0x9b, 0x66, 0xdc, 0xb6, 0x17, 0x3c, 0x72, 0x81, 0xce, 0x45, 0x34, 0xe6, 0xc5, 0x0d, 0x87, 0xb4,
	0xc5, 0xdc, 0x93, 0x51, 0x2f, 0x86, 0x96, 0xea, 0xb2, 0xc2, 0xb6, 0xd7, 0x8a, 0xca, 0xcb, 0x45,
	0x72, 0x65, 0x85, 0x9f, 0xaf, 0x82, 0xb1, 0x9c, 0x66, 0x71, 0x43, 0xfd, 0x10, 0x4b, 0xed, 0x32,
	0xc9, 0xa2, 0xab, 0xba, 0x13, 0x8b, 0x2e, 0xd5, 0x12, 0x27, 0xb5, 0x90, 0xa9, 0xed, 0xdc, 0x42,
	0x66, 0x24, 0xdf, 0x42, 0x66, 0x54, 0xb5, 0x90, 0x49, 0xed, 0xa1, 0xa2, 0xd4, 0xb4, 0x86, 0xd9,
	0x43, 0xd5, 0x09, 0x40, 0xb3, 0x14, 0x1b, 0xef, 0xcb, 0x52, 0xac, 0xd0, 0xee, 0x46, 0x18, 0xd6,
	0x4c, 0xc8, 0xa6, 0xff, 0x9f, 0xd5, 0x6e, 0xf4, 0x11, 0x0e, 0x23, 0x17, 0x47, 0x29, 0x45, 0x2a,
	0xf9, 0xca, 0x61, 0xdb, 0x89, 0x37, 0xb9, 0x0d, 0x3e, 0xfd, 0x41, 0x52, 0xa1, 0x0e, 0xd8, 0x77,
	0xd5, 0x3a, 0xfd, 0x61, 0xff, 0x5c, 0x96, 0x05, 0xe4, 0x61, 0x0b, 0x66, 0xb7, 0x21, 0x50, 0x5d,
	0xb9, 0x8b, 0xe2, 0x86, 0x33, 0xfd, 0xd2, 0x55, 0xf6, 0x90, 0x0b, 0xfb, 0x05, 0x61, 0x10, 0xbd,
	0x77, 0xf0, 0x34, 0x37, 0xca, 0x81, 0x1f, 0x6a, 0xd0, 0x8f, 0x9a, 0x16, 0xf4, 0x63, 0x43, 0x5d,
	0xbd, 0xdc, 0x1a, 0xfc, 0xba, 0xb7, 0x3e, 0x68, 0x9e, 0xf8, 0x2b, 0xd4, 0x4d, 0x3e, 0xdd, 0x28,
	0xce, 0x16, 0xbe, 0xee, 0xad, 0x97, 0xa2, 0x8a, 0xa9, 0x55, 0x72, 0x5e, 0x84, 0x08, 0x42, 0x05,
	0xfb, 0x8c, 0x62, 0xf0, 0xf9, 0x3d, 0xea, 0xb1, 0xd9, 0xc2, 0x09, 0x75, 0x91, 0x98, 0x0d, 0x93,
	0x3a, 0x8e, 0xbb, 0x7e, 0xa9, 0xb5, 0x33, 0xd8, 0x93, 0x4a, 0xb1, 0x7b, 0xae, 0xf5, 0x69, 0xf7,
	0x2c, 0x1e, 0xa0, 0xa4, 0x67, 0x17, 0xfd, 0x21, 0x39, 0x58, 0x50, 0x4b, 0x72, 0xf6, 0xcb, 0xfe,
	0xb7, 0xda, 0x70, 0xc4, 0x03, 0x1d, 0x8e, 0xa3, 0x68, 0xb4, 0xe5, 0xf8, 0x3e, 0x16, 0x22, 0x3b,
	0xfe, 0x93, 0xe4, 0x80, 0xb5, 0x7d, 0xc2, 0xad, 0xb9, 0xf8, 0x4f, 0x42, 0x7f, 0xa0, 0xc9, 0xe9,
	0xe9, 0x3c, 0x0a, 0xbf, 0x41, 0xad, 0x3e, 0x1a, 0xd1, 0x36, 0xb1, 0x50, 0x2f, 0x27, 0xd4, 0xd1,
	0x98, 0x0d, 0x59, 0xe3, 0x69, 0xcb, 0xeb, 0x1c, 0x6d, 0x9d, 0x40, 0xa8, 0xe9, 0x34, 0x37, 0x70,
	0x23, 0xf1, 0xda, 0x9c, 0xaa, 0x8d, 0x43, 0xca, 0xaa, 0xd7, 0xc6, 0xd6, 0xfb, 0xd1, 0x44, 0x80,
	0xef, 0x27, 0xdc, 0xba, 0xaf, 0x1f, 0x36, 0x1e, 0x91, 0x0f, 0x98, 0xf1, 0xdf, 0xcb, 0x68, 0x3c,
	0xbe, 0xe7, 0x25, 0xcd, 0x8d, 0x46, 0xa7, 0xcd, 0x68, 0xde, 0x94, 0xd4, 0x30, 0x36, 0x9a, 0x2b,
	0x00, 0x59, 0xbe, 0x51, 0x1f, 0xa3, 0xe0, 0xe5, 0xb6, 0xfd, 0xaf, 0xab, 0xfa, 0xe0, 0x07, 0xae,
	0x36, 0xfa, 0xef, 0x46, 0x5b, 0x8e, 0x27, 0xd0, 0xd8, 0x86, 0xe7, 0xe2, 0xc6, 0x96, 0xe7, 0x30,
	0x45, 0xfa, 0x28, 0xf9, 0x7d, 0xc7, 0x73, 0x76, 0xd5, 0x8c, 0x43, 0xe1, 0xe3, 0xc6, 0x35, 0x3e,
	0x4e, 0x5e, 0x45, 0x48, 0x5d, 0x45, 0x94, 0x7d, 0x9a, 0x80, 0x6d, 0x40, 0x08, 0x47, 0x46, 0x3d,
	0xbe, 0xb7, 0x84, 0x7a, 0x7c, 0x5f, 0x4f, 0xf5, 0xf8, 0x17, 0xb5, 0xb3, 0x2b, 0x65, 0x20, 0x17,
	0x5c, 0x2f, 0x99, 0x77, 0x12, 0x67, 0x17, 0x59, 0xc8, 0x0a, 0x13, 0xde, 0xfc, 0x56, 0x55, 0x65,
	0xa7, 0x08, 0x57, 0xf8, 0xd0, 0x0d, 0xd7, 0xfa, 0x25, 0x83, 0xb4, 0xb1, 0x35, 0xde, 0x58, 0xeb,
	0xaa, 0xaa, 0xa2, 0xee, 0xb5, 0x55, 0x85, 0xe4, 0x44, 0xd8, 0xfd, 0x8c, 0xf6, 0xb4, 0xfb, 0xd1,
	0x0d, 0x78, 0xc6, 0x1e, 0xc4, 0x80, 0x67, 0xfc, 0x41, 0x0d, 0x78, 0xd0, 0x0e, 0x17, 0xa0, 0xfd,
	0xef, 0xf6, 0xa8, 0x82, 0x5a, 0x32, 0x7d, 0x82, 0x90, 0x3c, 0xf4, 0x79, 0x7c, 0x4e, 0x72, 0x82,
	0x3a, 0x9d, 0x43, 0x91, 0x59, 0x23, 0x16, 0xe7, 0xf5, 0x19, 0xac, 0x3d, 0xd0, 0x0c, 0x8e, 0xec,
	0x78, 0x06, 0x47, 0x1f, 0x64, 0x06, 0xc7, 0xfa, 0x94, 0xaf, 0xfd, 0xbf, 0x9a, 0xa0, 0xbc, 0x85,
	0x49, 0xcf, 0xe7, 0x1c, 0xdf, 0x27, 0x74, 0x75, 0x26, 0x88, 0xef, 0x95, 0x52, 0x38, 0x5b, 0x68,
	0xb8, 0xc5, 0x9d, 0x51, 0xc7, 0xea, 0xf0, 0x7f, 0xdf, 0x9b, 0x27, 0x75, 0xfe, 0xa9, 0x49, 0xce,
	0x3f, 0x46, 0xfd, 0x80, 0xfc, 0x42, 0xc0, 0xe8, 0x0e, 0x9f, 0xb7, 0xf8, 0x91, 0x3d, 0xba, 0xaa,
	0x60, 0xa0, 0x23, 0x30, 0x89, 0x6a, 0x8e, 0x8f, 0x23, 0x7e, 0x94, 0xd1, 0x1f, 0x0a, 0x91, 0x1f,
	0x56, 0x89, 0xfc, 0x83, 0xae, 0xb0, 0xcb, 0xa8, 0xda, 0x8d, 0xfc, 0xbe, 0xe8, 0x0a, 0x01, 0xf6,
	0xe0, 0x2c, 0xc8, 0x45, 0x65, 0xca, 0x60, 0x8f, 0x54, 0xde, 0x65, 0xe8, 0x32, 0xaa, 0x91, 0xe9,
	0xcd, 0x46, 0x96, 0xa7, 0x8c, 0x31, 0x94, 0x0f, 0xab, 0x80, 0xc2, 0xec, 0x5f, 0xda, 0xa3, 0x19,
	0x8b, 0x3a, 0x5b, 0x98, 0x9e, 0xe6, 0x0f, 0x8d, 0x2c, 0x18, 0xce, 0xf8, 0xe1, 0x9d, 0x9e, 0xf1,
	0xfd, 0x8a, 0x7f, 0x73, 0xad, 0x96, 0x94, 0xed, 0x3c, 0xda, 0xe7, 0x76, 0x5e, 0xcd, 0x5c, 0x97,
	0x66, 0x7c, 0x1f, 0x46, 0xab, 0x4c, 0xbc, 0x89, 0x30, 0x73, 0xf1, 0xb8, 0x86, 0x9d, 0xa4, 0x1b,
	0x61, 0xf7, 0x21, 0xe9, 0x27, 0xfc, 0xac, 0x06, 0x79, 0x80, 0x35, 0xea, 0xc6, 0x5b, 0x3f, 0x90,
	0xbd, 0x0a, 0xd7, 0x71, 0x13, 0x07, 0x03, 0xd2, 0x02, 0x39, 0x49, 0x42, 0x76, 0x15, 0x77, 0x8d,
	0x13, 0xbf, 0x8d, 0x5a, 0xa0, 0xff, 0x52, 0x6b, 0x0b, 0x59, 0xed, 0x4a, 0x63, 0x1e, 0x52, 0x5b,
	0x2e, 0x48, 0x27, 0x61, 0x7f, 0x77, 0xd5, 0x5a, 0xd1, 0x5d, 0xf5, 0x9e, 0xba, 0x62, 0x80, 0x05,
	0xdf, 0x8d, 0x31, 0xb5, 0x7f, 0xae, 0x92, 0x59, 0xab, 0x33, 0x4c, 0xee, 0x3c, 0x80, 0x9a, 0xcd,
	0x02, 0x96, 0x8c, 0x27, 0x5e, 0xd5, 0x24, 0x06, 0xaa, 0xc9, 0x62, 0x20, 0x4d, 0x89, 0x42, 0x38,
	0x69, 0x27, 0xde, 0x7c, 0x48, 0xbb, 0xe9, 0x87, 0x0c, 0x63, 0xc2, 0xc6, 0x6b, 0x00, 0x35, 0x4e,
	0x73, 0xce, 0x86, 0xbf, 0xb3, 0x69, 0x12, 0xb5, 0x63, 0x57, 0x66, 0x71, 0xec, 0xcf, 0xed, 0xd1,
	0x85, 0x92, 0xc9, 0x75, 0xa7, 0x8d, 0xa9, 0xc1, 0x73, 0xa9, 0x57, 0x1a, 0x08, 0xff, 0xa8, 0xf9,
	0x26, 0x4f, 0xc8, 0x57, 0x82, 0x49, 0x54, 0x5b, 0x0f, 0xa3, 0x26, 0xbf, 0xbb, 0xd3, 0x1f, 0x7d,
	0x13, 0x6b, 0x4a, 0x39, 0x46, 0x04, 0x3f, 0x2f, 0x49, 0x88, 0x47, 0x7b, 0x4a, 0x88, 0xe9, 0x23,
	0x20, 0x11, 0x97, 0x3e, 0xd2, 0x1f, 0x64, 0x28, 0x4e, 0x1a, 0xc5, 0x18, 0x8f, 0x74, 0x40, 0x9e,
	0x13, 0x17, 0x97, 0x7e, 0x19, 0x63, 0x69, 0x28, 0x46, 0xfa, 0x1f, 0x8a, 0x51, 0x79, 0x28, 0xbe,
	0x99, 0xa5, 0xc3, 0x64, 0x10, 0x5e, 0xf3, 0x5a, 0x1b, 0x30, 0x10, 0xf1, 0xee, 0x5f, 0x2f, 0x77,
	0x66, 0xf1, 0xf8, 0xcd, 0xac, 0x0d, 0x77, 0x3a, 0x97, 0x03, 0xe9, 0xc6, 0x73, 0x92, 0x48, 0x71,
	0xc7, 0xf3, 0xd2, 0x53, 0x89, 0x61, 0x7f, 0x3d, 0xcb, 0xf4, 0xcd, 0x85, 0xed, 0x76, 0x18, 0x94,
	0xb5, 0x97, 0xde, 0x91, 0x15, 0xa2, 0xea, 0xbc, 0x59, 0xe5, 0xee, 0x8e, 0x66, 0x4a, 0x1a, 0x65,
	0x6c, 0x37, 0x66, 0xa8, 0xe1, 0x75, 0x5c, 0x8e, 0x3f, 0x94, 0x5e, 0x5a, 0xaf, 0xea, 0x2f, 0xad,
	0xdf, 0xcf, 0xb8, 0x7d, 0x33, 0xeb, 0x89, 0x72, 0xf1, 0xc1, 0x09, 0xfb, 0x4e, 0xd5, 0xd1, 0xc0,
	0xa0, 0x9b, 0x74, 0xbf, 0x5f, 0xae, 0xa8, 0x07, 0x07, 0x8d, 0x65, 0xc2, 0x98, 0xe6, 0x52, 0x5a,
	0xb0, 0xc3, 0x68, 0x44, 0xf1, 0xe0, 0x67, 0xbf, 0x8a, 0x1f, 0x46, 0x90, 0xb8, 0x75, 0x6a, 0xb7,
	0xf3, 0x3b, 0x19, 0xdb, 0x3f, 0xd0, 0x36, 0xd0, 0x30, 0x00, 0xe5, 0xef, 0x0e, 0x82, 0x58, 0x55,
	0x65, 0x62, 0x75, 0x4c, 0x8f, 0x2e, 0x50, 0x93, 0xd4, 0x4d, 0x97, 0xb9, 0xf6, 0xa3, 0xd6, 0xeb,
	0xba, 0x41, 0xf5, 0x22, 0xdd, 0x8c, 0x92, 0x74, 0x50, 0x8d, 0x3f, 0xa6, 0xab, 0xcc, 0xa4, 0x66,
	0xda, 0xdf, 0xa6, 0x8f, 0x2c, 0x6a, 0xb7, 0xd0, 0x95, 0x0d, 0xaf, 0xd3, 0xf1, 0x82, 0x56, 0x79,
	0x79, 0xb6, 0x7c, 0xe1, 0xac, 0xaa, 0x17, 0xce, 0x69, 0x54, 0x83, 0xb8, 0x78, 0x7d, 0x3d, 0x76,
	0x4d, 0xa1, 0xd6, 0x2c, 0x3a, 0x18, 0xb3, 0xb6, 0x35, 0x42, 0xe6, 0x70, 0x54, 0xd3, 0xa2, 0xbc,
	0xf2, 0xc6, 0xdf, 0x82, 0xfc, 0xfa, 0x81, 0x58, 0xf9, 0x1d, 0xdb, 0x7f, 0x50, 0x41, 0xe7, 0xb2,
	0x5d, 0x5e, 0x8e, 0x30, 0x98, 0x94, 0x84, 0xdd, 0xc1, 0x48, 0xf1, 0xcd, 0x8f, 0xd1, 0x14, 0x5d,
	0xc0, 0xc5, 0x78, 0xd4, 0xfa, 0x1e, 0x0f, 0xfb, 0x6b, 0x9a, 0x09, 0x19, 0x8d, 0xbe, 0x5f, 0xd6,
	0xa7, 0xb1, 0xdf, 0x43, 0x4b, 0x08, 0x97, 0x86, 0x7b, 0x09, 0x97, 0xec, 0xff, 0xaa, 0x02, 0xb1,
	0x3a, 0x15, 0xc1, 0xfd, 0x4a, 0x33, 0xc2, 0x38, 0x88, 0x37, 0xc2, 0x64, 0x40, 0xaf, 0xbe, 0xf4,
	0xdb, 0xee, 0xf3, 0xe6, 0x7b, 0x76, 0xad, 0x48, 0x5c, 0xae, 0x99, 0x3d, 0xe8, 0x16, 0x42, 0xe4,
	0x6e, 0xea, 0x6c, 0x3d, 0xb4, 0x8b, 0xe9, 0x57, 0xb5, 0x79, 0x5e, 0x77, 0xb6, 0x70, 0xf9, 0x8b,
	0xd9, 0x8e, 0x14, 0x85, 0xeb, 0x45, 0x8a, 0x42, 0x92, 0x69, 0x7f, 0xf7, 0x9e, 0x0c, 0x1f, 0x75,
	0x3b, 0xa0, 0x26, 0x94, 0x41, 0xd9, 0xc7, 0x74, 0x06, 0x12, 0x9d, 0x44, 0x0d, 0x49, 0x51, 0xcb,
	0x0d, 0x49, 0x31, 0x62, 0x0e, 0x49, 0x31, 0x6a, 0x0e, 0x49, 0x31, 0x26, 0x85, 0xa4, 0xb0, 0x3f,
	0xa9, 0x5e, 0x30, 0x76, 0xb7, 0xf7, 0xf6, 0xdf, 0xc8, 0x6a, 0x4a, 0xe8, 0xed, 0x17, 0x22, 0x4e,
	0xed, 0xd2, 0x14, 0x18, 0x63, 0x0f, 0x8a, 0x55, 0x5d, 0x93, 0x56, 0xf5, 0x3f, 0xab, 0xaa, 0x6c,
	0x1f, 0xf8, 0x63, 0x77, 0xfd, 0xc4, 0xfb, 0xf7, 0x4e, 0xd9, 0x7d, 0x48, 0xfa, 0xde, 0x83, 0x26,
	0xda, 0x64, 0xb0, 0x1a, 0xdc, 0x35, 0xdb, 0xf0, 0x6c, 0xfc, 0x8a, 0x17, 0xb4, 0x7c, 0x4c, 0x29,
	0x31, 0x6a, 0xa7, 0x43, 0x5b, 0x5a, 0x81, 0x22, 0x6b, 0xf0, 0x26, 0x7a, 0x6a, 0xf0, 0x7e, 0x5b,
	0xb7, 0xbc, 0x83, 0x63, 0x6a, 0x50, 0xfe, 0x01, 0x3b, 0xb6, 0x8a, 0xe7, 0x66, 0xfd, 0xc3, 0xfd,
	0x9a, 0xf5, 0x7f, 0x4d, 0x97, 0x8e, 0x81, 0x31, 0xd3, 0x60, 0x8c, 0x67, 0x2e, 0xa1, 0x83, 0x3c,
	0x94, 0xd5, 0x3a, 0x93, 0x35, 0xb2, 0x55, 0x7b, 0x80, 0xa5, 0x73, 0x11, 0xa4, 0x66, 0xc2, 0x64,
	0xda, 0x51, 0x77, 0x32, 0xf7, 0xa8, 0x95, 0x8e, 0xef, 0x25, 0x75, 0x27, 0x28, 0xe5, 0x68, 0x6e,
	0x7f, 0x45, 0xb3, 0xe1, 0x6b, 0x3b, 0xd1, 0x26, 0xe5, 0x4c, 0x29, 0x85, 0x2f, 0xb7, 0x57, 0xbb,
	0x50, 0x06, 0xdf, 0xab, 0xf4, 0xd7, 0x0e, 0x2f, 0x00, 0x1f, 0xcd, 0xa8, 0x93, 0xe4, 0xe6, 0xdd,
	0x70, 0xa2, 0xcd, 0x32, 0xdd, 0xd7, 0x86, 0x15, 0x08, 0xc2, 0x20, 0x04, 0xdc, 0xff, 0x38, 0xb3,
	0x2f, 0xe0, 0x8d, 0x73, 0x60, 0xfc, 0xcb, 0x2b, 0x21, 0xf3, 0xa8, 0xe0, 0x24, 0xaa, 0x75, 0x83,
	0x8e, 0x17, 0x70, 0xd1, 0x0b, 0xfc, 0x80, 0xf7, 0x41, 0xdb, 0x8d, 0x30, 0xc0, 0xb1, 0xe7, 0xf2,
	0x80, 0x00, 0xe3, 0x9d, 0xf6, 0x2d, 0x9a, 0x20, 0x28, 0xdb, 0x48, 0x5f, 0x82, 0x8c, 0x51, 0xa1,
	0x27, 0xff, 0x45, 0xdd, 0xb8, 0x15, 0x07, 0xee, 0x9d, 0x30, 0xc1, 0xbb, 0x14, 0x8c, 0x49, 0xe6,
	0xee, 0x98, 0x22, 0xef, 0x28, 0x1a, 0x95, 0xaf, 0x0e, 0x7b, 0xeb, 0xfc, 0xa7, 0xfd, 0xa3, 0x06,
	0xdd, 0x53, 0xe8, 0xfb, 0xe5, 0xef, 0x03, 0xe5, 0x5a, 0xac, 0xc7, 0x07, 0x68, 0xe1, 0xe4, 0x16,
	0x48, 0x5c, 0x76, 0x83, 0xa5, 0xf8, 0xe1, 0x3c, 0xeb, 0xd7, 0xb5, 0xb0, 0x9b, 0xec, 0x0e, 0x37,
	0xe1, 0x90, 0xaa, 0xb8, 0x3b, 0x2d, 0xfc, 0xb0, 0xff, 0x90, 0xbe, 0x22, 0x99, 0x69, 0xd5, 0x3c,
	0x5e, 0x77, 0xba, 0x7e, 0x32, 0xeb, 0x90, 0x1d, 0x54, 0xf7, 0x5a, 0x1b, 0xbb, 0x32, 0x6d, 0xdf,
	0x81, 0xf6, 0xad, 0x41, 0x8d, 0x8d, 0x08, 0xaa, 0x64, 0x34, 0x2b, 0x3d, 0x8b, 0x49, 0xd3, 0xe4,
	0x36, 0xd5, 0xf7, 0xae, 0x49, 0xbf, 0x0c, 0x77, 0xff, 0x85, 0x76, 0xf8, 0x96, 0xf7, 0x06, 0xde,
	0xbe, 0x17, 0x12, 0xae, 0xa2, 0xd4, 0xdd, 0xdf, 0x77, 0x82, 0x56, 0x43, 0x7a, 0xa3, 0x74, 0x8c,
	0x24, 0xc0, 0x93, 0xbf, 0x5f, 0xd5, 0xee, 0x64, 0x7a, 0xbd, 0xf3, 0xde, 0xfa, 0x3a, 0x8e, 0x70,
	0x50, 0xca, 0x65, 0xad, 0xa8, 0x05, 0xd6, 0x19, 0xb4, 0x17, 0x42, 0x7e, 0x70, 0x27, 0x66, 0xba,
	0xea, 0x27, 0x48, 0xda, 0x1d, 0x9a, 0x64, 0x7f, 0xba, 0x82, 0xce, 0x17, 0x35, 0x72, 0xc9, 0x09,
	0x5a, 0xdd, 0x92, 0x61, 0x54, 0x4e, 0x20, 0x24, 0xda, 0xc8, 0x43, 0xa2, 0x8f, 0xf3, 0x46, 0xc6,
	0x76, 0x27, 0x23, 0xea, 0x83, 0x16, 0xdc, 0xae, 0x2f, 0x3d, 0xac, 0x99, 0xf9, 0x46, 0x56, 0x22,
	0xbd, 0x02, 0x2c, 0xc7, 0x5c, 0xd8, 0x0d, 0x92, 0xb2, 0x91, 0xb3, 0xfb, 0x5b, 0xd4, 0xcf, 0xa3,
	0x51, 0x6a, 0xfa, 0xcc, 0x9d, 0xa6, 0x72, 0x4d, 0xa4, 0x39, 0xce, 0xfe, 0xa9, 0x3d, 0x2a, 0xfd,
	0x64, 0x8e, 0x49, 0xb7, 0x23, 0x7f, 0xa6, 0x9b, 0xec, 0x46, 0xb4, 0xc5, 0x69, 0x85, 0x7e, 0xf6,
	0xe0, 0x67, 0xd9, 0x71, 0xf0, 0x0a, 0x1a, 0x5f, 0xeb, 0x26, 0x49, 0x18, 0xa4, 0xb2, 0xf6, 0x62,
	0x8b, 0x72, 0x8a, 0x06, 0x11, 0xdf, 0x8e, 0x2c, 0x1f, 0xec, 0xbf, 0xa3, 0x45, 0x01, 0xa4, 0x7e,
	0xeb, 0xe5, 0x47, 0xe7, 0x2c, 0xda, 0x77, 0x2f, 0xf2, 0x12, 0xdc, 0x70, 0x7c, 0x3f, 0xbc, 0x27,
	0xd8, 0xc7, 0xbd, 0x90, 0x38, 0x43, 0xd3, 0xfa, 0xb6, 0x7e, 0x99, 0x56, 0xac, 0x5f, 0x1e, 0x60,
	0x08, 0x47, 0x1e, 0x60, 0x08, 0x47, 0xfb, 0x1d, 0xc2, 0xef, 0xd5, 0x18, 0xa6, 0x0d, 0xcf, 0xc5,
	0x72, 0xb8, 0x9a, 0x59, 0x27, 0xda, 0x85, 0x33, 0xf1, 0xc7, 0xb2, 0x8a, 0xcd, 0x15, 0x76, 0x37,
	0xda, 0xc5, 0x58, 0x93, 0x26, 0x35, 0xfe, 0x8f, 0x64, 0xcd, 0xaa, 0x44, 0xcb, 0x06, 0x10, 0x6f,
	0xea, 0x01, 0xfd, 0x6d, 0x08, 0x63, 0x75, 0x26, 0x2b, 0xfd, 0x7b, 0xf4, 0xed, 0xfa, 0x31, 0x4d,
	0x71, 0x46, 0xc3, 0x23, 0xbc, 0x1b, 0x5a, 0xf6, 0xed, 0x4a, 0xc6, 0xa2, 0x86, 0xb0, 0xa2, 0x84,
	0x73, 0x7e, 0x14, 0xea, 0xc8, 0xc3, 0x68, 0x84, 0x32, 0xc9, 0xcc, 0x59, 0x9c, 0xfd, 0xb2, 0x5e,
	0x14, 0x46, 0xf2, 0xfd, 0x50, 0xc1, 0xcc, 0x1b, 0x05, 0x72, 0x94, 0x5f, 0xfb, 0x5f, 0x69, 0x87,
	0x1e, 0xd5, 0x31, 0x0d, 0xe6, 0x92, 0x7d, 0x1c, 0x8d, 0x0b, 0x6f, 0x3f, 0x6e, 0x77, 0x25, 0x12,
	0xc8, 0x8d, 0x80, 0x39, 0x09, 0x72, 0xd3, 0x7a, 0xf6, 0x93, 0x7e, 0xc7, 0xf3, 0x6a, 0xfc, 0x3b,
	0x9e, 0xfb, 0x1e, 0x34, 0x91, 0xba, 0xf1, 0x71, 0x0b, 0xfb, 0x7c, 0x9f, 0x3f, 0x19, 0x6c, 0x7f,
	0x30, 0xc3, 0xf3, 0xd1, 0x0b, 0x2b, 0x3d, 0x53, 0xcb, 0x5c, 0x2a, 0x9d, 0x0c, 0xc3, 0xb4, 0xd2,
	0x6d, 0xb5, 0x70, 0x9c, 0x70, 0x65, 0x52, 0xf9, 0x2a, 0xbe, 0xa4, 0xc9, 0x19, 0xe9, 0xbd, 0x55,
	0x2e, 0x7d, 0x00, 0x66, 0x52, 0x95, 0x34, 0x1c, 0x17, 0x73, 0xd5, 0x1a, 0xd6, 0xc2, 0x71, 0xc9,
	0x15, 0x72, 0x47, 0x2d, 0x7b, 0x4b, 0xd5, 0xee, 0x64, 0x9b, 0x16, 0xdf, 0x8a, 0xdc, 0xb2, 0xa6,
	0x95, 0x54, 0xb5, 0x47, 0x5d, 0xf9, 0x99, 0x02, 0xef, 0xaf, 0x55, 0xe0, 0xad, 0x68, 0xe5, 0x96,
	0xe6, 0x0f, 0xd2, 0x7c, 0x6c, 0x47, 0xef, 0xcb, 0x18, 0xa5, 0x43, 0xbf, 0x97, 0x8d, 0x1b, 0x5e,
	0x3e, 0x34, 0x7f, 0xc9, 0xdb, 0xb8, 0x22, 0xb0, 0xaf, 0x15, 0x87, 0x13, 0x1f, 0xe9, 0x11, 0x4e,
	0x7c, 0x34, 0x57, 0xa2, 0x3f, 0x66, 0x96, 0xe8, 0x8f, 0x9b, 0x25, 0xfa, 0xc8, 0x14, 0x64, 0x7a,
	0x42, 0x1a, 0xc8, 0x9f, 0xac, 0x18, 0xc4, 0x4d, 0x71, 0xb3, 0x1b, 0x93, 0x2b, 0x4b, 0x79, 0xc1,
	0x4d, 0x49, 0x71, 0xc1, 0x7f, 0x52, 0xd1, 0xd9, 0x70, 0xc7, 0x4d, 0x9b, 0xf7, 0xe8, 0xa6, 0xfa,
	0x24, 0x9a, 0x20, 0x4d, 0x69, 0xb0, 0xc1, 0x67, 0xfa, 0x17, 0x2a, 0x9f, 0xbb, 0xbf, 0x08, 0xaf,
	0x32, 0x1d, 0x57, 0xfd, 0xb3, 0x3b, 0x5e, 0x30, 0xe3, 0xfb, 0xbb, 0x77, 0x0c, 0xdb, 0x9b, 0xea,
	0x06, 0x49, 0x03, 0xa0, 0x3d, 0x0c, 0x17, 0xd9, 0x2d, 0x95, 0x60, 0xd0, 0xca, 0x96, 0xf9, 0x03,
	0x43, 0xe5, 0x19, 0xc9, 0x9c, 0xf8, 0xd6, 0xf6, 0x5f, 0x56, 0x89, 0x37, 0xa8, 0xbd, 0x59, 0x6d,
	0x8b, 0xed, 0x92, 0x31, 0x17, 0x4f, 0xa1, 0x09, 0x1a, 0x2c, 0xa1, 0xb1, 0xc1, 0x45, 0xba, 0xe3,
	0x75, 0x44, 0x93, 0x5e, 0xc3, 0x8e, 0x6b, 0xff, 0xfd, 0x4c, 0x14, 0x01, 0x2f, 0x19, 0x54, 0xe5,
	0xfd, 0xae, 0xcf, 0x0b, 0x8a, 0xfc, 0x3f, 0xff, 0x75, 0xf9, 0x53, 0x68, 0x82, 0x05, 0x37, 0x25,
	0xd7, 0x6e, 0xfe, 0x9a, 0x01, 0x24, 0xc1, 0x45, 0xdc, 0xfe, 0x17, 0x46, 0xbd, 0x06, 0xed, 0x07,
	0xde, 0x35, 0x35, 0xfc, 0x31, 0x34, 0xce, 0xc6, 0x3c, 0xb5, 0x03, 0xa5, 0x09, 0x2c, 0xe0, 0x5f,
	0xee, 0xbb, 0xf7, 0xfd, 0x7b, 0x87, 0xd8, 0x3f, 0xad, 0x87, 0x04, 0x4b, 0x9c, 0x68, 0xd7, 0x27,
	0xae, 0xa8, 0xa7, 0xf6, 0xb7, 0xf6, 0x64, 0x0e, 0xe0, 0x85, 0xfb, 0x74, 0x26, 0xd2, 0xc8, 0x1d,
	0x25, 0xad, 0x3a, 0xe8, 0x0e, 0xe2, 0x37, 0x6c, 0xfe, 0xb3, 0xef, 0xcb, 0xf5, 0xb3, 0x68, 0x0c,
	0x3c, 0xf5, 0x8b, 0xcd, 0xfa, 0x46, 0x01, 0xb3, 0xe8, 0x5a, 0xef, 0xcb, 0x1e, 0x7f, 0xbd, 0x82,
	0xac, 0x48, 0x67, 0xe3, 0xfb, 0xc5, 0xd7, 0xbe, 0x17, 0x6c, 0xf6, 0x75, 0xc7, 0x66, 0x9f, 0x2f,
	0x79, 0xc1, 0xa6, 0xf9, 0xec, 0x24, 0x9c, 0xdf, 0x99, 0x9e, 0x83, 0xbc, 0x3b, 0x97, 0x5f, 0xe8,
	0x15, 0x95, 0x0a, 0xc3, 0xff, 0xf6, 0x4f, 0x54, 0xd5, 0x05, 0x80, 0x5d, 0x6f, 0xb0, 0x8d, 0x2b,
	0xbf, 0x00, 0x78, 0xb3, 0x6b, 0x69, 0xb3, 0x1f, 0x69, 0x20, 0x9e, 0x17, 0x33, 0x31, 0x85, 0xc6,
	0x4c, 0x16, 0x1e, 0x5a, 0x88, 0x21, 0x11, 0xbe, 0x67, 0xbc, 0xff, 0xf0, 0x3d, 0xbf, 0x53, 0x41,
	0xcf, 0x64, 0x4f, 0x3b, 0x1a, 0xe3, 0xc8, 0x1d, 0xec, 0x3e, 0xed, 0x77, 0x0d, 0xc9, 0xbb, 0x71,
	0xb8, 0xe7, 0x6e, 0xb4, 0x7f, 0x4a, 0xb3, 0x1b, 0xa3, 0x3d, 0x78, 0xd7, 0xac, 0xfe, 0xef, 0xcb,
	0xf2, 0xa4, 0x10, 0xf7, 0x23, 0xbe, 0xeb, 0x25, 0x1b, 0xbb, 0x36, 0xa8, 0xf6, 0xcf, 0x55, 0x33,
	0x54, 0x38, 0x1d, 0x1a, 0x76, 0x32, 0x46, 0x25, 0xaf, 0xf2, 0x6c, 0x35, 0x8a, 0x6d, 0x98, 0x26,
	0xf4, 0xbd, 0x11, 0x17, 0xd0, 0x01, 0x32, 0x6a, 0x8d, 0x6b, 0x4b, 0x33, 0xd7, 0x57, 0x56, 0xeb,
	0x8b, 0x37, 0xaf, 0xf7, 0x65, 0x76, 0xb7, 0x9f, 0x7c, 0x94, 0x7e, 0x63, 0x3d, 0x85, 0x2a, 0x6f,
	0xf7, 0x25, 0xfa, 0xa8, 0xbc, 0xad, 0x5f, 0x66, 0x46, 0x33, 0x97, 0x99, 0x34, 0x16, 0x48, 0x37,
	0xce, 0x7b, 0x24, 0x02, 0x96, 0x24, 0xfb, 0x08, 0x82, 0xf2, 0x0a, 0x32, 0x3d, 0x2e, 0x5f, 0x71,
	0x4e, 0xa1, 0x09, 0xe8, 0x1e, 0xeb, 0x1a, 0x8d, 0xc4, 0x8f, 0x48, 0x12, 0x4d, 0xb1, 0x7f, 0x34,
	0x13, 0x81, 0x92, 0x1f, 0xe6, 0xe5, 0x5e, 0xf2, 0xee, 0x77, 0x05, 0x1f, 0x46, 0x23, 0x1d, 0x1c,
	0x79, 0xa1, 0x88, 0x3c, 0x4a, 0x7f, 0xd9, 0x9f, 0xd5, 0x6e, 0xd1, 0x59, 0xe6, 0x14, 0x22, 0xa0,
	0x3c, 0xfc, 0x75, 0xfc, 0xe3, 0x95, 0x8c, 0xab, 0x88, 0x78, 0x63, 0x7d, 0x17, 0xc6, 0x47, 0x8e,
	0xe2, 0x37, 0xac, 0x46, 0xf1, 0xb3, 0x7f, 0x26, 0xab, 0xb7, 0xe3, 0x2f, 0xb5, 0x61, 0xc7, 0x5d,
	0x76, 0xa2, 0xc4, 0x6b, 0x7a, 0x1d, 0x27, 0x78, 0x94, 0x2a, 0xeb, 0xff, 0x53, 0x23, 0x96, 0x42,
	0x83, 0xc5, 0x94, 0xe9, 0x73, 0x8e, 0x8f, 0x03, 0x77, 0x37, 0xa4, 0xf5, 0x52, 0xa8, 0x9f, 0xe1,
	0xfe, 0x42, 0xfd, 0x94, 0x12, 0x49, 0xd8, 0x7f, 0x96, 0x55, 0x58, 0x2a, 0x3d, 0x5f, 0x0e, 0x63,
	0x6f, 0xb7, 0x4c, 0xf1, 0x06, 0xdb, 0x75, 0xa3, 0x7d, 0xa4, 0xfd, 0x0f, 0x0c, 0x2a, 0x19, 0xb2,
	0x53, 0x5e, 0x0f, 0xbd, 0x80, 0xbd, 0x52, 0x5f, 0xd2, 0xe7, 0xae, 0xd3, 0x89, 0xc2, 0x2d, 0xc9,
	0xe7, 0x8e, 0xfd, 0xee, 0x9b, 0xd6, 0xef, 0xc8, 0x97, 0xe6, 0xbf, 0xd1, 0x54, 0x02, 0xa4, 0x3b,
	0xcc, 0xb3, 0x43, 0xea, 0x51, 0xfc, 0x88, 0xbb, 0xf4, 0x9c, 0xc4, 0x47, 0xf6, 0x3a, 0x7a, 0x28,
	0x7b, 0xf0, 0x8b, 0x9a, 0x70, 0x85, 0x4a, 0xd7, 0x6f, 0x86, 0xd7, 0xb8, 0xe9, 0xe2, 0xc3, 0x5f,
	0x8d, 0xd2, 0xbb, 0xb5, 0xc3, 0x85, 0xef, 0xd6, 0xfe, 0xaa, 0xc1, 0x19, 0x95, 0x59, 0x76, 0xac,
	0x80, 0x41, 0xe1, 0x2e, 0x34, 0x56, 0xb2, 0x6f, 0x1c, 0xee, 0x69, 0xdf, 0xf8, 0x3f, 0x65, 0x0e,
	0x8b, 0xc0, 0xad, 0x63, 0xfa, 0xc4, 0x55, 0x39, 0xdf, 0x9c, 0x35, 0xaf, 0xc5, 0x16, 0x09, 0xf9,
	0xb7, 0x6c, 0x0c, 0x83, 0x57, 0xd0, 0x58, 0xc4, 0x9a, 0xd5, 0x17, 0xd7, 0x22, 0xd0, 0x26, 0xc5,
	0x22, 0x27, 0x21, 0xbc, 0xa3, 0x8f, 0x42, 0x4d, 0xf6, 0xe5, 0x3d, 0x19, 0xcf, 0xb7, 0xf4, 0x28,
	0xa4, 0xad, 0x5a, 0xf2, 0xe2, 0xe4, 0x11, 0x68, 0xcc, 0xe4, 0xa1, 0xae, 0xed, 0x64, 0xa8, 0x07,
	0xaa, 0x53, 0xfb, 0x4f, 0xb5, 0xc3, 0x88, 0x71, 0x31, 0x33, 0x5b, 0x8e, 0xe7, 0x93, 0xbd, 0xb6,
	0x9b, 0x73, 0x77, 0x05, 0x3d, 0xee, 0xf0, 0x7a, 0x1b, 0xbc, 0xb7, 0xd4, 0xb8, 0x64, 0xbc, 0x6e,
	0x39, 0x99, 0x26, 0xd9, 0x6f, 0x67, 0x44, 0x0d, 0x03, 0x6d, 0xb7, 0xec, 0x67, 0xc1, 0xfd, 0xdc,
	0xb6, 0x32, 0x4e, 0xb1, 0x8c, 0xee, 0x0c, 0x60, 0x37, 0x4f, 0x49, 0x2b, 0x82, 0x19, 0xfc, 0x88,
	0xed, 0xf5, 0x1b, 0x9a, 0x69, 0x48, 0x12, 0x39, 0x41, 0xec, 0x3b, 0x09, 0x5e, 0xc5, 0xf7, 0x93,
	0x77, 0xa9, 0xe1, 0xcc, 0x73, 0x68, 0x38, 0xc1, 0xf7, 0x93, 0xfe, 0xce, 0x20, 0x82, 0xb4, 0x5e,
	0x65, 0x2f, 0x3c, 0xf9, 0x4e, 0xd0, 0xea, 0x8f, 0xfe, 0x10, 0xf8, 0x92, 0x13, 0xb4, 0xac, 0x23,
	0xf0, 0x7c, 0x13, 0x7c, 0xc8, 0xc2, 0xb1, 0x25, 0x21, 0xc9, 0xb0, 0xbf, 0x67, 0x4f, 0xc6, 0xe5,
	0x81, 0xda, 0xfc, 0xee, 0xe6, 0xd2, 0x7e, 0xd4, 0x5e, 0x27, 0x9f, 0xd2, 0xa3, 0xb6, 0xef, 0x6a,
	0xf7, 0xed, 0xbf, 0xa1, 0x79, 0x87, 0x32, 0xf3, 0x78, 0x1c, 0x24, 0x65, 0x45, 0xe0, 0x60, 0xf1,
	0x5e, 0xcd, 0x06, 0xed, 0xec, 0x93, 0x9d, 0x35, 0xbb, 0xee, 0xde, 0x82, 0x80, 0x8b, 0x54, 0x31,
	0xcc, 0x82, 0x2d, 0x3b, 0x65, 0xc4, 0x36, 0xf6, 0x1f, 0xd3, 0xe3, 0x5f, 0x2a, 0x71, 0x20, 0xa6,
	0x93, 0x07, 0x51, 0xb5, 0x23, 0x02, 0xe6, 0x93, 0x7f, 0xad, 0x39, 0x74, 0xa0, 0x93, 0x10, 0xde,
	0x2d, 0x71, 0xfc, 0x46, 0xaa, 0xf4, 0xed, 0xb1, 0x5f, 0xf7, 0x75, 0x92, 0x78, 0x95, 0x7c, 0xb2,
	0xc4, 0x35, 0xc3, 0xd2, 0xe3, 0xcc, 0xf0, 0x3f, 0xa9, 0xea, 0xed, 0x24, 0x66, 0x4b, 0x90, 0xfc,
	0x4b, 0xf6, 0xd5, 0x29, 0xb5, 0x4f, 0x73, 0x1b, 0x4e, 0x10, 0x60, 0x7f, 0x20, 0x5d, 0x33, 0x3b,
	0xd4, 0x5e, 0x01, 0x4d, 0x19, 0xa9, 0x24, 0xa3, 0xea, 0xe7, 0x2f, 0x2d, 0x91, 0xcc, 0x3a, 0x47,
	0x59, 0x57, 0xb5, 0x28, 0xae, 0x27, 0x65, 0x8b, 0x5b, 0x82, 0xc8, 0x59, 0x17, 0x6c, 0x64, 0x47,
	0xd2, 0x91, 0x35, 0x1f, 0x9f, 0x9f, 0x02, 0x9e, 0x19, 0x5e, 0x75, 0x12, 0xc6, 0xf9, 0x51, 0xb8,
	0xee, 0xf9, 0xb8, 0xec, 0x5b, 0x53, 0x67, 0x25, 0xd7, 0x3b, 0x4d, 0xed, 0x42, 0xdf, 0x92, 0x22,
	0xdc, 0xcd, 0x9f, 0x57, 0xd4, 0xfa, 0xfd, 0xd0, 0x71, 0x07, 0x54, 0x3f, 0x57, 0x81, 0x55, 0x7b,
	0xa8, 0xc0, 0x2e, 0xa2, 0xda, 0x96, 0xe7, 0xe2, 0xb0, 0x40, 0x57, 0x46, 0x01, 0xd6, 0x2c, 0xda,
	0x0f, 0xff, 0x50, 0xcd, 0x50, 0x23, 0x89, 0x73, 0x0f, 0x86, 0xf9, 0xb0, 0xbb, 0xe6, 0x63, 0xe6,
	0x54, 0x04, 0xdf, 0xac, 0x90, 0x4f, 0x56, 0x63, 0xfb, 0x1e, 0xa8, 0x5f, 0x59, 0x7f, 0x85, 0x3e,
	0x34, 0x09, 0xe3, 0x01, 0x8c, 0x74, 0xb5, 0x68, 0xa4, 0x7f, 0x97, 0xfa, 0x57, 0xb2, 0x9a, 0x5b,
	0x54, 0xb6, 0x56, 0xba, 0xea, 0x1d, 0x45, 0x1f, 0x48, 0xcd, 0x3b, 0x86, 0x15, 0xf3, 0x8e, 0xf4,
	0x24, 0xa8, 0x19, 0xa3, 0x12, 0x28, 0x97, 0xf1, 0xaf, 0xd0, 0xb7, 0xaf, 0xe8, 0x52, 0x81, 0x7b,
	0x13, 0x99, 0xa2, 0x65, 0x27, 0x2a, 0xa9, 0xc0, 0x06, 0x15, 0x62, 0xaa, 0xc0, 0x26, 0x3f, 0x25,
	0xdd, 0x62, 0xc7, 0x89, 0x12, 0xe1, 0x00, 0xcf, 0xeb, 0x9b, 0x44, 0xb5, 0xb5, 0xed, 0x04, 0xc7,
	0xcc, 0x62, 0x8c, 0xfe, 0xb0, 0xff, 0x75, 0x05, 0x3d, 0x96, 0x36, 0xb0, 0x85, 0x93, 0x92, 0xbe,
	0x5f, 0x10, 0x15, 0x15, 0x37, 0xbd, 0x98, 0x93, 0x12, 0xfe, 0xd3, 0x3a, 0x8b, 0xf6, 0x35, 0xdd,
	0xa0, 0x11, 0x77, 0x3b, 0x54, 0x40, 0xcf, 0x4c, 0xbb, 0xf6, 0x36, 0xdd, 0x60, 0x85, 0xa7, 0x59,
	0x57, 0xd1, 0x98, 0xcf, 0x5c, 0x23, 0x33, 0x8f, 0x16, 0x8b, 0x15, 0xce, 0x9d, 0x27, 0xeb, 0x02,
	0x2b, 0x4d, 0xd6, 0x88, 0xd9, 0x16, 0x47, 0x21, 0x23, 0x7f, 0x48, 0x85, 0xad, 0xd2, 0xac, 0xcc,
	0x7a, 0xad, 0x47, 0x36, 0x31, 0x17, 0xd1, 0x41, 0xc8, 0xa4, 0xa7, 0x08, 0x81, 0xc4, 0xec, 0x2c,
	0xd8, 0x4f, 0xd2, 0xe1, 0xa4, 0x20, 0xc0, 0x38, 0x9d, 0xc2, 0x11, 0x79, 0x0a, 0xff, 0x36, 0xf5,
	0xe8, 0x49, 0xa7, 0xf0, 0x2e, 0x5e, 0x2b, 0x39, 0x8b, 0xaf, 0x4a, 0xd3, 0x40, 0x77, 0x8a, 0x16,
	0xa7, 0x96, 0x55, 0x51, 0x38, 0x13, 0xc3, 0xe6, 0x99, 0x50, 0x8e, 0xfe, 0x2f, 0xeb, 0x6d, 0x9f,
	0x73, 0x83, 0x92, 0x6d, 0x3f, 0x81, 0x10, 0x1b, 0xce, 0x4d, 0x1c, 0xb0, 0xc0, 0xd3, 0xe3, 0x74,
	0x20, 0x37, 0xf1, 0x4e, 0xdb, 0xf7, 0x25, 0x65, 0xa5, 0x44, 0x98, 0xfe, 0xf3, 0xd0, 0x1b, 0x79,
	0x16, 0x71, 0x0d, 0x1f, 0x43, 0xd0, 0xf7, 0xcc, 0xf6, 0xb2, 0x44, 0x00, 0xd9, 0x5f, 0xa0, 0x66,
	0x45, 0x99, 0xb1, 0x7b, 0xcd, 0x89, 0x37, 0xca, 0xba, 0x5f, 0x3c, 0xc0, 0x08, 0xda, 0x3f, 0x4b,
	0x69, 0xb6, 0x4a, 0x4a, 0x4a, 0x37, 0xe6, 0x6a, 0x66, 0x29, 0xee, 0x94, 0x22, 0xa8, 0xad, 0xbc,
	0x01, 0xf4, 0x6e, 0x03, 0xfb, 0x1d, 0x1a, 0xd5, 0xa6, 0xdc, 0x8b, 0x7f, 0xf6, 0x32, 0xac, 0x5f,
	0x5e, 0xdc, 0x4d, 0xec, 0x44, 0x38, 0x4e, 0xe6, 0x9b, 0x25, 0x4a, 0xdc, 0x50, 0x4a, 0x9c, 0xe9,
	0x74, 0x6e, 0x03, 0x9f, 0x53, 0xd2, 0xef, 0x30, 0xec, 0x72, 0xee, 0x6e, 0xbc, 0xce, 0x7e, 0xd9,
	0x6f, 0x42, 0x40, 0x45, 0x5e, 0x13, 0xd5, 0x08, 0x96, 0xbb, 0xdf, 0xda, 0x37, 0xe1, 0xc9, 0x58,
	0x5e, 0x24, 0xa3, 0xeb, 0x25, 0xca, 0xfb, 0x14, 0x2c, 0x29, 0x69, 0x30, 0x08, 0x1f, 0xd9, 0xc2,
	0x7e, 0xd8, 0x2a, 0xf5, 0x76, 0xe4, 0xc1, 0x4e, 0x84, 0xb7, 0x1a, 0x4e, 0xa7, 0xd3, 0x90, 0x9f,
	0x6b, 0x1c, 0xaf, 0xef, 0x27, 0xe9, 0x33, 0x9d, 0x0e, 0x77, 0x76, 0xfa, 0x79, 0x7a, 0x91, 0x82,
	0xfa, 0x69, 0x58, 0x12, 0x3a, 0x19, 0x31, 0xb9, 0xa1, 0x74, 0xcb, 0x45, 0x4b, 0x3b, 0xd4, 0xc1,
	0x81, 0xeb, 0x05, 0x2d, 0xc1, 0xd2, 0x53, 0xa3, 0x26, 0x7a, 0xbb, 0x78, 0x9c, 0x65, 0xb2, 0xea,
	0xc0, 0xba, 0x49, 0x0e, 0x11, 0x39, 0xac, 0x3e, 0x6c, 0xab, 0xae, 0xc2, 0x39, 0x37, 0x28, 0xbd,
	0xae, 0xdb, 0xca, 0xc0, 0xd3, 0xa0, 0x05, 0x37, 0xf0, 0xed, 0xc8, 0x2f, 0x6d, 0xb0, 0x43, 0x2e,
	0x2b, 0x11, 0x7f, 0x12, 0x8a, 0xfd, 0xb4, 0x3f, 0x02, 0x97, 0x1b, 0x5e, 0xdd, 0x2a, 0x8e, 0xda,
	0xf1, 0xad, 0x75, 0xf6, 0x3e, 0x5b, 0xd9, 0xf5, 0x6f, 0xff, 0x65, 0xe0, 0xda, 0xa1, 0x70, 0xea,
	0xe2, 0xa3, 0x96, 0x5f, 0x2a, 0xae, 0x5a, 0x7a, 0x6b, 0x78, 0x2c, 0x35, 0x83, 0x76, 0x12, 0xe7,
	0xf5, 0x95, 0x5b, 0x37, 0x81, 0x93, 0x6d, 0x29, 0x03, 0x39, 0x8f, 0x71, 0x67, 0xc9, 0x0b, 0x36,
	0x17, 0x83, 0xf5, 0xb0, 0x9c, 0xa8, 0xac, 0xe3, 0x24, 0xe2, 0xd1, 0x22, 0xf2, 0xbf, 0xb6, 0x06,
	0xc8, 0x56, 0x29, 0xbb, 0x06, 0xbe, 0x33, 0xdd, 0xcc, 0x84, 0x47, 0x9a, 0xe9, 0x74, 0x96, 0x4a,
	0xed, 0xbb, 0xcb, 0x68, 0x04, 0x6f, 0xe1, 0x20, 0xe1, 0x21, 0x5f, 0xb5, 0x10, 0x27, 0x33, 0x9d,
	0xce, 0x02, 0xc9, 0xae, 0x33, 0x94, 0xed, 0xc1, 0xd9, 0xcb, 0x7b, 0xb4, 0xec, 0xc4, 0x31, 0xbc,
	0xfa, 0x54, 0xf6, 0x91, 0x56, 0x93, 0x9c, 0xb1, 0x0e, 0x6c, 0xba, 0x46, 0xb7, 0xc0, 0x24, 0xef,
	0xc1, 0x87, 0xef, 0x93, 0x20, 0xd6, 0xe0, 0x65, 0x92, 0xbb, 0x45, 0xc9, 0x59, 0xdf, 0xc9, 0xf5,
	0x85, 0xf0, 0xb8, 0x62, 0x3d, 0x60, 0xd7, 0xdb, 0xed, 0xfa, 0xf3, 0x89, 0x95, 0x12, 0xcf, 0xb6,
	0xd6, 0x67, 0x3c, 0x5b, 0x75, 0x71, 0x2f, 0x47, 0x61, 0x3b, 0x2c, 0x17, 0x67, 0xde, 0xde, 0x4e,
	0x0f, 0x3f, 0x70, 0x5a, 0x2b, 0x5f, 0x64, 0xdf, 0xe2, 0x39, 0xf6, 0x5e, 0x36, 0xd4, 0xed, 0x7a,
	0x71, 0xdb, 0x8b, 0x63, 0xe6, 0x11, 0xb2, 0x3b, 0xe6, 0xe0, 0x27, 0x11, 0x8a, 0x45, 0x7d, 0x6c,
	0x76, 0xa4, 0x14, 0xfb, 0x33, 0x54, 0x7c, 0x96, 0xf2, 0x48, 0xdd, 0x20, 0x89, 0x3c, 0x5c, 0x56,
	0x73, 0x53, 0xe8, 0x79, 0x6c, 0x0a, 0x72, 0xf7, 0x93, 0x94, 0xa1, 0x64, 0xc2, 0x25, 0x2a, 0x46,
	0x1d, 0xc4, 0xbb, 0xb1, 0x42, 0xa8, 0x55, 0xed, 0x4b, 0xa8, 0xa5, 0x86, 0x21, 0xe4, 0xa2, 0x5f,
	0xfb, 0xc7, 0x28, 0xfb, 0x2d, 0x5a, 0x47, 0xc5, 0x23, 0x03, 0xb0, 0x8d, 0xdf, 0x71, 0x03, 0x75,
	0x25, 0xdc, 0xff, 0x41, 0x85, 0x0e, 0xd2, 0xb8, 0x11, 0x6a, 0x56, 0xfa, 0xe9, 0xce, 0x1d, 0xb6,
	0xea, 0x45, 0x34, 0xd1, 0x49, 0x4d, 0x5f, 0x0a, 0x34, 0xa4, 0x32, 0x4c, 0xbc, 0x94, 0x50, 0xcd,
	0xc6, 0xdd, 0xec, 0x19, 0x4e, 0xd4, 0xfe, 0x65, 0x6d, 0xc1, 0x48, 0x4a, 0xd1, 0xdd, 0xec, 0xf9,
	0x79, 0x31, 0x1f, 0x19, 0x2c, 0x57, 0x86, 0x92, 0x69, 0xfa, 0xec, 0x1e, 0x60, 0x2e, 0xe5, 0xd6,
	0x0e, 0xc8, 0x56, 0x68, 0xc7, 0x2d, 0x7e, 0x8f, 0x26, 0xc8, 0xb7, 0x75, 0xb9, 0xad, 0xdc, 0x30,
	0x4d, 0x76, 0x9b, 0x5e, 0xb4, 0x6a, 0xe6, 0x0b, 0xf5, 0x88, 0xc9, 0x0d, 0x6a, 0x54, 0xf2, 0xde,
	0xf9, 0x6d, 0x6d, 0x27, 0xa9, 0x03, 0xf1, 0xae, 0x5f, 0xb3, 0xf6, 0x3b, 0x99, 0x55, 0xc7, 0x0a,
	0x8e, 0x4b, 0x3d, 0x19, 0x9e, 0x8a, 0x49, 0x73, 0x9a, 0x4d, 0x16, 0xd1, 0xf7, 0x67, 0xc7, 0xee,
	0x5a, 0x17, 0xcc, 0x63, 0xa0, 0x43, 0xbb, 0x37, 0x76, 0xf6, 0x1f, 0x50, 0x95, 0xa9, 0x68, 0x89,
	0x78, 0xe6, 0xbf, 0x64, 0x43, 0x8e, 0xa3, 0xf1, 0xb5, 0x28, 0x74, 0xdc, 0xa6, 0x13, 0xf3, 0xc0,
	0x39, 0x69, 0x02, 0xc9, 0x6d, 0xe3, 0x96, 0xd3, 0x8a, 0xc2, 0x6e, 0x87, 0x49, 0x14, 0xd3, 0x04,
	0x90, 0x64, 0x84, 0x11, 0x7b, 0x2e, 0x94, 0xfb, 0x8b, 0xae, 0x87, 0x11, 0x73, 0x90, 0x98, 0xe4,
	0x76, 0xd3, 0xec, 0xa1, 0x29, 0xf8, 0x91, 0x46, 0x38, 0x19, 0x95, 0x22, 0x9c, 0xa8, 0x2f, 0x59,
	0x8d, 0xf5, 0xf9, 0x92, 0xd5, 0x55, 0x34, 0xea, 0xb8, 0x6e, 0x84, 0xe3, 0xb8, 0x2f, 0xd3, 0x6c,
	0x0e, 0xb6, 0x3f, 0x4d, 0xdf, 0x3a, 0x10, 0x63, 0x49, 0x18, 0xb8, 0xb2, 0xcf, 0x1b, 0xee, 0x78,
	0x33, 0xec, 0xe8, 0xd9, 0xc3, 0xf7, 0xa2, 0xbd, 0xd4, 0x76, 0x9b, 0x45, 0x5c, 0xa9, 0x69, 0x51,
	0xa2, 0xc4, 0x03, 0x8d, 0x2c, 0xe0, 0xca, 0x84, 0x93, 0xfe, 0x20, 0x44, 0x21, 0x72, 0x82, 0x4d,
	0x36, 0x0d, 0xf0, 0xbf, 0xfd, 0xe3, 0x95, 0xec, 0x10, 0xac, 0xc2, 0xfc, 0xec, 0xe2, 0x10, 0x88,
	0x05, 0x32, 0x2c, 0x2d, 0x10, 0xfb, 0xd7, 0x0c, 0x4d, 0x2b, 0xab, 0xff, 0xd9, 0x71, 0xd3, 0x9e,
	0x45, 0x35, 0xd0, 0x8e, 0x64, 0x54, 0xaf, 0x1c, 0xce, 0xb4, 0x29, 0x14, 0x65, 0x7f, 0xb5, 0xa2,
	0xed, 0xce, 0x0d, 0xdc, 0xdc, 0x24, 0x33, 0x18, 0x94, 0xba, 0xe4, 0xec, 0xbc, 0xdd, 0x53, 0x68,
	0xac, 0xcb, 0xaa, 0xe5, 0x86, 0xb4, 0xfc, 0xb7, 0xfd, 0xb3, 0x1a, 0x31, 0xa3, 0x92, 0x91, 0x77,
	0x5b, 0x2b, 0xbf, 0x4f, 0xe3, 0x32, 0xde, 0x0a, 0xbd, 0xe0, 0x11, 0xd0, 0x5b, 0xc6, 0xa5, 0x8b,
	0x66, 0xf8, 0xd8, 0xd9, 0xc2, 0x8f, 0xa0, 0x1d, 0xbf, 0x5e, 0x51, 0xd9, 0x18, 0x8f, 0xca, 0x11,
	0xc3, 0xdd, 0x6f, 0x8a, 0x75, 0x11, 0xd5, 0xc8, 0x2c, 0xf1, 0x00, 0x39, 0x26, 0x7a, 0x45, 0x01,
	0xf6, 0x67, 0xb5, 0xed, 0x20, 0x1c, 0x4b, 0x77, 0x7b, 0xf4, 0xfe, 0x01, 0x35, 0xad, 0x4c, 0x69,
	0x09, 0xb8, 0xaf, 0x30, 0x36, 0x11, 0xfc, 0xbe, 0xca, 0xbd, 0x5d, 0x48, 0x8e, 0xc1, 0xd4, 0x3d,
	0x8a, 0xfd, 0x24, 0x3c, 0x5b, 0xb2, 0x01, 0x31, 0xfe, 0xe8, 0x91, 0xc9, 0x7e, 0xc9, 0xcd, 0xaf,
	0xed, 0xe0, 0xea, 0x21, 0x1e, 0x42, 0x20, 0x8b, 0xe1, 0xb8, 0xdc, 0x1d, 0x16, 0x33, 0xc2, 0x6b,
	0x05, 0xe0, 0x76, 0xbf, 0xab, 0x4c, 0x6d, 0xdf, 0xe6, 0xad, 0x5f, 0xa5, 0xb6, 0xf1, 0x32, 0x0f,
	0x05, 0x47, 0x15, 0x76, 0x97, 0xbb, 0x6b, 0xbe, 0xd7, 0x1c, 0x00, 0x37, 0x77, 0x0a, 0x4d, 0xac,
	0x6d, 0x37, 0x14, 0x45, 0xc6, 0x58, 0x1d, 0xad, 0x6d, 0x73, 0xc5, 0x05, 0x44, 0x3a, 0x25, 0x24,
	0x59, 0xb2, 0x22, 0x19, 0xab, 0x23, 0x48, 0x02, 0x2b, 0x11, 0xfb, 0xff, 0xd6, 0x2e, 0x75, 0xe4,
	0xd0, 0xa1, 0x21, 0xcc, 0xde, 0xfd, 0x97, 0xba, 0x4c, 0x3c, 0xb6, 0xda, 0xce, 0xe2, 0xb1, 0xfd,
	0xc3, 0x3d, 0x19, 0x0e, 0x1b, 0x26, 0xa8, 0x9c, 0x38, 0x72, 0xc7, 0x9d, 0x57, 0xc3, 0x7d, 0x2e,
	0xa2, 0x7d, 0x54, 0x4e, 0xd9, 0x50, 0x4c, 0x5e, 0xce, 0xe9, 0x57, 0x27, 0xde, 0x52, 0x90, 0x6d,
	0xf2, 0xcb, 0xd3, 0x5e, 0x2c, 0xfd, 0xb2, 0x9e, 0x42, 0x23, 0xc0, 0x0e, 0xf1, 0x90, 0x25, 0x46,
	0x46, 0x8b, 0x22, 0x34, 0x43, 0xb4, 0xaa, 0xd9, 0x10, 0xad, 0xca, 0x83, 0x25, 0x18, 0xbd, 0x91,
	0xec, 0x6f, 0x6a, 0x27, 0x58, 0x8c, 0x07, 0xf1, 0x1c, 0xcf, 0x8e, 0xc7, 0x53, 0x7d, 0xa1, 0x7d,
	0x78, 0x07, 0x2f, 0xb4, 0xff, 0x14, 0xf5, 0x71, 0x50, 0x24, 0x43, 0x8c, 0x66, 0xce, 0x85, 0x41,
	0x82, 0x77, 0xf9, 0xfa, 0x9c, 0xb1, 0x82, 0x36, 0x9e, 0x2e, 0xef, 0x1e, 0xd1, 0xd5, 0x6f, 0x52,
	0xa7, 0x2e, 0x8d, 0x4a, 0x2f, 0x47, 0xbc, 0x89, 0xaf, 0x79, 0xae, 0x8b, 0x83, 0x77, 0x25, 0xad,
	0x0e, 0x33, 0x32, 0x93, 0x25, 0xbc, 0x3e, 0x88, 0xfb, 0x76, 0x4e, 0x34, 0x17, 0xfb, 0xe3, 0xea,
	0x50, 0xb5, 0x70, 0x72, 0x9d, 0x1c, 0xa2, 0xf1, 0xb5, 0x30, 0x1a, 0x44, 0x0c, 0x0f, 0xfb, 0xb7,
	0xa8, 0x1f, 0xbf, 0xbc, 0x17, 0xd3, 0x72, 0xa1, 0xaa, 0x12, 0x9d, 0x7a, 0x41, 0xbf, 0x3b, 0xe7,
	0xce, 0x84, 0x74, 0xa5, 0x7e, 0x1a, 0xd5, 0xd2, 0xeb, 0x74, 0xee, 0x07, 0x14, 0x63, 0xff, 0x99,
	0x46, 0x4a, 0x20, 0xf0, 0x27, 0xb9, 0xf9, 0x87, 0xd1, 0xbb, 0xf6, 0xae, 0x2a, 0xbf, 0x12, 0x59,
	0xdb, 0xe1, 0x2b, 0x91, 0x7f, 0xa2, 0x71, 0xdd, 0xa4, 0xbf, 0xe2, 0x10, 0xdf, 0xc5, 0x0e, 0x2b,
	0xe2, 0x88, 0xe1, 0x3e, 0xc5, 0x11, 0x47, 0x53, 0x71, 0x04, 0x75, 0x78, 0x17, 0x02, 0x87, 0x9f,
	0xd1, 0x6e, 0x5e, 0x8c, 0x6f, 0xf3, 0xc3, 0x7b, 0x37, 0x42, 0x77, 0x57, 0x6f, 0x5e, 0x47, 0xd1,
	0x68, 0x8c, 0x9b, 0x61, 0xe0, 0xc6, 0x8c, 0x66, 0xf1, 0x9f, 0x4c, 0x47, 0x2c, 0xef, 0xc4, 0xc5,
	0xc0, 0x69, 0x26, 0x9e, 0xb8, 0xf5, 0x94, 0x89, 0xa0, 0xf5, 0x57, 0xb4, 0x6d, 0xd8, 0x0c, 0x83,
	0x2d, 0x1c, 0x25, 0xab, 0xe1, 0x75, 0x8f, 0x0b, 0x93, 0x76, 0xf1, 0x56, 0xf0, 0x4b, 0xd4, 0xbb,
	0x47, 0xb4, 0x66, 0xcb, 0xc3, 0xf7, 0x56, 0x3a, 0x61, 0x10, 0x87, 0xd1, 0x20, 0x02, 0x51, 0xef,
	0x78, 0x52, 0x94, 0x97, 0x37, 0xa8, 0x2d, 0x52, 0xfa, 0xf2, 0xc6, 0x17, 0xb4, 0xc6, 0x42, 0x90,
	0x73, 0xb5, 0xad, 0xbb, 0x79, 0x1a, 0x33, 0xcd, 0x9e, 0xd2, 0x9c, 0x5d, 0x72, 0x52, 0xb3, 0x7f,
	0x5f, 0xbb, 0x49, 0x30, 0x93, 0xd9, 0x94, 0x15, 0x7e, 0x04, 0x3c, 0xc0, 0x83, 0xc9, 0xb4, 0x7f,
	0x9e, 0xb2, 0x30, 0x6b, 0x61, 0x42, 0xbd, 0xe7, 0xe6, 0xba, 0x71, 0x12, 0xb6, 0xcb, 0xfb, 0x8f,
	0x9e, 0x45, 0xfb, 0x9a, 0x50, 0x54, 0xa3, 0x8d, 0x93, 0x8d, 0x90, 0x47, 0x24, 0xda, 0x4b, 0x13,
	0x6f, 0x40, 0x9a, 0x75, 0x09, 0x8d, 0x74, 0x9c, 0xc8, 0x69, 0x73, 0x57, 0x3f, 0x83, 0x69, 0x05,
	0x03, 0x10, 0x4e, 0xf0, 0x24, 0x6f, 0xa7, 0x03, 0x6f, 0xf4, 0xde, 0xc5, 0x6b, 0x1b, 0x61, 0xb8,
	0x49, 0x50, 0x6f, 0x76, 0x71, 0xa9, 0xb1, 0x2e, 0x78, 0x2c, 0xe9, 0x3c, 0x7b, 0x7d, 0x38, 0xb7,
	0x81, 0x90, 0x6d, 0xff, 0x11, 0xbd, 0xb5, 0xb1, 0x61, 0x84, 0x07, 0x85, 0xc3, 0x76, 0xdb, 0x09,
	0xdc, 0x92, 0x2f, 0xe7, 0xc6, 0xcd, 0xb0, 0xc3, 0x8d, 0xc5, 0x8f, 0x4a, 0xac, 0x12, 0x2f, 0x7e,
	0x85, 0xe4, 0xd7, 0x29, 0x4c, 0x55, 0xbc, 0x0e, 0x6b, 0x8a, 0xd7, 0x2b, 0x68, 0xac, 0xc9, 0x9a,
	0xc4, 0xb4, 0xf1, 0x8f, 0x1b, 0xca, 0xab, 0x0b, 0x10, 0x39, 0x2a, 0x8e, 0xf2, 0x2e, 0x45, 0xf8,
	0x5d, 0xd9, 0x29, 0xfb, 0xa7, 0xa5, 0x61, 0x6f, 0xbd, 0x2b, 0x5b, 0xf8, 0x87, 0xf4, 0xc0, 0xed,
	0x38, 0xdb, 0x6d, 0xb8, 0x43, 0x82, 0xce, 0x0b, 0xfe, 0xbf, 0x16, 0x46, 0xed, 0x47, 0x17, 0x13,
	0xee, 0x45, 0xb4, 0x37, 0xd9, 0xc0, 0x6d, 0x30, 0x55, 0x26, 0x1b, 0xb0, 0x96, 0xb7, 0xbe, 0x27,
	0x00, 0xb6, 0x4c, 0x77, 0xe1, 0x8f, 0x53, 0x29, 0x96, 0xa1, 0x37, 0x75, 0xdc, 0xc4, 0x5e, 0x27,
	0x79, 0x74, 0x81, 0x0f, 0xfe, 0x09, 0x0d, 0x90, 0x24, 0x9a, 0xb6, 0xe5, 0xf8, 0x9e, 0xeb, 0x24,
	0xb8, 0xce, 0x43, 0x94, 0x94, 0x37, 0xc5, 0x82, 0x67, 0x70, 0xd9, 0xcb, 0xe6, 0xe4, 0xff, 0xb2,
	0x5e, 0xc1, 0xcf, 0xa3, 0x61, 0x2f, 0x58, 0x0f, 0x99, 0xc2, 0x3b, 0xb5, 0xbc, 0x16, 0x43, 0x2a,
	0xb5, 0xbc, 0x0e, 0x50, 0xfb, 0x77, 0xab, 0x70, 0x2f, 0x12, 0xbd, 0x24, 0x24, 0x7b, 0x30, 0xeb,
	0xe9, 0x08, 0x1a, 0x5d, 0x0f, 0xa3, 0xb6, 0x6c, 0xd3, 0x1e, 0x46, 0xed, 0x45, 0xb7, 0x6c, 0x27,
	0x5f, 0x43, 0x8f, 0x89, 0x28, 0x31, 0x0d, 0xd2, 0x87, 0x54, 0xc5, 0x5f, 0xac, 0x24, 0x3b, 0x10,
	0xc9, 0xfd, 0x5f, 0x74, 0xad, 0xd7, 0x91, 0xa5, 0xbd, 0x41, 0x97, 0xbe, 0xc3, 0x5a, 0x5c, 0xd4,
	0x41, 0xf5, 0x29, 0xba, 0x45, 0xd7, 0x9a, 0x45, 0x13, 0xcd, 0x08, 0xbb, 0x38, 0x48, 0x3c, 0xc7,
	0x8f, 0x99, 0x9e, 0x4f, 0x7b, 0x60, 0x93, 0x8d, 0xeb, 0x5c, 0x8a, 0xab, 0xcb, 0x1f, 0x59, 0xef,
	0x41, 0x28, 0xf1, 0x3a, 0x0d, 0xa7, 0x0d, 0xf6, 0x9c, 0xe3, 0xf9, 0xfe, 0x60, 0x57, 0x5f, 0xa4,
	0xcd, 0x18, 0x4f, 0xbc, 0xce, 0x0c, 0xa0, 0xd9, 0xbb, 0xdd, 0xf2, 0x3e, 0x5a, 0x71, 0xb6, 0xca,
	0xae, 0x51, 0xfb, 0xf3, 0x1a, 0xb1, 0x81, 0xf7, 0x52, 0x06, 0x50, 0xb0, 0x75, 0x5a, 0x1d, 0x2e,
	0xf6, 0xac, 0xac, 0x3c, 0x18, 0x16, 0x5b, 0xcb, 0x54, 0xa0, 0x49, 0x17, 0x6b, 0xa8, 0xae, 0x55,
	0x42, 0xa0, 0x9d, 0x60, 0x73, 0xce, 0x89, 0xdc, 0x92, 0x06, 0x58, 0x87, 0xd1, 0x48, 0xd0, 0x6d,
	0xaf, 0x09, 0xf3, 0x52, 0xf6, 0xcb, 0xfe, 0x5a, 0x15, 0xa4, 0xd2, 0x5c, 0x80, 0xc4, 0x54, 0xd3,
	0xa9, 0x6c, 0x69, 0xe0, 0x2f, 0x41, 0x4f, 0xa1, 0x31, 0x27, 0xf0, 0xda, 0x4e, 0xea, 0xe6, 0x22,
	0x7e, 0x93, 0x46, 0x82, 0x8f, 0x55, 0xcc, 0xf4, 0xd1, 0xec, 0xd7, 0x8e, 0x1f, 0xce, 0xa5, 0x8a,
	0xc9, 0x51, 0x59, 0x73, 0x7d, 0x02, 0xa1, 0x78, 0x23, 0x8c, 0x12, 0x1a, 0x5c, 0x70, 0x0c, 0xb2,
	0xc6, 0x21, 0x05, 0x4c, 0x19, 0x9f, 0x41, 0xb5, 0x64, 0xa3, 0xdb, 0x5e, 0x63, 0x6b, 0x32, 0xef,
	0x85, 0x39, 0x0a, 0xb2, 0x5e, 0x41, 0x63, 0x7c, 0xc0, 0x8e, 0x22, 0x60, 0x0c, 0x8e, 0xe7, 0xc9,
	0xe6, 0x16, 0x13, 0xdc, 0xae, 0x0b, 0x34, 0x7c, 0x19, 0xae, 0x27, 0xf7, 0x9c, 0x08, 0xb3, 0xb7,
	0xa8, 0x7a, 0x78, 0x15, 0x73, 0xb4, 0xfd, 0x1f, 0xd0, 0xab, 0x84, 0x98, 0xa8, 0x08, 0xb7, 0x43,
	0xf1, 0xb0, 0xde, 0xb5, 0x28, 0x6c, 0x97, 0x9b, 0xac, 0xe7, 0xd0, 0x28, 0x2b, 0xba, 0xc7, 0x23,
	0x7b, 0x1c, 0x66, 0xff, 0x32, 0x3d, 0x3d, 0xd2, 0x95, 0x03, 0xe6, 0xe7, 0xac, 0x41, 0x3c, 0x72,
	0xcc, 0x6e, 0xb6, 0x88, 0x2c, 0xad, 0x0e, 0xab, 0x97, 0x7b, 0x12, 0xf1, 0xdf, 0xf6, 0x1f, 0x50,
	0x55, 0x9c, 0x68, 0xad, 0xe3, 0xf2, 0x38, 0xc7, 0xab, 0x61, 0xb9, 0x91, 0x53, 0x45, 0xb5, 0xd5,
	0xfe, 0x45, 0xb5, 0xd6, 0xd5, 0xb4, 0x87, 0xc3, 0x05, 0x0f, 0x83, 0xf3, 0x55, 0x24, 0x46, 0xfe,
	0xef, 0x52, 0xc6, 0x5e, 0xf4, 0x25, 0x95, 0x51, 0xaf, 0xe0, 0x64, 0x95, 0xad, 0xd0, 0xdd, 0xef,
	0x8e, 0xd8, 0x43, 0xc3, 0x7d, 0xec, 0x21, 0xbb, 0x0b, 0x74, 0x57, 0x5a, 0x3d, 0xb8, 0xb9, 0xb9,
	0xb2, 0x51, 0xda, 0xb4, 0x58, 0xdb, 0xe8, 0x55, 0x6d, 0xa3, 0xdb, 0x81, 0x4a, 0xee, 0x98, 0x69,
	0xe7, 0x20, 0x2a, 0x16, 0x74, 0xa7, 0x2a, 0x1b, 0x44, 0xd4, 0xb9, 0x9b, 0x68, 0x80, 0xc1, 0xfa,
	0xc9, 0xf1, 0xfd, 0xd2, 0xc6, 0xe7, 0xdf, 0xb3, 0x07, 0x4c, 0x7e, 0x69, 0xa1, 0xec, 0xc8, 0x27,
	0x05, 0x97, 0x6b, 0x3c, 0xf5, 0x9d, 0x65, 0xb4, 0x9a, 0xfa, 0xc9, 0xee, 0x48, 0x74, 0x98, 0x79,
	0x82, 0xb4, 0x96, 0x0a, 0x42, 0xac, 0xa3, 0x68, 0xac, 0xd5, 0x70, 0x1a, 0x60, 0xdf, 0x46, 0x3d,
	0xf4, 0x46, 0x5a, 0x33, 0xaf, 0x39, 0xf1, 0x86, 0x75, 0x15, 0x8d, 0x41, 0x89, 0xcd, 0x90, 0xbf,
	0xad, 0x91, 0x3a, 0x31, 0x89, 0x00, 0xc3, 0xcb, 0x0c, 0x51, 0x17, 0x58, 0xfb, 0x77, 0x2b, 0x60,
	0x43, 0x4e, 0x07, 0x81, 0xfa, 0x2e, 0x94, 0x1c, 0x83, 0xa7, 0x15, 0x6e, 0xfa, 0x48, 0xc6, 0xff,
	0x96, 0x36, 0x85, 0xb1, 0x6e, 0x07, 0x50, 0xb5, 0xd5, 0x58, 0x63, 0x02, 0x9f, 0x3d, 0xad, 0x59,
	0xa5, 0x1f, 0xb5, 0x1d, 0xf4, 0xe3, 0x7f, 0xad, 0x48, 0x93, 0xd9, 0x24, 0x4b, 0x23, 0x6a, 0xef,
	0x7a, 0x47, 0x1c, 0xd1, 0x91, 0x19, 0xeb, 0x49, 0x74, 0x60, 0x13, 0x6f, 0x37, 0xd6, 0xbd, 0xa0,
	0x85, 0xa3, 0x4e, 0xe4, 0xb1, 0x68, 0xc2, 0xd5, 0xfa, 0xfe, 0x4d, 0xbc, 0x7d, 0x2d, 0x4d, 0x55,
	0x7a, 0x3c, 0xb2, 0x83, 0x1e, 0x7f, 0x27, 0x08, 0xa1, 0xf8, 0xea, 0x6d, 0x62, 0x6f, 0x0b, 0xbb,
	0xbb, 0xd8, 0x63, 0xfb, 0x0b, 0xf2, 0xf6, 0x71, 0xbd, 0xb8, 0xe9, 0x44, 0xee, 0x43, 0xda, 0x3e,
	0xf2, 0x35, 0xa0, 0xc7, 0x3c, 0x4c, 0xa1, 0x31, 0xb7, 0x1b, 0xa5, 0xee, 0xbd, 0xb5, 0xba, 0xf8,
	0x6d, 0xbd, 0x8c, 0x46, 0x22, 0xec, 0xc4, 0x22, 0x12, 0xd2, 0xa9, 0xec, 0x38, 0xcf, 0xd3, 0x7e,
	0xd4, 0x01, 0x56, 0x67, 0x70, 0x10, 0x29, 0x85, 0x41, 0x80, 0x9b, 0x32, 0xeb, 0x5f, 0xad, 0xef,
	0x4d, 0x13, 0x17, 0x5d, 0xfb, 0x7f, 0xa8, 0x48, 0x34, 0x2a, 0xa6, 0x34, 0xaa, 0xee, 0x24, 0x5e,
	0x50, 0x46, 0x83, 0xfc, 0x24, 0x3a, 0x40, 0x49, 0x47, 0xe0, 0x25, 0x9e, 0x93, 0x78, 0xe2, 0x1a,
	0xb8, 0x1f, 0xc8, 0x85, 0x48, 0xdd, 0xd9, 0x20, 0x1d, 0x46, 0x23, 0x11, 0xb4, 0x8c, 0x1b, 0xd4,
	0xd2, 0x5f, 0xd6, 0x51, 0x34, 0xda, 0x0c, 0xdb, 0xe4, 0x78, 0x61, 0x86, 0x72, 0xfc, 0xa7, 0xfd,
	0xd7, 0x95, 0xce, 0x39, 0x5b, 0x74, 0xb0, 0xf0, 0x5a, 0xb7, 0xb5, 0x5b, 0x1b, 0xec, 0x49, 0x54,
	0x73, 0x49, 0x7d, 0xf9, 0xf2, 0x30, 0x9a, 0xcf, 0xad, 0xe6, 0xf9, 0x3c, 0x04, 0x2e, 0xd8, 0x86,
	0xf8, 0x5e, 0xd0, 0x2a, 0xc9, 0xfb, 0xef, 0xa8, 0xb9, 0x96, 0x24, 0xbd, 0xdb, 0xcb, 0x44, 0x75,
	0x5f, 0xdf, 0x43, 0xef, 0x5e, 0x94, 0x46, 0xc1, 0x0d, 0x01, 0xd4, 0x6f, 0x25, 0x77, 0xcd, 0x29,
	0x34, 0x11, 0x25, 0xed, 0x4e, 0x23, 0x4e, 0x22, 0xec, 0xb4, 0xb9, 0xe5, 0x07, 0x49, 0x5a, 0x81,
	0x94, 0xbe, 0xef, 0xd1, 0x85, 0x47, 0xcf, 0xb4, 0x6c, 0xc9, 0xda, 0x5f, 0x04, 0xe0, 0xec, 0x9b,
	0xb3, 0xa3, 0x3b, 0x7c, 0x73, 0xd6, 0xfe, 0xe3, 0x3d, 0xd2, 0xba, 0x7b, 0x2b, 0xf4, 0x82, 0x41,
	0x0c, 0x18, 0xb9, 0x51, 0x75, 0xd3, 0x58, 0xb2, 0xf4, 0x07, 0xd9, 0xe4, 0x3c, 0x9a, 0x45, 0xd8,
	0xe9, 0xa4, 0xd1, 0x03, 0x58, 0xb8, 0x0a, 0x48, 0x23, 0x6b, 0xa0, 0xe9, 0xf8, 0xfc, 0x68, 0xd2,
	0xd6, 0x80, 0x68, 0x5b, 0x1d, 0x40, 0xe4, 0xdc, 0x27, 0x4d, 0x6e, 0x38, 0x71, 0xc1, 0x1b, 0x9a,
	0x23, 0x04, 0x32, 0x13, 0x5b, 0xef, 0x47, 0x13, 0xd4, 0xae, 0xad, 0x21, 0xac, 0xd7, 0x7b, 0xc6,
	0xee, 0xa6, 0x1f, 0xc0, 0xf9, 0x9f, 0x0a, 0xb4, 0xc7, 0x7a, 0x09, 0xb4, 0x7f, 0x5c, 0x44, 0xbe,
	0x08, 0x30, 0xb5, 0xe9, 0x1b, 0xc4, 0xa0, 0xf2, 0x91, 0xa9, 0xf6, 0x33, 0x32, 0xa9, 0xbf, 0x30,
	0x73, 0x9d, 0x66, 0xfe, 0xc2, 0xbf, 0x22, 0xef, 0x5d, 0x6e, 0xe6, 0xb7, 0xeb, 0xad, 0xeb, 0xdf,
	0xc8, 0xef, 0x7b, 0xa8, 0x0e, 0x43, 0x39, 0x03, 0x77, 0xbb, 0xb9, 0xf6, 0x3f, 0xa1, 0x57, 0x5a,
	0xda, 0x08, 0xaa, 0x56, 0x15, 0x10, 0xfe, 0x4a, 0x5a, 0x89, 0xb6, 0x3c, 0x85, 0x1e, 0x03, 0x21,
	0x7c, 0x43, 0x5e, 0x9e, 0xec, 0xb9, 0x62, 0xc8, 0x58, 0x4c, 0x57, 0x21, 0x6f, 0xf7, 0x70, 0x3f,
	0xc3, 0xfc, 0x0c, 0x42, 0xb0, 0x3d, 0xe8, 0x5e, 0xac, 0x99, 0x8c, 0x32, 0xc6, 0x09, 0xe0, 0x06,
	0xc9, 0xb7, 0x7f, 0xa4, 0x22, 0xf1, 0x3b, 0xdc, 0x46, 0x62, 0x37, 0x57, 0x85, 0xf1, 0xd1, 0x1d,
	0xfb, 0xdf, 0x30, 0xb9, 0xb4, 0xd2, 0xac, 0x01, 0x39, 0xd9, 0xec, 0xa8, 0x79, 0xe7, 0x50, 0xd5,
	0x73, 0x73, 0x96, 0x2c, 0x10, 0x1a, 0x92, 0x0d, 0xba, 0x6f, 0xd8, 0x6a, 0x31, 0xf3, 0x80, 0xe2,
	0x3f, 0xb5, 0xf8, 0x26, 0xe3, 0x3d, 0xe2, 0x9b, 0xfc, 0x84, 0x4c, 0x43, 0xe0, 0xd2, 0xb9, 0xeb,
	0xf3, 0x21, 0x75, 0x65, 0x58, 0xe9, 0x8a, 0xfd, 0x65, 0x1a, 0x20, 0xce, 0xb8, 0x21, 0xea, 0xb8,
	0x19, 0x46, 0x6e, 0xb9, 0xc3, 0x03, 0xc2, 0x1d, 0xf1, 0xc3, 0x03, 0x7e, 0xa4, 0x9c, 0xeb, 0xb0,
	0xc6, 0xb9, 0xf6, 0x7f, 0x5a, 0x3c, 0xc8, 0x01, 0xfb, 0x22, 0x8f, 0xc0, 0xd4, 0x09, 0xa3, 0x24,
	0x72, 0xc4, 0x6b, 0x00, 0x7a, 0x30, 0x7f, 0x00, 0x2d, 0x33, 0x8c, 0xfd, 0xe7, 0x55, 0xaa, 0xb0,
	0x80, 0xf1, 0xc1, 0xae, 0x97, 0x36, 0x65, 0x30, 0x4e, 0x51, 0x3b, 0x9a, 0xc6, 0x07, 0xb3, 0xf7,
	0x3c, 0xcb, 0x8f, 0x70, 0x23, 0xd9, 0x60, 0x27, 0xfa, 0x0b, 0x68, 0x64, 0x2b, 0xf4, 0xbb, 0xed,
	0xbe, 0x5e, 0x58, 0x60, 0x50, 0x42, 0x95, 0x22, 0xc7, 0x8b, 0x09, 0x9d, 0x0b, 0x5c, 0xf3, 0x70,
	0x8e, 0x03, 0xe0, 0x35, 0x27, 0x20, 0x5c, 0x91, 0xc6, 0x34, 0x18, 0x1f, 0x53, 0x50, 0x79, 0x88,
	0xe7, 0xd0, 0x5e, 0x36, 0x69, 0x4e, 0x37, 0xc6, 0x2e, 0x93, 0x95, 0x6a, 0x9f, 0x4c, 0xd0, 0x29,
	0x03, 0x84, 0xf5, 0x1d, 0xe8, 0xf1, 0x0e, 0x21, 0xb5, 0x41, 0x02, 0x17, 0x19, 0xfe, 0x21, 0x32,
	0x7d, 0x68, 0xc9, 0x48, 0xfa, 0x3d, 0xd9, 0xad, 0xc7, 0xcc, 0x13, 0x5e, 0xd6, 0xdf, 0x65, 0xa7,
	0x14, 0xd4, 0xe0, 0xeb, 0xf2, 0x5d, 0x52, 0xdb, 0x64, 0xba, 0xfe, 0x3a, 0xe5, 0x8b, 0x1e, 0xbe,
	0x49, 0xc5, 0xdf, 0xac, 0x48, 0xe4, 0x82, 0x5a, 0xc7, 0x8b, 0x46, 0x0c, 0xe0, 0x7d, 0x87, 0x03,
	0x4d, 0x27, 0x68, 0xc4, 0xd8, 0x5f, 0x6f, 0x74, 0x03, 0xb2, 0x2e, 0x19, 0xe1, 0xd8, 0xd7, 0x74,
	0x82, 0x15, 0xec, 0xaf, 0xdf, 0x86, 0xc4, 0x1d, 0x9d, 0x9c, 0xf6, 0x7f, 0x5e, 0x41, 0x97, 0x72,
	0x4f, 0x7c, 0x42, 0x8f, 0x56, 0xba, 0x6b, 0x71, 0x33, 0xf2, 0x3a, 0x25, 0x65, 0xc7, 0x3b, 0x9a,
	0xdd, 0x67, 0x11, 0x8a, 0x69, 0xb5, 0x6b, 0x79, 0x36, 0x96, 0x12, 0xc0, 0xfe, 0x01, 0x99, 0x6b,
	0x01, 0x22, 0x2a, 0x1e, 0xe1, 0xdc, 0x75, 0x0e, 0xea, 0x1b, 0x34, 0x02, 0x78, 0x7a, 0xbb, 0x65,
	0x21, 0x60, 0x77, 0x7d, 0x2d, 0xca, 0x57, 0x86, 0xe1, 0x5e, 0x57, 0x06, 0xfb, 0x6f, 0x51, 0x23,
	0x5b, 0xc3, 0xe5, 0x68, 0x59, 0xa2, 0x01, 0xbb, 0x35, 0xff, 0x3b, 0x30, 0xa9, 0xf9, 0xbc, 0x3c,
	0xde, 0xea, 0x0d, 0xe4, 0x11, 0xb4, 0x5c, 0x6d, 0x8e, 0x4c, 0x82, 0xe8, 0xfd, 0x79, 0x00, 0xa6,
	0xbf, 0x3b, 0x6a, 0xce, 0xaf, 0xc8, 0xd3, 0x9a, 0x6d, 0x4e, 0x3d, 0x69, 0x77, 0x6e, 0x47, 0xfe,
	0x2e, 0x2c, 0xc6, 0xf3, 0xe2, 0x35, 0x39, 0xe3, 0x6e, 0xe6, 0x8f, 0xcb, 0x7d, 0x81, 0xf2, 0x82,
	0xbe, 0x13, 0xb4, 0x3a, 0x4e, 0x73, 0x13, 0x2c, 0xa6, 0x9d, 0xa0, 0xb5, 0xec, 0x34, 0x37, 0x07,
	0x10, 0xcb, 0x81, 0x14, 0x29, 0xc7, 0x72, 0x80, 0x62, 0x0b, 0x0d, 0x5f, 0xfe, 0x1a, 0x95, 0x55,
	0xc9, 0xed, 0xa1, 0xac, 0x53, 0xfc, 0x28, 0x9a, 0x63, 0x59, 0x68, 0x78, 0x13, 0x6f, 0x53, 0x7e,
	0x7b, 0xbc, 0x0e, 0xff, 0xdb, 0xbf, 0x4e, 0xef, 0x8d, 0x72, 0x13, 0x07, 0xfa, 0xf4, 0xfe, 0xce,
	0x5b, 0xa9, 0xbf, 0xcb, 0x5f, 0xcb, 0xbe, 0xcb, 0xff, 0x36, 0x48, 0xaf, 0xf4, 0x69, 0x2e, 0xfb,
	0x12, 0x7f, 0x51, 0x93, 0xf3, 0x96, 0x56, 0xb7, 0x9c, 0x71, 0xea, 0x83, 0x2f, 0xad, 0x1f, 0xa6,
	0xf2, 0x89, 0xf5, 0xd0, 0x77, 0x71, 0xc4, 0xdc, 0x72, 0x31, 0x8e, 0xae, 0xd1, 0xdf, 0x25, 0x9a,
	0xf4, 0x5e, 0xb4, 0x97, 0x16, 0xda, 0x20, 0x3b, 0x8f, 0x87, 0x2f, 0xd2, 0x14, 0x86, 0xb4, 0x1a,
	0xca, 0x0c, 0xaf, 0x8b, 0xff, 0x63, 0xbb, 0x03, 0x83, 0xc4, 0x1b, 0x45, 0x2d, 0x42, 0x29, 0xb6,
	0xdc, 0x20, 0xb1, 0x16, 0x89, 0xa7, 0x79, 0xc7, 0x68, 0xc2, 0xa2, 0x6b, 0xff, 0x64, 0x85, 0xa9,
	0x1d, 0x1d, 0x66, 0x5d, 0xc1, 0x4d, 0xfb, 0x57, 0x48, 0x4a, 0x39, 0x5b, 0x27, 0xd7, 0x89, 0x36,
	0xb9, 0xad, 0x13, 0xf9, 0x7f, 0xc7, 0x31, 0x82, 0xed, 0x1f, 0xa1, 0xab, 0x86, 0xb6, 0xce, 0x0f,
	0x1d, 0x77, 0x26, 0xde, 0x0e, 0x9a, 0xd7, 0x23, 0xa7, 0xb3, 0x51, 0x52, 0x31, 0x29, 0xc2, 0x15,
	0x12, 0xee, 0x15, 0x42, 0x15, 0x5e, 0x42, 0x95, 0xfb, 0x45, 0x11, 0x99, 0xb9, 0x05, 0x4e, 0xe5,
	0x7e, 0x66, 0xd0, 0x6e, 0xf0, 0x20, 0x02, 0xef, 0x8a, 0x41, 0xfb, 0xd5, 0x3d, 0xcc, 0x0e, 0x41,
	0xb4, 0x0e, 0xec, 0xaa, 0xa9, 0x7f, 0xe2, 0x00, 0x9e, 0x0c, 0x79, 0x20, 0xcf, 0x22, 0x83, 0xf9,
	0x60, 0xfa, 0x1a, 0x4f, 0x94, 0x86, 0xb4, 0x66, 0xaf, 0xf1, 0xd4, 0xd5, 0x37, 0xb5, 0xe0, 0x90,
	0xcb, 0x97, 0xbc, 0xb2, 0x8f, 0x96, 0x33, 0xe1, 0xdc, 0x47, 0xf3, 0x5e, 0xc1, 0x51, 0xde, 0x45,
	0xfc, 0x3a, 0xb5, 0x52, 0xd5, 0x07, 0xec, 0xdd, 0x30, 0x99, 0x39, 0x16, 0x71, 0x4c, 0x8b, 0xee,
	0x74, 0x93, 0x8d, 0x86, 0x1f, 0xb6, 0x6e, 0x75, 0x93, 0x97, 0x5e, 0x7e, 0xfe, 0xe5, 0xf9, 0x99,
	0x17, 0x9f, 0x2b, 0x15, 0x83, 0xec, 0xf8, 0xea, 0x12, 0x3c, 0x5f, 0x26, 0x42, 0x83, 0xdc, 0x8e,
	0x71, 0x34, 0x37, 0xf3, 0xc2, 0x73, 0x33, 0x2f, 0xcd, 0x3e, 0x5f, 0x62, 0x24, 0x6c, 0x29, 0xf4,
	0x9d, 0x49, 0x06, 0xcb, 0x82, 0x93, 0xe8, 0xaf, 0x81, 0x90, 0xf9, 0xe4, 0x62, 0xcf, 0x17, 0xae,
	0xbe, 0x3c, 0xbd, 0xf0, 0xdc, 0xab, 0x73, 0xbb, 0x70, 0x8b, 0xfc, 0x0d, 0xcd, 0xcd, 0x9a, 0x92,
	0x61, 0xd2, 0xd0, 0x47, 0x60, 0x91, 0xbf, 0x13, 0x8b, 0x03, 0xbb, 0x03, 0x17, 0x31, 0xa7, 0x09,
	0xd1, 0x21, 0xf9, 0xeb, 0x7d, 0xf0, 0xea, 0x59, 0x3c, 0x7f, 0x75, 0xfe, 0xe5, 0xe7, 0xe7, 0x5f,
	0x9e, 0x1d, 0x70, 0x2c, 0xbc, 0x5f, 0xa0, 0x04, 0x5a, 0x79, 0x30, 0x8b, 0x6c, 0x9b, 0xdb, 0xf5,
	0xa5, 0x01, 0xef, 0x9c, 0x7e, 0x55, 0x5f, 0x87, 0xc5, 0xe5, 0x85, 0xba, 0x2d, 0xf1, 0x9b, 0xca,
	0x6b, 0x68, 0x2f, 0x8f, 0x53, 0x96, 0x94, 0x72, 0x4b, 0xb0, 0xff, 0x5b, 0xfa, 0x56, 0x6d, 0x27,
	0xc2, 0x2e, 0x5e, 0xf7, 0x02, 0xec, 0x32, 0x0d, 0xe0, 0xb2, 0x48, 0x80, 0xc7, 0xfd, 0x4a, 0x9d,
	0x4f, 0x70, 0x65, 0xe0, 0xe7, 0x13, 0xfc, 0xb0, 0xde, 0x8b, 0xd0, 0xba, 0x17, 0xc5, 0xcc, 0x8e,
	0x67, 0xb8, 0x0f, 0xd1, 0xe2, 0x38, 0xe0, 0xc1, 0x8a, 0xe7, 0x55, 0xc2, 0x0b, 0xf1, 0x6f, 0xfb,
	0x7a, 0xd2, 0x86, 0xc0, 0x99, 0x01, 0x50, 0x1a, 0xde, 0xa2, 0xaf, 0x77, 0x3f, 0x38, 0x9a, 0x4c,
	0x23, 0xf0, 0x5e, 0xd4, 0xee, 0x10, 0xfe, 0xb7, 0xa6, 0xd0, 0xd8, 0x16, 0x8e, 0xbc, 0x75, 0x8f,
	0x49, 0xd8, 0xc6, 0xea, 0xe2, 0x37, 0x39, 0xed, 0x2f, 0xa8, 0x03, 0xcb, 0xc3, 0xf6, 0xcb, 0x03,
	0x1b, 0x94, 0xb6, 0x4a, 0x32, 0x0c, 0x6e, 0x61, 0xa4, 0x91, 0x3d, 0xf0, 0x0e, 0x4f, 0x41, 0xb3,
	0x58, 0x5c, 0xff, 0xff, 0xdf, 0x4c, 0xf9, 0x34, 0x8f, 0x6a, 0xd4, 0x97, 0x00, 0x1b, 0xa0, 0x7d,
	0x4c, 0xde, 0x1d, 0x36, 0xcf, 0x0f, 0x63, 0xf2, 0xc4, 0x9a, 0x1a, 0xd6, 0xd6, 0xd4, 0xe7, 0x2a,
	0xfa, 0x66, 0xd5, 0x9b, 0x35, 0x57, 0xce, 0x69, 0xd1, 0xdc, 0x24, 0xbe, 0xf4, 0x87, 0xd3, 0xa5,
	0x6f, 0xbf, 0x0d, 0x3e, 0x89, 0x52, 0x4b, 0x20, 0x3a, 0xe5, 0xc3, 0xa4, 0x19, 0xf6, 0x47, 0xa9,
	0x64, 0xae, 0xa0, 0xca, 0x32, 0x7e, 0x90, 0x1d, 0xb4, 0x5f, 0x66, 0x18, 0x6e, 0x94, 0x19, 0xc6,
	0xfd, 0x82, 0x45, 0xa8, 0x42, 0x2c, 0x3f, 0xc1, 0xa3, 0x0f, 0x4b, 0x3c, 0xba, 0xfd, 0xdd, 0xf4,
	0xb6, 0xcd, 0x4f, 0x38, 0x3a, 0x95, 0x03, 0x58, 0x57, 0x7a, 0xed, 0x45, 0x2b, 0xea, 0xdb, 0xf4,
	0x15, 0x04, 0xe0, 0xbd, 0xa8, 0xc4, 0x76, 0xd6, 0x09, 0x06, 0xbe, 0x80, 0x4e, 0x22, 0x94, 0x4e,
	0x1b, 0x0f, 0xf1, 0x91, 0xa6, 0x58, 0x2f, 0xa1, 0x51, 0xfa, 0x90, 0x34, 0x77, 0xbb, 0x29, 0x54,
	0x89, 0x70, 0xac, 0xf5, 0xa2, 0x66, 0x38, 0xd5, 0xe3, 0x7d, 0x32, 0x8a, 0xb5, 0xbf, 0x97, 0x9e,
	0xf2, 0x6b, 0xde, 0x3b, 0x0d, 0x2f, 0xd8, 0x0a, 0x37, 0xf1, 0xac, 0xf7, 0xce, 0xbc, 0x93, 0x38,
	0x75, 0xe7, 0x5e, 0x29, 0x1f, 0xa9, 0x31, 0x52, 0x22, 0x18, 0xd7, 0xe8, 0x8f, 0xa9, 0xa4, 0x15,
	0xd4, 0x47, 0xd7, 0xe8, 0xff, 0xf6, 0x5f, 0x42, 0xd6, 0x1d, 0x4c, 0xbe, 0x6c, 0xac, 0xe0, 0x66,
	0x37, 0xa2, 0x8f, 0x90, 0x58, 0x4f, 0xa1, 0x1a, 0x29, 0x21, 0x3e, 0x5a, 0x81, 0x8b, 0xf6, 0xa4,
	0x28, 0x42, 0x02, 0xd5, 0x29, 0xc4, 0x7e, 0x1f, 0x3a, 0xc8, 0x4a, 0xb8, 0x0b, 0x2a, 0xb2, 0x0e,
	0x8e, 0xac, 0x8b, 0xea, 0xf7, 0x29, 0x63, 0x21, 0x20, 0xfc, 0xeb, 0x69, 0x34, 0xc1, 0xbe, 0x86,
	0xbd, 0x7a, 0x56, 0xfd, 0x30, 0x15, 0xa9, 0x51, 0xb3, 0x02, 0xfa, 0x8d, 0x8d, 0x10, 0xfb, 0x66,
	0x31, 0x00, 0xdd, 0x62, 0xfa, 0x49, 0x8d, 0x63, 0xe6, 0xd1, 0x24, 0xc3, 0xcc, 0x85, 0x41, 0xe2,
	0x34, 0x13, 0x16, 0x30, 0xfc, 0x19, 0xb5, 0x82, 0x74, 0x4c, 0x15, 0x18, 0x2f, 0x65, 0x16, 0x3d,
	0xce, 0x47, 0xc7, 0xd9, 0x22, 0x54, 0x0d, 0x30, 0xd6, 0xd3, 0x6a, 0x21, 0x29, 0xbb, 0x29, 0xa3,
	0x78, 0x19, 0xab, 0xe8, 0x38, 0x2b, 0xa3, 0xce, 0xcc, 0x10, 0x6f, 0x86, 0x89, 0xb7, 0xbe, 0xcd,
	0xbd, 0x88, 0x5f, 0x54, 0x0b, 0x4b, 0x3d, 0xe1, 0x8d, 0x70, 0x5e, 0xea, 0x59, 0x31, 0x6e, 0x4b,
	0x61, 0xd0, 0x52, 0x07, 0xa1, 0xca, 0x41, 0x4b, 0xe8, 0x28, 0x6f, 0xbe, 0x30, 0xa6, 0x9e, 0x0b,
	0xb7, 0x70, 0x04, 0x6a, 0x36, 0xa5, 0xda, 0xd4, 0xa8, 0x32, 0x03, 0xcd, 0x0e, 0x06, 0x6f, 0x8b,
	0x13, 0xb4, 0x70, 0xfe, 0x60, 0xc8, 0x28, 0x5e, 0xc6, 0x77, 0xa0, 0xc7, 0x58, 0x19, 0xf3, 0x9e,
	0xe3, 0x87, 0x2d, 0xb8, 0x5d, 0x5e, 0x52, 0x4b, 0x48, 0x17, 0x6c, 0x8a, 0xc9, 0x4e, 0xeb, 0x42,
	0x3b, 0x7c, 0xcb, 0x13, 0xd2, 0xae, 0xdc, 0x69, 0x55, 0x60, 0xbc, 0x94, 0x3b, 0xe8, 0x84, 0xda,
	0x93, 0xb8, 0x41, 0x5f, 0xa4, 0x85, 0x48, 0xbb, 0x38, 0xb2, 0x5e, 0x52, 0x8b, 0x4b, 0x2d, 0x21,
	0xdb, 0x46, 0x7c, 0x76, 0x84, 0x68, 0xcb, 0x59, 0x74, 0x99, 0xdc, 0x11, 0x92, 0x51, 0xd9, 0xe5,
	0x22, 0xe7, 0xb2, 0xf0, 0xc4, 0xd8, 0xcd, 0x5f, 0x2e, 0x46, 0x38, 0x2f, 0xf5, 0x3d, 0xe8, 0x00,
	0x2b, 0x95, 0xbf, 0x09, 0x01, 0x16, 0x83, 0x52, 0x41, 0xa9, 0x3e, 0x82, 0x23, 0xb2, 0x73, 0x96,
	0xfa, 0x59, 0xe6, 0xcf, 0x99, 0xe4, 0xb2, 0xca, 0xbe, 0xbf, 0x86, 0x0e, 0xf1, 0xa5, 0xca, 0xa4,
	0x88, 0x94, 0x1c, 0x5a, 0xcf, 0xaa, 0x65, 0xa4, 0x72, 0x7f, 0x15, 0xc7, 0xcb, 0x79, 0x1d, 0x1d,
	0xd1, 0xca, 0x11, 0xd3, 0x7f, 0x45, 0x2d, 0xe9, 0x89, 0x4c, 0x49, 0xfa, 0x0a, 0x48, 0xdb, 0xa4,
	0x31, 0x0b, 0xb9, 0x6d, 0x52, 0x71, 0xac, 0x9c, 0xe9, 0x5f, 0xa8, 0xa0, 0xd1, 0xfa, 0xf2, 0xdc,
	0x75, 0x6f, 0x3d, 0xb6, 0x3e, 0x84, 0x0e, 0x29, 0x57, 0x36, 0x42, 0x0b, 0x20, 0xe3, 0x8c, 0x44,
	0xb8, 0x1b, 0x46, 0xc8, 0xd4, 0x31, 0xc3, 0x0a, 0xe3, 0x99, 0xf6, 0x90, 0x35, 0x83, 0x0e, 0x2a,
	0x6f, 0xbf, 0x5e, 0xf7, 0xd6, 0xad, 0xe3, 0xc6, 0x52, 0x59, 0xee, 0x94, 0xaa, 0x8c, 0xb0, 0x87,
	0xa6, 0xff, 0xa3, 0x3d, 0x68, 0xbc, 0xbe, 0x3c, 0xf7, 0x66, 0x04, 0xac, 0xd9, 0x1d, 0x74, 0x08,
	0xce, 0x5a, 0xaa, 0xcf, 0x5d, 0x0a, 0x5b, 0x5e, 0x40, 0xdf, 0x16, 0x51, 0xda, 0x6a, 0x84, 0x4c,
	0xa5, 0x62, 0x57, 0xc8, 0x4f, 0x73, 0xec, 0x21, 0x51, 0x2e, 0x0d, 0xf8, 0x59, 0x58, 0xae, 0x0e,
	0x29, 0x2c, 0x77, 0x95, 0x95, 0x4b, 0x4d, 0xf0, 0x0b, 0xcb, 0xd5, 0x21, 0x53, 0x29, 0x31, 0x98,
	0xe9, 0x26, 0x1b, 0x61, 0xe4, 0xbd, 0x03, 0xea, 0x33, 0x7b, 0x68, 0xfa, 0xbf, 0xaf, 0x22, 0x54,
	0x5f, 0x9e, 0xab, 0x43, 0x78, 0xe6, 0xd8, 0x5a, 0x40, 0x16, 0x67, 0x82, 0x68, 0xc4, 0x66, 0xa0,
	0x4e, 0x27, 0x95, 0x1a, 0x32, 0xf9, 0x99, 0x91, 0xb6, 0x6e, 0xa3, 0x29, 0x0d, 0x26, 0xbf, 0x50,
	0x76, 0xa1, 0xa0, 0x38, 0x09, 0x97, 0x2d, 0xf6, 0x3a, 0x7a, 0x5c, 0x7a, 0xcf, 0x50, 0x04, 0x94,
	0x3e, 0x65, 0x5c, 0x06, 0x29, 0x20, 0x5b, 0xd0, 0x07, 0xd0, 0x01, 0x0d, 0x67, 0x1d, 0x2b, 0x28,
	0x24, 0x5b, 0xc0, 0x87, 0xd0, 0x71, 0x0d, 0xb3, 0x10, 0x34, 0xa3, 0xed, 0x4e, 0x82, 0x5d, 0x68,
	0xd2, 0xc5, 0x82, 0xd2, 0x14, 0xa4, 0xb1, 0x93, 0xa6, 0xa8, 0xd9, 0x4a, 0x27, 0x0d, 0x80, 0xec,
	0x72, 0xff, 0x12, 0x42, 0xfb, 0xeb, 0xcb, 0x73, 0x73, 0x1b, 0x0e, 0x33, 0xc0, 0x8b, 0x2d, 0x07,
	0x3d, 0x21, 0x1a, 0x43, 0x17, 0x75, 0x9a, 0x6b, 0x9d, 0x37, 0xb6, 0x59, 0x87, 0x49, 0xfb, 0x74,
	0xe1, 0x3e, 0x7d, 0x31, 0x2b, 0xcd, 0xb4, 0x87, 0xac, 0xbb, 0xe8, 0xa8, 0xfa, 0x50, 0xbf, 0x54,
	0xc3, 0x39, 0x63, 0x0d, 0x1a, 0x6a, 0xea, 0x71, 0x25, 0x24, 0x9b, 0x28, 0xf8, 0x8e, 0xd4, 0x76,
	0xba, 0x71, 0x7a, 0xb6, 0x5d, 0x87, 0x4d, 0x1d, 0x4c, 0x99, 0x29, 0xfa, 0xa8, 0x89, 0x3d, 0x64,
	0xdd, 0x43, 0xa7, 0x64, 0x82, 0x94, 0xed, 0x54, 0x6c, 0x3d, 0x9d, 0x47, 0xbd, 0x0c, 0xe0, 0xa9,
	0xf3, 0x59, 0x3a, 0x66, 0x80, 0xd9, 0x43, 0x56, 0x82, 0x4e, 0x16, 0x97, 0x65, 0x3d, 0xd5, 0x7f,
	0xbd, 0x53, 0xe7, 0xfa, 0xa9, 0xd6, 0x1e, 0xb2, 0xb6, 0xa4, 0xee, 0x62, 0xd7, 0x33, 0x55, 0x6b,
	0xee, 0xae, 0x19, 0xdc, 0x77, 0xbd, 0x31, 0xba, 0x24, 0x00, 0x54, 0xf2, 0x59, 0x07, 0xe5, 0xb0,
	0x6b, 0x1a, 0xf0, 0x97, 0x8c, 0x2d, 0xe8, 0xf5, 0x59, 0x76, 0x2f, 0x35, 0xd1, 0x19, 0xed, 0x6b,
	0x43, 0x77, 0x9f, 0x2d, 0xa8, 0xcc, 0xd0, 0xe1, 0x4c, 0x25, 0x5d, 0x74, 0x42, 0x79, 0x8f, 0x18,
	0x62, 0xe4, 0xdd, 0xf5, 0x92, 0x0d, 0xde, 0x9b, 0x4b, 0x79, 0xd3, 0x98, 0x81, 0x4e, 0x3d, 0x99,
	0x1d, 0x4d, 0x11, 0xb5, 0x58, 0x06, 0x66, 0xd7, 0x6d, 0xda, 0x42, 0x1a, 0x58, 0x9a, 0x5c, 0xc1,
	0x73, 0xd7, 0xad, 0x01, 0x6c, 0x5a, 0xb7, 0x06, 0x98, 0x3d, 0x64, 0x7d, 0x54, 0xa2, 0x7d, 0xa6,
	0x87, 0xfd, 0xcd, 0xb4, 0xcf, 0x80, 0x34, 0x6e, 0x47, 0x17, 0x9d, 0xee, 0xf9, 0xce, 0xfe, 0x33,
	0xb9, 0x35, 0x18, 0xd0, 0xa6, 0x5a, 0xa6, 0xbf, 0x5a, 0x41, 0x23, 0xf5, 0xe5, 0xb9, 0xd5, 0x78,
	0xdd, 0x7a, 0x1d, 0x1d, 0xcc, 0xbc, 0x8f, 0xa2, 0x30, 0x16, 0x7a, 0xae, 0x74, 0x9a, 0x42, 0x16,
	0x4f, 0xb7, 0x87, 0xac, 0x25, 0xf4, 0x58, 0xf6, 0xb1, 0x93, 0x13, 0x99, 0xc2, 0xe4, 0xec, 0xfc,
	0xd2, 0xa6, 0x7f, 0x68, 0x04, 0xed, 0xab, 0x2f, 0xcf, 0xa5, 0x6c, 0x97, 0xe5, 0xa1, 0x53, 0xbd,
	0xc4, 0xc3, 0xca, 0x9c, 0xf7, 0x00, 0x4f, 0xe5, 0xf1, 0x76, 0xf6, 0x90, 0xf5, 0x36, 0x3a, 0xdb,
	0x8f, 0xc0, 0xf4, 0x4a, 0x4e, 0x75, 0x79, 0x1f, 0x14, 0x55, 0x19, 0x22, 0xbb, 0x0f, 0x61, 0xe8,
	0xe5, 0x3e, 0x6b, 0x64, 0xf8, 0x07, 0xef, 0xa3, 0x90, 0xff, 0xf4, 0xdb, 0x47, 0xfe, 0x41, 0x51,
	0x95, 0xea, 0x0c, 0x1a, 0x65, 0x86, 0x4f, 0xf7, 0x59, 0x1d, 0x01, 0x17, 0x55, 0xd5, 0x44, 0xc7,
	0x0b, 0x85, 0x82, 0x17, 0x73, 0xea, 0xc9, 0x20, 0x8b, 0x2a, 0xf1, 0xd1, 0x89, 0x62, 0x31, 0xe0,
	0xa5, 0x7e, 0x6b, 0x89, 0xa7, 0x52, 0x36, 0xd3, 0x78, 0x31, 0xb1, 0x87, 0xa6, 0x3f, 0x53, 0x45,
	0x8f, 0xd5, 0x97, 0xe7, 0xd8, 0x95, 0x75, 0x15, 0x02, 0x06, 0xc7, 0x84, 0x33, 0x68, 0x52, 0x81,
	0x43, 0xdc, 0x58, 0xf3, 0xc3, 0xe6, 0xe6, 0xb5, 0x28, 0x6c, 0xd7, 0x71, 0xc7, 0xf7, 0x70, 0xac,
	0x72, 0x06, 0xb9, 0x30, 0x23, 0x29, 0x5a, 0x95, 0xd8, 0x4d, 0x78, 0x80, 0x8c, 0x96, 0x78, 0x2a,
	0x8f, 0xaa, 0xf2, 0xb2, 0xa6, 0xb2, 0x94, 0x94, 0x5f, 0xb2, 0x61, 0xd1, 0x29, 0xc7, 0x45, 0x1a,
	0x68, 0x91, 0x4b, 0x43, 0x72, 0x8f, 0x8b, 0x0c, 0x74, 0xea, 0x6c, 0xb6, 0xa6, 0x0c, 0xc8, 0x1e,
	0xb2, 0x6e, 0xa1, 0x23, 0xca, 0x3b, 0xe0, 0x52, 0xd0, 0xc8, 0xb3, 0x39, 0x8c, 0xaa, 0x0c, 0xca,
	0xb2, 0x96, 0x3f, 0xbb, 0x07, 0x6e, 0x0d, 0x6c, 0xa8, 0x08, 0x09, 0xcd, 0xbc, 0x9c, 0xad, 0x90,
	0x50, 0x3d, 0x57, 0x22, 0x7a, 0x3c, 0x0b, 0xd2, 0x81, 0xb3, 0x3e, 0x64, 0x7e, 0x33, 0xfb, 0x4c,
	0x4e, 0x81, 0x29, 0x44, 0x62, 0x4d, 0x79, 0x7e, 0x9a, 0x69, 0x0f, 0x59, 0x01, 0x3a, 0x5e, 0xf8,
	0x74, 0xf5, 0xc5, 0x9c, 0x1a, 0x32, 0xc8, 0x29, 0x3b, 0x53, 0x51, 0x06, 0x63, 0x0f, 0x4d, 0xff,
	0xef, 0xf4, 0x66, 0x3c, 0x1b, 0x26, 0x31, 0xe1, 0xea, 0x4d, 0x01, 0xb8, 0x94, 0xb5, 0x64, 0x00,
	0x64, 0xb9, 0x8d, 0x37, 0xd0, 0x21, 0x73, 0xd8, 0xab, 0x33, 0x99, 0xa2, 0x74, 0x48, 0xb6, 0xb0,
	0x55, 0xd6, 0xaa, 0x56, 0xaf, 0x56, 0xa9, 0x00, 0x69, 0x85, 0x67, 0xc4, 0x22, 0xf6, 0xd0, 0xf4,
	0xd7, 0xab, 0x68, 0xb2, 0xbe, 0x3c, 0x27, 0xac, 0x75, 0x45, 0x00, 0xbe, 0x75, 0x89, 0x73, 0x20,
	0x4b, 0x81, 0x03, 0xb8, 0xfe, 0xfb, 0x62, 0xae, 0x94, 0x40, 0x43, 0xf6, 0xd8, 0x62, 0x1b, 0xea,
	0x16, 0xcb, 0x36, 0xe4, 0x52, 0xcf, 0x8a, 0x38, 0xb4, 0x47, 0x4d, 0x9f, 0x90, 0x78, 0x78, 0xf0,
	0x24, 0xcd, 0x54, 0x65, 0xe6, 0xe1, 0x8d, 0xd8, 0x9e, 0xfc, 0x10, 0xe5, 0x49, 0xb3, 0x75, 0x3c,
	0x53, 0xc0, 0xc1, 0xf6, 0x55, 0xcb, 0xf4, 0x3f, 0xab, 0xd0, 0x29, 0xcb, 0xc4, 0x4c, 0xfc, 0x08,
	0x3a, 0x51, 0x1c, 0x01, 0xf2, 0x92, 0xf1, 0x5e, 0x6a, 0x82, 0x66, 0x97, 0xdf, 0xdb, 0x52, 0xe1,
	0xc6, 0x88, 0x8d, 0xe6, 0xc2, 0x4d, 0x50, 0x13, 0x29, 0xcc, 0x80, 0xec, 0xa1, 0xe9, 0xaf, 0x4d,
	0xa2, 0x09, 0xd2, 0x51, 0x1e, 0x27, 0xe6, 0x0e, 0x9a, 0x54, 0x8d, 0x0c, 0x58, 0xfa, 0xe9, 0xdc,
	0x15, 0xc2, 0x10, 0xa6, 0x85, 0xc1, 0xf3, 0xec, 0x21, 0xab, 0x21, 0x91, 0x5c, 0xc2, 0xe9, 0xfb,
	0xbe, 0x28, 0xfa, 0x6c, 0xee, 0x75, 0x20, 0x05, 0x4d, 0x9d, 0xc8, 0x96, 0x2e, 0x65, 0x03, 0x17,
	0x7e, 0xd8, 0xd0, 0xac, 0x15, 0x9c, 0x58, 0x76, 0x8f, 0xa6, 0xaf, 0xe0, 0x64, 0xea, 0x78, 0x6e,
	0xe3, 0x57, 0x70, 0x02, 0x33, 0x33, 0x95, 0xde, 0xa2, 0x83, 0x38, 0x71, 0x44, 0xdd, 0xa4, 0x86,
	0x0b, 0xe6, 0xdb, 0xb6, 0x8e, 0x9b, 0xba, 0x54, 0x54, 0xcb, 0x22, 0x85, 0xd7, 0x71, 0xdc, 0xf5,
	0x13, 0x4d, 0xa4, 0xd2, 0x0d, 0xb2, 0x95, 0x9a, 0x89, 0x83, 0x01, 0x99, 0x5d, 0x67, 0x77, 0xd1,
	0x31, 0xe9, 0x68, 0x0b, 0x23, 0x17, 0x47, 0x29, 0x3c, 0xb6, 0x9e, 0xcc, 0x39, 0x03, 0x75, 0x60,
	0xb6, 0xe0, 0x40, 0x25, 0x68, 0xd7, 0x30, 0xbc, 0x30, 0xe0, 0x8a, 0xa9, 0xce, 0x25, 0x68, 0x3a,
	0x52, 0x3a, 0x51, 0x04, 0x4c, 0xc7, 0xd8, 0x43, 0x64, 0x37, 0x2a, 0x67, 0x74, 0xa6, 0xc2, 0x4b,
	0xb9, 0xc7, 0x79, 0xa6, 0xc6, 0x4c, 0x67, 0x36, 0xa4, 0x39, 0x17, 0xef, 0xad, 0x8a, 0x92, 0x2f,
	0xe4, 0x73, 0x3d, 0x32, 0x6e, 0xea, 0x74, 0xb6, 0x23, 0x2a, 0x82, 0x8a, 0x07, 0x15, 0x69, 0xad,
	0x02, 0xc8, 0xa9, 0x29, 0x83, 0x2b, 0x16, 0xca, 0x41, 0x78, 0x31, 0xad, 0x0b, 0xe6, 0xd9, 0x30,
	0x20, 0x7b, 0x4e, 0xf4, 0x4c, 0xd4, 0xdc, 0xf0, 0xb6, 0xfa, 0x99, 0x68, 0x1d, 0x69, 0x9a, 0x68,
	0x1d, 0x63, 0x0f, 0x59, 0x8e, 0x24, 0x45, 0x6b, 0xe1, 0xe4, 0x86, 0x13, 0x6f, 0x8a, 0xba, 0xce,
	0xe5, 0xd5, 0x25, 0xa3, 0x7a, 0x13, 0x90, 0xb6, 0xd6, 0xa5, 0x24, 0x71, 0xc8, 0x51, 0xd1, 0x47,
	0x97, 0x34, 0xe4, 0xd4, 0x19, 0x9d, 0x1b, 0xc8, 0xe8, 0xcf, 0xec, 0x21, 0x0b, 0x4b, 0xe2, 0x3b,
	0xb2, 0x01, 0x1c, 0x79, 0xf8, 0xce, 0xe7, 0xee, 0x13, 0x19, 0x36, 0x65, 0x50, 0x42, 0x29, 0x00,
	0x7b, 0xc8, 0x5a, 0x94, 0xe8, 0xf9, 0xba, 0x23, 0xe2, 0x76, 0xe5, 0xd0, 0x73, 0x09, 0x91, 0x9d,
	0xf3, 0xb7, 0xe4, 0x55, 0x0a, 0xba, 0x2e, 0x99, 0x68, 0xe4, 0xac, 0x52, 0x1d, 0x67, 0xdc, 0xd8,
	0x61, 0x37, 0x70, 0x25, 0x8c, 0xb6, 0x23, 0x58, 0xdc, 0xeb, 0x9e, 0x75, 0x65, 0x70, 0xd9, 0x2e,
	0x24, 0xaa, 0x8c, 0xe8, 0x96, 0x9f, 0xa5, 0x18, 0xb9, 0x32, 0x22, 0x03, 0xb8, 0x4f, 0x2a, 0xb5,
	0x86, 0x9e, 0xc8, 0x0f, 0x73, 0xa7, 0x4c, 0x75, 0x2e, 0xac, 0xe7, 0x01, 0xf5, 0x16, 0x3a, 0x51,
	0x1c, 0xa1, 0xed, 0x92, 0xb1, 0x1e, 0x13, 0xb4, 0x67, 0x5d, 0x3e, 0x3a, 0xd9, 0x23, 0xf8, 0xda,
	0x53, 0xe6, 0x4e, 0x99, 0xb0, 0x3d, 0x6b, 0xfb, 0x04, 0x3a, 0x9a, 0x1b, 0x3c, 0xed, 0x9c, 0xb1,
	0x1e, 0x0d, 0xd5, 0xb3, 0x86, 0x75, 0x74, 0xac, 0x28, 0xa4, 0xd9, 0x93, 0xc6, 0x4a, 0xb2, 0xc0,
	0x9e, 0xf5, 0xdc, 0x42, 0x47, 0xf2, 0xc2, 0x8e, 0x9d, 0xcd, 0x19, 0x30, 0x19, 0x64, 0xda, 0x91,
	0x4f, 0xe4, 0x07, 0x14, 0x33, 0x2f, 0x2c, 0x1d, 0x26, 0xc9, 0xab, 0x05, 0x46, 0xa8, 0x8a, 0x05,
	0xca, 0x1e, 0x9a, 0xfe, 0xf3, 0x51, 0x34, 0x56, 0x5f, 0x9e, 0xbb, 0xe6, 0xf9, 0x38, 0xb6, 0x3e,
	0xa4, 0x1e, 0x8d, 0x3c, 0xc4, 0xda, 0xec, 0x36, 0xa8, 0x91, 0x73, 0x8f, 0x46, 0x15, 0x37, 0x25,
	0xf9, 0xbb, 0xb1, 0x0c, 0x7b, 0xc8, 0x7a, 0x53, 0x22, 0x58, 0xdd, 0x8e, 0x1f, 0x3a, 0xee, 0x0d,
	0xec, 0x7a, 0x4e, 0x0e, 0xc1, 0x92, 0x10, 0x53, 0x19, 0x33, 0x03, 0x48, 0x86, 0xfd, 0x77, 0x5c,
	0xfb, 0x40, 0xa8, 0x9c, 0x48, 0x77, 0xf2, 0x38, 0xa9, 0x2c, 0x52, 0xba, 0xa6, 0x2b, 0xe9, 0x54,
	0x4b, 0x45, 0x3f, 0x80, 0x83, 0x99, 0x24, 0x2e, 0x3b, 0x51, 0xa2, 0xde, 0x1c, 0x0d, 0x80, 0xec,
	0x9c, 0xce, 0xa3, 0xfd, 0x0c, 0x47, 0xc8, 0x3d, 0x69, 0xde, 0x94, 0xa1, 0x0c, 0x96, 0x37, 0x35,
	0x29, 0x5d, 0xbc, 0x21, 0x83, 0x35, 0xe7, 0x06, 0x3a, 0x2c, 0xd5, 0x36, 0xeb, 0xb5, 0x44, 0x8b,
	0xec, 0x9c, 0x16, 0x49, 0x98, 0x6c, 0xa3, 0x6e, 0xa0, 0xc7, 0xd2, 0x8a, 0xef, 0xe2, 0x35, 0x68,
	0xd7, 0x09, 0x73, 0xbb, 0x58, 0xb6, 0x24, 0x24, 0x63, 0x79, 0x2c, 0x43, 0x2f, 0x6e, 0xce, 0x0d,
	0x8a, 0x8a, 0x63, 0xd9, 0xd9, 0xe2, 0x58, 0x86, 0x3d, 0x64, 0x7d, 0x50, 0x74, 0x36, 0xc2, 0xf4,
	0x1f, 0x5e, 0xa6, 0xa9, 0xb3, 0x1a, 0x46, 0xd2, 0x31, 0x6b, 0xe6, 0x10, 0xf6, 0x90, 0xf5, 0x61,
	0x74, 0x24, 0xd3, 0x12, 0x92, 0x85, 0xb5, 0x5b, 0x4b, 0x0e, 0xa8, 0xb0, 0xec, 0x55, 0x34, 0xa9,
	0x4e, 0x26, 0x2b, 0xf8, 0x74, 0xfe, 0x74, 0xf7, 0x51, 0xea, 0x6b, 0x4c, 0xe2, 0x4e, 0x9b, 0xc2,
	0x22, 0xfe, 0x9d, 0x30, 0x89, 0xef, 0x45, 0xf6, 0x54, 0x6a, 0x8b, 0x25, 0xd2, 0xec, 0xa1, 0xe9,
	0xef, 0xde, 0x03, 0x1b, 0x7e, 0x39, 0xf4, 0xfd, 0xd8, 0xba, 0x86, 0x1e, 0x53, 0xee, 0xea, 0x77,
	0xc2, 0x44, 0x9b, 0xb1, 0x4c, 0xb6, 0xf1, 0xf6, 0x5e, 0x57, 0xaf, 0x81, 0xa4, 0x70, 0x7a, 0xe1,
	0x29, 0xb8, 0x06, 0x4a, 0x20, 0x63, 0x99, 0x9a, 0x91, 0x05, 0x81, 0x93, 0xfa, 0x0b, 0x8c, 0x2c,
	0x04, 0xc4, 0x64, 0x64, 0x01, 0x19, 0x4b, 0x5e, 0x9c, 0xd8, 0x43, 0xd3, 0x9f, 0x19, 0x85, 0xdb,
	0x31, 0x8b, 0x2e, 0x1c, 0x93, 0x4b, 0xa6, 0x64, 0xf5, 0xbf, 0xda, 0xee, 0xf0, 0x07, 0x49, 0xd4,
	0x95, 0x66, 0xc6, 0x48, 0xe7, 0x03, 0x07, 0x48, 0xb9, 0xf6, 0x90, 0xf5, 0x31, 0x45, 0x78, 0x92,
	0xcc, 0x86, 0xc9, 0x0a, 0x8b, 0x85, 0xcc, 0xc7, 0x28, 0x4f, 0x78, 0x62, 0xc0, 0x16, 0x2b, 0xff,
	0xe8, 0x27, 0xcb, 0x11, 0x86, 0x23, 0x26, 0xec, 0x26, 0xbc, 0x86, 0x67, 0x0b, 0x6a, 0xc8, 0xc2,
	0xb3, 0x95, 0x34, 0xd0, 0x91, 0xbc, 0xf8, 0xe9, 0xca, 0x04, 0xe7, 0x80, 0x24, 0x36, 0x5d, 0x20,
	0xa4, 0x6c, 0x7a, 0x2b, 0x2b, 0x08, 0x69, 0x7e, 0xa1, 0x47, 0x1d, 0x0c, 0x27, 0xdd, 0xca, 0xf4,
	0x6a, 0x18, 0xc2, 0x1e, 0xb2, 0xee, 0xa3, 0x93, 0x3d, 0x22, 0x94, 0x3f, 0x65, 0xac, 0xcd, 0x88,
	0x9d, 0xba, 0x98, 0xad, 0xf1, 0x0e, 0x03, 0xba, 0x0a, 0x12, 0x66, 0xea, 0x68, 0x6e, 0xd4, 0xf0,
	0x73, 0xc6, 0x3a, 0x35, 0x94, 0x74, 0x33, 0xc8, 0xf6, 0x4f, 0xc8, 0x17, 0x0e, 0x99, 0x63, 0x5a,
	0x9f, 0xc9, 0x1b, 0x43, 0x01, 0x91, 0xb6, 0x8d, 0xc8, 0x17, 0x99, 0x94, 0xd1, 0xc9, 0x8b, 0x6b,
	0x6d, 0x5e, 0x04, 0x2a, 0x28, 0x2b, 0x5f, 0xff, 0xb5, 0x11, 0xb0, 0x54, 0xa2, 0x2e, 0x36, 0xd6,
	0x1b, 0xe8, 0xf1, 0xd4, 0x32, 0x99, 0xd0, 0x47, 0x48, 0x57, 0xcf, 0x5a, 0x03, 0xc0, 0xcc, 0x6f,
	0xbc, 0x96, 0x16, 0x46, 0x99, 0xee, 0x82, 0xc2, 0x24, 0xc0, 0xd4, 0xfe, 0x14, 0x40, 0x7e, 0xab,
	0x25, 0x51, 0x29, 0x78, 0x61, 0xb3, 0xdc, 0x82, 0x92, 0xe6, 0xd0, 0x63, 0x1c, 0x48, 0x8e, 0x66,
	0x5a, 0xce, 0x09, 0x53, 0x39, 0x22, 0x3b, 0xbb, 0x13, 0x17, 0xd1, 0x24, 0x47, 0x31, 0x91, 0x10,
	0x2d, 0xe7, 0xb4, 0xa9, 0x1c, 0x19, 0x91, 0x2d, 0x6a, 0x16, 0x1d, 0x94, 0x49, 0x1a, 0x14, 0x73,
	0x3c, 0x8f, 0xe0, 0xe5, 0xf4, 0xe9, 0x46, 0xda, 0x27, 0x8e, 0x8a, 0xcd, 0x7d, 0x12, 0xd9, 0xd2,
	0x99, 0x2f, 0x08, 0x26, 0x64, 0xc0, 0xf5, 0xf9, 0x44, 0x8e, 0xff, 0xd5, 0x0b, 0xaf, 0xcc, 0x2f,
	0xbc, 0xf2, 0xaa, 0x7a, 0xdf, 0x29, 0x84, 0x16, 0x55, 0x73, 0x53, 0x3a, 0x5b, 0x62, 0xe9, 0xe3,
	0x9c, 0xb3, 0x45, 0x86, 0x18, 0xcf, 0x2a, 0x2f, 0xb7, 0xd9, 0xcc, 0x6d, 0xac, 0x9f, 0x66, 0x53,
	0xa8, 0xb4, 0x09, 0x39, 0x2e, 0x05, 0xd9, 0x43, 0xd3, 0xff, 0xd7, 0x21, 0x38, 0xbb, 0x84, 0xec,
	0x58, 0x93, 0xec, 0x8a, 0xf4, 0x5c, 0xc9, 0x6e, 0x9f, 0x22, 0x7f, 0x4d, 0x2b, 0xc8, 0x75, 0x17,
	0xb9, 0x5a, 0xc1, 0xfe, 0x54, 0x16, 0x4b, 0x92, 0x45, 0x1a, 0x15, 0x22, 0xe4, 0x58, 0xa4, 0xd1,
	0xcc, 0x1e, 0xa5, 0x7d, 0x5c, 0xea, 0x7b, 0x84, 0x1d, 0xa1, 0x60, 0x39, 0x9d, 0x2b, 0x1e, 0xe4,
	0xad, 0x34, 0x89, 0xa7, 0xd6, 0xd7, 0x71, 0x33, 0x91, 0xa5, 0xe8, 0x96, 0x23, 0x09, 0x9f, 0xd5,
	0x87, 0x05, 0xed, 0x02, 0x55, 0x04, 0xaf, 0xe3, 0x4c, 0x7e, 0x1d, 0x0c, 0x02, 0x7a, 0x8f, 0x23,
	0xda, 0xe7, 0x62, 0x06, 0xcf, 0x16, 0xd4, 0x21, 0x26, 0xb1, 0xbf, 0x8e, 0x6c, 0x4a, 0x52, 0x29,
	0x1e, 0x22, 0x57, 0xd4, 0x73, 0x3e, 0x67, 0xb4, 0x54, 0x98, 0x64, 0x38, 0x53, 0x64, 0xe4, 0x0e,
	0x73, 0x3c, 0xa9, 0x70, 0x8d, 0x5c, 0x85, 0x72, 0x3a, 0x97, 0xaf, 0xe4, 0x9a, 0x13, 0xd3, 0xd6,
	0x7a, 0x0d, 0x59, 0x1a, 0x96, 0x5c, 0x1b, 0x4f, 0x16, 0x94, 0x45, 0x2e, 0x8d, 0x66, 0x3d, 0x77,
	0x2a, 0x6c, 0x5c, 0xa7, 0x7e, 0xdc, 0x62, 0x0c, 0xcc, 0xc2, 0x46, 0x0d, 0x65, 0x2c, 0x35, 0x50,
	0x4c, 0x24, 0xb3, 0x6f, 0x63, 0x5e, 0xcc, 0x5d, 0x8b, 0x1a, 0xb2, 0xcf, 0xa9, 0x74, 0x55, 0x01,
	0x23, 0xcf, 0xb9, 0xe3, 0xe1, 0x7b, 0x05, 0x02, 0x46, 0x05, 0x26, 0x59, 0x20, 0xe8, 0xbb, 0x0a,
	0xf2, 0xe1, 0xee, 0x75, 0x48, 0xdb, 0x8a, 0xd7, 0xfd, 0x70, 0xcd, 0xf1, 0x73, 0x09, 0x64, 0x0a,
	0xe9, 0xb1, 0x67, 0x37, 0x25, 0x25, 0x45, 0xda, 0xb0, 0x05, 0xd7, 0x4b, 0x20, 0x2a, 0xed, 0x93,
	0x3d, 0x7a, 0xc0, 0x81, 0xa6, 0xdd, 0xa5, 0x41, 0xb4, 0xa5, 0x88, 0x5d, 0x2f, 0x29, 0x5e, 0x8a,
	0x12, 0xc2, 0x38, 0xd5, 0x6b, 0xaa, 0x78, 0xe4, 0x76, 0x40, 0x67, 0x31, 0x48, 0xbc, 0x30, 0x28,
	0xd0, 0x1c, 0xa8, 0xb8, 0x1e, 0xc3, 0xd3, 0x90, 0x06, 0x5e, 0x29, 0xfe, 0x4c, 0xc1, 0x3a, 0x62,
	0x25, 0xf7, 0x49, 0x70, 0x8e, 0x65, 0xd5, 0x1a, 0xfc, 0x59, 0xc5, 0x38, 0x7f, 0xfc, 0x35, 0x60,
	0x8f, 0x6e, 0xc8, 0x17, 0x42, 0xd8, 0x95, 0x5d, 0x3f, 0xf1, 0xe8, 0xd6, 0x3d, 0x9b, 0xbf, 0x75,
	0x05, 0xc8, 0x38, 0xfc, 0x1f, 0x55, 0xe4, 0x3d, 0x60, 0x24, 0xe4, 0x05, 0x41, 0xaa, 0xa2, 0xcd,
	0x93, 0xf7, 0x64, 0x90, 0x39, 0xfb, 0x58, 0x99, 0x5c, 0xc5, 0xeb, 0xa3, 0x60, 0x72, 0x55, 0xdc,
	0xd4, 0x05, 0x9d, 0x48, 0x9a, 0xdd, 0x4e, 0xec, 0x21, 0xab, 0x25, 0xed, 0xe3, 0x6e, 0xd0, 0xf1,
	0x82, 0x19, 0xdf, 0xef, 0x41, 0x92, 0x75, 0x58, 0x7f, 0x13, 0xfe, 0x29, 0xe9, 0x7e, 0x28, 0x1a,
	0xcc, 0x2e, 0x7a, 0x73, 0x8e, 0x8f, 0x03, 0xd7, 0x89, 0x72, 0xee, 0x87, 0x79, 0x70, 0x93, 0xfd,
	0xa6, 0x11, 0x68, 0x0f, 0x59, 0x9f, 0xae, 0x20, 0x3b, 0xb7, 0x40, 0x2e, 0x2d, 0x8e, 0x55, 0x73,
	0xb7, 0xde, 0x78, 0xe9, 0xde, 0x65, 0x6e, 0x81, 0x40, 0x6a, 0x26, 0xd5, 0x54, 0x9b, 0x70, 0x33,
	0x14, 0x81, 0x3c, 0xce, 0x17, 0x28, 0x1d, 0x52, 0x98, 0x71, 0xc9, 0xe8, 0xfa, 0x3d, 0x16, 0x2c,
	0x8d, 0x3d, 0x81, 0x98, 0xaf, 0xdf, 0x53, 0x70, 0x59, 0xb6, 0xfc, 0x13, 0x12, 0xd7, 0x91, 0x44,
	0x4e, 0x10, 0xfb, 0xe4, 0x4e, 0x81, 0xef, 0xe7, 0xa9, 0xbc, 0x15, 0x8c, 0x49, 0x31, 0xb9, 0xca,
	0x01, 0x2e, 0x41, 0x00, 0xdf, 0x74, 0x54, 0x57, 0xe5, 0xe0, 0x20, 0xa1, 0xdb, 0xf3, 0x5c, 0x91,
	0xc2, 0x87, 0xa3, 0x7a, 0xec, 0xfe, 0xdb, 0xc8, 0x32, 0xbc, 0x09, 0x79, 0x32, 0xd7, 0xca, 0x81,
	0x0e, 0x44, 0x7a, 0x6b, 0x10, 0x99, 0x34, 0x87, 0x06, 0xf7, 0x19, 0x9a, 0xfe, 0xdb, 0x23, 0x68,
	0x6f, 0x7d, 0x79, 0xee, 0x4e, 0xe8, 0x41, 0x14, 0xb0, 0xd8, 0xda, 0x96, 0xf4, 0x3e, 0xec, 0xfd,
	0x47, 0x1e, 0x7d, 0x9c, 0x33, 0x6a, 0x4f, 0x17, 0x30, 0x51, 0x3a, 0xd8, 0xb4, 0xac, 0xf9, 0x7e,
	0x02, 0x65, 0x96, 0xd4, 0xc5, 0x37, 0xd0, 0xe3, 0xa6, 0x47, 0x38, 0x14, 0xf6, 0xd8, 0x00, 0x98,
	0xca, 0x06, 0x83, 0x83, 0xeb, 0xc8, 0x63, 0xd9, 0xc7, 0x37, 0x4e, 0x64, 0x8b, 0x92, 0xb2, 0x25,
	0x69, 0x21, 0xcd, 0x13, 0x9d, 0x81, 0x63, 0xef, 0x60, 0xe6, 0x1d, 0x8b, 0xe3, 0xd9, 0xe2, 0xd2,
	0xdc, 0xc2, 0xd2, 0x44, 0xeb, 0xe4, 0xd7, 0x24, 0x0c, 0xad, 0x93, 0xb2, 0x0b, 0xcb, 0x5b, 0x40,
	0x96, 0xe1, 0xb1, 0x86, 0x93, 0xa6, 0xee, 0xa6, 0xf9, 0xd9, 0x6d, 0x72, 0x8d, 0x37, 0x4b, 0x7e,
	0x72, 0xc1, 0xd0, 0x2c, 0x29, 0xdb, 0xb8, 0x8b, 0x5f, 0xe7, 0x33, 0xa9, 0x3e, 0x55, 0x60, 0x98,
	0x49, 0x05, 0x60, 0x2c, 0xeb, 0xba, 0x28, 0x4b, 0x79, 0x19, 0xc0, 0x54, 0x96, 0x0c, 0xc8, 0x76,
	0xee, 0x16, 0x3a, 0x92, 0x17, 0xb7, 0xff, 0xac, 0xa9, 0x61, 0x1a, 0x28, 0x2b, 0x6a, 0xf9, 0x81,
	0xfd, 0xe8, 0x60, 0x7d, 0x79, 0x4e, 0xf1, 0x8b, 0xb2, 0xe6, 0xd1, 0x3e, 0x70, 0xa4, 0x82, 0x57,
	0x47, 0x43, 0x17, 0x5b, 0x4f, 0x64, 0x7c, 0xac, 0x78, 0x96, 0xa4, 0x23, 0x81, 0x74, 0x42, 0x0a,
	0x20, 0x12, 0x18, 0x99, 0xcf, 0x09, 0x0a, 0xf5, 0x5a, 0xc1, 0xed, 0x8e, 0x75, 0x24, 0x5b, 0x06,
	0x64, 0xc8, 0x17, 0x5b, 0x92, 0xaa, 0xb9, 0x68, 0x29, 0xc5, 0x2c, 0x06, 0x39, 0xc5, 0x2c, 0x06,
	0xbd, 0x8a, 0x79, 0x13, 0x3d, 0x2e, 0xc5, 0xf5, 0x79, 0x61, 0xe1, 0xe5, 0xe9, 0xd9, 0x99, 0xe7,
	0x5f, 0xd5, 0xc4, 0x35, 0x59, 0x80, 0x2c, 0x2d, 0x60, 0x3e, 0x69, 0x2d, 0xec, 0xde, 0xea, 0x52,
	0xdd, 0xd5, 0x51, 0x48, 0x03, 0x43, 0x43, 0xa5, 0x3e, 0xed, 0xe2, 0x90, 0x87, 0xca, 0xce, 0x6f,
	0x8b, 0x15, 0x49, 0xdd, 0x8e, 0xd4, 0x59, 0x39, 0x97, 0xe3, 0x98, 0xa7, 0xa0, 0x24, 0x43, 0x30,
	0x80, 0x70, 0x0f, 0x0e, 0x7d, 0x38, 0x1a, 0xac, 0x22, 0xea, 0x23, 0xd4, 0xab, 0x22, 0x03, 0xaa,
	0xd7, 0x78, 0x2f, 0xa2, 0x49, 0x48, 0x5f, 0xf3, 0x02, 0x77, 0x15, 0xb7, 0x3b, 0x24, 0xff, 0x0d,
	0xac, 0xdd, 0xc1, 0x4d, 0x88, 0xec, 0xa0, 0x60, 0x74, 0x4c, 0x6a, 0xc5, 0x6c, 0xa8, 0x35, 0xf7,
	0xc9, 0x9c, 0xe6, 0xea, 0xc0, 0x5e, 0x2d, 0x5e, 0x41, 0x16, 0xa4, 0x37, 0xe5, 0xa7, 0xc7, 0x35,
	0xe7, 0xbf, 0x4c, 0x7e, 0xaf, 0x42, 0xdf, 0x42, 0xc7, 0xd9, 0xec, 0x03, 0x89, 0xe6, 0x9f, 0xd5,
	0x71, 0x33, 0xdc, 0xc2, 0xba, 0xcd, 0x67, 0x11, 0x52, 0xba, 0x9c, 0x01, 0x4c, 0xcf, 0x07, 0x3b,
	0xaf, 0x49, 0x56, 0x02, 0x24, 0x89, 0x2e, 0x9c, 0x36, 0xd4, 0xa1, 0x20, 0x7a, 0x75, 0xe2, 0x35,
	0x74, 0x40, 0x2c, 0x61, 0x46, 0x11, 0x8e, 0x19, 0xd7, 0x77, 0x4f, 0x9a, 0xf0, 0x01, 0x56, 0x52,
	0xd3, 0x09, 0x9a, 0xd8, 0xcf, 0x29, 0x29, 0xcd, 0x34, 0xda, 0xff, 0x02, 0xc6, 0x8d, 0xc2, 0x8e,
	0xb4, 0x68, 0x62, 0x83, 0x1b, 0xa8, 0x0e, 0x31, 0xfb, 0x69, 0x8a, 0x19, 0xe5, 0x03, 0x29, 0x86,
	0xed, 0x82, 0x79, 0xe6, 0x75, 0x5c, 0xb6, 0xd8, 0x35, 0x74, 0x28, 0x75, 0xeb, 0x8c, 0xb1, 0x98,
	0x4a, 0xad, 0x8d, 0x26, 0x88, 0xa4, 0x9f, 0xe7, 0xf9, 0x75, 0x39, 0x5f, 0x88, 0xf3, 0xef, 0xa2,
	0x63, 0x42, 0x28, 0xac, 0x91, 0x95, 0xd5, 0xd5, 0x25, 0x6d, 0x4f, 0xe4, 0x03, 0x4d, 0x14, 0xe8,
	0xac, 0x90, 0x7f, 0x83, 0x01, 0x87, 0xf2, 0x89, 0x78, 0x2e, 0xe1, 0x8a, 0x51, 0x60, 0x9e, 0xff,
	0x81, 0xd1, 0xd1, 0xd3, 0x14, 0x68, 0x2d, 0x8f, 0x20, 0x73, 0x80, 0xa9, 0xa0, 0xfd, 0x5a, 0xd4,
	0x90, 0xa9, 0x4c, 0x19, 0x22, 0xaf, 0xc0, 0x99, 0x63, 0xfa, 0x97, 0x11, 0x98, 0xf5, 0xcf, 0xd0,
	0xde, 0xc0, 0x52, 0x53, 0xe4, 0xf7, 0xdc, 0x05, 0xe7, 0x4c, 0xbe, 0x88, 0x9f, 0x7b, 0xdd, 0xa8,
	0x61, 0x2b, 0x54, 0xf1, 0x3c, 0x45, 0xb2, 0x68, 0x14, 0xa7, 0xf3, 0xcb, 0xa2, 0x08, 0xd3, 0xaa,
	0xb5, 0x24, 0x49, 0xf1, 0x72, 0xe4, 0x6d, 0x39, 0xcd, 0x6d, 0xb3, 0x93, 0x72, 0x9a, 0x2f, 0x71,
	0xd1, 0x3c, 0x93, 0xe5, 0xd4, 0xbb, 0x3e, 0x67, 0xce, 0xa5, 0x85, 0x52, 0x58, 0x6c, 0xbc, 0x83,
	0x62, 0xa5, 0x51, 0xa4, 0xdc, 0x35, 0x1f, 0x5e, 0xe3, 0x28, 0x2a, 0x10, 0x53, 0xd7, 0x0f, 0x49,
	0x5d, 0x63, 0x30, 0xb2, 0xde, 0xcf, 0xe4, 0xf4, 0x3e, 0x85, 0x48, 0x13, 0xcf, 0x12, 0xe7, 0x9d,
	0xed, 0x78, 0x75, 0x75, 0x49, 0x6d, 0x63, 0xdc, 0xbb, 0x58, 0x05, 0x62, 0xba, 0xa6, 0x49, 0x3b,
	0x33, 0x70, 0xe7, 0x60, 0x4f, 0x50, 0x3e, 0x97, 0x90, 0xbb, 0x9c, 0x9d, 0x99, 0x01, 0x16, 0x10,
	0xd1, 0xeb, 0x92, 0x0e, 0x2b, 0xfd, 0x28, 0x47, 0x87, 0x95, 0x02, 0xb2, 0x8b, 0x52, 0xf1, 0x53,
	0xd7, 0xa9, 0x43, 0x9e, 0x9f, 0xba, 0x8e, 0x33, 0xd1, 0xbf, 0xe3, 0x4a, 0xc7, 0x28, 0xff, 0x9f,
	0x0e, 0xc1, 0xc5, 0xdc, 0x21, 0xd0, 0x90, 0x05, 0x63, 0x20, 0xed, 0xa7, 0xa6, 0xf4, 0x95, 0x79,
	0x3f, 0xc9, 0x88, 0x6c, 0x73, 0x23, 0x74, 0x5a, 0x5a, 0x31, 0x54, 0x58, 0xc9, 0x16, 0xb1, 0x20,
	0x77, 0xcf, 0xe4, 0xac, 0x2f, 0x23, 0x5a, 0x3a, 0xaa, 0x8d, 0xf9, 0x6a, 0x9d, 0xf1, 0x8e, 0xea,
	0x8c, 0x1f, 0xbc, 0xce, 0x1b, 0xa9, 0x35, 0x83, 0x16, 0xe1, 0xc9, 0xce, 0x27, 0x42, 0xc2, 0xa9,
	0x4f, 0x5f, 0x3c, 0xd3, 0x3f, 0x5c, 0x03, 0x83, 0x91, 0xd5, 0x7b, 0xe1, 0x35, 0xc7, 0x5a, 0x49,
	0x97, 0x64, 0x4b, 0x3a, 0xf0, 0x4e, 0xe5, 0x11, 0x25, 0x7e, 0xdc, 0x3d, 0x91, 0x25, 0x1f, 0xa9,
	0x81, 0xc4, 0x66, 0xba, 0x93, 0xa4, 0x6f, 0xc4, 0xf8, 0x3c, 0xd9, 0xa3, 0x70, 0x31, 0x34, 0x67,
	0x72, 0x2b, 0x91, 0x46, 0xe7, 0x63, 0xe8, 0xa4, 0x46, 0xca, 0xf5, 0xfa, 0x9e, 0x2a, 0x20, 0xfb,
	0x7a, 0x95, 0x26, 0xe3, 0x6c, 0x7d, 0x35, 0xb2, 0x6f, 0x16, 0xda, 0x8e, 0xe7, 0x9b, 0xf7, 0x84,
	0x09, 0x69, 0x34, 0xef, 0x97, 0x77, 0x67, 0xe0, 0xaa, 0x25, 0x3f, 0x99, 0xb7, 0x8d, 0x35, 0x60,
	0x61, 0xc1, 0x94, 0x25, 0xeb, 0xa3, 0x60, 0x03, 0xb0, 0x70, 0x30, 0x5c, 0xdc, 0xf4, 0xbd, 0x00,
	0x4b, 0xfc, 0x8d, 0xee, 0xeb, 0x50, 0x84, 0xcc, 0xde, 0x67, 0xff, 0x17, 0x1a, 0xe4, 0x04, 0x22,
	0x68, 0xc4, 0xd6, 0x47, 0xd0, 0x13, 0x1d, 0xf8, 0x4f, 0x3d, 0x9e, 0x69, 0x1c, 0x8e, 0xf3, 0xda,
	0x85, 0xd9, 0x0c, 0x93, 0xec, 0x0c, 0x19, 0x06, 0x92, 0xc1, 0x1b, 0x21, 0x2d, 0xdc, 0x0f, 0x1d,
	0xb7, 0x8f, 0xc2, 0x75, 0x58, 0x7e, 0xe1, 0x37, 0x41, 0x62, 0x40, 0x52, 0x84, 0x4c, 0x8a, 0x74,
	0xe8, 0x94, 0xa1, 0x58, 0x19, 0x20, 0x59, 0x08, 0x4a, 0xc1, 0xa1, 0x40, 0xf0, 0x3e, 0xc9, 0xe0,
	0xcc, 0x95, 0x9b, 0x15, 0x78, 0xda, 0x50, 0xa0, 0x82, 0x90, 0x68, 0xb0, 0xdc, 0xc4, 0xd8, 0x1e,
	0x9a, 0xfe, 0x2d, 0x2a, 0x77, 0xab, 0x63, 0xa7, 0x49, 0x2f, 0xbd, 0xaa, 0xfa, 0x3c, 0x70, 0x79,
	0x4e, 0xae, 0x76, 0x28, 0x85, 0x18, 0xc5, 0x26, 0x1f, 0x57, 0x1d, 0xd9, 0xb8, 0x98, 0x2d, 0xad,
	0xf0, 0x52, 0x2f, 0xbd, 0x96, 0x80, 0x1a, 0xcb, 0x7f, 0x47, 0x72, 0x2e, 0x4b, 0x3f, 0x12, 0xdf,
	0x2c, 0x79, 0x71, 0x92, 0xe3, 0x5c, 0x96, 0x83, 0x96, 0xe4, 0xfc, 0xba, 0xfc, 0x53, 0xc1, 0x81,
	0x61, 0x93, 0xad, 0xdb, 0x11, 0xcc, 0x6c, 0x39, 0x9e, 0xef, 0xac, 0xf9, 0x29, 0x36, 0x47, 0xfc,
	0x9d, 0x8b, 0x37, 0xf6, 0x52, 0x0b, 0xb4, 0x61, 0xa8, 0x25, 0x37, 0xd0, 0x86, 0xa1, 0x06, 0x43,
	0xc0, 0x8b, 0x2c, 0x4a, 0x73, 0x3a, 0x8a, 0x71, 0xc2, 0x64, 0xdb, 0x62, 0x45, 0x3c, 0x99, 0xd7,
	0x31, 0x0d, 0x98, 0x25, 0x1e, 0x9a, 0xa2, 0x8a, 0x6a, 0xd1, 0xd2, 0xbe, 0x3c, 0x59, 0xac, 0x6e,
	0x4b, 0x3b, 0x52, 0x2c, 0xaa, 0x96, 0x55, 0xfc, 0x6a, 0x05, 0x76, 0xae, 0xc2, 0x2d, 0x2d, 0xbb,
	0x1f, 0x05, 0xcc, 0xf4, 0xef, 0x1f, 0x06, 0x8b, 0x0d, 0xf1, 0x7a, 0xc6, 0x22, 0x9a, 0x94, 0x02,
	0xdb, 0xe4, 0x58, 0x2d, 0x98, 0x10, 0xa6, 0x31, 0x3a, 0xa2, 0xc5, 0x59, 0x36, 0x5b, 0x0f, 0xe4,
	0x80, 0xfa, 0x54, 0x39, 0xdf, 0x91, 0x1a, 0x9c, 0x6b, 0x62, 0x62, 0x42, 0xf4, 0x18, 0x7b, 0x0f,
	0x1d, 0x95, 0xbf, 0x52, 0x1e, 0x8b, 0x3b, 0x97, 0x57, 0xb6, 0x8c, 0x92, 0x6c, 0x12, 0x04, 0x84,
	0x0d, 0xb3, 0x0c, 0x03, 0x5f, 0x80, 0x23, 0x39, 0x85, 0xe4, 0x0c, 0x94, 0x0a, 0x92, 0x76, 0x43,
	0x41, 0x45, 0x20, 0x5b, 0x52, 0x86, 0x4a, 0xcc, 0x79, 0xee, 0x50, 0x71, 0x84, 0x74, 0x6d, 0x51,
	0xe2, 0x92, 0x50, 0xc5, 0xa7, 0xd2, 0xf8, 0x6b, 0x5d, 0x88, 0xfe, 0x01, 0xf1, 0xad, 0x73, 0x1b,
	0x2f, 0x81, 0x4c, 0xb3, 0x40, 0x8a, 0x26, 0x10, 0x7b, 0xc8, 0x5a, 0x46, 0x87, 0xc5, 0x87, 0xd4,
	0x12, 0x8e, 0x17, 0x6e, 0x1b, 0x0b, 0x57, 0x30, 0x79, 0x26, 0x1b, 0x02, 0x8d, 0x5d, 0x8f, 0x86,
	0x75, 0xc9, 0x51, 0xff, 0x88, 0xfc, 0xbe, 0x4a, 0xa2, 0xaf, 0x74, 0xe5, 0x97, 0x04, 0xf9, 0x7d,
	0x95, 0x44, 0x4f, 0xef, 0xfc, 0x92, 0xe8, 0xb1, 0x6d, 0x2a, 0x69, 0x49, 0x9a, 0xe2, 0xb7, 0x42,
	0x2f, 0xe0, 0xa3, 0x65, 0x9e, 0x62, 0x09, 0x61, 0x2c, 0xed, 0x26, 0x3a, 0x24, 0xb0, 0xf0, 0x00,
	0x10, 0x2f, 0xee, 0x8c, 0xb1, 0x38, 0x19, 0x92, 0x67, 0xe4, 0x22, 0xc0, 0xfc, 0xdd, 0x50, 0x5e,
	0xa4, 0x79, 0x4f, 0x69, 0x28, 0x63, 0xa9, 0xf2, 0x1a, 0xa1, 0x24, 0xa4, 0x78, 0x8d, 0x28, 0x98,
	0x1c, 0x7f, 0xef, 0xa9, 0x74, 0xbc, 0x41, 0x76, 0xcd, 0x08, 0xc3, 0x92, 0x17, 0x6c, 0xaa, 0x57,
	0xd2, 0x7c, 0x9c, 0x64, 0x7a, 0xcd, 0xe5, 0xdf, 0x52, 0x2e, 0xd5, 0xfc, 0x8a, 0xaf, 0x99, 0x1f,
	0x99, 0xd7, 0x0a, 0xc0, 0x93, 0x4b, 0x0f, 0x99, 0x91, 0x07, 0x33, 0xb6, 0xbe, 0x8d, 0xce, 0xc8,
	0x9b, 0x0d, 0x16, 0x30, 0x76, 0xe9, 0x13, 0x11, 0x62, 0xcf, 0x3f, 0x9b, 0xb7, 0x37, 0x8d, 0xf0,
	0x22, 0x02, 0xf0, 0xba, 0x14, 0x2b, 0x8d, 0x2c, 0xce, 0x59, 0xf2, 0xbf, 0x9b, 0x13, 0x2b, 0x2d,
	0x05, 0x18, 0x9b, 0xfe, 0x31, 0x95, 0x42, 0x41, 0x5b, 0x96, 0xc2, 0x56, 0x3e, 0x85, 0xe2, 0x08,
	0xe9, 0xb0, 0x13, 0xd9, 0x3c, 0x8f, 0x29, 0xdd, 0xe9, 0x7d, 0x5d, 0xe4, 0xc6, 0x79, 0x8e, 0xe6,
	0x26, 0x84, 0xf1, 0xf6, 0xa0, 0x9c, 0x82, 0x85, 0x96, 0x55, 0x45, 0x48, 0x93, 0xe3, 0x8b, 0xbe,
	0x9e, 0x8d, 0x86, 0x7d, 0x66, 0x8c, 0x49, 0x10, 0x72, 0x4a, 0x5b, 0x3f, 0xcb, 0x11, 0x47, 0xbf,
	0xe6, 0xb9, 0x2e, 0x0e, 0x54, 0x3d, 0x74, 0x0f, 0x70, 0x8e, 0x89, 0xe9, 0x29, 0x79, 0x56, 0xe0,
	0x2d, 0xac, 0xf8, 0x5a, 0x18, 0x49, 0x41, 0x4e, 0x9e, 0xce, 0x9b, 0x42, 0x03, 0xb8, 0x68, 0xb9,
	0xdd, 0x45, 0xc7, 0xe4, 0x19, 0x4a, 0x3f, 0x82, 0x72, 0x54, 0xce, 0xab, 0x00, 0x98, 0x1d, 0x27,
	0x99, 0x74, 0x92, 0x65, 0x3a, 0x47, 0x8e, 0x92, 0x30, 0xca, 0x59, 0x1c, 0x12, 0xc2, 0x38, 0x22,
	0x6f, 0x48, 0xa4, 0x93, 0x60, 0xb9, 0x6d, 0x52, 0x0e, 0xe9, 0x94, 0x21, 0xd9, 0xa6, 0xd5, 0xa5,
	0x33, 0x96, 0x91, 0x00, 0x3f, 0xbc, 0x77, 0x23, 0x74, 0x71, 0xce, 0x19, 0xab, 0x82, 0x8c, 0x0d,
	0xdc, 0x94, 0x16, 0x70, 0x0b, 0x27, 0x8b, 0x01, 0x61, 0x1b, 0x05, 0xf9, 0xce, 0x5b, 0xc0, 0x06,
	0xa4, 0xc9, 0x23, 0x58, 0xc2, 0x24, 0x34, 0x4e, 0xda, 0x19, 0x6d, 0xb9, 0x4a, 0x9c, 0x09, 0x5f,
	0xdd, 0xcf, 0x16, 0xac, 0xee, 0x2c, 0xbc, 0x3f, 0xfb, 0x22, 0x4f, 0xa2, 0xe4, 0xd9, 0xb7, 0x3e,
	0x2e, 0x14, 0xd4, 0x28, 0xe1, 0xfa, 0xe3, 0xa4, 0x13, 0x1a, 0xe9, 0x31, 0x82, 0x95, 0x01, 0xd6,
	0x3b, 0x6b, 0x92, 0x4b, 0x45, 0x0b, 0x13, 0xba, 0xb7, 0x49, 0x32, 0x40, 0x51, 0x7e, 0x2e, 0xcf,
	0xe1, 0x41, 0x46, 0x49, 0xf2, 0x34, 0x01, 0x91, 0xf3, 0xed, 0xa1, 0xe9, 0xff, 0x6e, 0x14, 0xaa,
	0x5d, 0xc1, 0xcd, 0x88, 0xde, 0xc7, 0x32, 0x46, 0xd7, 0xf3, 0x1b, 0xcc, 0xfc, 0x23, 0xd7, 0xe8,
	0x9a, 0x23, 0x4c, 0xbc, 0x18, 0xcf, 0x83, 0x8b, 0xf0, 0x94, 0x74, 0xd3, 0x00, 0xfd, 0x20, 0xf3,
	0x48, 0xcc, 0x08, 0x6a, 0xf3, 0x71, 0x26, 0x77, 0x46, 0xd2, 0x6c, 0xe0, 0x24, 0x53, 0x4b, 0x28,
	0x6a, 0xfd, 0x21, 0x15, 0x6f, 0xb6, 0x84, 0xd2, 0x61, 0x05, 0xa5, 0xcb, 0xf6, 0x50, 0xcc, 0xea,
	0xa2, 0x67, 0xeb, 0x33, 0xb8, 0xe2, 0xb0, 0x16, 0x31, 0x4e, 0xe3, 0x8a, 0xae, 0x6e, 0x77, 0xbc,
	0xa0, 0x95, 0x7f, 0xc3, 0xd4, 0x80, 0xd9, 0x82, 0xf5, 0x30, 0x13, 0xe2, 0x03, 0xbe, 0x78, 0xf3,
	0xc3, 0x4c, 0xe8, 0xd0, 0x6c, 0xe1, 0xeb, 0xd2, 0xc5, 0x32, 0xc6, 0x41, 0xfa, 0x45, 0xce, 0xc5,
	0x52, 0xc1, 0x98, 0xe4, 0x0b, 0x2b, 0x38, 0x48, 0xbb, 0x94, 0x5a, 0x5b, 0x07, 0x8a, 0xfb, 0x7e,
	0xa0, 0xf9, 0xc0, 0x5e, 0xe8, 0x5d, 0x17, 0x78, 0x4b, 0xf6, 0x5f, 0x5f, 0x22, 0x0d, 0x9a, 0x52,
	0xce, 0x0a, 0x8e, 0xb6, 0xbc, 0x66, 0x5e, 0x5c, 0x2f, 0x13, 0x74, 0x07, 0xb5, 0xae, 0x2a, 0xd7,
	0x74, 0x6a, 0x16, 0xf4, 0x66, 0x17, 0x77, 0x71, 0xee, 0x35, 0x5d, 0xc2, 0xe4, 0x09, 0xcb, 0xa6,
	0x7f, 0xa3, 0x02, 0x8a, 0xc0, 0xbb, 0x78, 0x6d, 0xd9, 0x69, 0x61, 0xeb, 0x63, 0xaa, 0x09, 0x28,
	0x4b, 0x5e, 0x8e, 0xf0, 0x96, 0x87, 0xef, 0xe5, 0x9b, 0x80, 0xaa, 0xb8, 0x7c, 0x7f, 0xe5, 0xd7,
	0x55, 0x8f, 0x0a, 0x5e, 0xeb, 0xa9, 0x1e, 0xe5, 0x4a, 0x47, 0x0b, 0x4b, 0xb1, 0x87, 0xa6, 0xff,
	0xb7, 0x0a, 0x88, 0x3f, 0xe7, 0x23, 0x67, 0x9d, 0x86, 0x33, 0x56, 0x0d, 0x0c, 0x49, 0x72, 0x9e,
	0x8d, 0x3c, 0xcf, 0xcf, 0x2e, 0xd9, 0x9b, 0xaa, 0xc7, 0xe5, 0x8c, 0xef, 0xb3, 0xf2, 0xcf, 0x14,
	0x84, 0xf2, 0xa1, 0x10, 0xe3, 0xf9, 0x27, 0xc7, 0x63, 0x03, 0x57, 0xb0, 0xb4, 0xc4, 0xb3, 0xf9,
	0x31, 0x4a, 0xd2, 0x32, 0x33, 0x42, 0xdf, 0xbf, 0x52, 0x05, 0x55, 0xc4, 0x75, 0xa7, 0x8d, 0x75,
	0x21, 0x64, 0x42, 0x12, 0x57, 0x9a, 0x61, 0x54, 0xe0, 0xc3, 0x23, 0x20, 0xc6, 0xd6, 0x6a, 0x64,
	0x66, 0x31, 0xf0, 0xbd, 0x00, 0xa7, 0xa5, 0xe6, 0x92, 0x19, 0x0d, 0x68, 0x12, 0xd2, 0x28, 0xcb,
	0x8a, 0x20, 0x5f, 0xf3, 0x5a, 0x1b, 0x80, 0x2e, 0xb0, 0x2c, 0x56, 0x71, 0xa6, 0x28, 0x04, 0x69,
	0xae, 0x3d, 0x64, 0x75, 0x54, 0x19, 0x67, 0xda, 0x2a, 0xa9, 0xae, 0x5c, 0x19, 0xa7, 0x09, 0xdd,
	0xab, 0xc6, 0xe9, 0x7f, 0x3a, 0x0c, 0x71, 0x3b, 0xef, 0x3a, 0xbe, 0xdf, 0x71, 0x3a, 0x84, 0xc9,
	0xff, 0x90, 0xa2, 0xb6, 0x15, 0x2f, 0x40, 0xc4, 0xb9, 0x6a, 0xdb, 0x14, 0x62, 0x70, 0x7b, 0x4a,
	0x33, 0x61, 0x6d, 0x4e, 0x9a, 0xbe, 0x33, 0xeb, 0x01, 0x65, 0xc4, 0x94, 0xe1, 0x49, 0x0a, 0x20,
	0x28, 0x47, 0x54, 0x5f, 0xc2, 0xb4, 0xc8, 0xb3, 0xf9, 0x0e, 0x87, 0xbd, 0x4a, 0x95, 0x15, 0xcc,
	0xce, 0x16, 0x4e, 0xcb, 0x3c, 0x93, 0xe7, 0xe5, 0x97, 0x96, 0x98, 0x59, 0x37, 0x6f, 0xa2, 0xa3,
	0x9a, 0x1f, 0x5f, 0x5a, 0xde, 0xb9, 0x02, 0x6f, 0xbf, 0x82, 0x22, 0x6f, 0xa5, 0xbd, 0x06, 0x05,
	0xaf, 0x34, 0x45, 0x67, 0x73, 0xb5, 0xc0, 0xd2, 0x24, 0x65, 0x0a, 0x74, 0x52, 0xcd, 0x72, 0x0b,
	0x27, 0x60, 0xc0, 0x2f, 0x95, 0x79, 0x21, 0x67, 0x72, 0x34, 0x9c, 0xa4, 0x1d, 0xd4, 0xdf, 0x17,
	0xb1, 0x87, 0xa6, 0x7f, 0xb5, 0x0a, 0xda, 0x07, 0x1e, 0x59, 0x35, 0x96, 0x07, 0x19, 0x0c, 0x75,
	0x44, 0x90, 0xd6, 0x33, 0x66, 0xc5, 0xb8, 0x04, 0x31, 0xde, 0x04, 0x55, 0x15, 0x9f, 0x28, 0xad,
	0x40, 0x59, 0x6a, 0x28, 0x8e, 0x69, 0xda, 0xd7, 0xd0, 0x51, 0x11, 0x7c, 0x33, 0xc2, 0x71, 0xe8,
	0x6f, 0xa5, 0x05, 0x9e, 0x33, 0x86, 0xe8, 0xd4, 0x50, 0x12, 0x3f, 0x2a, 0x20, 0x75, 0x0a, 0x71,
	0x97, 0x31, 0xd4, 0x21, 0x5f, 0x5e, 0xd5, 0x01, 0xc8, 0x11, 0xd8, 0x15, 0x8f, 0xc0, 0x2d, 0xe9,
	0xe6, 0xa3, 0x0d, 0x81, 0xf9, 0xe6, 0x93, 0x3b, 0x06, 0x8c, 0x4a, 0x7f, 0x0b, 0x01, 0x95, 0xa6,
	0x9c, 0xf2, 0x0d, 0x29, 0xc2, 0x40, 0x8b, 0xb3, 0xcf, 0x27, 0x8a, 0x02, 0x36, 0x17, 0x4a, 0x42,
	0x34, 0xc6, 0x9b, 0x49, 0x39, 0x93, 0x7c, 0xc6, 0x9b, 0x23, 0x7a, 0x0b, 0x41, 0x15, 0x37, 0x20,
	0x70, 0xb9, 0x04, 0x61, 0xa3, 0x9d, 0xeb, 0x2a, 0x24, 0x30, 0x79, 0x22, 0xb3, 0x0c, 0x9a, 0x0a,
	0x1d, 0x8b, 0x4b, 0x2c, 0x14, 0x3c, 0xa6, 0x5c, 0xb9, 0x0b, 0x4c, 0x37, 0x04, 0xb8, 0x35, 0xf7,
	0x5d, 0x42, 0xf4, 0x0c, 0xd9, 0x20, 0xc4, 0x75, 0xb4, 0xc0, 0x22, 0xc7, 0xc3, 0xc2, 0x32, 0x65,
	0x0e, 0x47, 0x88, 0x89, 0x93, 0x1c, 0x0e, 0x27, 0x05, 0x18, 0xcb, 0xba, 0x61, 0x18, 0x3f, 0x2a,
	0x48, 0x2e, 0x1e, 0x3f, 0x2a, 0x4c, 0x36, 0x89, 0x1e, 0x04, 0xb4, 0xed, 0xb5, 0x22, 0xde, 0x36,
	0xf3, 0xe0, 0x49, 0x88, 0x9c, 0xd8, 0x14, 0x4a, 0xbc, 0x8b, 0xb9, 0xb0, 0xdd, 0x0e, 0x03, 0xba,
	0xb6, 0x73, 0xe3, 0x5d, 0x48, 0xa0, 0xa2, 0x15, 0xbe, 0xa2, 0xae, 0x70, 0x16, 0xe9, 0xbb, 0xc0,
	0x9f, 0x97, 0x23, 0x8a, 0x0a, 0x35, 0x0e, 0xe6, 0x5a, 0xd8, 0x4d, 0x7a, 0x0d, 0x26, 0xc1, 0x64,
	0x07, 0xd3, 0x47, 0xe7, 0x32, 0x50, 0xa6, 0xcf, 0xa3, 0x92, 0xc7, 0xba, 0xd7, 0xda, 0x48, 0x62,
	0xeb, 0xb9, 0xc2, 0xc2, 0x0d, 0x5f, 0xe4, 0x19, 0xd5, 0x1b, 0x16, 0x61, 0xce, 0xaa, 0x4a, 0x01,
	0xa6, 0xe8, 0x76, 0x67, 0xcd, 0x8a, 0x5d, 0x57, 0x51, 0x3d, 0x5d, 0xe9, 0xad, 0x09, 0x56, 0x3e,
	0xc8, 0xd5, 0xc5, 0x7f, 0x58, 0x92, 0xa3, 0x35, 0xc3, 0x60, 0x0b, 0x47, 0xc9, 0x6a, 0x78, 0xdd,
	0x63, 0x8f, 0x1d, 0xe7, 0xc8, 0xd1, 0xb2, 0x40, 0x63, 0x24, 0xd3, 0xcf, 0xee, 0x81, 0x53, 0x71,
	0x1e, 0xe3, 0xce, 0x92, 0x17, 0x6c, 0x6a, 0xa1, 0x5c, 0x12, 0x07, 0xcc, 0xa2, 0xf3, 0x42, 0xb9,
	0xb0, 0x6c, 0xe3, 0x68, 0xdf, 0x41, 0x93, 0x3c, 0x94, 0x0c, 0x75, 0xf9, 0xbb, 0x81, 0x6f, 0x47,
	0xba, 0x06, 0xcb, 0x84, 0x90, 0x28, 0x2c, 0x64, 0xcb, 0x79, 0x6a, 0xb9, 0xbc, 0xd1, 0x10, 0x39,
	0xc2, 0x58, 0xae, 0x8c, 0xd0, 0xcb, 0x95, 0xf3, 0xec, 0xa1, 0xe9, 0xaf, 0x8c, 0x80, 0x63, 0x03,
	0x15, 0xa1, 0x74, 0x23, 0x2a, 0x01, 0xfc, 0x00, 0xda, 0x2f, 0xe2, 0xe1, 0x50, 0xc9, 0xcc, 0x94,
	0x31, 0x56, 0x0e, 0x95, 0xc9, 0x1c, 0x90, 0x9f, 0x06, 0xa3, 0x82, 0x18, 0x29, 0xde, 0xce, 0x4d,
	0xec, 0x44, 0x38, 0x4e, 0xe6, 0x9b, 0xe6, 0x78, 0x3b, 0x22, 0x5b, 0x62, 0x09, 0x45, 0x1a, 0x0d,
	0x90, 0xc0, 0xa1, 0x33, 0x9d, 0x0e, 0x1d, 0x67, 0x73, 0x49, 0x22, 0x5b, 0xda, 0xc9, 0x90, 0x27,
	0x32, 0xe0, 0x58, 0xb1, 0x38, 0x9e, 0x3e, 0x59, 0x00, 0x8e, 0x61, 0x27, 0x4d, 0xe5, 0xa5, 0xf9,
	0x92, 0x3b, 0x0e, 0x64, 0xa6, 0x39, 0xb0, 0xbd, 0x0e, 0xf0, 0x2f, 0x56, 0xba, 0x9d, 0xec, 0x23,
	0x31, 0x5a, 0xa6, 0x74, 0xbf, 0x85, 0x1c, 0x96, 0x4c, 0x49, 0xac, 0xd4, 0x15, 0x6a, 0xe6, 0xe8,
	0xeb, 0x9a, 0x05, 0x13, 0x22, 0x47, 0x61, 0x27, 0x8f, 0x5b, 0x51, 0xc4, 0x23, 0x91, 0x2d, 0xcd,
	0xc0, 0xeb, 0x2b, 0xb7, 0x6e, 0xc2, 0xdb, 0x75, 0x40, 0x51, 0x1f, 0xd7, 0xfa, 0x00, 0x81, 0xd4,
	0x4e, 0x15, 0x74, 0x12, 0x42, 0xa8, 0x3d, 0x61, 0xec, 0x28, 0x8d, 0x9b, 0x46, 0x28, 0x2a, 0xa4,
	0xba, 0x5e, 0xdc, 0xf6, 0xe2, 0x98, 0xc5, 0x56, 0x23, 0x6b, 0xcf, 0xce, 0x94, 0x9b, 0xc1, 0x98,
	0x74, 0x1d, 0x87, 0xd2, 0x45, 0xd9, 0x0d, 0x92, 0xc8, 0xa3, 0xc1, 0x8a, 0x54, 0x9e, 0xd6, 0x08,
	0x91, 0x6e, 0x4e, 0x90, 0xaf, 0x64, 0xda, 0x43, 0xd3, 0x9f, 0xab, 0xc0, 0x06, 0xb9, 0xe1, 0xc5,
	0x4d, 0xec, 0xfb, 0x4e, 0x80, 0xc3, 0x6e, 0x6c, 0x7d, 0x80, 0x4d, 0x3a, 0xb9, 0x82, 0xcc, 0x74,
	0x3a, 0x4b, 0x61, 0xcb, 0x30, 0xe9, 0x69, 0x66, 0xb6, 0xc1, 0x2f, 0xa0, 0xf1, 0xf4, 0x31, 0xe0,
	0x43, 0x99, 0x4f, 0x49, 0x72, 0x96, 0x33, 0xfc, 0x93, 0x2a, 0x58, 0x42, 0x2c, 0x39, 0x41, 0xab,
	0xe3, 0x34, 0x37, 0xad, 0xbb, 0x68, 0xd2, 0x67, 0xff, 0x93, 0x6e, 0xf1, 0x27, 0xbc, 0xd4, 0x15,
	0x63, 0x42, 0x48, 0x7d, 0xe6, 0x49, 0x4a, 0x08, 0xf4, 0x0f, 0xa2, 0xc7, 0xe5, 0xcf, 0xe8, 0xeb,
	0x62, 0x9a, 0x55, 0x95, 0x01, 0x90, 0x0d, 0xcd, 0xaf, 0xbe, 0x4f, 0x06, 0x32, 0xc3, 0xc3, 0xf2,
	0x87, 0x52, 0x58, 0x75, 0x3b, 0xaf, 0x70, 0x63, 0xe4, 0x76, 0x63, 0xb3, 0x3f, 0x8e, 0x0e, 0xe9,
	0xbd, 0xed, 0x82, 0xa5, 0xc5, 0x99, 0xa2, 0x01, 0x01, 0x88, 0xe4, 0xf7, 0x99, 0xf3, 0x74, 0x1a,
	0x08, 0x68, 0x27, 0x4d, 0x1f, 0x17, 0x8f, 0x37, 0x41, 0x4c, 0xe5, 0xbf, 0xb3, 0x66, 0x0f, 0x4d,
	0xff, 0x26, 0x15, 0x04, 0xac, 0x24, 0x4e, 0xe2, 0xc5, 0x89, 0xd7, 0x8c, 0xad, 0x06, 0x3a, 0x22,
	0x9e, 0x83, 0x9f, 0x8d, 0x42, 0xc7, 0x6d, 0x3a, 0x31, 0x7d, 0xd9, 0x5a, 0x0f, 0x89, 0x68, 0x04,
	0x49, 0xd6, 0xe6, 0x14, 0xa1, 0x66, 0xc3, 0xa5, 0x65, 0x92, 0xe6, 0x90, 0x5b, 0xf9, 0x4c, 0xbc,
	0x1d, 0x34, 0xaf, 0x47, 0x4e, 0x67, 0x43, 0xed, 0x89, 0x09, 0x21, 0x3d, 0xbb, 0x04, 0x65, 0x41,
	0x22, 0x0d, 0x70, 0x25, 0x3d, 0x60, 0xcf, 0x4e, 0xde, 0xa2, 0x16, 0xab, 0xa0, 0x4c, 0x8b, 0xd5,
	0x6c, 0x70, 0x10, 0x3a, 0xa9, 0xbf, 0x90, 0x4f, 0x15, 0xc0, 0xc2, 0x13, 0xf9, 0xa9, 0x9c, 0x7a,
	0x0c, 0xd8, 0x1e, 0x86, 0x35, 0x1f, 0x42, 0x87, 0xcc, 0xaf, 0xf1, 0x9f, 0x29, 0xaa, 0x82, 0x76,
	0xe4, 0x58, 0xa6, 0x23, 0x69, 0x26, 0xd0, 0xbd, 0x49, 0xe3, 0x6b, 0xe5, 0x05, 0x81, 0xc4, 0x29,
	0x42, 0xf2, 0x7c, 0xe5, 0x49, 0xf6, 0xd0, 0xf4, 0x9f, 0x55, 0xd0, 0x01, 0xea, 0x96, 0x18, 0xce,
	0x87, 0xf7, 0x02, 0x32, 0x57, 0xd6, 0x3d, 0x74, 0x4a, 0xb6, 0xec, 0x97, 0xb2, 0x84, 0x89, 0xee,
	0xd3, 0x79, 0x6e, 0x00, 0x06, 0xb0, 0x64, 0x24, 0xc4, 0x91, 0x26, 0x18, 0x08, 0x33, 0x4e, 0xcb,
	0xa2, 0x19, 0x63, 0xcd, 0xcf, 0xe4, 0x09, 0x72, 0x8c, 0x55, 0x67, 0x28, 0xe0, 0xd7, 0x86, 0x81,
	0x18, 0xb3, 0x77, 0x86, 0x5c, 0xca, 0xda, 0x87, 0x92, 0xe4, 0x11, 0x2e, 0xeb, 0x4c, 0xa9, 0x40,
	0x51, 0x39, 0x92, 0xc7, 0x2c, 0xd0, 0xf4, 0xb4, 0x91, 0x02, 0x58, 0x76, 0xa2, 0x18, 0x82, 0x14,
	0xb7, 0x94, 0xb0, 0xe7, 0x5e, 0xa2, 0xd6, 0x97, 0x17, 0xf6, 0x5c, 0xc3, 0x99, 0x94, 0x92, 0x0a,
	0x00, 0x46, 0x54, 0x0f, 0xd1, 0xc9, 0x7b, 0x4e, 0x9d, 0xcd, 0x8b, 0x42, 0x74, 0x2a, 0xc8, 0x7c,
	0xa9, 0xba, 0x22, 0xb6, 0x25, 0x8c, 0x6d, 0x3f, 0x83, 0x97, 0x05, 0x66, 0x4f, 0xb8, 0x4f, 0x4a,
	0xce, 0xe5, 0xd9, 0xc1, 0x86, 0x07, 0x03, 0x9f, 0xee, 0x73, 0x66, 0xe0, 0xf5, 0xc0, 0xa7, 0x4c,
	0xd7, 0x33, 0xdc, 0xdc, 0x14, 0x3a, 0xa4, 0x14, 0x6b, 0x0f, 0x4d, 0xff, 0xa3, 0x61, 0x50, 0x4d,
	0x5c, 0x0b, 0x7d, 0x17, 0x47, 0xb1, 0xb5, 0xa6, 0x46, 0x7d, 0x91, 0x5f, 0x00, 0x2d, 0x88, 0xfa,
	0xa2, 0xc0, 0x24, 0x79, 0xae, 0xe1, 0xd9, 0x51, 0x08, 0x14, 0xa1, 0x06, 0x6a, 0xe0, 0xe1, 0x62,
	0xd5, 0xca, 0xf2, 0x03, 0x35, 0x18, 0xf1, 0xd9, 0xb0, 0x41, 0xc6, 0xd7, 0x4b, 0xb5, 0x89, 0xa4,
	0x22, 0x26, 0xe5, 0x69, 0xd5, 0x27, 0x0b, 0xa2, 0x7b, 0xc8, 0xc0, 0xe2, 0x00, 0x89, 0x59, 0x7c,
	0x7c, 0x2b, 0x72, 0x71, 0x5e, 0x00, 0x8c, 0x3c, 0xb8, 0xd1, 0x7e, 0x60, 0x9d, 0xce, 0x15, 0x35,
	0x1f, 0xc3, 0x38, 0xe2, 0x73, 0xa7, 0x9c, 0x1f, 0x39, 0xa0, 0x3c, 0x81, 0x0f, 0x87, 0xd3, 0x6b,
	0x2d, 0x05, 0xab, 0xb4, 0xd6, 0x84, 0x30, 0xbf, 0x7d, 0x71, 0x00, 0x4e, 0x69, 0x30, 0xcd, 0xa0,
	0xe1, 0x13, 0x6e, 0xa2, 0x43, 0xcc, 0x73, 0x1f, 0x44, 0x31, 0x22, 0x47, 0x0b, 0x15, 0x68, 0x82,
	0x14, 0x7b, 0xd2, 0xbf, 0x15, 0x7a, 0x41, 0x5a, 0x9a, 0xc1, 0xfb, 0x5d, 0x01, 0xe4, 0xf5, 0x9d,
	0x42, 0xc1, 0xe2, 0x2d, 0x2d, 0xec, 0x74, 0xb6, 0x30, 0x15, 0x91, 0x27, 0xec, 0xa2, 0x58, 0x6e,
	0xec, 0x96, 0x16, 0x68, 0x70, 0xa7, 0xcf, 0x80, 0xf2, 0x04, 0x7c, 0x4a, 0x80, 0x81, 0xb4, 0x48,
	0x3b, 0x37, 0x08, 0x41, 0x71, 0x89, 0x1f, 0x47, 0x27, 0x28, 0x9a, 0xda, 0x96, 0x08, 0xb0, 0x38,
	0x7c, 0x2e, 0x65, 0x0b, 0xce, 0x81, 0xe6, 0xb4, 0xd8, 0x12, 0x21, 0x29, 0xd2, 0xd6, 0x9e, 0x34,
	0x86, 0xac, 0x48, 0x5b, 0xaa, 0x87, 0x72, 0x10, 0x39, 0x2c, 0x6a, 0xa7, 0xf2, 0x85, 0x22, 0x48,
	0xb9, 0x90, 0x5f, 0xb2, 0x22, 0x3f, 0x39, 0x6d, 0xaa, 0x41, 0x33, 0xe0, 0xbd, 0xc5, 0xd7, 0x03,
	0x50, 0xd7, 0xc2, 0xf5, 0xa0, 0x22, 0x24, 0x86, 0x2f, 0x7d, 0x4a, 0x9c, 0x0a, 0x67, 0x8c, 0x23,
	0x58, 0xc7, 0xcd, 0x30, 0x72, 0x55, 0x72, 0x53, 0x00, 0x34, 0x0e, 0xf4, 0x27, 0xd0, 0x49, 0xfa,
	0x09, 0xd9, 0xe5, 0xe2, 0x03, 0xd9, 0xe8, 0xf8, 0xa9, 0x6c, 0xf1, 0x79, 0xd8, 0x3c, 0x33, 0x4f,
	0xc3, 0x57, 0x54, 0x62, 0x7d, 0xae, 0x47, 0xd9, 0xf9, 0x32, 0xeb, 0x8f, 0xf3, 0x52, 0xe5, 0x05,
	0xf0, 0x7a, 0xe8, 0x05, 0x33, 0xb1, 0xa9, 0xd4, 0x2c, 0x4a, 0xe2, 0x4b, 0x29, 0x84, 0x26, 0xb3,
	0x00, 0x2e, 0x56, 0x87, 0x8f, 0x39, 0xb5, 0xe4, 0x14, 0x1f, 0xb3, 0x17, 0x2a, 0x0d, 0x63, 0x6e,
	0x04, 0x4a, 0x76, 0x03, 0x14, 0xc5, 0x8d, 0x3f, 0x35, 0x1c, 0xd4, 0x78, 0xc1, 0xbc, 0x4f, 0x08,
	0x03, 0xb0, 0xd2, 0x5d, 0x8b, 0x9b, 0x91, 0x47, 0xcd, 0x53, 0xa6, 0x7b, 0xef, 0x2d, 0xfd, 0x9b,
	0xe2, 0x4d, 0x0c, 0x3c, 0x86, 0x78, 0x96, 0x28, 0x5d, 0xb1, 0x86, 0x4d, 0x9c, 0x03, 0x35, 0x96,
	0xef, 0xa0, 0xd3, 0x69, 0x04, 0x11, 0x26, 0x42, 0xd5, 0xe7, 0xea, 0x19, 0x73, 0xbc, 0x11, 0x33,
	0xda, 0x68, 0xce, 0x68, 0x20, 0xd3, 0xcb, 0xe0, 0x4b, 0x96, 0x50, 0x01, 0xdb, 0xd3, 0x3d, 0x68,
	0xba, 0x0c, 0xce, 0x7b, 0xef, 0xc9, 0x44, 0xbd, 0x95, 0x4a, 0x9e, 0xe9, 0x45, 0xeb, 0x7b, 0xd6,
	0xf2, 0x0e, 0xaf, 0x45, 0x5e, 0xaa, 0x2b, 0x49, 0x84, 0x9d, 0xb6, 0xb0, 0xc2, 0x7b, 0xa6, 0x78,
	0x61, 0xab, 0xe8, 0xcc, 0xd2, 0xcb, 0xc1, 0xd1, 0x87, 0x4b, 0xf3, 0x4a, 0xab, 0x27, 0xed, 0xce,
	0xed, 0xc8, 0x37, 0x8d, 0x62, 0x2e, 0x58, 0x62, 0xa4, 0x8c, 0x35, 0x33, 0x98, 0x3d, 0x34, 0xfd,
	0xef, 0x86, 0xe1, 0x4e, 0x05, 0x61, 0x19, 0x3d, 0x66, 0x12, 0x29, 0xa9, 0x39, 0x23, 0xdc, 0xf2,
	0xe2, 0x04, 0x47, 0xf3, 0x18, 0xcc, 0x75, 0x6c, 0xb3, 0xde, 0x57, 0xc6, 0x14, 0xaa, 0xa6, 0xbb,
	0x81, 0x56, 0xa0, 0x51, 0x35, 0xad, 0xa3, 0x0a, 0x7d, 0x05, 0x29, 0xd7, 0x45, 0xc3, 0x4a, 0x8a,
	0xb3, 0xef, 0x62, 0xbe, 0x3a, 0x56, 0x45, 0x9a, 0x94, 0xd4, 0x4f, 0x48, 0x77, 0x44, 0xad, 0xdc,
	0xf3, 0x39, 0x57, 0x49, 0xad, 0xd0, 0xf4, 0x5a, 0x4c, 0x88, 0x99, 0x9a, 0x99, 0xf5, 0xcd, 0xd4,
	0x2b, 0xc9, 0xf5, 0xcd, 0x4c, 0x7a, 0xb5, 0x5d, 0x72, 0xdd, 0x66, 0xcc, 0x28, 0x8c, 0xdf, 0x52,
	0x48, 0x2e, 0x0e, 0x66, 0x05, 0x7b, 0x16, 0x97, 0x2d, 0xf6, 0xc3, 0x8a, 0xcb, 0x2d, 0x6d, 0xc4,
	0xc2, 0xfd, 0x26, 0xee, 0x18, 0x9c, 0xab, 0x0a, 0x80, 0x46, 0x46, 0xf3, 0x77, 0xc6, 0x59, 0x74,
	0xf5, 0x38, 0x86, 0x2b, 0x18, 0x56, 0x86, 0x5f, 0x8b, 0x9f, 0x73, 0x3e, 0xff, 0x26, 0x2f, 0x07,
	0xd0, 0x39, 0x65, 0xba, 0xc3, 0x4b, 0x00, 0x60, 0xf3, 0x65, 0x53, 0x84, 0x19, 0xc2, 0x0b, 0x35,
	0xbb, 0x11, 0x06, 0x29, 0x70, 0xbe, 0x29, 0x82, 0x86, 0x93, 0xe6, 0x99, 0x3f, 0xf2, 0x93, 0xe6,
	0x52, 0xf1, 0x9f, 0xf4, 0xb1, 0x94, 0x97, 0x1b, 0x29, 0x5e, 0xc2, 0xf4, 0x2a, 0xfc, 0x4e, 0x6a,
	0x9d, 0x41, 0xc8, 0xb5, 0x5c, 0xfa, 0xd9, 0x3c, 0xb1, 0x83, 0x5c, 0x7c, 0xaa, 0x87, 0x52, 0xcb,
	0x5d, 0x49, 0x27, 0x80, 0x3d, 0x96, 0x27, 0x95, 0x7c, 0x3e, 0x3f, 0x3c, 0x83, 0x5c, 0xb6, 0xe9,
	0xa9, 0xa8, 0xbc, 0xe9, 0x82, 0x80, 0xe6, 0x17, 0xfb, 0x99, 0x58, 0x08, 0x6a, 0x6e, 0x17, 0xcf,
	0x2d, 0x0b, 0x10, 0x2f, 0xed, 0x30, 0x6a, 0x92, 0x5a, 0x14, 0x1c, 0x28, 0x1f, 0xd8, 0x33, 0x8e,
	0x03, 0x38, 0xc2, 0x6f, 0xf7, 0x11, 0xc7, 0x41, 0x03, 0xf6, 0x17, 0xc7, 0x61, 0x2b, 0xfd, 0xc8,
	0xec, 0x34, 0x2f, 0x01, 0x4c, 0x4f, 0x97, 0x19, 0x9a, 0x0a, 0xbe, 0xd7, 0xfd, 0x34, 0x55, 0x00,
	0xe5, 0x10, 0x43, 0x0c, 0x05, 0x66, 0x97, 0x3c, 0xdf, 0xd4, 0x64, 0xea, 0x0a, 0x5e, 0xd0, 0xe4,
	0x1c, 0x17, 0xf0, 0xdb, 0x68, 0xaa, 0x1b, 0xf3, 0x87, 0x75, 0xd2, 0xf5, 0xb4, 0x10, 0x45, 0xa1,
	0x6e, 0x20, 0x94, 0x8f, 0xcb, 0x16, 0xfb, 0x51, 0xa6, 0x7e, 0x61, 0x61, 0x00, 0xe0, 0xfd, 0x7b,
	0xaa, 0x22, 0xb2, 0x4d, 0x0a, 0x13, 0x15, 0x23, 0x49, 0x42, 0x00, 0xa0, 0xe6, 0xda, 0x43, 0xd3,
	0x3f, 0x57, 0x01, 0xe5, 0xea, 0x72, 0x14, 0xb6, 0x43, 0x30, 0x25, 0x97, 0x94, 0x78, 0x69, 0xa2,
	0x51, 0x19, 0x25, 0xb2, 0x75, 0x25, 0x9e, 0xc8, 0xa0, 0x11, 0xf0, 0x20, 0x6d, 0xc3, 0x73, 0x71,
	0x5a, 0x5e, 0x56, 0x89, 0xa7, 0xe4, 0x67, 0x85, 0x89, 0xff, 0x90, 0xbd, 0xee, 0x1d, 0xc6, 0x64,
	0x37, 0xf2, 0x16, 0xac, 0xe2, 0xa8, 0x1d, 0xdf, 0x5a, 0x67, 0x36, 0xb6, 0x4c, 0xe1, 0x78, 0xd1,
	0xd4, 0x56, 0x13, 0x52, 0xda, 0x8d, 0x00, 0x33, 0x61, 0x28, 0x49, 0x81, 0x6c, 0xba, 0xc3, 0x54,
	0x90, 0x4a, 0x52, 0x72, 0x61, 0xd9, 0xfe, 0xfc, 0x2b, 0xaa, 0x1e, 0x5a, 0xc1, 0x4e, 0xdb, 0xc7,
	0x71, 0xac, 0x91, 0x98, 0xbb, 0x78, 0x4d, 0x3b, 0x3b, 0xf2, 0x48, 0x4c, 0x06, 0x69, 0x20, 0x31,
	0x19, 0x0c, 0xb5, 0x07, 0x57, 0x0d, 0xdf, 0x34, 0x8c, 0x39, 0x8a, 0xbb, 0x11, 0x9a, 0x5d, 0xb1,
	0x52, 0xdc, 0x09, 0xe3, 0x17, 0x39, 0x71, 0x27, 0xcc, 0xd8, 0x6c, 0xf1, 0x1f, 0x54, 0xde, 0x3e,
	0x06, 0x8f, 0x80, 0xdb, 0x91, 0x4f, 0xbe, 0xca, 0x7d, 0xfb, 0x58, 0x06, 0x49, 0xd4, 0x8b, 0xa5,
	0x88, 0x08, 0x54, 0x77, 0x24, 0xdb, 0x11, 0x3a, 0x8f, 0xbc, 0x60, 0xbb, 0xc0, 0x61, 0xa0, 0x67,
	0xb9, 0xd3, 0xdf, 0x5b, 0x85, 0x67, 0x83, 0xaf, 0xbb, 0x9d, 0xc8, 0xfa, 0x44, 0x7a, 0x76, 0x7b,
	0x81, 0x97, 0xac, 0x3a, 0x9b, 0x38, 0xec, 0x26, 0x2b, 0x98, 0xfa, 0x35, 0x5d, 0x30, 0x1b, 0x3b,
	0xea, 0x38, 0x49, 0x52, 0x21, 0x02, 0xfe, 0x53, 0x80, 0xca, 0x5e, 0xae, 0x7b, 0x81, 0x17, 0x6f,
	0x68, 0x75, 0x18, 0xd7, 0x92, 0x09, 0x99, 0x1d, 0xfa, 0x8f, 0xab, 0xc6, 0x40, 0x2b, 0x1d, 0xdf,
	0x4b, 0xea, 0x4e, 0x90, 0x1f, 0xc2, 0x5d, 0x05, 0x65, 0xe5, 0xb2, 0xdc, 0xce, 0x84, 0x64, 0xc3,
	0xb2, 0x54, 0xdc, 0xa4, 0x97, 0xf0, 0x7a, 0xea, 0x57, 0x9c, 0xeb, 0x26, 0x2d, 0xa3, 0x0a, 0x2c,
	0x83, 0xa6, 0xbf, 0x41, 0x4d, 0xaa, 0x17, 0xda, 0xe1, 0x5b, 0x9e, 0xb5, 0xae, 0x4a, 0x99, 0x21,
	0xf1, 0x0d, 0xbc, 0x7d, 0x2f, 0xcc, 0x0f, 0x94, 0xab, 0xc3, 0x24, 0x61, 0x8e, 0x92, 0xae, 0xe8,
	0x39, 0xdf, 0x51, 0x0d, 0x71, 0x72, 0x80, 0xf9, 0x86, 0x38, 0x39, 0x1f, 0xf4, 0x55, 0x77, 0x57,
	0x95, 0x72, 0x2b, 0xc0, 0x54, 0xe1, 0x7a, 0xb9, 0xaf, 0xaa, 0x53, 0xed, 0xeb, 0x09, 0x7d, 0x0e,
	0x01, 0x27, 0xa9, 0x5e, 0x35, 0xbd, 0x19, 0x64, 0x17, 0xea, 0xcd, 0x38, 0x42, 0xd2, 0x9b, 0xf1,
	0x24, 0x7b, 0x68, 0xfa, 0x67, 0xf6, 0xd1, 0x98, 0x02, 0xcc, 0x44, 0xd4, 0xf2, 0xd0, 0x39, 0xf9,
	0x55, 0x09, 0x9a, 0xbc, 0x02, 0x71, 0x37, 0x95, 0x7b, 0xe0, 0x73, 0x79, 0xef, 0x50, 0xe4, 0x7d,
	0x91, 0x5d, 0xee, 0x52, 0x55, 0xf1, 0x8e, 0xab, 0x8a, 0x77, 0x54, 0xd5, 0x0a, 0x3a, 0x2c, 0x8c,
	0x60, 0xd3, 0x46, 0x2e, 0xce, 0x6b, 0xc1, 0x19, 0xcc, 0x98, 0x3c, 0xc1, 0xdf, 0x87, 0xd0, 0xa4,
	0xfc, 0x01, 0x8d, 0xbe, 0x96, 0x89, 0x66, 0x60, 0x40, 0x64, 0x27, 0x99, 0x77, 0x05, 0x00, 0x2c,
	0x50, 0x42, 0xb6, 0x2d, 0x05, 0x45, 0x73, 0x84, 0x24, 0x37, 0x13, 0xd9, 0x3c, 0x8f, 0x85, 0x79,
	0xe0, 0xc9, 0x34, 0xe6, 0xa5, 0x28, 0xfa, 0xac, 0xb1, 0x68, 0x15, 0x24, 0x1d, 0x7f, 0x02, 0x21,
	0x34, 0x90, 0x69, 0x2d, 0x75, 0xa9, 0x16, 0x66, 0x46, 0x57, 0x5c, 0x8b, 0x0a, 0xca, 0x73, 0x01,
	0xd1, 0xe0, 0xb3, 0x94, 0xb9, 0x2d, 0x2e, 0x93, 0x83, 0xb2, 0x4b, 0xe2, 0xfd, 0x68, 0xbf, 0xc0,
	0xae, 0xf9, 0x61, 0x73, 0x53, 0xb5, 0xec, 0x52, 0xf3, 0xb2, 0x9f, 0xcf, 0xa0, 0x83, 0x02, 0xd2,
	0x0d, 0x68, 0x01, 0xc7, 0x8d, 0x05, 0xb0, 0x5c, 0xd3, 0xa2, 0x7c, 0x5c, 0x9e, 0xc2, 0x59, 0x9f,
	0x5e, 0xc5, 0x4f, 0xe5, 0xcd, 0x31, 0x03, 0x48, 0x26, 0x14, 0x22, 0x97, 0x65, 0x81, 0xdb, 0xf4,
	0x01, 0x91, 0x6a, 0x7a, 0x17, 0x45, 0xcb, 0x94, 0x28, 0xba, 0xc8, 0x81, 0x08, 0xd5, 0xd9, 0x45,
	0xb8, 0x1a, 0x76, 0x40, 0xfc, 0x9a, 0xbf, 0x08, 0x39, 0xc2, 0xb4, 0x08, 0x79, 0x1e, 0xf3, 0x0a,
	0x96, 0x8c, 0xd6, 0xc5, 0x77, 0x2c, 0x5e, 0xf2, 0x93, 0x79, 0xd6, 0xed, 0x1a, 0xd0, 0x18, 0x20,
	0x52, 0xc5, 0xc3, 0x8b, 0x51, 0x39, 0x03, 0x9a, 0x02, 0x4c, 0x3a, 0xb8, 0xc7, 0x94, 0x7d, 0x0b,
	0xc5, 0x9c, 0xc8, 0xdd, 0xd6, 0x50, 0x48, 0xe6, 0xf0, 0x85, 0x64, 0xb6, 0xa6, 0xb5, 0x05, 0x4c,
	0xe5, 0xc1, 0x62, 0x40, 0xcd, 0x0b, 0x58, 0x05, 0x65, 0x1b, 0xf9, 0xba, 0xd4, 0x5b, 0xc7, 0xe5,
	0x35, 0xe5, 0xf4, 0x36, 0x05, 0xe4, 0x86, 0x65, 0x10, 0x50, 0x1a, 0xcc, 0x9b, 0x15, 0x67, 0xa6,
	0x8f, 0x0a, 0x26, 0x4f, 0x85, 0x27, 0x8f, 0x11, 0xf8, 0x4b, 0x17, 0x2d, 0x6e, 0x06, 0x30, 0xca,
	0x81, 0xfe, 0x7e, 0x05, 0x18, 0xbc, 0x9b, 0xf1, 0xfa, 0x3d, 0x59, 0x8c, 0xc5, 0x8e, 0x00, 0x1c,
	0x24, 0x42, 0x3c, 0x76, 0xa1, 0xe0, 0xa8, 0x90, 0x70, 0xc6, 0xb7, 0xbc, 0xb5, 0x43, 0xac, 0x67,
	0xb1, 0x59, 0x9c, 0xc4, 0x36, 0x88, 0x17, 0x97, 0x54, 0x84, 0x3d, 0x34, 0xfd, 0xd3, 0x94, 0x4f,
	0xba, 0x4d, 0xee, 0xa8, 0xf0, 0x98, 0x27, 0x5c, 0x56, 0x59, 0x04, 0xad, 0x58, 0x7b, 0xcc, 0x53,
	0xc9, 0xcb, 0x9a, 0x07, 0x33, 0x5f, 0x91, 0x8f, 0xa1, 0x27, 0x04, 0xf2, 0x5a, 0xd7, 0xf7, 0x49,
	0xf2, 0xec, 0xd5, 0xe7, 0xae, 0xbd, 0xf4, 0xea, 0xf3, 0xaf, 0xa8, 0xdc, 0x56, 0x2e, 0x4c, 0x7e,
	0x3e, 0x13, 0x30, 0x24, 0x93, 0xb9, 0x34, 0x7c, 0x14, 0x1d, 0xd2, 0x9d, 0x4c, 0xa8, 0xdc, 0xe1,
	0x4c, 0x91, 0x1f, 0x0a, 0x95, 0x3c, 0xf4, 0x76, 0x42, 0xb9, 0x6b, 0x68, 0xfc, 0xdc, 0xcc, 0x0b,
	0xcf, 0xcd, 0xbc, 0x34, 0xfb, 0x7c, 0x8f, 0xc6, 0x73, 0x98, 0xc4, 0xd9, 0x48, 0xcd, 0x7e, 0x19,
	0x4d, 0x88, 0x2f, 0x6e, 0x60, 0x35, 0x0c, 0xb8, 0x94, 0x91, 0x8d, 0x53, 0xf8, 0xf3, 0x34, 0xaa,
	0x2b, 0x55, 0xd6, 0xc7, 0x84, 0x4c, 0x67, 0x4d, 0x21, 0xe2, 0x7c, 0x6f, 0x4b, 0x06, 0x90, 0xc8,
	0x74, 0xea, 0xa0, 0x4d, 0xb3, 0xe8, 0xc5, 0x5d, 0x76, 0xfd, 0x63, 0x1e, 0xc8, 0x79, 0x8f, 0x11,
	0x25, 0x79, 0x8e, 0xc7, 0x91, 0xea, 0xab, 0x47, 0x86, 0x94, 0x2f, 0xb5, 0x85, 0x6b, 0xf3, 0xaf,
	0xce, 0x5c, 0x9d, 0x99, 0xce, 0xf7, 0xd5, 0x33, 0xa1, 0x4d, 0x2f, 0xfa, 0xc8, 0x38, 0x6a, 0xe0,
	0xa6, 0x97, 0xc2, 0xc7, 0xe4, 0x6c, 0x51, 0x55, 0x7c, 0x5c, 0x4e, 0x98, 0x6b, 0x48, 0xc7, 0xe6,
	0x4d, 0xe9, 0x51, 0x09, 0x4a, 0x04, 0x69, 0xde, 0xb2, 0x17, 0xe4, 0x3c, 0x2a, 0xa1, 0xa1, 0x7a,
	0x39, 0x68, 0x87, 0x91, 0x8b, 0x23, 0xfa, 0x90, 0x0b, 0x6f, 0x79, 0x9e, 0x83, 0x76, 0x16, 0x6a,
	0x32, 0x0b, 0x51, 0x2e, 0x3b, 0x6a, 0xc1, 0xb9, 0x97, 0x1d, 0xb5, 0xd0, 0x9e, 0x83, 0xf2, 0x96,
	0x74, 0xd3, 0x81, 0x28, 0xfd, 0xcd, 0x08, 0xe3, 0x20, 0xde, 0x08, 0x13, 0x85, 0x57, 0xbe, 0x92,
	0xeb, 0x33, 0x6d, 0xfe, 0xc0, 0x48, 0xbb, 0x57, 0xa4, 0x0e, 0xb5, 0x9d, 0x68, 0x93, 0xb6, 0x82,
	0x86, 0x43, 0xcb, 0xe9, 0x90, 0x0e, 0x33, 0x51, 0xd8, 0x13, 0xd9, 0x5d, 0xc2, 0x5e, 0x34, 0x72,
	0xa2, 0xcd, 0x82, 0xd0, 0x7c, 0x19, 0xa8, 0xc4, 0x5f, 0x28, 0xa6, 0x40, 0x8c, 0xa2, 0xdc, 0x54,
	0x37, 0xec, 0x2d, 0x70, 0x49, 0x2d, 0xd8, 0xb0, 0x0c, 0x20, 0x91, 0x57, 0x72, 0xa7, 0x65, 0xa9,
	0xf4, 0xc6, 0x2f, 0xe0, 0x20, 0x48, 0x93, 0xf6, 0xc3, 0xac, 0x13, 0xe5, 0xd8, 0x9e, 0x19, 0x90,
	0xd9, 0x41, 0x59, 0x56, 0x7c, 0xfb, 0xb9, 0x21, 0xd9, 0xea, 0xea, 0x52, 0xae, 0x6f, 0xbf, 0x84,
	0xc9, 0x89, 0xee, 0x92, 0x4b, 0x11, 0x5e, 0xb8, 0xfa, 0xf2, 0xf4, 0xc2, 0x73, 0xaf, 0xce, 0xf5,
	0x47, 0x11, 0x38, 0x5a, 0x32, 0x98, 0x53, 0x09, 0xc1, 0xf4, 0x9f, 0x0e, 0x83, 0x70, 0x93, 0xba,
	0xfc, 0xce, 0x86, 0x89, 0xb5, 0x21, 0x0d, 0x94, 0xf0, 0x05, 0x9e, 0x0d, 0xc5, 0xdb, 0xb1, 0x17,
	0x8b, 0xbd, 0x86, 0x53, 0xa4, 0xc9, 0x63, 0x38, 0xcd, 0xd5, 0xa6, 0x24, 0xee, 0xbb, 0x26, 0x03,
	0xd2, 0x24, 0x10, 0x3e, 0xae, 0xec, 0x1b, 0xed, 0x8b, 0xdc, 0xa2, 0x33, 0x48, 0xe3, 0xf4, 0xc8,
	0x84, 0x08, 0xbb, 0x5e, 0xda, 0x1e, 0xfe, 0xf6, 0xd4, 0xa5, 0x5c, 0x4f, 0x27, 0x1d, 0x9a, 0x6d,
	0xfa, 0xdb, 0xea, 0x16, 0x9b, 0x0d, 0xe1, 0x95, 0x91, 0x35, 0xa7, 0xb9, 0x39, 0x13, 0xc4, 0xf7,
	0x70, 0x94, 0xbf, 0xc5, 0x32, 0x50, 0xe9, 0x55, 0x08, 0x79, 0x06, 0x54, 0x90, 0xd6, 0x9f, 0xb8,
	0xff, 0x2a, 0x4d, 0xd0, 0xac, 0x18, 0xf7, 0x87, 0xf6, 0x40, 0xbc, 0x94, 0xc5, 0x20, 0xc1, 0x51,
	0xe0, 0xf8, 0x64, 0x89, 0xbd, 0x89, 0x8e, 0x52, 0x8f, 0x02, 0x28, 0x80, 0x8d, 0x2b, 0x8b, 0x8c,
	0x7e, 0x2e, 0xeb, 0x77, 0x90, 0x45, 0x99, 0x54, 0xd0, 0x87, 0xd7, 0x42, 0xf6, 0x44, 0xee, 0x5c,
	0x37, 0x4e, 0xc2, 0x36, 0x7b, 0x6e, 0x57, 0xdd, 0x83, 0x66, 0x8c, 0xf9, 0x19, 0x9e, 0xbb, 0xe8,
	0x18, 0xc0, 0x1d, 0xe8, 0xd8, 0x5d, 0xbc, 0xb6, 0x11, 0x86, 0x9b, 0x24, 0xef, 0xcd, 0x2e, 0x8e,
	0xb6, 0xd5, 0x1b, 0x4e, 0x01, 0x30, 0x3b, 0x22, 0x1f, 0x02, 0x39, 0xfd, 0xac, 0xf7, 0x8e, 0x75,
	0x0b, 0x4d, 0xae, 0x79, 0xef, 0x34, 0xbc, 0x60, 0x2b, 0xdc, 0xc4, 0xb3, 0xde, 0x3b, 0xa4, 0xf6,
	0xba, 0x73, 0x4f, 0xbd, 0x9c, 0x99, 0x10, 0x92, 0x34, 0x23, 0x4d, 0xb4, 0x87, 0x66, 0x5f, 0xf8,
	0xf6, 0xff, 0x7c, 0x72, 0xe8, 0xef, 0x7d, 0xeb, 0x64, 0xe5, 0x8f, 0xbe, 0x75, 0xb2, 0xf2, 0x8f,
	0xbf, 0x75, 0xb2, 0xf2, 0xe1, 0x33, 0x2d, 0x2f, 0xd9, 0xe8, 0xae, 0x5d, 0x6e, 0x86, 0xed, 0x2b,
	0x09, 0x76, 0xda, 0xad, 0xc8, 0x69, 0x5f, 0x81, 0x2f, 0xaf, 0xb0, 0x12, 0xd6, 0x46, 0xe0, 0xcf,
	0x0b, 0xff, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6d, 0xa6, 0xd2, 0x09, 0xd7, 0xd1, 0x01, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RPCGifsClient is the client API for RPCGifs service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCGifsClient interface {
	MessagesGetSavedGifs(ctx context.Context, in *TLMessagesGetSavedGifs, opts ...grpc.CallOption) (*Messages_SavedGifs, error)
	MessagesSaveGif(ctx context.Context, in *TLMessagesSaveGif, opts ...grpc.CallOption) (*Bool, error)
}

type rPCGifsClient struct {
	cc *grpc.ClientConn
}

func NewRPCGifsClient(cc *grpc.ClientConn) RPCGifsClient {
	return &rPCGifsClient{cc}
}

func (c *rPCGifsClient) MessagesGetSavedGifs(ctx context.Context, in *TLMessagesGetSavedGifs, opts ...grpc.CallOption) (*Messages_SavedGifs, error) {
	out := new(Messages_SavedGifs)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGifs/messages_getSavedGifs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGifsClient) MessagesSaveGif(ctx context.Context, in *TLMessagesSaveGif, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGifs/messages_saveGif", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCGifsServer is the server API for RPCGifs service.
type RPCGifsServer interface {
	MessagesGetSavedGifs(context.Context, *TLMessagesGetSavedGifs) (*Messages_SavedGifs, error)
	MessagesSaveGif(context.Context, *TLMessagesSaveGif) (*Bool, error)
}

// UnimplementedRPCGifsServer can be embedded to have forward compatible implementations.
type UnimplementedRPCGifsServer struct {
}

func (*UnimplementedRPCGifsServer) MessagesGetSavedGifs(ctx context.Context, req *TLMessagesGetSavedGifs) (*Messages_SavedGifs, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetSavedGifs not implemented")
}
func (*UnimplementedRPCGifsServer) MessagesSaveGif(ctx context.Context, req *TLMessagesSaveGif) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSaveGif not implemented")
}

func RegisterRPCGifsServer(s *grpc.Server, srv RPCGifsServer) {
	s.RegisterService(&_RPCGifs_serviceDesc, srv)
}

func _RPCGifs_MessagesGetSavedGifs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetSavedGifs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGifsServer).MessagesGetSavedGifs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGifs/MessagesGetSavedGifs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGifsServer).MessagesGetSavedGifs(ctx, req.(*TLMessagesGetSavedGifs))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGifs_MessagesSaveGif_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSaveGif)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGifsServer).MessagesSaveGif(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGifs/MessagesSaveGif",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGifsServer).MessagesSaveGif(ctx, req.(*TLMessagesSaveGif))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCGifs_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCGifs",
	HandlerType: (*RPCGifsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "messages_getSavedGifs",
			Handler:    _RPCGifs_MessagesGetSavedGifs_Handler,
		},
		{
			MethodName: "messages_saveGif",
			Handler:    _RPCGifs_MessagesSaveGif_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCQrCodeClient is the client API for RPCQrCode service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCQrCodeClient interface {
	AuthExportLoginToken(ctx context.Context, in *TLAuthExportLoginToken, opts ...grpc.CallOption) (*Auth_LoginToken, error)
	AuthImportLoginToken(ctx context.Context, in *TLAuthImportLoginToken, opts ...grpc.CallOption) (*Auth_LoginToken, error)
	AuthAcceptLoginToken(ctx context.Context, in *TLAuthAcceptLoginToken, opts ...grpc.CallOption) (*Authorization, error)
}

type rPCQrCodeClient struct {
	cc *grpc.ClientConn
}

func NewRPCQrCodeClient(cc *grpc.ClientConn) RPCQrCodeClient {
	return &rPCQrCodeClient{cc}
}

func (c *rPCQrCodeClient) AuthExportLoginToken(ctx context.Context, in *TLAuthExportLoginToken, opts ...grpc.CallOption) (*Auth_LoginToken, error) {
	out := new(Auth_LoginToken)
	err := c.cc.Invoke(ctx, "/mtproto.RPCQrCode/auth_exportLoginToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCQrCodeClient) AuthImportLoginToken(ctx context.Context, in *TLAuthImportLoginToken, opts ...grpc.CallOption) (*Auth_LoginToken, error) {
	out := new(Auth_LoginToken)
	err := c.cc.Invoke(ctx, "/mtproto.RPCQrCode/auth_importLoginToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCQrCodeClient) AuthAcceptLoginToken(ctx context.Context, in *TLAuthAcceptLoginToken, opts ...grpc.CallOption) (*Authorization, error) {
	out := new(Authorization)
	err := c.cc.Invoke(ctx, "/mtproto.RPCQrCode/auth_acceptLoginToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCQrCodeServer is the server API for RPCQrCode service.
type RPCQrCodeServer interface {
	AuthExportLoginToken(context.Context, *TLAuthExportLoginToken) (*Auth_LoginToken, error)
	AuthImportLoginToken(context.Context, *TLAuthImportLoginToken) (*Auth_LoginToken, error)
	AuthAcceptLoginToken(context.Context, *TLAuthAcceptLoginToken) (*Authorization, error)
}

// UnimplementedRPCQrCodeServer can be embedded to have forward compatible implementations.
type UnimplementedRPCQrCodeServer struct {
}

func (*UnimplementedRPCQrCodeServer) AuthExportLoginToken(ctx context.Context, req *TLAuthExportLoginToken) (*Auth_LoginToken, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthExportLoginToken not implemented")
}
func (*UnimplementedRPCQrCodeServer) AuthImportLoginToken(ctx context.Context, req *TLAuthImportLoginToken) (*Auth_LoginToken, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthImportLoginToken not implemented")
}
func (*UnimplementedRPCQrCodeServer) AuthAcceptLoginToken(ctx context.Context, req *TLAuthAcceptLoginToken) (*Authorization, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthAcceptLoginToken not implemented")
}

func RegisterRPCQrCodeServer(s *grpc.Server, srv RPCQrCodeServer) {
	s.RegisterService(&_RPCQrCode_serviceDesc, srv)
}

func _RPCQrCode_AuthExportLoginToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthExportLoginToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCQrCodeServer).AuthExportLoginToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCQrCode/AuthExportLoginToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCQrCodeServer).AuthExportLoginToken(ctx, req.(*TLAuthExportLoginToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCQrCode_AuthImportLoginToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthImportLoginToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCQrCodeServer).AuthImportLoginToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCQrCode/AuthImportLoginToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCQrCodeServer).AuthImportLoginToken(ctx, req.(*TLAuthImportLoginToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCQrCode_AuthAcceptLoginToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthAcceptLoginToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCQrCodeServer).AuthAcceptLoginToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCQrCode/AuthAcceptLoginToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCQrCodeServer).AuthAcceptLoginToken(ctx, req.(*TLAuthAcceptLoginToken))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCQrCode_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCQrCode",
	HandlerType: (*RPCQrCodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "auth_exportLoginToken",
			Handler:    _RPCQrCode_AuthExportLoginToken_Handler,
		},
		{
			MethodName: "auth_importLoginToken",
			Handler:    _RPCQrCode_AuthImportLoginToken_Handler,
		},
		{
			MethodName: "auth_acceptLoginToken",
			Handler:    _RPCQrCode_AuthAcceptLoginToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCReportsClient is the client API for RPCReports service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCReportsClient interface {
	AccountReportPeer(ctx context.Context, in *TLAccountReportPeer, opts ...grpc.CallOption) (*Bool, error)
	AccountReportProfilePhoto(ctx context.Context, in *TLAccountReportProfilePhoto, opts ...grpc.CallOption) (*Bool, error)
	MessagesReportSpam(ctx context.Context, in *TLMessagesReportSpam, opts ...grpc.CallOption) (*Bool, error)
	MessagesReport(ctx context.Context, in *TLMessagesReport, opts ...grpc.CallOption) (*Bool, error)
	MessagesReportEncryptedSpam(ctx context.Context, in *TLMessagesReportEncryptedSpam, opts ...grpc.CallOption) (*Bool, error)
	ChannelsReportSpam(ctx context.Context, in *TLChannelsReportSpam, opts ...grpc.CallOption) (*Bool, error)
}

type rPCReportsClient struct {
	cc *grpc.ClientConn
}

func NewRPCReportsClient(cc *grpc.ClientConn) RPCReportsClient {
	return &rPCReportsClient{cc}
}

func (c *rPCReportsClient) AccountReportPeer(ctx context.Context, in *TLAccountReportPeer, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCReports/account_reportPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCReportsClient) AccountReportProfilePhoto(ctx context.Context, in *TLAccountReportProfilePhoto, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCReports/account_reportProfilePhoto", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCReportsClient) MessagesReportSpam(ctx context.Context, in *TLMessagesReportSpam, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCReports/messages_reportSpam", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCReportsClient) MessagesReport(ctx context.Context, in *TLMessagesReport, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCReports/messages_report", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCReportsClient) MessagesReportEncryptedSpam(ctx context.Context, in *TLMessagesReportEncryptedSpam, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCReports/messages_reportEncryptedSpam", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCReportsClient) ChannelsReportSpam(ctx context.Context, in *TLChannelsReportSpam, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCReports/channels_reportSpam", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCReportsServer is the server API for RPCReports service.
type RPCReportsServer interface {
	AccountReportPeer(context.Context, *TLAccountReportPeer) (*Bool, error)
	AccountReportProfilePhoto(context.Context, *TLAccountReportProfilePhoto) (*Bool, error)
	MessagesReportSpam(context.Context, *TLMessagesReportSpam) (*Bool, error)
	MessagesReport(context.Context, *TLMessagesReport) (*Bool, error)
	MessagesReportEncryptedSpam(context.Context, *TLMessagesReportEncryptedSpam) (*Bool, error)
	ChannelsReportSpam(context.Context, *TLChannelsReportSpam) (*Bool, error)
}

// UnimplementedRPCReportsServer can be embedded to have forward compatible implementations.
type UnimplementedRPCReportsServer struct {
}

func (*UnimplementedRPCReportsServer) AccountReportPeer(ctx context.Context, req *TLAccountReportPeer) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountReportPeer not implemented")
}
func (*UnimplementedRPCReportsServer) AccountReportProfilePhoto(ctx context.Context, req *TLAccountReportProfilePhoto) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountReportProfilePhoto not implemented")
}
func (*UnimplementedRPCReportsServer) MessagesReportSpam(ctx context.Context, req *TLMessagesReportSpam) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesReportSpam not implemented")
}
func (*UnimplementedRPCReportsServer) MessagesReport(ctx context.Context, req *TLMessagesReport) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesReport not implemented")
}
func (*UnimplementedRPCReportsServer) MessagesReportEncryptedSpam(ctx context.Context, req *TLMessagesReportEncryptedSpam) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesReportEncryptedSpam not implemented")
}
func (*UnimplementedRPCReportsServer) ChannelsReportSpam(ctx context.Context, req *TLChannelsReportSpam) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsReportSpam not implemented")
}

func RegisterRPCReportsServer(s *grpc.Server, srv RPCReportsServer) {
	s.RegisterService(&_RPCReports_serviceDesc, srv)
}

func _RPCReports_AccountReportPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountReportPeer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCReportsServer).AccountReportPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCReports/AccountReportPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCReportsServer).AccountReportPeer(ctx, req.(*TLAccountReportPeer))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCReports_AccountReportProfilePhoto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountReportProfilePhoto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCReportsServer).AccountReportProfilePhoto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCReports/AccountReportProfilePhoto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCReportsServer).AccountReportProfilePhoto(ctx, req.(*TLAccountReportProfilePhoto))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCReports_MessagesReportSpam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReportSpam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCReportsServer).MessagesReportSpam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCReports/MessagesReportSpam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCReportsServer).MessagesReportSpam(ctx, req.(*TLMessagesReportSpam))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCReports_MessagesReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReport)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCReportsServer).MessagesReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCReports/MessagesReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCReportsServer).MessagesReport(ctx, req.(*TLMessagesReport))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCReports_MessagesReportEncryptedSpam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReportEncryptedSpam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCReportsServer).MessagesReportEncryptedSpam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCReports/MessagesReportEncryptedSpam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCReportsServer).MessagesReportEncryptedSpam(ctx, req.(*TLMessagesReportEncryptedSpam))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCReports_ChannelsReportSpam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsReportSpam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCReportsServer).ChannelsReportSpam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCReports/ChannelsReportSpam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCReportsServer).ChannelsReportSpam(ctx, req.(*TLChannelsReportSpam))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCReports_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCReports",
	HandlerType: (*RPCReportsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "account_reportPeer",
			Handler:    _RPCReports_AccountReportPeer_Handler,
		},
		{
			MethodName: "account_reportProfilePhoto",
			Handler:    _RPCReports_AccountReportProfilePhoto_Handler,
		},
		{
			MethodName: "messages_reportSpam",
			Handler:    _RPCReports_MessagesReportSpam_Handler,
		},
		{
			MethodName: "messages_report",
			Handler:    _RPCReports_MessagesReport_Handler,
		},
		{
			MethodName: "messages_reportEncryptedSpam",
			Handler:    _RPCReports_MessagesReportEncryptedSpam_Handler,
		},
		{
			MethodName: "channels_reportSpam",
			Handler:    _RPCReports_ChannelsReportSpam_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCChatInvitesClient is the client API for RPCChatInvites service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCChatInvitesClient interface {
	MessagesExportChatInvite(ctx context.Context, in *TLMessagesExportChatInvite, opts ...grpc.CallOption) (*ExportedChatInvite, error)
	MessagesCheckChatInvite(ctx context.Context, in *TLMessagesCheckChatInvite, opts ...grpc.CallOption) (*ChatInvite, error)
	MessagesImportChatInvite(ctx context.Context, in *TLMessagesImportChatInvite, opts ...grpc.CallOption) (*Updates, error)
	MessagesGetExportedChatInvites(ctx context.Context, in *TLMessagesGetExportedChatInvites, opts ...grpc.CallOption) (*Messages_ExportedChatInvites, error)
	MessagesGetExportedChatInvite(ctx context.Context, in *TLMessagesGetExportedChatInvite, opts ...grpc.CallOption) (*Messages_ExportedChatInvite, error)
	MessagesEditExportedChatInvite(ctx context.Context, in *TLMessagesEditExportedChatInvite, opts ...grpc.CallOption) (*Messages_ExportedChatInvite, error)
	MessagesDeleteRevokedExportedChatInvites(ctx context.Context, in *TLMessagesDeleteRevokedExportedChatInvites, opts ...grpc.CallOption) (*Bool, error)
	MessagesDeleteExportedChatInvite(ctx context.Context, in *TLMessagesDeleteExportedChatInvite, opts ...grpc.CallOption) (*Bool, error)
	MessagesGetAdminsWithInvites(ctx context.Context, in *TLMessagesGetAdminsWithInvites, opts ...grpc.CallOption) (*Messages_ChatAdminsWithInvites, error)
	MessagesGetChatInviteImporters(ctx context.Context, in *TLMessagesGetChatInviteImporters, opts ...grpc.CallOption) (*Messages_ChatInviteImporters, error)
	MessagesHideChatJoinRequest(ctx context.Context, in *TLMessagesHideChatJoinRequest, opts ...grpc.CallOption) (*Updates, error)
	MessagesHideAllChatJoinRequests(ctx context.Context, in *TLMessagesHideAllChatJoinRequests, opts ...grpc.CallOption) (*Updates, error)
}

type rPCChatInvitesClient struct {
	cc *grpc.ClientConn
}

func NewRPCChatInvitesClient(cc *grpc.ClientConn) RPCChatInvitesClient {
	return &rPCChatInvitesClient{cc}
}

func (c *rPCChatInvitesClient) MessagesExportChatInvite(ctx context.Context, in *TLMessagesExportChatInvite, opts ...grpc.CallOption) (*ExportedChatInvite, error) {
	out := new(ExportedChatInvite)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChatInvites/messages_exportChatInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChatInvitesClient) MessagesCheckChatInvite(ctx context.Context, in *TLMessagesCheckChatInvite, opts ...grpc.CallOption) (*ChatInvite, error) {
	out := new(ChatInvite)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChatInvites/messages_checkChatInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChatInvitesClient) MessagesImportChatInvite(ctx context.Context, in *TLMessagesImportChatInvite, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChatInvites/messages_importChatInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChatInvitesClient) MessagesGetExportedChatInvites(ctx context.Context, in *TLMessagesGetExportedChatInvites, opts ...grpc.CallOption) (*Messages_ExportedChatInvites, error) {
	out := new(Messages_ExportedChatInvites)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChatInvites/messages_getExportedChatInvites", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChatInvitesClient) MessagesGetExportedChatInvite(ctx context.Context, in *TLMessagesGetExportedChatInvite, opts ...grpc.CallOption) (*Messages_ExportedChatInvite, error) {
	out := new(Messages_ExportedChatInvite)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChatInvites/messages_getExportedChatInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChatInvitesClient) MessagesEditExportedChatInvite(ctx context.Context, in *TLMessagesEditExportedChatInvite, opts ...grpc.CallOption) (*Messages_ExportedChatInvite, error) {
	out := new(Messages_ExportedChatInvite)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChatInvites/messages_editExportedChatInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChatInvitesClient) MessagesDeleteRevokedExportedChatInvites(ctx context.Context, in *TLMessagesDeleteRevokedExportedChatInvites, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChatInvites/messages_deleteRevokedExportedChatInvites", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChatInvitesClient) MessagesDeleteExportedChatInvite(ctx context.Context, in *TLMessagesDeleteExportedChatInvite, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChatInvites/messages_deleteExportedChatInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChatInvitesClient) MessagesGetAdminsWithInvites(ctx context.Context, in *TLMessagesGetAdminsWithInvites, opts ...grpc.CallOption) (*Messages_ChatAdminsWithInvites, error) {
	out := new(Messages_ChatAdminsWithInvites)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChatInvites/messages_getAdminsWithInvites", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChatInvitesClient) MessagesGetChatInviteImporters(ctx context.Context, in *TLMessagesGetChatInviteImporters, opts ...grpc.CallOption) (*Messages_ChatInviteImporters, error) {
	out := new(Messages_ChatInviteImporters)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChatInvites/messages_getChatInviteImporters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChatInvitesClient) MessagesHideChatJoinRequest(ctx context.Context, in *TLMessagesHideChatJoinRequest, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChatInvites/messages_hideChatJoinRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChatInvitesClient) MessagesHideAllChatJoinRequests(ctx context.Context, in *TLMessagesHideAllChatJoinRequests, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChatInvites/messages_hideAllChatJoinRequests", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCChatInvitesServer is the server API for RPCChatInvites service.
type RPCChatInvitesServer interface {
	MessagesExportChatInvite(context.Context, *TLMessagesExportChatInvite) (*ExportedChatInvite, error)
	MessagesCheckChatInvite(context.Context, *TLMessagesCheckChatInvite) (*ChatInvite, error)
	MessagesImportChatInvite(context.Context, *TLMessagesImportChatInvite) (*Updates, error)
	MessagesGetExportedChatInvites(context.Context, *TLMessagesGetExportedChatInvites) (*Messages_ExportedChatInvites, error)
	MessagesGetExportedChatInvite(context.Context, *TLMessagesGetExportedChatInvite) (*Messages_ExportedChatInvite, error)
	MessagesEditExportedChatInvite(context.Context, *TLMessagesEditExportedChatInvite) (*Messages_ExportedChatInvite, error)
	MessagesDeleteRevokedExportedChatInvites(context.Context, *TLMessagesDeleteRevokedExportedChatInvites) (*Bool, error)
	MessagesDeleteExportedChatInvite(context.Context, *TLMessagesDeleteExportedChatInvite) (*Bool, error)
	MessagesGetAdminsWithInvites(context.Context, *TLMessagesGetAdminsWithInvites) (*Messages_ChatAdminsWithInvites, error)
	MessagesGetChatInviteImporters(context.Context, *TLMessagesGetChatInviteImporters) (*Messages_ChatInviteImporters, error)
	MessagesHideChatJoinRequest(context.Context, *TLMessagesHideChatJoinRequest) (*Updates, error)
	MessagesHideAllChatJoinRequests(context.Context, *TLMessagesHideAllChatJoinRequests) (*Updates, error)
}

// UnimplementedRPCChatInvitesServer can be embedded to have forward compatible implementations.
type UnimplementedRPCChatInvitesServer struct {
}

func (*UnimplementedRPCChatInvitesServer) MessagesExportChatInvite(ctx context.Context, req *TLMessagesExportChatInvite) (*ExportedChatInvite, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesExportChatInvite not implemented")
}
func (*UnimplementedRPCChatInvitesServer) MessagesCheckChatInvite(ctx context.Context, req *TLMessagesCheckChatInvite) (*ChatInvite, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesCheckChatInvite not implemented")
}
func (*UnimplementedRPCChatInvitesServer) MessagesImportChatInvite(ctx context.Context, req *TLMessagesImportChatInvite) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesImportChatInvite not implemented")
}
func (*UnimplementedRPCChatInvitesServer) MessagesGetExportedChatInvites(ctx context.Context, req *TLMessagesGetExportedChatInvites) (*Messages_ExportedChatInvites, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetExportedChatInvites not implemented")
}
func (*UnimplementedRPCChatInvitesServer) MessagesGetExportedChatInvite(ctx context.Context, req *TLMessagesGetExportedChatInvite) (*Messages_ExportedChatInvite, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetExportedChatInvite not implemented")
}
func (*UnimplementedRPCChatInvitesServer) MessagesEditExportedChatInvite(ctx context.Context, req *TLMessagesEditExportedChatInvite) (*Messages_ExportedChatInvite, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesEditExportedChatInvite not implemented")
}
func (*UnimplementedRPCChatInvitesServer) MessagesDeleteRevokedExportedChatInvites(ctx context.Context, req *TLMessagesDeleteRevokedExportedChatInvites) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesDeleteRevokedExportedChatInvites not implemented")
}
func (*UnimplementedRPCChatInvitesServer) MessagesDeleteExportedChatInvite(ctx context.Context, req *TLMessagesDeleteExportedChatInvite) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesDeleteExportedChatInvite not implemented")
}
func (*UnimplementedRPCChatInvitesServer) MessagesGetAdminsWithInvites(ctx context.Context, req *TLMessagesGetAdminsWithInvites) (*Messages_ChatAdminsWithInvites, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetAdminsWithInvites not implemented")
}
func (*UnimplementedRPCChatInvitesServer) MessagesGetChatInviteImporters(ctx context.Context, req *TLMessagesGetChatInviteImporters) (*Messages_ChatInviteImporters, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetChatInviteImporters not implemented")
}
func (*UnimplementedRPCChatInvitesServer) MessagesHideChatJoinRequest(ctx context.Context, req *TLMessagesHideChatJoinRequest) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesHideChatJoinRequest not implemented")
}
func (*UnimplementedRPCChatInvitesServer) MessagesHideAllChatJoinRequests(ctx context.Context, req *TLMessagesHideAllChatJoinRequests) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesHideAllChatJoinRequests not implemented")
}

func RegisterRPCChatInvitesServer(s *grpc.Server, srv RPCChatInvitesServer) {
	s.RegisterService(&_RPCChatInvites_serviceDesc, srv)
}

func _RPCChatInvites_MessagesExportChatInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesExportChatInvite)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatInvitesServer).MessagesExportChatInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChatInvites/MessagesExportChatInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatInvitesServer).MessagesExportChatInvite(ctx, req.(*TLMessagesExportChatInvite))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChatInvites_MessagesCheckChatInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesCheckChatInvite)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatInvitesServer).MessagesCheckChatInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChatInvites/MessagesCheckChatInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatInvitesServer).MessagesCheckChatInvite(ctx, req.(*TLMessagesCheckChatInvite))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChatInvites_MessagesImportChatInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesImportChatInvite)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatInvitesServer).MessagesImportChatInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChatInvites/MessagesImportChatInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatInvitesServer).MessagesImportChatInvite(ctx, req.(*TLMessagesImportChatInvite))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChatInvites_MessagesGetExportedChatInvites_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetExportedChatInvites)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatInvitesServer).MessagesGetExportedChatInvites(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChatInvites/MessagesGetExportedChatInvites",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatInvitesServer).MessagesGetExportedChatInvites(ctx, req.(*TLMessagesGetExportedChatInvites))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChatInvites_MessagesGetExportedChatInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetExportedChatInvite)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatInvitesServer).MessagesGetExportedChatInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChatInvites/MessagesGetExportedChatInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatInvitesServer).MessagesGetExportedChatInvite(ctx, req.(*TLMessagesGetExportedChatInvite))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChatInvites_MessagesEditExportedChatInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesEditExportedChatInvite)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatInvitesServer).MessagesEditExportedChatInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChatInvites/MessagesEditExportedChatInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatInvitesServer).MessagesEditExportedChatInvite(ctx, req.(*TLMessagesEditExportedChatInvite))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChatInvites_MessagesDeleteRevokedExportedChatInvites_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesDeleteRevokedExportedChatInvites)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatInvitesServer).MessagesDeleteRevokedExportedChatInvites(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChatInvites/MessagesDeleteRevokedExportedChatInvites",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatInvitesServer).MessagesDeleteRevokedExportedChatInvites(ctx, req.(*TLMessagesDeleteRevokedExportedChatInvites))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChatInvites_MessagesDeleteExportedChatInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesDeleteExportedChatInvite)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatInvitesServer).MessagesDeleteExportedChatInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChatInvites/MessagesDeleteExportedChatInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatInvitesServer).MessagesDeleteExportedChatInvite(ctx, req.(*TLMessagesDeleteExportedChatInvite))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChatInvites_MessagesGetAdminsWithInvites_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetAdminsWithInvites)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatInvitesServer).MessagesGetAdminsWithInvites(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChatInvites/MessagesGetAdminsWithInvites",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatInvitesServer).MessagesGetAdminsWithInvites(ctx, req.(*TLMessagesGetAdminsWithInvites))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChatInvites_MessagesGetChatInviteImporters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetChatInviteImporters)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatInvitesServer).MessagesGetChatInviteImporters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChatInvites/MessagesGetChatInviteImporters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatInvitesServer).MessagesGetChatInviteImporters(ctx, req.(*TLMessagesGetChatInviteImporters))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChatInvites_MessagesHideChatJoinRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesHideChatJoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatInvitesServer).MessagesHideChatJoinRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChatInvites/MessagesHideChatJoinRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatInvitesServer).MessagesHideChatJoinRequest(ctx, req.(*TLMessagesHideChatJoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChatInvites_MessagesHideAllChatJoinRequests_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesHideAllChatJoinRequests)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatInvitesServer).MessagesHideAllChatJoinRequests(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChatInvites/MessagesHideAllChatJoinRequests",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatInvitesServer).MessagesHideAllChatJoinRequests(ctx, req.(*TLMessagesHideAllChatJoinRequests))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCChatInvites_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCChatInvites",
	HandlerType: (*RPCChatInvitesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "messages_exportChatInvite",
			Handler:    _RPCChatInvites_MessagesExportChatInvite_Handler,
		},
		{
			MethodName: "messages_checkChatInvite",
			Handler:    _RPCChatInvites_MessagesCheckChatInvite_Handler,
		},
		{
			MethodName: "messages_importChatInvite",
			Handler:    _RPCChatInvites_MessagesImportChatInvite_Handler,
		},
		{
			MethodName: "messages_getExportedChatInvites",
			Handler:    _RPCChatInvites_MessagesGetExportedChatInvites_Handler,
		},
		{
			MethodName: "messages_getExportedChatInvite",
			Handler:    _RPCChatInvites_MessagesGetExportedChatInvite_Handler,
		},
		{
			MethodName: "messages_editExportedChatInvite",
			Handler:    _RPCChatInvites_MessagesEditExportedChatInvite_Handler,
		},
		{
			MethodName: "messages_deleteRevokedExportedChatInvites",
			Handler:    _RPCChatInvites_MessagesDeleteRevokedExportedChatInvites_Handler,
		},
		{
			MethodName: "messages_deleteExportedChatInvite",
			Handler:    _RPCChatInvites_MessagesDeleteExportedChatInvite_Handler,
		},
		{
			MethodName: "messages_getAdminsWithInvites",
			Handler:    _RPCChatInvites_MessagesGetAdminsWithInvites_Handler,
		},
		{
			MethodName: "messages_getChatInviteImporters",
			Handler:    _RPCChatInvites_MessagesGetChatInviteImporters_Handler,
		},
		{
			MethodName: "messages_hideChatJoinRequest",
			Handler:    _RPCChatInvites_MessagesHideChatJoinRequest_Handler,
		},
		{
			MethodName: "messages_hideAllChatJoinRequests",
			Handler:    _RPCChatInvites_MessagesHideAllChatJoinRequests_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCTsfClient is the client API for RPCTsf service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCTsfClient interface {
	HelpGetUserInfo(ctx context.Context, in *TLHelpGetUserInfo, opts ...grpc.CallOption) (*Help_UserInfo, error)
	HelpEditUserInfo(ctx context.Context, in *TLHelpEditUserInfo, opts ...grpc.CallOption) (*Help_UserInfo, error)
}

type rPCTsfClient struct {
	cc *grpc.ClientConn
}

func NewRPCTsfClient(cc *grpc.ClientConn) RPCTsfClient {
	return &rPCTsfClient{cc}
}

func (c *rPCTsfClient) HelpGetUserInfo(ctx context.Context, in *TLHelpGetUserInfo, opts ...grpc.CallOption) (*Help_UserInfo, error) {
	out := new(Help_UserInfo)
	err := c.cc.Invoke(ctx, "/mtproto.RPCTsf/help_getUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCTsfClient) HelpEditUserInfo(ctx context.Context, in *TLHelpEditUserInfo, opts ...grpc.CallOption) (*Help_UserInfo, error) {
	out := new(Help_UserInfo)
	err := c.cc.Invoke(ctx, "/mtproto.RPCTsf/help_editUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCTsfServer is the server API for RPCTsf service.
type RPCTsfServer interface {
	HelpGetUserInfo(context.Context, *TLHelpGetUserInfo) (*Help_UserInfo, error)
	HelpEditUserInfo(context.Context, *TLHelpEditUserInfo) (*Help_UserInfo, error)
}

// UnimplementedRPCTsfServer can be embedded to have forward compatible implementations.
type UnimplementedRPCTsfServer struct {
}

func (*UnimplementedRPCTsfServer) HelpGetUserInfo(ctx context.Context, req *TLHelpGetUserInfo) (*Help_UserInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelpGetUserInfo not implemented")
}
func (*UnimplementedRPCTsfServer) HelpEditUserInfo(ctx context.Context, req *TLHelpEditUserInfo) (*Help_UserInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelpEditUserInfo not implemented")
}

func RegisterRPCTsfServer(s *grpc.Server, srv RPCTsfServer) {
	s.RegisterService(&_RPCTsf_serviceDesc, srv)
}

func _RPCTsf_HelpGetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetUserInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCTsfServer).HelpGetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCTsf/HelpGetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCTsfServer).HelpGetUserInfo(ctx, req.(*TLHelpGetUserInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCTsf_HelpEditUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpEditUserInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCTsfServer).HelpEditUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCTsf/HelpEditUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCTsfServer).HelpEditUserInfo(ctx, req.(*TLHelpEditUserInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCTsf_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCTsf",
	HandlerType: (*RPCTsfServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "help_getUserInfo",
			Handler:    _RPCTsf_HelpGetUserInfo_Handler,
		},
		{
			MethodName: "help_editUserInfo",
			Handler:    _RPCTsf_HelpEditUserInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCPredefinedClient is the client API for RPCPredefined service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCPredefinedClient interface {
	PredefinedCreatePredefinedUser(ctx context.Context, in *TLPredefinedCreatePredefinedUser, opts ...grpc.CallOption) (*PredefinedUser, error)
	PredefinedUpdatePredefinedUsername(ctx context.Context, in *TLPredefinedUpdatePredefinedUsername, opts ...grpc.CallOption) (*PredefinedUser, error)
	PredefinedUpdatePredefinedProfile(ctx context.Context, in *TLPredefinedUpdatePredefinedProfile, opts ...grpc.CallOption) (*PredefinedUser, error)
	PredefinedUpdatePredefinedVerified(ctx context.Context, in *TLPredefinedUpdatePredefinedVerified, opts ...grpc.CallOption) (*PredefinedUser, error)
	PredefinedUpdatePredefinedCode(ctx context.Context, in *TLPredefinedUpdatePredefinedCode, opts ...grpc.CallOption) (*PredefinedUser, error)
	PredefinedGetPredefinedUser(ctx context.Context, in *TLPredefinedGetPredefinedUser, opts ...grpc.CallOption) (*PredefinedUser, error)
	PredefinedGetPredefinedUsers(ctx context.Context, in *TLPredefinedGetPredefinedUsers, opts ...grpc.CallOption) (*Vector_PredefinedUser, error)
}

type rPCPredefinedClient struct {
	cc *grpc.ClientConn
}

func NewRPCPredefinedClient(cc *grpc.ClientConn) RPCPredefinedClient {
	return &rPCPredefinedClient{cc}
}

func (c *rPCPredefinedClient) PredefinedCreatePredefinedUser(ctx context.Context, in *TLPredefinedCreatePredefinedUser, opts ...grpc.CallOption) (*PredefinedUser, error) {
	out := new(PredefinedUser)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPredefined/predefined_createPredefinedUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPredefinedClient) PredefinedUpdatePredefinedUsername(ctx context.Context, in *TLPredefinedUpdatePredefinedUsername, opts ...grpc.CallOption) (*PredefinedUser, error) {
	out := new(PredefinedUser)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPredefined/predefined_updatePredefinedUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPredefinedClient) PredefinedUpdatePredefinedProfile(ctx context.Context, in *TLPredefinedUpdatePredefinedProfile, opts ...grpc.CallOption) (*PredefinedUser, error) {
	out := new(PredefinedUser)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPredefined/predefined_updatePredefinedProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPredefinedClient) PredefinedUpdatePredefinedVerified(ctx context.Context, in *TLPredefinedUpdatePredefinedVerified, opts ...grpc.CallOption) (*PredefinedUser, error) {
	out := new(PredefinedUser)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPredefined/predefined_updatePredefinedVerified", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPredefinedClient) PredefinedUpdatePredefinedCode(ctx context.Context, in *TLPredefinedUpdatePredefinedCode, opts ...grpc.CallOption) (*PredefinedUser, error) {
	out := new(PredefinedUser)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPredefined/predefined_updatePredefinedCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPredefinedClient) PredefinedGetPredefinedUser(ctx context.Context, in *TLPredefinedGetPredefinedUser, opts ...grpc.CallOption) (*PredefinedUser, error) {
	out := new(PredefinedUser)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPredefined/predefined_getPredefinedUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPredefinedClient) PredefinedGetPredefinedUsers(ctx context.Context, in *TLPredefinedGetPredefinedUsers, opts ...grpc.CallOption) (*Vector_PredefinedUser, error) {
	out := new(Vector_PredefinedUser)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPredefined/predefined_getPredefinedUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCPredefinedServer is the server API for RPCPredefined service.
type RPCPredefinedServer interface {
	PredefinedCreatePredefinedUser(context.Context, *TLPredefinedCreatePredefinedUser) (*PredefinedUser, error)
	PredefinedUpdatePredefinedUsername(context.Context, *TLPredefinedUpdatePredefinedUsername) (*PredefinedUser, error)
	PredefinedUpdatePredefinedProfile(context.Context, *TLPredefinedUpdatePredefinedProfile) (*PredefinedUser, error)
	PredefinedUpdatePredefinedVerified(context.Context, *TLPredefinedUpdatePredefinedVerified) (*PredefinedUser, error)
	PredefinedUpdatePredefinedCode(context.Context, *TLPredefinedUpdatePredefinedCode) (*PredefinedUser, error)
	PredefinedGetPredefinedUser(context.Context, *TLPredefinedGetPredefinedUser) (*PredefinedUser, error)
	PredefinedGetPredefinedUsers(context.Context, *TLPredefinedGetPredefinedUsers) (*Vector_PredefinedUser, error)
}

// UnimplementedRPCPredefinedServer can be embedded to have forward compatible implementations.
type UnimplementedRPCPredefinedServer struct {
}

func (*UnimplementedRPCPredefinedServer) PredefinedCreatePredefinedUser(ctx context.Context, req *TLPredefinedCreatePredefinedUser) (*PredefinedUser, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PredefinedCreatePredefinedUser not implemented")
}
func (*UnimplementedRPCPredefinedServer) PredefinedUpdatePredefinedUsername(ctx context.Context, req *TLPredefinedUpdatePredefinedUsername) (*PredefinedUser, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PredefinedUpdatePredefinedUsername not implemented")
}
func (*UnimplementedRPCPredefinedServer) PredefinedUpdatePredefinedProfile(ctx context.Context, req *TLPredefinedUpdatePredefinedProfile) (*PredefinedUser, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PredefinedUpdatePredefinedProfile not implemented")
}
func (*UnimplementedRPCPredefinedServer) PredefinedUpdatePredefinedVerified(ctx context.Context, req *TLPredefinedUpdatePredefinedVerified) (*PredefinedUser, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PredefinedUpdatePredefinedVerified not implemented")
}
func (*UnimplementedRPCPredefinedServer) PredefinedUpdatePredefinedCode(ctx context.Context, req *TLPredefinedUpdatePredefinedCode) (*PredefinedUser, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PredefinedUpdatePredefinedCode not implemented")
}
func (*UnimplementedRPCPredefinedServer) PredefinedGetPredefinedUser(ctx context.Context, req *TLPredefinedGetPredefinedUser) (*PredefinedUser, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PredefinedGetPredefinedUser not implemented")
}
func (*UnimplementedRPCPredefinedServer) PredefinedGetPredefinedUsers(ctx context.Context, req *TLPredefinedGetPredefinedUsers) (*Vector_PredefinedUser, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PredefinedGetPredefinedUsers not implemented")
}

func RegisterRPCPredefinedServer(s *grpc.Server, srv RPCPredefinedServer) {
	s.RegisterService(&_RPCPredefined_serviceDesc, srv)
}

func _RPCPredefined_PredefinedCreatePredefinedUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPredefinedCreatePredefinedUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPredefinedServer).PredefinedCreatePredefinedUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPredefined/PredefinedCreatePredefinedUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPredefinedServer).PredefinedCreatePredefinedUser(ctx, req.(*TLPredefinedCreatePredefinedUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPredefined_PredefinedUpdatePredefinedUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPredefinedUpdatePredefinedUsername)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPredefinedServer).PredefinedUpdatePredefinedUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPredefined/PredefinedUpdatePredefinedUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPredefinedServer).PredefinedUpdatePredefinedUsername(ctx, req.(*TLPredefinedUpdatePredefinedUsername))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPredefined_PredefinedUpdatePredefinedProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPredefinedUpdatePredefinedProfile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPredefinedServer).PredefinedUpdatePredefinedProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPredefined/PredefinedUpdatePredefinedProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPredefinedServer).PredefinedUpdatePredefinedProfile(ctx, req.(*TLPredefinedUpdatePredefinedProfile))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPredefined_PredefinedUpdatePredefinedVerified_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPredefinedUpdatePredefinedVerified)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPredefinedServer).PredefinedUpdatePredefinedVerified(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPredefined/PredefinedUpdatePredefinedVerified",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPredefinedServer).PredefinedUpdatePredefinedVerified(ctx, req.(*TLPredefinedUpdatePredefinedVerified))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPredefined_PredefinedUpdatePredefinedCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPredefinedUpdatePredefinedCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPredefinedServer).PredefinedUpdatePredefinedCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPredefined/PredefinedUpdatePredefinedCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPredefinedServer).PredefinedUpdatePredefinedCode(ctx, req.(*TLPredefinedUpdatePredefinedCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPredefined_PredefinedGetPredefinedUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPredefinedGetPredefinedUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPredefinedServer).PredefinedGetPredefinedUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPredefined/PredefinedGetPredefinedUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPredefinedServer).PredefinedGetPredefinedUser(ctx, req.(*TLPredefinedGetPredefinedUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPredefined_PredefinedGetPredefinedUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPredefinedGetPredefinedUsers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPredefinedServer).PredefinedGetPredefinedUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPredefined/PredefinedGetPredefinedUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPredefinedServer).PredefinedGetPredefinedUsers(ctx, req.(*TLPredefinedGetPredefinedUsers))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCPredefined_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCPredefined",
	HandlerType: (*RPCPredefinedServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "predefined_createPredefinedUser",
			Handler:    _RPCPredefined_PredefinedCreatePredefinedUser_Handler,
		},
		{
			MethodName: "predefined_updatePredefinedUsername",
			Handler:    _RPCPredefined_PredefinedUpdatePredefinedUsername_Handler,
		},
		{
			MethodName: "predefined_updatePredefinedProfile",
			Handler:    _RPCPredefined_PredefinedUpdatePredefinedProfile_Handler,
		},
		{
			MethodName: "predefined_updatePredefinedVerified",
			Handler:    _RPCPredefined_PredefinedUpdatePredefinedVerified_Handler,
		},
		{
			MethodName: "predefined_updatePredefinedCode",
			Handler:    _RPCPredefined_PredefinedUpdatePredefinedCode_Handler,
		},
		{
			MethodName: "predefined_getPredefinedUser",
			Handler:    _RPCPredefined_PredefinedGetPredefinedUser_Handler,
		},
		{
			MethodName: "predefined_getPredefinedUsers",
			Handler:    _RPCPredefined_PredefinedGetPredefinedUsers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCMessageThreadsClient is the client API for RPCMessageThreads service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCMessageThreadsClient interface {
	ContactsBlockFromReplies(ctx context.Context, in *TLContactsBlockFromReplies, opts ...grpc.CallOption) (*Updates, error)
	MessagesGetReplies(ctx context.Context, in *TLMessagesGetReplies, opts ...grpc.CallOption) (*Messages_Messages, error)
	MessagesGetDiscussionMessage(ctx context.Context, in *TLMessagesGetDiscussionMessage, opts ...grpc.CallOption) (*Messages_DiscussionMessage, error)
	MessagesReadDiscussion(ctx context.Context, in *TLMessagesReadDiscussion, opts ...grpc.CallOption) (*Bool, error)
}

type rPCMessageThreadsClient struct {
	cc *grpc.ClientConn
}

func NewRPCMessageThreadsClient(cc *grpc.ClientConn) RPCMessageThreadsClient {
	return &rPCMessageThreadsClient{cc}
}

func (c *rPCMessageThreadsClient) ContactsBlockFromReplies(ctx context.Context, in *TLContactsBlockFromReplies, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessageThreads/contacts_blockFromReplies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessageThreadsClient) MessagesGetReplies(ctx context.Context, in *TLMessagesGetReplies, opts ...grpc.CallOption) (*Messages_Messages, error) {
	out := new(Messages_Messages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessageThreads/messages_getReplies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessageThreadsClient) MessagesGetDiscussionMessage(ctx context.Context, in *TLMessagesGetDiscussionMessage, opts ...grpc.CallOption) (*Messages_DiscussionMessage, error) {
	out := new(Messages_DiscussionMessage)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessageThreads/messages_getDiscussionMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessageThreadsClient) MessagesReadDiscussion(ctx context.Context, in *TLMessagesReadDiscussion, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessageThreads/messages_readDiscussion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCMessageThreadsServer is the server API for RPCMessageThreads service.
type RPCMessageThreadsServer interface {
	ContactsBlockFromReplies(context.Context, *TLContactsBlockFromReplies) (*Updates, error)
	MessagesGetReplies(context.Context, *TLMessagesGetReplies) (*Messages_Messages, error)
	MessagesGetDiscussionMessage(context.Context, *TLMessagesGetDiscussionMessage) (*Messages_DiscussionMessage, error)
	MessagesReadDiscussion(context.Context, *TLMessagesReadDiscussion) (*Bool, error)
}

// UnimplementedRPCMessageThreadsServer can be embedded to have forward compatible implementations.
type UnimplementedRPCMessageThreadsServer struct {
}

func (*UnimplementedRPCMessageThreadsServer) ContactsBlockFromReplies(ctx context.Context, req *TLContactsBlockFromReplies) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactsBlockFromReplies not implemented")
}
func (*UnimplementedRPCMessageThreadsServer) MessagesGetReplies(ctx context.Context, req *TLMessagesGetReplies) (*Messages_Messages, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetReplies not implemented")
}
func (*UnimplementedRPCMessageThreadsServer) MessagesGetDiscussionMessage(ctx context.Context, req *TLMessagesGetDiscussionMessage) (*Messages_DiscussionMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetDiscussionMessage not implemented")
}
func (*UnimplementedRPCMessageThreadsServer) MessagesReadDiscussion(ctx context.Context, req *TLMessagesReadDiscussion) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesReadDiscussion not implemented")
}

func RegisterRPCMessageThreadsServer(s *grpc.Server, srv RPCMessageThreadsServer) {
	s.RegisterService(&_RPCMessageThreads_serviceDesc, srv)
}

func _RPCMessageThreads_ContactsBlockFromReplies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsBlockFromReplies)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessageThreadsServer).ContactsBlockFromReplies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessageThreads/ContactsBlockFromReplies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessageThreadsServer).ContactsBlockFromReplies(ctx, req.(*TLContactsBlockFromReplies))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessageThreads_MessagesGetReplies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetReplies)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessageThreadsServer).MessagesGetReplies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessageThreads/MessagesGetReplies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessageThreadsServer).MessagesGetReplies(ctx, req.(*TLMessagesGetReplies))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessageThreads_MessagesGetDiscussionMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetDiscussionMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessageThreadsServer).MessagesGetDiscussionMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessageThreads/MessagesGetDiscussionMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessageThreadsServer).MessagesGetDiscussionMessage(ctx, req.(*TLMessagesGetDiscussionMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessageThreads_MessagesReadDiscussion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReadDiscussion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessageThreadsServer).MessagesReadDiscussion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessageThreads/MessagesReadDiscussion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessageThreadsServer).MessagesReadDiscussion(ctx, req.(*TLMessagesReadDiscussion))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCMessageThreads_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCMessageThreads",
	HandlerType: (*RPCMessageThreadsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "contacts_blockFromReplies",
			Handler:    _RPCMessageThreads_ContactsBlockFromReplies_Handler,
		},
		{
			MethodName: "messages_getReplies",
			Handler:    _RPCMessageThreads_MessagesGetReplies_Handler,
		},
		{
			MethodName: "messages_getDiscussionMessage",
			Handler:    _RPCMessageThreads_MessagesGetDiscussionMessage_Handler,
		},
		{
			MethodName: "messages_readDiscussion",
			Handler:    _RPCMessageThreads_MessagesReadDiscussion_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCUpdatesClient is the client API for RPCUpdates service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCUpdatesClient interface {
	UpdatesGetState(ctx context.Context, in *TLUpdatesGetState, opts ...grpc.CallOption) (*Updates_State, error)
	UpdatesGetDifference(ctx context.Context, in *TLUpdatesGetDifference, opts ...grpc.CallOption) (*Updates_Difference, error)
	UpdatesGetChannelDifference(ctx context.Context, in *TLUpdatesGetChannelDifference, opts ...grpc.CallOption) (*Updates_ChannelDifference, error)
}

type rPCUpdatesClient struct {
	cc *grpc.ClientConn
}

func NewRPCUpdatesClient(cc *grpc.ClientConn) RPCUpdatesClient {
	return &rPCUpdatesClient{cc}
}

func (c *rPCUpdatesClient) UpdatesGetState(ctx context.Context, in *TLUpdatesGetState, opts ...grpc.CallOption) (*Updates_State, error) {
	out := new(Updates_State)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUpdates/updates_getState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCUpdatesClient) UpdatesGetDifference(ctx context.Context, in *TLUpdatesGetDifference, opts ...grpc.CallOption) (*Updates_Difference, error) {
	out := new(Updates_Difference)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUpdates/updates_getDifference", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCUpdatesClient) UpdatesGetChannelDifference(ctx context.Context, in *TLUpdatesGetChannelDifference, opts ...grpc.CallOption) (*Updates_ChannelDifference, error) {
	out := new(Updates_ChannelDifference)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUpdates/updates_getChannelDifference", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCUpdatesServer is the server API for RPCUpdates service.
type RPCUpdatesServer interface {
	UpdatesGetState(context.Context, *TLUpdatesGetState) (*Updates_State, error)
	UpdatesGetDifference(context.Context, *TLUpdatesGetDifference) (*Updates_Difference, error)
	UpdatesGetChannelDifference(context.Context, *TLUpdatesGetChannelDifference) (*Updates_ChannelDifference, error)
}

// UnimplementedRPCUpdatesServer can be embedded to have forward compatible implementations.
type UnimplementedRPCUpdatesServer struct {
}

func (*UnimplementedRPCUpdatesServer) UpdatesGetState(ctx context.Context, req *TLUpdatesGetState) (*Updates_State, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatesGetState not implemented")
}
func (*UnimplementedRPCUpdatesServer) UpdatesGetDifference(ctx context.Context, req *TLUpdatesGetDifference) (*Updates_Difference, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatesGetDifference not implemented")
}
func (*UnimplementedRPCUpdatesServer) UpdatesGetChannelDifference(ctx context.Context, req *TLUpdatesGetChannelDifference) (*Updates_ChannelDifference, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatesGetChannelDifference not implemented")
}

func RegisterRPCUpdatesServer(s *grpc.Server, srv RPCUpdatesServer) {
	s.RegisterService(&_RPCUpdates_serviceDesc, srv)
}

func _RPCUpdates_UpdatesGetState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUpdatesGetState)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUpdatesServer).UpdatesGetState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUpdates/UpdatesGetState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUpdatesServer).UpdatesGetState(ctx, req.(*TLUpdatesGetState))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCUpdates_UpdatesGetDifference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUpdatesGetDifference)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUpdatesServer).UpdatesGetDifference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUpdates/UpdatesGetDifference",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUpdatesServer).UpdatesGetDifference(ctx, req.(*TLUpdatesGetDifference))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCUpdates_UpdatesGetChannelDifference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUpdatesGetChannelDifference)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUpdatesServer).UpdatesGetChannelDifference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUpdates/UpdatesGetChannelDifference",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUpdatesServer).UpdatesGetChannelDifference(ctx, req.(*TLUpdatesGetChannelDifference))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCUpdates_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCUpdates",
	HandlerType: (*RPCUpdatesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "updates_getState",
			Handler:    _RPCUpdates_UpdatesGetState_Handler,
		},
		{
			MethodName: "updates_getDifference",
			Handler:    _RPCUpdates_UpdatesGetDifference_Handler,
		},
		{
			MethodName: "updates_getChannelDifference",
			Handler:    _RPCUpdates_UpdatesGetChannelDifference_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCBotsClient is the client API for RPCBots service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCBotsClient interface {
	BotsSetBotCommands(ctx context.Context, in *TLBotsSetBotCommands, opts ...grpc.CallOption) (*Bool, error)
	BotsResetBotCommands(ctx context.Context, in *TLBotsResetBotCommands, opts ...grpc.CallOption) (*Bool, error)
	BotsGetBotCommands(ctx context.Context, in *TLBotsGetBotCommands, opts ...grpc.CallOption) (*Vector_BotCommand, error)
}

type rPCBotsClient struct {
	cc *grpc.ClientConn
}

func NewRPCBotsClient(cc *grpc.ClientConn) RPCBotsClient {
	return &rPCBotsClient{cc}
}

func (c *rPCBotsClient) BotsSetBotCommands(ctx context.Context, in *TLBotsSetBotCommands, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBots/bots_setBotCommands", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBotsClient) BotsResetBotCommands(ctx context.Context, in *TLBotsResetBotCommands, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBots/bots_resetBotCommands", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCBotsClient) BotsGetBotCommands(ctx context.Context, in *TLBotsGetBotCommands, opts ...grpc.CallOption) (*Vector_BotCommand, error) {
	out := new(Vector_BotCommand)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBots/bots_getBotCommands", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCBotsServer is the server API for RPCBots service.
type RPCBotsServer interface {
	BotsSetBotCommands(context.Context, *TLBotsSetBotCommands) (*Bool, error)
	BotsResetBotCommands(context.Context, *TLBotsResetBotCommands) (*Bool, error)
	BotsGetBotCommands(context.Context, *TLBotsGetBotCommands) (*Vector_BotCommand, error)
}

// UnimplementedRPCBotsServer can be embedded to have forward compatible implementations.
type UnimplementedRPCBotsServer struct {
}

func (*UnimplementedRPCBotsServer) BotsSetBotCommands(ctx context.Context, req *TLBotsSetBotCommands) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BotsSetBotCommands not implemented")
}
func (*UnimplementedRPCBotsServer) BotsResetBotCommands(ctx context.Context, req *TLBotsResetBotCommands) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BotsResetBotCommands not implemented")
}
func (*UnimplementedRPCBotsServer) BotsGetBotCommands(ctx context.Context, req *TLBotsGetBotCommands) (*Vector_BotCommand, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BotsGetBotCommands not implemented")
}

func RegisterRPCBotsServer(s *grpc.Server, srv RPCBotsServer) {
	s.RegisterService(&_RPCBots_serviceDesc, srv)
}

func _RPCBots_BotsSetBotCommands_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBotsSetBotCommands)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBotsServer).BotsSetBotCommands(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBots/BotsSetBotCommands",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBotsServer).BotsSetBotCommands(ctx, req.(*TLBotsSetBotCommands))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBots_BotsResetBotCommands_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBotsResetBotCommands)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBotsServer).BotsResetBotCommands(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBots/BotsResetBotCommands",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBotsServer).BotsResetBotCommands(ctx, req.(*TLBotsResetBotCommands))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCBots_BotsGetBotCommands_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBotsGetBotCommands)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBotsServer).BotsGetBotCommands(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBots/BotsGetBotCommands",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBotsServer).BotsGetBotCommands(ctx, req.(*TLBotsGetBotCommands))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCBots_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCBots",
	HandlerType: (*RPCBotsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "bots_setBotCommands",
			Handler:    _RPCBots_BotsSetBotCommands_Handler,
		},
		{
			MethodName: "bots_resetBotCommands",
			Handler:    _RPCBots_BotsResetBotCommands_Handler,
		},
		{
			MethodName: "bots_getBotCommands",
			Handler:    _RPCBots_BotsGetBotCommands_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCScheduledMessagesClient is the client API for RPCScheduledMessages service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCScheduledMessagesClient interface {
	MessagesGetScheduledHistory(ctx context.Context, in *TLMessagesGetScheduledHistory, opts ...grpc.CallOption) (*Messages_Messages, error)
	MessagesGetScheduledMessages(ctx context.Context, in *TLMessagesGetScheduledMessages, opts ...grpc.CallOption) (*Messages_Messages, error)
	MessagesSendScheduledMessages(ctx context.Context, in *TLMessagesSendScheduledMessages, opts ...grpc.CallOption) (*Updates, error)
	MessagesDeleteScheduledMessages(ctx context.Context, in *TLMessagesDeleteScheduledMessages, opts ...grpc.CallOption) (*Updates, error)
}

type rPCScheduledMessagesClient struct {
	cc *grpc.ClientConn
}

func NewRPCScheduledMessagesClient(cc *grpc.ClientConn) RPCScheduledMessagesClient {
	return &rPCScheduledMessagesClient{cc}
}

func (c *rPCScheduledMessagesClient) MessagesGetScheduledHistory(ctx context.Context, in *TLMessagesGetScheduledHistory, opts ...grpc.CallOption) (*Messages_Messages, error) {
	out := new(Messages_Messages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCScheduledMessages/messages_getScheduledHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCScheduledMessagesClient) MessagesGetScheduledMessages(ctx context.Context, in *TLMessagesGetScheduledMessages, opts ...grpc.CallOption) (*Messages_Messages, error) {
	out := new(Messages_Messages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCScheduledMessages/messages_getScheduledMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCScheduledMessagesClient) MessagesSendScheduledMessages(ctx context.Context, in *TLMessagesSendScheduledMessages, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCScheduledMessages/messages_sendScheduledMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCScheduledMessagesClient) MessagesDeleteScheduledMessages(ctx context.Context, in *TLMessagesDeleteScheduledMessages, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCScheduledMessages/messages_deleteScheduledMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCScheduledMessagesServer is the server API for RPCScheduledMessages service.
type RPCScheduledMessagesServer interface {
	MessagesGetScheduledHistory(context.Context, *TLMessagesGetScheduledHistory) (*Messages_Messages, error)
	MessagesGetScheduledMessages(context.Context, *TLMessagesGetScheduledMessages) (*Messages_Messages, error)
	MessagesSendScheduledMessages(context.Context, *TLMessagesSendScheduledMessages) (*Updates, error)
	MessagesDeleteScheduledMessages(context.Context, *TLMessagesDeleteScheduledMessages) (*Updates, error)
}

// UnimplementedRPCScheduledMessagesServer can be embedded to have forward compatible implementations.
type UnimplementedRPCScheduledMessagesServer struct {
}

func (*UnimplementedRPCScheduledMessagesServer) MessagesGetScheduledHistory(ctx context.Context, req *TLMessagesGetScheduledHistory) (*Messages_Messages, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetScheduledHistory not implemented")
}
func (*UnimplementedRPCScheduledMessagesServer) MessagesGetScheduledMessages(ctx context.Context, req *TLMessagesGetScheduledMessages) (*Messages_Messages, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetScheduledMessages not implemented")
}
func (*UnimplementedRPCScheduledMessagesServer) MessagesSendScheduledMessages(ctx context.Context, req *TLMessagesSendScheduledMessages) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSendScheduledMessages not implemented")
}
func (*UnimplementedRPCScheduledMessagesServer) MessagesDeleteScheduledMessages(ctx context.Context, req *TLMessagesDeleteScheduledMessages) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesDeleteScheduledMessages not implemented")
}

func RegisterRPCScheduledMessagesServer(s *grpc.Server, srv RPCScheduledMessagesServer) {
	s.RegisterService(&_RPCScheduledMessages_serviceDesc, srv)
}

func _RPCScheduledMessages_MessagesGetScheduledHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetScheduledHistory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCScheduledMessagesServer).MessagesGetScheduledHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCScheduledMessages/MessagesGetScheduledHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCScheduledMessagesServer).MessagesGetScheduledHistory(ctx, req.(*TLMessagesGetScheduledHistory))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCScheduledMessages_MessagesGetScheduledMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetScheduledMessages)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCScheduledMessagesServer).MessagesGetScheduledMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCScheduledMessages/MessagesGetScheduledMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCScheduledMessagesServer).MessagesGetScheduledMessages(ctx, req.(*TLMessagesGetScheduledMessages))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCScheduledMessages_MessagesSendScheduledMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSendScheduledMessages)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCScheduledMessagesServer).MessagesSendScheduledMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCScheduledMessages/MessagesSendScheduledMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCScheduledMessagesServer).MessagesSendScheduledMessages(ctx, req.(*TLMessagesSendScheduledMessages))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCScheduledMessages_MessagesDeleteScheduledMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesDeleteScheduledMessages)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCScheduledMessagesServer).MessagesDeleteScheduledMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCScheduledMessages/MessagesDeleteScheduledMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCScheduledMessagesServer).MessagesDeleteScheduledMessages(ctx, req.(*TLMessagesDeleteScheduledMessages))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCScheduledMessages_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCScheduledMessages",
	HandlerType: (*RPCScheduledMessagesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "messages_getScheduledHistory",
			Handler:    _RPCScheduledMessages_MessagesGetScheduledHistory_Handler,
		},
		{
			MethodName: "messages_getScheduledMessages",
			Handler:    _RPCScheduledMessages_MessagesGetScheduledMessages_Handler,
		},
		{
			MethodName: "messages_sendScheduledMessages",
			Handler:    _RPCScheduledMessages_MessagesSendScheduledMessages_Handler,
		},
		{
			MethodName: "messages_deleteScheduledMessages",
			Handler:    _RPCScheduledMessages_MessagesDeleteScheduledMessages_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCSponsoredMessagesClient is the client API for RPCSponsoredMessages service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCSponsoredMessagesClient interface {
	ChannelsViewSponsoredMessage(ctx context.Context, in *TLChannelsViewSponsoredMessage, opts ...grpc.CallOption) (*Bool, error)
	ChannelsGetSponsoredMessages(ctx context.Context, in *TLChannelsGetSponsoredMessages, opts ...grpc.CallOption) (*Messages_SponsoredMessages, error)
}

type rPCSponsoredMessagesClient struct {
	cc *grpc.ClientConn
}

func NewRPCSponsoredMessagesClient(cc *grpc.ClientConn) RPCSponsoredMessagesClient {
	return &rPCSponsoredMessagesClient{cc}
}

func (c *rPCSponsoredMessagesClient) ChannelsViewSponsoredMessage(ctx context.Context, in *TLChannelsViewSponsoredMessage, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSponsoredMessages/channels_viewSponsoredMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSponsoredMessagesClient) ChannelsGetSponsoredMessages(ctx context.Context, in *TLChannelsGetSponsoredMessages, opts ...grpc.CallOption) (*Messages_SponsoredMessages, error) {
	out := new(Messages_SponsoredMessages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSponsoredMessages/channels_getSponsoredMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCSponsoredMessagesServer is the server API for RPCSponsoredMessages service.
type RPCSponsoredMessagesServer interface {
	ChannelsViewSponsoredMessage(context.Context, *TLChannelsViewSponsoredMessage) (*Bool, error)
	ChannelsGetSponsoredMessages(context.Context, *TLChannelsGetSponsoredMessages) (*Messages_SponsoredMessages, error)
}

// UnimplementedRPCSponsoredMessagesServer can be embedded to have forward compatible implementations.
type UnimplementedRPCSponsoredMessagesServer struct {
}

func (*UnimplementedRPCSponsoredMessagesServer) ChannelsViewSponsoredMessage(ctx context.Context, req *TLChannelsViewSponsoredMessage) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsViewSponsoredMessage not implemented")
}
func (*UnimplementedRPCSponsoredMessagesServer) ChannelsGetSponsoredMessages(ctx context.Context, req *TLChannelsGetSponsoredMessages) (*Messages_SponsoredMessages, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsGetSponsoredMessages not implemented")
}

func RegisterRPCSponsoredMessagesServer(s *grpc.Server, srv RPCSponsoredMessagesServer) {
	s.RegisterService(&_RPCSponsoredMessages_serviceDesc, srv)
}

func _RPCSponsoredMessages_ChannelsViewSponsoredMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsViewSponsoredMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSponsoredMessagesServer).ChannelsViewSponsoredMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSponsoredMessages/ChannelsViewSponsoredMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSponsoredMessagesServer).ChannelsViewSponsoredMessage(ctx, req.(*TLChannelsViewSponsoredMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSponsoredMessages_ChannelsGetSponsoredMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsGetSponsoredMessages)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSponsoredMessagesServer).ChannelsGetSponsoredMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSponsoredMessages/ChannelsGetSponsoredMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSponsoredMessagesServer).ChannelsGetSponsoredMessages(ctx, req.(*TLChannelsGetSponsoredMessages))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCSponsoredMessages_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCSponsoredMessages",
	HandlerType: (*RPCSponsoredMessagesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "channels_viewSponsoredMessage",
			Handler:    _RPCSponsoredMessages_ChannelsViewSponsoredMessage_Handler,
		},
		{
			MethodName: "channels_getSponsoredMessages",
			Handler:    _RPCSponsoredMessages_ChannelsGetSponsoredMessages_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCStickersClient is the client API for RPCStickers service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCStickersClient interface {
	MessagesGetStickers(ctx context.Context, in *TLMessagesGetStickers, opts ...grpc.CallOption) (*Messages_Stickers, error)
	MessagesGetAllStickers(ctx context.Context, in *TLMessagesGetAllStickers, opts ...grpc.CallOption) (*Messages_AllStickers, error)
	MessagesGetStickerSet(ctx context.Context, in *TLMessagesGetStickerSet, opts ...grpc.CallOption) (*Messages_StickerSet, error)
	MessagesInstallStickerSet(ctx context.Context, in *TLMessagesInstallStickerSet, opts ...grpc.CallOption) (*Messages_StickerSetInstallResult, error)
	MessagesUninstallStickerSet(ctx context.Context, in *TLMessagesUninstallStickerSet, opts ...grpc.CallOption) (*Bool, error)
	MessagesReorderStickerSets(ctx context.Context, in *TLMessagesReorderStickerSets, opts ...grpc.CallOption) (*Bool, error)
	MessagesGetFeaturedStickers(ctx context.Context, in *TLMessagesGetFeaturedStickers, opts ...grpc.CallOption) (*Messages_FeaturedStickers, error)
	MessagesReadFeaturedStickers(ctx context.Context, in *TLMessagesReadFeaturedStickers, opts ...grpc.CallOption) (*Bool, error)
	MessagesGetRecentStickers(ctx context.Context, in *TLMessagesGetRecentStickers, opts ...grpc.CallOption) (*Messages_RecentStickers, error)
	MessagesSaveRecentSticker(ctx context.Context, in *TLMessagesSaveRecentSticker, opts ...grpc.CallOption) (*Bool, error)
	MessagesClearRecentStickers(ctx context.Context, in *TLMessagesClearRecentStickers, opts ...grpc.CallOption) (*Bool, error)
	MessagesGetArchivedStickers(ctx context.Context, in *TLMessagesGetArchivedStickers, opts ...grpc.CallOption) (*Messages_ArchivedStickers, error)
	MessagesGetMaskStickers(ctx context.Context, in *TLMessagesGetMaskStickers, opts ...grpc.CallOption) (*Messages_AllStickers, error)
	MessagesGetAttachedStickers(ctx context.Context, in *TLMessagesGetAttachedStickers, opts ...grpc.CallOption) (*Vector_StickerSetCovered, error)
	MessagesGetFavedStickers(ctx context.Context, in *TLMessagesGetFavedStickers, opts ...grpc.CallOption) (*Messages_FavedStickers, error)
	MessagesFaveSticker(ctx context.Context, in *TLMessagesFaveSticker, opts ...grpc.CallOption) (*Bool, error)
	MessagesSearchStickerSets(ctx context.Context, in *TLMessagesSearchStickerSets, opts ...grpc.CallOption) (*Messages_FoundStickerSets, error)
	MessagesToggleStickerSets(ctx context.Context, in *TLMessagesToggleStickerSets, opts ...grpc.CallOption) (*Bool, error)
	MessagesGetOldFeaturedStickers(ctx context.Context, in *TLMessagesGetOldFeaturedStickers, opts ...grpc.CallOption) (*Messages_FeaturedStickers, error)
	StickersCreateStickerSet(ctx context.Context, in *TLStickersCreateStickerSet, opts ...grpc.CallOption) (*Messages_StickerSet, error)
	StickersRemoveStickerFromSet(ctx context.Context, in *TLStickersRemoveStickerFromSet, opts ...grpc.CallOption) (*Messages_StickerSet, error)
	StickersChangeStickerPosition(ctx context.Context, in *TLStickersChangeStickerPosition, opts ...grpc.CallOption) (*Messages_StickerSet, error)
	StickersAddStickerToSet(ctx context.Context, in *TLStickersAddStickerToSet, opts ...grpc.CallOption) (*Messages_StickerSet, error)
	StickersSetStickerSetThumb(ctx context.Context, in *TLStickersSetStickerSetThumb, opts ...grpc.CallOption) (*Messages_StickerSet, error)
	StickersCheckShortName(ctx context.Context, in *TLStickersCheckShortName, opts ...grpc.CallOption) (*Bool, error)
	StickersSuggestShortName(ctx context.Context, in *TLStickersSuggestShortName, opts ...grpc.CallOption) (*Stickers_SuggestedShortName, error)
}

type rPCStickersClient struct {
	cc *grpc.ClientConn
}

func NewRPCStickersClient(cc *grpc.ClientConn) RPCStickersClient {
	return &rPCStickersClient{cc}
}

func (c *rPCStickersClient) MessagesGetStickers(ctx context.Context, in *TLMessagesGetStickers, opts ...grpc.CallOption) (*Messages_Stickers, error) {
	out := new(Messages_Stickers)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/messages_getStickers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) MessagesGetAllStickers(ctx context.Context, in *TLMessagesGetAllStickers, opts ...grpc.CallOption) (*Messages_AllStickers, error) {
	out := new(Messages_AllStickers)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/messages_getAllStickers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) MessagesGetStickerSet(ctx context.Context, in *TLMessagesGetStickerSet, opts ...grpc.CallOption) (*Messages_StickerSet, error) {
	out := new(Messages_StickerSet)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/messages_getStickerSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) MessagesInstallStickerSet(ctx context.Context, in *TLMessagesInstallStickerSet, opts ...grpc.CallOption) (*Messages_StickerSetInstallResult, error) {
	out := new(Messages_StickerSetInstallResult)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/messages_installStickerSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) MessagesUninstallStickerSet(ctx context.Context, in *TLMessagesUninstallStickerSet, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/messages_uninstallStickerSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) MessagesReorderStickerSets(ctx context.Context, in *TLMessagesReorderStickerSets, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/messages_reorderStickerSets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) MessagesGetFeaturedStickers(ctx context.Context, in *TLMessagesGetFeaturedStickers, opts ...grpc.CallOption) (*Messages_FeaturedStickers, error) {
	out := new(Messages_FeaturedStickers)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/messages_getFeaturedStickers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) MessagesReadFeaturedStickers(ctx context.Context, in *TLMessagesReadFeaturedStickers, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/messages_readFeaturedStickers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) MessagesGetRecentStickers(ctx context.Context, in *TLMessagesGetRecentStickers, opts ...grpc.CallOption) (*Messages_RecentStickers, error) {
	out := new(Messages_RecentStickers)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/messages_getRecentStickers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) MessagesSaveRecentSticker(ctx context.Context, in *TLMessagesSaveRecentSticker, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/messages_saveRecentSticker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) MessagesClearRecentStickers(ctx context.Context, in *TLMessagesClearRecentStickers, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/messages_clearRecentStickers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) MessagesGetArchivedStickers(ctx context.Context, in *TLMessagesGetArchivedStickers, opts ...grpc.CallOption) (*Messages_ArchivedStickers, error) {
	out := new(Messages_ArchivedStickers)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/messages_getArchivedStickers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) MessagesGetMaskStickers(ctx context.Context, in *TLMessagesGetMaskStickers, opts ...grpc.CallOption) (*Messages_AllStickers, error) {
	out := new(Messages_AllStickers)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/messages_getMaskStickers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) MessagesGetAttachedStickers(ctx context.Context, in *TLMessagesGetAttachedStickers, opts ...grpc.CallOption) (*Vector_StickerSetCovered, error) {
	out := new(Vector_StickerSetCovered)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/messages_getAttachedStickers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) MessagesGetFavedStickers(ctx context.Context, in *TLMessagesGetFavedStickers, opts ...grpc.CallOption) (*Messages_FavedStickers, error) {
	out := new(Messages_FavedStickers)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/messages_getFavedStickers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) MessagesFaveSticker(ctx context.Context, in *TLMessagesFaveSticker, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/messages_faveSticker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) MessagesSearchStickerSets(ctx context.Context, in *TLMessagesSearchStickerSets, opts ...grpc.CallOption) (*Messages_FoundStickerSets, error) {
	out := new(Messages_FoundStickerSets)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/messages_searchStickerSets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) MessagesToggleStickerSets(ctx context.Context, in *TLMessagesToggleStickerSets, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/messages_toggleStickerSets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) MessagesGetOldFeaturedStickers(ctx context.Context, in *TLMessagesGetOldFeaturedStickers, opts ...grpc.CallOption) (*Messages_FeaturedStickers, error) {
	out := new(Messages_FeaturedStickers)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/messages_getOldFeaturedStickers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) StickersCreateStickerSet(ctx context.Context, in *TLStickersCreateStickerSet, opts ...grpc.CallOption) (*Messages_StickerSet, error) {
	out := new(Messages_StickerSet)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/stickers_createStickerSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) StickersRemoveStickerFromSet(ctx context.Context, in *TLStickersRemoveStickerFromSet, opts ...grpc.CallOption) (*Messages_StickerSet, error) {
	out := new(Messages_StickerSet)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/stickers_removeStickerFromSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) StickersChangeStickerPosition(ctx context.Context, in *TLStickersChangeStickerPosition, opts ...grpc.CallOption) (*Messages_StickerSet, error) {
	out := new(Messages_StickerSet)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/stickers_changeStickerPosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) StickersAddStickerToSet(ctx context.Context, in *TLStickersAddStickerToSet, opts ...grpc.CallOption) (*Messages_StickerSet, error) {
	out := new(Messages_StickerSet)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/stickers_addStickerToSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) StickersSetStickerSetThumb(ctx context.Context, in *TLStickersSetStickerSetThumb, opts ...grpc.CallOption) (*Messages_StickerSet, error) {
	out := new(Messages_StickerSet)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/stickers_setStickerSetThumb", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) StickersCheckShortName(ctx context.Context, in *TLStickersCheckShortName, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/stickers_checkShortName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStickersClient) StickersSuggestShortName(ctx context.Context, in *TLStickersSuggestShortName, opts ...grpc.CallOption) (*Stickers_SuggestedShortName, error) {
	out := new(Stickers_SuggestedShortName)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStickers/stickers_suggestShortName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCStickersServer is the server API for RPCStickers service.
type RPCStickersServer interface {
	MessagesGetStickers(context.Context, *TLMessagesGetStickers) (*Messages_Stickers, error)
	MessagesGetAllStickers(context.Context, *TLMessagesGetAllStickers) (*Messages_AllStickers, error)
	MessagesGetStickerSet(context.Context, *TLMessagesGetStickerSet) (*Messages_StickerSet, error)
	MessagesInstallStickerSet(context.Context, *TLMessagesInstallStickerSet) (*Messages_StickerSetInstallResult, error)
	MessagesUninstallStickerSet(context.Context, *TLMessagesUninstallStickerSet) (*Bool, error)
	MessagesReorderStickerSets(context.Context, *TLMessagesReorderStickerSets) (*Bool, error)
	MessagesGetFeaturedStickers(context.Context, *TLMessagesGetFeaturedStickers) (*Messages_FeaturedStickers, error)
	MessagesReadFeaturedStickers(context.Context, *TLMessagesReadFeaturedStickers) (*Bool, error)
	MessagesGetRecentStickers(context.Context, *TLMessagesGetRecentStickers) (*Messages_RecentStickers, error)
	MessagesSaveRecentSticker(context.Context, *TLMessagesSaveRecentSticker) (*Bool, error)
	MessagesClearRecentStickers(context.Context, *TLMessagesClearRecentStickers) (*Bool, error)
	MessagesGetArchivedStickers(context.Context, *TLMessagesGetArchivedStickers) (*Messages_ArchivedStickers, error)
	MessagesGetMaskStickers(context.Context, *TLMessagesGetMaskStickers) (*Messages_AllStickers, error)
	MessagesGetAttachedStickers(context.Context, *TLMessagesGetAttachedStickers) (*Vector_StickerSetCovered, error)
	MessagesGetFavedStickers(context.Context, *TLMessagesGetFavedStickers) (*Messages_FavedStickers, error)
	MessagesFaveSticker(context.Context, *TLMessagesFaveSticker) (*Bool, error)
	MessagesSearchStickerSets(context.Context, *TLMessagesSearchStickerSets) (*Messages_FoundStickerSets, error)
	MessagesToggleStickerSets(context.Context, *TLMessagesToggleStickerSets) (*Bool, error)
	MessagesGetOldFeaturedStickers(context.Context, *TLMessagesGetOldFeaturedStickers) (*Messages_FeaturedStickers, error)
	StickersCreateStickerSet(context.Context, *TLStickersCreateStickerSet) (*Messages_StickerSet, error)
	StickersRemoveStickerFromSet(context.Context, *TLStickersRemoveStickerFromSet) (*Messages_StickerSet, error)
	StickersChangeStickerPosition(context.Context, *TLStickersChangeStickerPosition) (*Messages_StickerSet, error)
	StickersAddStickerToSet(context.Context, *TLStickersAddStickerToSet) (*Messages_StickerSet, error)
	StickersSetStickerSetThumb(context.Context, *TLStickersSetStickerSetThumb) (*Messages_StickerSet, error)
	StickersCheckShortName(context.Context, *TLStickersCheckShortName) (*Bool, error)
	StickersSuggestShortName(context.Context, *TLStickersSuggestShortName) (*Stickers_SuggestedShortName, error)
}

// UnimplementedRPCStickersServer can be embedded to have forward compatible implementations.
type UnimplementedRPCStickersServer struct {
}

func (*UnimplementedRPCStickersServer) MessagesGetStickers(ctx context.Context, req *TLMessagesGetStickers) (*Messages_Stickers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetStickers not implemented")
}
func (*UnimplementedRPCStickersServer) MessagesGetAllStickers(ctx context.Context, req *TLMessagesGetAllStickers) (*Messages_AllStickers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetAllStickers not implemented")
}
func (*UnimplementedRPCStickersServer) MessagesGetStickerSet(ctx context.Context, req *TLMessagesGetStickerSet) (*Messages_StickerSet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetStickerSet not implemented")
}
func (*UnimplementedRPCStickersServer) MessagesInstallStickerSet(ctx context.Context, req *TLMessagesInstallStickerSet) (*Messages_StickerSetInstallResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesInstallStickerSet not implemented")
}
func (*UnimplementedRPCStickersServer) MessagesUninstallStickerSet(ctx context.Context, req *TLMessagesUninstallStickerSet) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesUninstallStickerSet not implemented")
}
func (*UnimplementedRPCStickersServer) MessagesReorderStickerSets(ctx context.Context, req *TLMessagesReorderStickerSets) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesReorderStickerSets not implemented")
}
func (*UnimplementedRPCStickersServer) MessagesGetFeaturedStickers(ctx context.Context, req *TLMessagesGetFeaturedStickers) (*Messages_FeaturedStickers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetFeaturedStickers not implemented")
}
func (*UnimplementedRPCStickersServer) MessagesReadFeaturedStickers(ctx context.Context, req *TLMessagesReadFeaturedStickers) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesReadFeaturedStickers not implemented")
}
func (*UnimplementedRPCStickersServer) MessagesGetRecentStickers(ctx context.Context, req *TLMessagesGetRecentStickers) (*Messages_RecentStickers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetRecentStickers not implemented")
}
func (*UnimplementedRPCStickersServer) MessagesSaveRecentSticker(ctx context.Context, req *TLMessagesSaveRecentSticker) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSaveRecentSticker not implemented")
}
func (*UnimplementedRPCStickersServer) MessagesClearRecentStickers(ctx context.Context, req *TLMessagesClearRecentStickers) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesClearRecentStickers not implemented")
}
func (*UnimplementedRPCStickersServer) MessagesGetArchivedStickers(ctx context.Context, req *TLMessagesGetArchivedStickers) (*Messages_ArchivedStickers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetArchivedStickers not implemented")
}
func (*UnimplementedRPCStickersServer) MessagesGetMaskStickers(ctx context.Context, req *TLMessagesGetMaskStickers) (*Messages_AllStickers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetMaskStickers not implemented")
}
func (*UnimplementedRPCStickersServer) MessagesGetAttachedStickers(ctx context.Context, req *TLMessagesGetAttachedStickers) (*Vector_StickerSetCovered, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetAttachedStickers not implemented")
}
func (*UnimplementedRPCStickersServer) MessagesGetFavedStickers(ctx context.Context, req *TLMessagesGetFavedStickers) (*Messages_FavedStickers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetFavedStickers not implemented")
}
func (*UnimplementedRPCStickersServer) MessagesFaveSticker(ctx context.Context, req *TLMessagesFaveSticker) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesFaveSticker not implemented")
}
func (*UnimplementedRPCStickersServer) MessagesSearchStickerSets(ctx context.Context, req *TLMessagesSearchStickerSets) (*Messages_FoundStickerSets, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSearchStickerSets not implemented")
}
func (*UnimplementedRPCStickersServer) MessagesToggleStickerSets(ctx context.Context, req *TLMessagesToggleStickerSets) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesToggleStickerSets not implemented")
}
func (*UnimplementedRPCStickersServer) MessagesGetOldFeaturedStickers(ctx context.Context, req *TLMessagesGetOldFeaturedStickers) (*Messages_FeaturedStickers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetOldFeaturedStickers not implemented")
}
func (*UnimplementedRPCStickersServer) StickersCreateStickerSet(ctx context.Context, req *TLStickersCreateStickerSet) (*Messages_StickerSet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StickersCreateStickerSet not implemented")
}
func (*UnimplementedRPCStickersServer) StickersRemoveStickerFromSet(ctx context.Context, req *TLStickersRemoveStickerFromSet) (*Messages_StickerSet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StickersRemoveStickerFromSet not implemented")
}
func (*UnimplementedRPCStickersServer) StickersChangeStickerPosition(ctx context.Context, req *TLStickersChangeStickerPosition) (*Messages_StickerSet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StickersChangeStickerPosition not implemented")
}
func (*UnimplementedRPCStickersServer) StickersAddStickerToSet(ctx context.Context, req *TLStickersAddStickerToSet) (*Messages_StickerSet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StickersAddStickerToSet not implemented")
}
func (*UnimplementedRPCStickersServer) StickersSetStickerSetThumb(ctx context.Context, req *TLStickersSetStickerSetThumb) (*Messages_StickerSet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StickersSetStickerSetThumb not implemented")
}
func (*UnimplementedRPCStickersServer) StickersCheckShortName(ctx context.Context, req *TLStickersCheckShortName) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StickersCheckShortName not implemented")
}
func (*UnimplementedRPCStickersServer) StickersSuggestShortName(ctx context.Context, req *TLStickersSuggestShortName) (*Stickers_SuggestedShortName, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StickersSuggestShortName not implemented")
}

func RegisterRPCStickersServer(s *grpc.Server, srv RPCStickersServer) {
	s.RegisterService(&_RPCStickers_serviceDesc, srv)
}

func _RPCStickers_MessagesGetStickers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetStickers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).MessagesGetStickers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/MessagesGetStickers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).MessagesGetStickers(ctx, req.(*TLMessagesGetStickers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_MessagesGetAllStickers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetAllStickers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).MessagesGetAllStickers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/MessagesGetAllStickers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).MessagesGetAllStickers(ctx, req.(*TLMessagesGetAllStickers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_MessagesGetStickerSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetStickerSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).MessagesGetStickerSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/MessagesGetStickerSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).MessagesGetStickerSet(ctx, req.(*TLMessagesGetStickerSet))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_MessagesInstallStickerSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesInstallStickerSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).MessagesInstallStickerSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/MessagesInstallStickerSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).MessagesInstallStickerSet(ctx, req.(*TLMessagesInstallStickerSet))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_MessagesUninstallStickerSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesUninstallStickerSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).MessagesUninstallStickerSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/MessagesUninstallStickerSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).MessagesUninstallStickerSet(ctx, req.(*TLMessagesUninstallStickerSet))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_MessagesReorderStickerSets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReorderStickerSets)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).MessagesReorderStickerSets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/MessagesReorderStickerSets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).MessagesReorderStickerSets(ctx, req.(*TLMessagesReorderStickerSets))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_MessagesGetFeaturedStickers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetFeaturedStickers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).MessagesGetFeaturedStickers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/MessagesGetFeaturedStickers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).MessagesGetFeaturedStickers(ctx, req.(*TLMessagesGetFeaturedStickers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_MessagesReadFeaturedStickers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReadFeaturedStickers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).MessagesReadFeaturedStickers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/MessagesReadFeaturedStickers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).MessagesReadFeaturedStickers(ctx, req.(*TLMessagesReadFeaturedStickers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_MessagesGetRecentStickers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetRecentStickers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).MessagesGetRecentStickers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/MessagesGetRecentStickers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).MessagesGetRecentStickers(ctx, req.(*TLMessagesGetRecentStickers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_MessagesSaveRecentSticker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSaveRecentSticker)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).MessagesSaveRecentSticker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/MessagesSaveRecentSticker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).MessagesSaveRecentSticker(ctx, req.(*TLMessagesSaveRecentSticker))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_MessagesClearRecentStickers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesClearRecentStickers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).MessagesClearRecentStickers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/MessagesClearRecentStickers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).MessagesClearRecentStickers(ctx, req.(*TLMessagesClearRecentStickers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_MessagesGetArchivedStickers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetArchivedStickers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).MessagesGetArchivedStickers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/MessagesGetArchivedStickers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).MessagesGetArchivedStickers(ctx, req.(*TLMessagesGetArchivedStickers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_MessagesGetMaskStickers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetMaskStickers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).MessagesGetMaskStickers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/MessagesGetMaskStickers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).MessagesGetMaskStickers(ctx, req.(*TLMessagesGetMaskStickers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_MessagesGetAttachedStickers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetAttachedStickers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).MessagesGetAttachedStickers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/MessagesGetAttachedStickers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).MessagesGetAttachedStickers(ctx, req.(*TLMessagesGetAttachedStickers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_MessagesGetFavedStickers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetFavedStickers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).MessagesGetFavedStickers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/MessagesGetFavedStickers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).MessagesGetFavedStickers(ctx, req.(*TLMessagesGetFavedStickers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_MessagesFaveSticker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesFaveSticker)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).MessagesFaveSticker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/MessagesFaveSticker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).MessagesFaveSticker(ctx, req.(*TLMessagesFaveSticker))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_MessagesSearchStickerSets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSearchStickerSets)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).MessagesSearchStickerSets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/MessagesSearchStickerSets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).MessagesSearchStickerSets(ctx, req.(*TLMessagesSearchStickerSets))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_MessagesToggleStickerSets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesToggleStickerSets)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).MessagesToggleStickerSets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/MessagesToggleStickerSets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).MessagesToggleStickerSets(ctx, req.(*TLMessagesToggleStickerSets))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_MessagesGetOldFeaturedStickers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetOldFeaturedStickers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).MessagesGetOldFeaturedStickers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/MessagesGetOldFeaturedStickers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).MessagesGetOldFeaturedStickers(ctx, req.(*TLMessagesGetOldFeaturedStickers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_StickersCreateStickerSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLStickersCreateStickerSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).StickersCreateStickerSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/StickersCreateStickerSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).StickersCreateStickerSet(ctx, req.(*TLStickersCreateStickerSet))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_StickersRemoveStickerFromSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLStickersRemoveStickerFromSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).StickersRemoveStickerFromSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/StickersRemoveStickerFromSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).StickersRemoveStickerFromSet(ctx, req.(*TLStickersRemoveStickerFromSet))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_StickersChangeStickerPosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLStickersChangeStickerPosition)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).StickersChangeStickerPosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/StickersChangeStickerPosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).StickersChangeStickerPosition(ctx, req.(*TLStickersChangeStickerPosition))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_StickersAddStickerToSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLStickersAddStickerToSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).StickersAddStickerToSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/StickersAddStickerToSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).StickersAddStickerToSet(ctx, req.(*TLStickersAddStickerToSet))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_StickersSetStickerSetThumb_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLStickersSetStickerSetThumb)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).StickersSetStickerSetThumb(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/StickersSetStickerSetThumb",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).StickersSetStickerSetThumb(ctx, req.(*TLStickersSetStickerSetThumb))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_StickersCheckShortName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLStickersCheckShortName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).StickersCheckShortName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/StickersCheckShortName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).StickersCheckShortName(ctx, req.(*TLStickersCheckShortName))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStickers_StickersSuggestShortName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLStickersSuggestShortName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStickersServer).StickersSuggestShortName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStickers/StickersSuggestShortName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStickersServer).StickersSuggestShortName(ctx, req.(*TLStickersSuggestShortName))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCStickers_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCStickers",
	HandlerType: (*RPCStickersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "messages_getStickers",
			Handler:    _RPCStickers_MessagesGetStickers_Handler,
		},
		{
			MethodName: "messages_getAllStickers",
			Handler:    _RPCStickers_MessagesGetAllStickers_Handler,
		},
		{
			MethodName: "messages_getStickerSet",
			Handler:    _RPCStickers_MessagesGetStickerSet_Handler,
		},
		{
			MethodName: "messages_installStickerSet",
			Handler:    _RPCStickers_MessagesInstallStickerSet_Handler,
		},
		{
			MethodName: "messages_uninstallStickerSet",
			Handler:    _RPCStickers_MessagesUninstallStickerSet_Handler,
		},
		{
			MethodName: "messages_reorderStickerSets",
			Handler:    _RPCStickers_MessagesReorderStickerSets_Handler,
		},
		{
			MethodName: "messages_getFeaturedStickers",
			Handler:    _RPCStickers_MessagesGetFeaturedStickers_Handler,
		},
		{
			MethodName: "messages_readFeaturedStickers",
			Handler:    _RPCStickers_MessagesReadFeaturedStickers_Handler,
		},
		{
			MethodName: "messages_getRecentStickers",
			Handler:    _RPCStickers_MessagesGetRecentStickers_Handler,
		},
		{
			MethodName: "messages_saveRecentSticker",
			Handler:    _RPCStickers_MessagesSaveRecentSticker_Handler,
		},
		{
			MethodName: "messages_clearRecentStickers",
			Handler:    _RPCStickers_MessagesClearRecentStickers_Handler,
		},
		{
			MethodName: "messages_getArchivedStickers",
			Handler:    _RPCStickers_MessagesGetArchivedStickers_Handler,
		},
		{
			MethodName: "messages_getMaskStickers",
			Handler:    _RPCStickers_MessagesGetMaskStickers_Handler,
		},
		{
			MethodName: "messages_getAttachedStickers",
			Handler:    _RPCStickers_MessagesGetAttachedStickers_Handler,
		},
		{
			MethodName: "messages_getFavedStickers",
			Handler:    _RPCStickers_MessagesGetFavedStickers_Handler,
		},
		{
			MethodName: "messages_faveSticker",
			Handler:    _RPCStickers_MessagesFaveSticker_Handler,
		},
		{
			MethodName: "messages_searchStickerSets",
			Handler:    _RPCStickers_MessagesSearchStickerSets_Handler,
		},
		{
			MethodName: "messages_toggleStickerSets",
			Handler:    _RPCStickers_MessagesToggleStickerSets_Handler,
		},
		{
			MethodName: "messages_getOldFeaturedStickers",
			Handler:    _RPCStickers_MessagesGetOldFeaturedStickers_Handler,
		},
		{
			MethodName: "stickers_createStickerSet",
			Handler:    _RPCStickers_StickersCreateStickerSet_Handler,
		},
		{
			MethodName: "stickers_removeStickerFromSet",
			Handler:    _RPCStickers_StickersRemoveStickerFromSet_Handler,
		},
		{
			MethodName: "stickers_changeStickerPosition",
			Handler:    _RPCStickers_StickersChangeStickerPosition_Handler,
		},
		{
			MethodName: "stickers_addStickerToSet",
			Handler:    _RPCStickers_StickersAddStickerToSet_Handler,
		},
		{
			MethodName: "stickers_setStickerSetThumb",
			Handler:    _RPCStickers_StickersSetStickerSetThumb_Handler,
		},
		{
			MethodName: "stickers_checkShortName",
			Handler:    _RPCStickers_StickersCheckShortName_Handler,
		},
		{
			MethodName: "stickers_suggestShortName",
			Handler:    _RPCStickers_StickersSuggestShortName_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCFilesClient is the client API for RPCFiles service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCFilesClient interface {
	MessagesGetDocumentByHash(ctx context.Context, in *TLMessagesGetDocumentByHash, opts ...grpc.CallOption) (*Document, error)
	MessagesUploadMedia(ctx context.Context, in *TLMessagesUploadMedia, opts ...grpc.CallOption) (*MessageMedia, error)
	MessagesUploadEncryptedFile(ctx context.Context, in *TLMessagesUploadEncryptedFile, opts ...grpc.CallOption) (*EncryptedFile, error)
	UploadSaveFilePart(ctx context.Context, in *TLUploadSaveFilePart, opts ...grpc.CallOption) (*Bool, error)
	UploadGetFile(ctx context.Context, in *TLUploadGetFile, opts ...grpc.CallOption) (*Upload_File, error)
	UploadSaveBigFilePart(ctx context.Context, in *TLUploadSaveBigFilePart, opts ...grpc.CallOption) (*Bool, error)
	UploadGetWebFile(ctx context.Context, in *TLUploadGetWebFile, opts ...grpc.CallOption) (*Upload_WebFile, error)
	UploadGetCdnFile(ctx context.Context, in *TLUploadGetCdnFile, opts ...grpc.CallOption) (*Upload_CdnFile, error)
	UploadReuploadCdnFile(ctx context.Context, in *TLUploadReuploadCdnFile, opts ...grpc.CallOption) (*Vector_FileHash, error)
	UploadGetCdnFileHashes(ctx context.Context, in *TLUploadGetCdnFileHashes, opts ...grpc.CallOption) (*Vector_FileHash, error)
	UploadGetFileHashes(ctx context.Context, in *TLUploadGetFileHashes, opts ...grpc.CallOption) (*Vector_FileHash, error)
	HelpGetCdnConfig(ctx context.Context, in *TLHelpGetCdnConfig, opts ...grpc.CallOption) (*CdnConfig, error)
}

type rPCFilesClient struct {
	cc *grpc.ClientConn
}

func NewRPCFilesClient(cc *grpc.ClientConn) RPCFilesClient {
	return &rPCFilesClient{cc}
}

func (c *rPCFilesClient) MessagesGetDocumentByHash(ctx context.Context, in *TLMessagesGetDocumentByHash, opts ...grpc.CallOption) (*Document, error) {
	out := new(Document)
	err := c.cc.Invoke(ctx, "/mtproto.RPCFiles/messages_getDocumentByHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCFilesClient) MessagesUploadMedia(ctx context.Context, in *TLMessagesUploadMedia, opts ...grpc.CallOption) (*MessageMedia, error) {
	out := new(MessageMedia)
	err := c.cc.Invoke(ctx, "/mtproto.RPCFiles/messages_uploadMedia", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCFilesClient) MessagesUploadEncryptedFile(ctx context.Context, in *TLMessagesUploadEncryptedFile, opts ...grpc.CallOption) (*EncryptedFile, error) {
	out := new(EncryptedFile)
	err := c.cc.Invoke(ctx, "/mtproto.RPCFiles/messages_uploadEncryptedFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCFilesClient) UploadSaveFilePart(ctx context.Context, in *TLUploadSaveFilePart, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCFiles/upload_saveFilePart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCFilesClient) UploadGetFile(ctx context.Context, in *TLUploadGetFile, opts ...grpc.CallOption) (*Upload_File, error) {
	out := new(Upload_File)
	err := c.cc.Invoke(ctx, "/mtproto.RPCFiles/upload_getFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCFilesClient) UploadSaveBigFilePart(ctx context.Context, in *TLUploadSaveBigFilePart, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCFiles/upload_saveBigFilePart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCFilesClient) UploadGetWebFile(ctx context.Context, in *TLUploadGetWebFile, opts ...grpc.CallOption) (*Upload_WebFile, error) {
	out := new(Upload_WebFile)
	err := c.cc.Invoke(ctx, "/mtproto.RPCFiles/upload_getWebFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCFilesClient) UploadGetCdnFile(ctx context.Context, in *TLUploadGetCdnFile, opts ...grpc.CallOption) (*Upload_CdnFile, error) {
	out := new(Upload_CdnFile)
	err := c.cc.Invoke(ctx, "/mtproto.RPCFiles/upload_getCdnFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCFilesClient) UploadReuploadCdnFile(ctx context.Context, in *TLUploadReuploadCdnFile, opts ...grpc.CallOption) (*Vector_FileHash, error) {
	out := new(Vector_FileHash)
	err := c.cc.Invoke(ctx, "/mtproto.RPCFiles/upload_reuploadCdnFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCFilesClient) UploadGetCdnFileHashes(ctx context.Context, in *TLUploadGetCdnFileHashes, opts ...grpc.CallOption) (*Vector_FileHash, error) {
	out := new(Vector_FileHash)
	err := c.cc.Invoke(ctx, "/mtproto.RPCFiles/upload_getCdnFileHashes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCFilesClient) UploadGetFileHashes(ctx context.Context, in *TLUploadGetFileHashes, opts ...grpc.CallOption) (*Vector_FileHash, error) {
	out := new(Vector_FileHash)
	err := c.cc.Invoke(ctx, "/mtproto.RPCFiles/upload_getFileHashes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCFilesClient) HelpGetCdnConfig(ctx context.Context, in *TLHelpGetCdnConfig, opts ...grpc.CallOption) (*CdnConfig, error) {
	out := new(CdnConfig)
	err := c.cc.Invoke(ctx, "/mtproto.RPCFiles/help_getCdnConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCFilesServer is the server API for RPCFiles service.
type RPCFilesServer interface {
	MessagesGetDocumentByHash(context.Context, *TLMessagesGetDocumentByHash) (*Document, error)
	MessagesUploadMedia(context.Context, *TLMessagesUploadMedia) (*MessageMedia, error)
	MessagesUploadEncryptedFile(context.Context, *TLMessagesUploadEncryptedFile) (*EncryptedFile, error)
	UploadSaveFilePart(context.Context, *TLUploadSaveFilePart) (*Bool, error)
	UploadGetFile(context.Context, *TLUploadGetFile) (*Upload_File, error)
	UploadSaveBigFilePart(context.Context, *TLUploadSaveBigFilePart) (*Bool, error)
	UploadGetWebFile(context.Context, *TLUploadGetWebFile) (*Upload_WebFile, error)
	UploadGetCdnFile(context.Context, *TLUploadGetCdnFile) (*Upload_CdnFile, error)
	UploadReuploadCdnFile(context.Context, *TLUploadReuploadCdnFile) (*Vector_FileHash, error)
	UploadGetCdnFileHashes(context.Context, *TLUploadGetCdnFileHashes) (*Vector_FileHash, error)
	UploadGetFileHashes(context.Context, *TLUploadGetFileHashes) (*Vector_FileHash, error)
	HelpGetCdnConfig(context.Context, *TLHelpGetCdnConfig) (*CdnConfig, error)
}

// UnimplementedRPCFilesServer can be embedded to have forward compatible implementations.
type UnimplementedRPCFilesServer struct {
}

func (*UnimplementedRPCFilesServer) MessagesGetDocumentByHash(ctx context.Context, req *TLMessagesGetDocumentByHash) (*Document, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetDocumentByHash not implemented")
}
func (*UnimplementedRPCFilesServer) MessagesUploadMedia(ctx context.Context, req *TLMessagesUploadMedia) (*MessageMedia, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesUploadMedia not implemented")
}
func (*UnimplementedRPCFilesServer) MessagesUploadEncryptedFile(ctx context.Context, req *TLMessagesUploadEncryptedFile) (*EncryptedFile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesUploadEncryptedFile not implemented")
}
func (*UnimplementedRPCFilesServer) UploadSaveFilePart(ctx context.Context, req *TLUploadSaveFilePart) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadSaveFilePart not implemented")
}
func (*UnimplementedRPCFilesServer) UploadGetFile(ctx context.Context, req *TLUploadGetFile) (*Upload_File, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadGetFile not implemented")
}
func (*UnimplementedRPCFilesServer) UploadSaveBigFilePart(ctx context.Context, req *TLUploadSaveBigFilePart) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadSaveBigFilePart not implemented")
}
func (*UnimplementedRPCFilesServer) UploadGetWebFile(ctx context.Context, req *TLUploadGetWebFile) (*Upload_WebFile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadGetWebFile not implemented")
}
func (*UnimplementedRPCFilesServer) UploadGetCdnFile(ctx context.Context, req *TLUploadGetCdnFile) (*Upload_CdnFile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadGetCdnFile not implemented")
}
func (*UnimplementedRPCFilesServer) UploadReuploadCdnFile(ctx context.Context, req *TLUploadReuploadCdnFile) (*Vector_FileHash, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadReuploadCdnFile not implemented")
}
func (*UnimplementedRPCFilesServer) UploadGetCdnFileHashes(ctx context.Context, req *TLUploadGetCdnFileHashes) (*Vector_FileHash, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadGetCdnFileHashes not implemented")
}
func (*UnimplementedRPCFilesServer) UploadGetFileHashes(ctx context.Context, req *TLUploadGetFileHashes) (*Vector_FileHash, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadGetFileHashes not implemented")
}
func (*UnimplementedRPCFilesServer) HelpGetCdnConfig(ctx context.Context, req *TLHelpGetCdnConfig) (*CdnConfig, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelpGetCdnConfig not implemented")
}

func RegisterRPCFilesServer(s *grpc.Server, srv RPCFilesServer) {
	s.RegisterService(&_RPCFiles_serviceDesc, srv)
}

func _RPCFiles_MessagesGetDocumentByHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetDocumentByHash)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCFilesServer).MessagesGetDocumentByHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCFiles/MessagesGetDocumentByHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCFilesServer).MessagesGetDocumentByHash(ctx, req.(*TLMessagesGetDocumentByHash))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCFiles_MessagesUploadMedia_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesUploadMedia)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCFilesServer).MessagesUploadMedia(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCFiles/MessagesUploadMedia",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCFilesServer).MessagesUploadMedia(ctx, req.(*TLMessagesUploadMedia))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCFiles_MessagesUploadEncryptedFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesUploadEncryptedFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCFilesServer).MessagesUploadEncryptedFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCFiles/MessagesUploadEncryptedFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCFilesServer).MessagesUploadEncryptedFile(ctx, req.(*TLMessagesUploadEncryptedFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCFiles_UploadSaveFilePart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUploadSaveFilePart)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCFilesServer).UploadSaveFilePart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCFiles/UploadSaveFilePart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCFilesServer).UploadSaveFilePart(ctx, req.(*TLUploadSaveFilePart))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCFiles_UploadGetFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUploadGetFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCFilesServer).UploadGetFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCFiles/UploadGetFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCFilesServer).UploadGetFile(ctx, req.(*TLUploadGetFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCFiles_UploadSaveBigFilePart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUploadSaveBigFilePart)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCFilesServer).UploadSaveBigFilePart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCFiles/UploadSaveBigFilePart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCFilesServer).UploadSaveBigFilePart(ctx, req.(*TLUploadSaveBigFilePart))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCFiles_UploadGetWebFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUploadGetWebFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCFilesServer).UploadGetWebFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCFiles/UploadGetWebFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCFilesServer).UploadGetWebFile(ctx, req.(*TLUploadGetWebFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCFiles_UploadGetCdnFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUploadGetCdnFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCFilesServer).UploadGetCdnFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCFiles/UploadGetCdnFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCFilesServer).UploadGetCdnFile(ctx, req.(*TLUploadGetCdnFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCFiles_UploadReuploadCdnFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUploadReuploadCdnFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCFilesServer).UploadReuploadCdnFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCFiles/UploadReuploadCdnFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCFilesServer).UploadReuploadCdnFile(ctx, req.(*TLUploadReuploadCdnFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCFiles_UploadGetCdnFileHashes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUploadGetCdnFileHashes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCFilesServer).UploadGetCdnFileHashes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCFiles/UploadGetCdnFileHashes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCFilesServer).UploadGetCdnFileHashes(ctx, req.(*TLUploadGetCdnFileHashes))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCFiles_UploadGetFileHashes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUploadGetFileHashes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCFilesServer).UploadGetFileHashes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCFiles/UploadGetFileHashes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCFilesServer).UploadGetFileHashes(ctx, req.(*TLUploadGetFileHashes))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCFiles_HelpGetCdnConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetCdnConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCFilesServer).HelpGetCdnConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCFiles/HelpGetCdnConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCFilesServer).HelpGetCdnConfig(ctx, req.(*TLHelpGetCdnConfig))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCFiles_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCFiles",
	HandlerType: (*RPCFilesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "messages_getDocumentByHash",
			Handler:    _RPCFiles_MessagesGetDocumentByHash_Handler,
		},
		{
			MethodName: "messages_uploadMedia",
			Handler:    _RPCFiles_MessagesUploadMedia_Handler,
		},
		{
			MethodName: "messages_uploadEncryptedFile",
			Handler:    _RPCFiles_MessagesUploadEncryptedFile_Handler,
		},
		{
			MethodName: "upload_saveFilePart",
			Handler:    _RPCFiles_UploadSaveFilePart_Handler,
		},
		{
			MethodName: "upload_getFile",
			Handler:    _RPCFiles_UploadGetFile_Handler,
		},
		{
			MethodName: "upload_saveBigFilePart",
			Handler:    _RPCFiles_UploadSaveBigFilePart_Handler,
		},
		{
			MethodName: "upload_getWebFile",
			Handler:    _RPCFiles_UploadGetWebFile_Handler,
		},
		{
			MethodName: "upload_getCdnFile",
			Handler:    _RPCFiles_UploadGetCdnFile_Handler,
		},
		{
			MethodName: "upload_reuploadCdnFile",
			Handler:    _RPCFiles_UploadReuploadCdnFile_Handler,
		},
		{
			MethodName: "upload_getCdnFileHashes",
			Handler:    _RPCFiles_UploadGetCdnFileHashes_Handler,
		},
		{
			MethodName: "upload_getFileHashes",
			Handler:    _RPCFiles_UploadGetFileHashes_Handler,
		},
		{
			MethodName: "help_getCdnConfig",
			Handler:    _RPCFiles_HelpGetCdnConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCPollsClient is the client API for RPCPolls service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCPollsClient interface {
	MessagesSendVote(ctx context.Context, in *TLMessagesSendVote, opts ...grpc.CallOption) (*Updates, error)
	MessagesGetPollResults(ctx context.Context, in *TLMessagesGetPollResults, opts ...grpc.CallOption) (*Updates, error)
	MessagesGetPollVotes(ctx context.Context, in *TLMessagesGetPollVotes, opts ...grpc.CallOption) (*Messages_VotesList, error)
}

type rPCPollsClient struct {
	cc *grpc.ClientConn
}

func NewRPCPollsClient(cc *grpc.ClientConn) RPCPollsClient {
	return &rPCPollsClient{cc}
}

func (c *rPCPollsClient) MessagesSendVote(ctx context.Context, in *TLMessagesSendVote, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPolls/messages_sendVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPollsClient) MessagesGetPollResults(ctx context.Context, in *TLMessagesGetPollResults, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPolls/messages_getPollResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPollsClient) MessagesGetPollVotes(ctx context.Context, in *TLMessagesGetPollVotes, opts ...grpc.CallOption) (*Messages_VotesList, error) {
	out := new(Messages_VotesList)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPolls/messages_getPollVotes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCPollsServer is the server API for RPCPolls service.
type RPCPollsServer interface {
	MessagesSendVote(context.Context, *TLMessagesSendVote) (*Updates, error)
	MessagesGetPollResults(context.Context, *TLMessagesGetPollResults) (*Updates, error)
	MessagesGetPollVotes(context.Context, *TLMessagesGetPollVotes) (*Messages_VotesList, error)
}

// UnimplementedRPCPollsServer can be embedded to have forward compatible implementations.
type UnimplementedRPCPollsServer struct {
}

func (*UnimplementedRPCPollsServer) MessagesSendVote(ctx context.Context, req *TLMessagesSendVote) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSendVote not implemented")
}
func (*UnimplementedRPCPollsServer) MessagesGetPollResults(ctx context.Context, req *TLMessagesGetPollResults) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetPollResults not implemented")
}
func (*UnimplementedRPCPollsServer) MessagesGetPollVotes(ctx context.Context, req *TLMessagesGetPollVotes) (*Messages_VotesList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetPollVotes not implemented")
}

func RegisterRPCPollsServer(s *grpc.Server, srv RPCPollsServer) {
	s.RegisterService(&_RPCPolls_serviceDesc, srv)
}

func _RPCPolls_MessagesSendVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSendVote)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPollsServer).MessagesSendVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPolls/MessagesSendVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPollsServer).MessagesSendVote(ctx, req.(*TLMessagesSendVote))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPolls_MessagesGetPollResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetPollResults)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPollsServer).MessagesGetPollResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPolls/MessagesGetPollResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPollsServer).MessagesGetPollResults(ctx, req.(*TLMessagesGetPollResults))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPolls_MessagesGetPollVotes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetPollVotes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPollsServer).MessagesGetPollVotes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPolls/MessagesGetPollVotes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPollsServer).MessagesGetPollVotes(ctx, req.(*TLMessagesGetPollVotes))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCPolls_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCPolls",
	HandlerType: (*RPCPollsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "messages_sendVote",
			Handler:    _RPCPolls_MessagesSendVote_Handler,
		},
		{
			MethodName: "messages_getPollResults",
			Handler:    _RPCPolls_MessagesGetPollResults_Handler,
		},
		{
			MethodName: "messages_getPollVotes",
			Handler:    _RPCPolls_MessagesGetPollVotes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCPaymentsClient is the client API for RPCPayments service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCPaymentsClient interface {
	AccountGetTmpPassword(ctx context.Context, in *TLAccountGetTmpPassword, opts ...grpc.CallOption) (*Account_TmpPassword, error)
	MessagesSetBotShippingResults(ctx context.Context, in *TLMessagesSetBotShippingResults, opts ...grpc.CallOption) (*Bool, error)
	MessagesSetBotPrecheckoutResults(ctx context.Context, in *TLMessagesSetBotPrecheckoutResults, opts ...grpc.CallOption) (*Bool, error)
	PaymentsGetPaymentForm(ctx context.Context, in *TLPaymentsGetPaymentForm, opts ...grpc.CallOption) (*Payments_PaymentForm, error)
	PaymentsGetPaymentReceipt(ctx context.Context, in *TLPaymentsGetPaymentReceipt, opts ...grpc.CallOption) (*Payments_PaymentReceipt, error)
	PaymentsValidateRequestedInfo(ctx context.Context, in *TLPaymentsValidateRequestedInfo, opts ...grpc.CallOption) (*Payments_ValidatedRequestedInfo, error)
	PaymentsSendPaymentForm(ctx context.Context, in *TLPaymentsSendPaymentForm, opts ...grpc.CallOption) (*Payments_PaymentResult, error)
	PaymentsGetSavedInfo(ctx context.Context, in *TLPaymentsGetSavedInfo, opts ...grpc.CallOption) (*Payments_SavedInfo, error)
	PaymentsClearSavedInfo(ctx context.Context, in *TLPaymentsClearSavedInfo, opts ...grpc.CallOption) (*Bool, error)
}

type rPCPaymentsClient struct {
	cc *grpc.ClientConn
}

func NewRPCPaymentsClient(cc *grpc.ClientConn) RPCPaymentsClient {
	return &rPCPaymentsClient{cc}
}

func (c *rPCPaymentsClient) AccountGetTmpPassword(ctx context.Context, in *TLAccountGetTmpPassword, opts ...grpc.CallOption) (*Account_TmpPassword, error) {
	out := new(Account_TmpPassword)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPayments/account_getTmpPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPaymentsClient) MessagesSetBotShippingResults(ctx context.Context, in *TLMessagesSetBotShippingResults, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPayments/messages_setBotShippingResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPaymentsClient) MessagesSetBotPrecheckoutResults(ctx context.Context, in *TLMessagesSetBotPrecheckoutResults, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPayments/messages_setBotPrecheckoutResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPaymentsClient) PaymentsGetPaymentForm(ctx context.Context, in *TLPaymentsGetPaymentForm, opts ...grpc.CallOption) (*Payments_PaymentForm, error) {
	out := new(Payments_PaymentForm)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPayments/payments_getPaymentForm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPaymentsClient) PaymentsGetPaymentReceipt(ctx context.Context, in *TLPaymentsGetPaymentReceipt, opts ...grpc.CallOption) (*Payments_PaymentReceipt, error) {
	out := new(Payments_PaymentReceipt)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPayments/payments_getPaymentReceipt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPaymentsClient) PaymentsValidateRequestedInfo(ctx context.Context, in *TLPaymentsValidateRequestedInfo, opts ...grpc.CallOption) (*Payments_ValidatedRequestedInfo, error) {
	out := new(Payments_ValidatedRequestedInfo)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPayments/payments_validateRequestedInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPaymentsClient) PaymentsSendPaymentForm(ctx context.Context, in *TLPaymentsSendPaymentForm, opts ...grpc.CallOption) (*Payments_PaymentResult, error) {
	out := new(Payments_PaymentResult)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPayments/payments_sendPaymentForm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPaymentsClient) PaymentsGetSavedInfo(ctx context.Context, in *TLPaymentsGetSavedInfo, opts ...grpc.CallOption) (*Payments_SavedInfo, error) {
	out := new(Payments_SavedInfo)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPayments/payments_getSavedInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPaymentsClient) PaymentsClearSavedInfo(ctx context.Context, in *TLPaymentsClearSavedInfo, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPayments/payments_clearSavedInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCPaymentsServer is the server API for RPCPayments service.
type RPCPaymentsServer interface {
	AccountGetTmpPassword(context.Context, *TLAccountGetTmpPassword) (*Account_TmpPassword, error)
	MessagesSetBotShippingResults(context.Context, *TLMessagesSetBotShippingResults) (*Bool, error)
	MessagesSetBotPrecheckoutResults(context.Context, *TLMessagesSetBotPrecheckoutResults) (*Bool, error)
	PaymentsGetPaymentForm(context.Context, *TLPaymentsGetPaymentForm) (*Payments_PaymentForm, error)
	PaymentsGetPaymentReceipt(context.Context, *TLPaymentsGetPaymentReceipt) (*Payments_PaymentReceipt, error)
	PaymentsValidateRequestedInfo(context.Context, *TLPaymentsValidateRequestedInfo) (*Payments_ValidatedRequestedInfo, error)
	PaymentsSendPaymentForm(context.Context, *TLPaymentsSendPaymentForm) (*Payments_PaymentResult, error)
	PaymentsGetSavedInfo(context.Context, *TLPaymentsGetSavedInfo) (*Payments_SavedInfo, error)
	PaymentsClearSavedInfo(context.Context, *TLPaymentsClearSavedInfo) (*Bool, error)
}

// UnimplementedRPCPaymentsServer can be embedded to have forward compatible implementations.
type UnimplementedRPCPaymentsServer struct {
}

func (*UnimplementedRPCPaymentsServer) AccountGetTmpPassword(ctx context.Context, req *TLAccountGetTmpPassword) (*Account_TmpPassword, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountGetTmpPassword not implemented")
}
func (*UnimplementedRPCPaymentsServer) MessagesSetBotShippingResults(ctx context.Context, req *TLMessagesSetBotShippingResults) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSetBotShippingResults not implemented")
}
func (*UnimplementedRPCPaymentsServer) MessagesSetBotPrecheckoutResults(ctx context.Context, req *TLMessagesSetBotPrecheckoutResults) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSetBotPrecheckoutResults not implemented")
}
func (*UnimplementedRPCPaymentsServer) PaymentsGetPaymentForm(ctx context.Context, req *TLPaymentsGetPaymentForm) (*Payments_PaymentForm, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentsGetPaymentForm not implemented")
}
func (*UnimplementedRPCPaymentsServer) PaymentsGetPaymentReceipt(ctx context.Context, req *TLPaymentsGetPaymentReceipt) (*Payments_PaymentReceipt, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentsGetPaymentReceipt not implemented")
}
func (*UnimplementedRPCPaymentsServer) PaymentsValidateRequestedInfo(ctx context.Context, req *TLPaymentsValidateRequestedInfo) (*Payments_ValidatedRequestedInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentsValidateRequestedInfo not implemented")
}
func (*UnimplementedRPCPaymentsServer) PaymentsSendPaymentForm(ctx context.Context, req *TLPaymentsSendPaymentForm) (*Payments_PaymentResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentsSendPaymentForm not implemented")
}
func (*UnimplementedRPCPaymentsServer) PaymentsGetSavedInfo(ctx context.Context, req *TLPaymentsGetSavedInfo) (*Payments_SavedInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentsGetSavedInfo not implemented")
}
func (*UnimplementedRPCPaymentsServer) PaymentsClearSavedInfo(ctx context.Context, req *TLPaymentsClearSavedInfo) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentsClearSavedInfo not implemented")
}

func RegisterRPCPaymentsServer(s *grpc.Server, srv RPCPaymentsServer) {
	s.RegisterService(&_RPCPayments_serviceDesc, srv)
}

func _RPCPayments_AccountGetTmpPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetTmpPassword)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPaymentsServer).AccountGetTmpPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPayments/AccountGetTmpPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPaymentsServer).AccountGetTmpPassword(ctx, req.(*TLAccountGetTmpPassword))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPayments_MessagesSetBotShippingResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSetBotShippingResults)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPaymentsServer).MessagesSetBotShippingResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPayments/MessagesSetBotShippingResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPaymentsServer).MessagesSetBotShippingResults(ctx, req.(*TLMessagesSetBotShippingResults))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPayments_MessagesSetBotPrecheckoutResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSetBotPrecheckoutResults)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPaymentsServer).MessagesSetBotPrecheckoutResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPayments/MessagesSetBotPrecheckoutResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPaymentsServer).MessagesSetBotPrecheckoutResults(ctx, req.(*TLMessagesSetBotPrecheckoutResults))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPayments_PaymentsGetPaymentForm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPaymentsGetPaymentForm)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPaymentsServer).PaymentsGetPaymentForm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPayments/PaymentsGetPaymentForm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPaymentsServer).PaymentsGetPaymentForm(ctx, req.(*TLPaymentsGetPaymentForm))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPayments_PaymentsGetPaymentReceipt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPaymentsGetPaymentReceipt)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPaymentsServer).PaymentsGetPaymentReceipt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPayments/PaymentsGetPaymentReceipt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPaymentsServer).PaymentsGetPaymentReceipt(ctx, req.(*TLPaymentsGetPaymentReceipt))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPayments_PaymentsValidateRequestedInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPaymentsValidateRequestedInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPaymentsServer).PaymentsValidateRequestedInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPayments/PaymentsValidateRequestedInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPaymentsServer).PaymentsValidateRequestedInfo(ctx, req.(*TLPaymentsValidateRequestedInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPayments_PaymentsSendPaymentForm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPaymentsSendPaymentForm)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPaymentsServer).PaymentsSendPaymentForm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPayments/PaymentsSendPaymentForm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPaymentsServer).PaymentsSendPaymentForm(ctx, req.(*TLPaymentsSendPaymentForm))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPayments_PaymentsGetSavedInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPaymentsGetSavedInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPaymentsServer).PaymentsGetSavedInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPayments/PaymentsGetSavedInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPaymentsServer).PaymentsGetSavedInfo(ctx, req.(*TLPaymentsGetSavedInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPayments_PaymentsClearSavedInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPaymentsClearSavedInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPaymentsServer).PaymentsClearSavedInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPayments/PaymentsClearSavedInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPaymentsServer).PaymentsClearSavedInfo(ctx, req.(*TLPaymentsClearSavedInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCPayments_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCPayments",
	HandlerType: (*RPCPaymentsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "account_getTmpPassword",
			Handler:    _RPCPayments_AccountGetTmpPassword_Handler,
		},
		{
			MethodName: "messages_setBotShippingResults",
			Handler:    _RPCPayments_MessagesSetBotShippingResults_Handler,
		},
		{
			MethodName: "messages_setBotPrecheckoutResults",
			Handler:    _RPCPayments_MessagesSetBotPrecheckoutResults_Handler,
		},
		{
			MethodName: "payments_getPaymentForm",
			Handler:    _RPCPayments_PaymentsGetPaymentForm_Handler,
		},
		{
			MethodName: "payments_getPaymentReceipt",
			Handler:    _RPCPayments_PaymentsGetPaymentReceipt_Handler,
		},
		{
			MethodName: "payments_validateRequestedInfo",
			Handler:    _RPCPayments_PaymentsValidateRequestedInfo_Handler,
		},
		{
			MethodName: "payments_sendPaymentForm",
			Handler:    _RPCPayments_PaymentsSendPaymentForm_Handler,
		},
		{
			MethodName: "payments_getSavedInfo",
			Handler:    _RPCPayments_PaymentsGetSavedInfo_Handler,
		},
		{
			MethodName: "payments_clearSavedInfo",
			Handler:    _RPCPayments_PaymentsClearSavedInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCThemesClient is the client API for RPCThemes service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCThemesClient interface {
	AccountUploadTheme(ctx context.Context, in *TLAccountUploadTheme, opts ...grpc.CallOption) (*Document, error)
	AccountCreateTheme(ctx context.Context, in *TLAccountCreateTheme, opts ...grpc.CallOption) (*Theme, error)
	AccountUpdateTheme(ctx context.Context, in *TLAccountUpdateTheme, opts ...grpc.CallOption) (*Theme, error)
	AccountSaveTheme(ctx context.Context, in *TLAccountSaveTheme, opts ...grpc.CallOption) (*Bool, error)
	AccountInstallTheme(ctx context.Context, in *TLAccountInstallTheme, opts ...grpc.CallOption) (*Bool, error)
	AccountGetTheme(ctx context.Context, in *TLAccountGetTheme, opts ...grpc.CallOption) (*Theme, error)
	AccountGetThemes(ctx context.Context, in *TLAccountGetThemes, opts ...grpc.CallOption) (*Account_Themes, error)
	AccountGetChatThemesD638DE89(ctx context.Context, in *TLAccountGetChatThemesD638DE89, opts ...grpc.CallOption) (*Account_Themes, error)
	MessagesSetChatTheme(ctx context.Context, in *TLMessagesSetChatTheme, opts ...grpc.CallOption) (*Updates, error)
	AccountGetChatThemesD6D71D7B(ctx context.Context, in *TLAccountGetChatThemesD6D71D7B, opts ...grpc.CallOption) (*Account_ChatThemes, error)
}

type rPCThemesClient struct {
	cc *grpc.ClientConn
}

func NewRPCThemesClient(cc *grpc.ClientConn) RPCThemesClient {
	return &rPCThemesClient{cc}
}

func (c *rPCThemesClient) AccountUploadTheme(ctx context.Context, in *TLAccountUploadTheme, opts ...grpc.CallOption) (*Document, error) {
	out := new(Document)
	err := c.cc.Invoke(ctx, "/mtproto.RPCThemes/account_uploadTheme", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCThemesClient) AccountCreateTheme(ctx context.Context, in *TLAccountCreateTheme, opts ...grpc.CallOption) (*Theme, error) {
	out := new(Theme)
	err := c.cc.Invoke(ctx, "/mtproto.RPCThemes/account_createTheme", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCThemesClient) AccountUpdateTheme(ctx context.Context, in *TLAccountUpdateTheme, opts ...grpc.CallOption) (*Theme, error) {
	out := new(Theme)
	err := c.cc.Invoke(ctx, "/mtproto.RPCThemes/account_updateTheme", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCThemesClient) AccountSaveTheme(ctx context.Context, in *TLAccountSaveTheme, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCThemes/account_saveTheme", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCThemesClient) AccountInstallTheme(ctx context.Context, in *TLAccountInstallTheme, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCThemes/account_installTheme", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCThemesClient) AccountGetTheme(ctx context.Context, in *TLAccountGetTheme, opts ...grpc.CallOption) (*Theme, error) {
	out := new(Theme)
	err := c.cc.Invoke(ctx, "/mtproto.RPCThemes/account_getTheme", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCThemesClient) AccountGetThemes(ctx context.Context, in *TLAccountGetThemes, opts ...grpc.CallOption) (*Account_Themes, error) {
	out := new(Account_Themes)
	err := c.cc.Invoke(ctx, "/mtproto.RPCThemes/account_getThemes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCThemesClient) AccountGetChatThemesD638DE89(ctx context.Context, in *TLAccountGetChatThemesD638DE89, opts ...grpc.CallOption) (*Account_Themes, error) {
	out := new(Account_Themes)
	err := c.cc.Invoke(ctx, "/mtproto.RPCThemes/account_getChatThemesD638DE89", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCThemesClient) MessagesSetChatTheme(ctx context.Context, in *TLMessagesSetChatTheme, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCThemes/messages_setChatTheme", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCThemesClient) AccountGetChatThemesD6D71D7B(ctx context.Context, in *TLAccountGetChatThemesD6D71D7B, opts ...grpc.CallOption) (*Account_ChatThemes, error) {
	out := new(Account_ChatThemes)
	err := c.cc.Invoke(ctx, "/mtproto.RPCThemes/account_getChatThemesD6D71D7B", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCThemesServer is the server API for RPCThemes service.
type RPCThemesServer interface {
	AccountUploadTheme(context.Context, *TLAccountUploadTheme) (*Document, error)
	AccountCreateTheme(context.Context, *TLAccountCreateTheme) (*Theme, error)
	AccountUpdateTheme(context.Context, *TLAccountUpdateTheme) (*Theme, error)
	AccountSaveTheme(context.Context, *TLAccountSaveTheme) (*Bool, error)
	AccountInstallTheme(context.Context, *TLAccountInstallTheme) (*Bool, error)
	AccountGetTheme(context.Context, *TLAccountGetTheme) (*Theme, error)
	AccountGetThemes(context.Context, *TLAccountGetThemes) (*Account_Themes, error)
	AccountGetChatThemesD638DE89(context.Context, *TLAccountGetChatThemesD638DE89) (*Account_Themes, error)
	MessagesSetChatTheme(context.Context, *TLMessagesSetChatTheme) (*Updates, error)
	AccountGetChatThemesD6D71D7B(context.Context, *TLAccountGetChatThemesD6D71D7B) (*Account_ChatThemes, error)
}

// UnimplementedRPCThemesServer can be embedded to have forward compatible implementations.
type UnimplementedRPCThemesServer struct {
}

func (*UnimplementedRPCThemesServer) AccountUploadTheme(ctx context.Context, req *TLAccountUploadTheme) (*Document, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountUploadTheme not implemented")
}
func (*UnimplementedRPCThemesServer) AccountCreateTheme(ctx context.Context, req *TLAccountCreateTheme) (*Theme, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountCreateTheme not implemented")
}
func (*UnimplementedRPCThemesServer) AccountUpdateTheme(ctx context.Context, req *TLAccountUpdateTheme) (*Theme, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountUpdateTheme not implemented")
}
func (*UnimplementedRPCThemesServer) AccountSaveTheme(ctx context.Context, req *TLAccountSaveTheme) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountSaveTheme not implemented")
}
func (*UnimplementedRPCThemesServer) AccountInstallTheme(ctx context.Context, req *TLAccountInstallTheme) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountInstallTheme not implemented")
}
func (*UnimplementedRPCThemesServer) AccountGetTheme(ctx context.Context, req *TLAccountGetTheme) (*Theme, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountGetTheme not implemented")
}
func (*UnimplementedRPCThemesServer) AccountGetThemes(ctx context.Context, req *TLAccountGetThemes) (*Account_Themes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountGetThemes not implemented")
}
func (*UnimplementedRPCThemesServer) AccountGetChatThemesD638DE89(ctx context.Context, req *TLAccountGetChatThemesD638DE89) (*Account_Themes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountGetChatThemesD638DE89 not implemented")
}
func (*UnimplementedRPCThemesServer) MessagesSetChatTheme(ctx context.Context, req *TLMessagesSetChatTheme) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSetChatTheme not implemented")
}
func (*UnimplementedRPCThemesServer) AccountGetChatThemesD6D71D7B(ctx context.Context, req *TLAccountGetChatThemesD6D71D7B) (*Account_ChatThemes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountGetChatThemesD6D71D7B not implemented")
}

func RegisterRPCThemesServer(s *grpc.Server, srv RPCThemesServer) {
	s.RegisterService(&_RPCThemes_serviceDesc, srv)
}

func _RPCThemes_AccountUploadTheme_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountUploadTheme)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCThemesServer).AccountUploadTheme(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCThemes/AccountUploadTheme",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCThemesServer).AccountUploadTheme(ctx, req.(*TLAccountUploadTheme))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCThemes_AccountCreateTheme_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountCreateTheme)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCThemesServer).AccountCreateTheme(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCThemes/AccountCreateTheme",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCThemesServer).AccountCreateTheme(ctx, req.(*TLAccountCreateTheme))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCThemes_AccountUpdateTheme_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountUpdateTheme)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCThemesServer).AccountUpdateTheme(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCThemes/AccountUpdateTheme",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCThemesServer).AccountUpdateTheme(ctx, req.(*TLAccountUpdateTheme))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCThemes_AccountSaveTheme_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSaveTheme)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCThemesServer).AccountSaveTheme(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCThemes/AccountSaveTheme",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCThemesServer).AccountSaveTheme(ctx, req.(*TLAccountSaveTheme))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCThemes_AccountInstallTheme_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountInstallTheme)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCThemesServer).AccountInstallTheme(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCThemes/AccountInstallTheme",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCThemesServer).AccountInstallTheme(ctx, req.(*TLAccountInstallTheme))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCThemes_AccountGetTheme_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetTheme)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCThemesServer).AccountGetTheme(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCThemes/AccountGetTheme",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCThemesServer).AccountGetTheme(ctx, req.(*TLAccountGetTheme))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCThemes_AccountGetThemes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetThemes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCThemesServer).AccountGetThemes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCThemes/AccountGetThemes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCThemesServer).AccountGetThemes(ctx, req.(*TLAccountGetThemes))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCThemes_AccountGetChatThemesD638DE89_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetChatThemesD638DE89)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCThemesServer).AccountGetChatThemesD638DE89(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCThemes/AccountGetChatThemesD638DE89",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCThemesServer).AccountGetChatThemesD638DE89(ctx, req.(*TLAccountGetChatThemesD638DE89))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCThemes_MessagesSetChatTheme_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSetChatTheme)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCThemesServer).MessagesSetChatTheme(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCThemes/MessagesSetChatTheme",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCThemesServer).MessagesSetChatTheme(ctx, req.(*TLMessagesSetChatTheme))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCThemes_AccountGetChatThemesD6D71D7B_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetChatThemesD6D71D7B)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCThemesServer).AccountGetChatThemesD6D71D7B(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCThemes/AccountGetChatThemesD6D71D7B",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCThemesServer).AccountGetChatThemesD6D71D7B(ctx, req.(*TLAccountGetChatThemesD6D71D7B))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCThemes_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCThemes",
	HandlerType: (*RPCThemesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "account_uploadTheme",
			Handler:    _RPCThemes_AccountUploadTheme_Handler,
		},
		{
			MethodName: "account_createTheme",
			Handler:    _RPCThemes_AccountCreateTheme_Handler,
		},
		{
			MethodName: "account_updateTheme",
			Handler:    _RPCThemes_AccountUpdateTheme_Handler,
		},
		{
			MethodName: "account_saveTheme",
			Handler:    _RPCThemes_AccountSaveTheme_Handler,
		},
		{
			MethodName: "account_installTheme",
			Handler:    _RPCThemes_AccountInstallTheme_Handler,
		},
		{
			MethodName: "account_getTheme",
			Handler:    _RPCThemes_AccountGetTheme_Handler,
		},
		{
			MethodName: "account_getThemes",
			Handler:    _RPCThemes_AccountGetThemes_Handler,
		},
		{
			MethodName: "account_getChatThemesD638DE89",
			Handler:    _RPCThemes_AccountGetChatThemesD638DE89_Handler,
		},
		{
			MethodName: "messages_setChatTheme",
			Handler:    _RPCThemes_MessagesSetChatTheme_Handler,
		},
		{
			MethodName: "account_getChatThemesD6D71D7B",
			Handler:    _RPCThemes_AccountGetChatThemesD6D71D7B_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCMessagesClient is the client API for RPCMessages service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCMessagesClient interface {
	MessagesGetMessages(ctx context.Context, in *TLMessagesGetMessages, opts ...grpc.CallOption) (*Messages_Messages, error)
	MessagesGetHistory(ctx context.Context, in *TLMessagesGetHistory, opts ...grpc.CallOption) (*Messages_Messages, error)
	MessagesSearch(ctx context.Context, in *TLMessagesSearch, opts ...grpc.CallOption) (*Messages_Messages, error)
	MessagesReadHistory(ctx context.Context, in *TLMessagesReadHistory, opts ...grpc.CallOption) (*Messages_AffectedMessages, error)
	MessagesDeleteHistory(ctx context.Context, in *TLMessagesDeleteHistory, opts ...grpc.CallOption) (*Messages_AffectedHistory, error)
	MessagesDeleteMessages(ctx context.Context, in *TLMessagesDeleteMessages, opts ...grpc.CallOption) (*Messages_AffectedMessages, error)
	MessagesReceivedMessages(ctx context.Context, in *TLMessagesReceivedMessages, opts ...grpc.CallOption) (*Vector_ReceivedNotifyMessage, error)
	MessagesSendMessage(ctx context.Context, in *TLMessagesSendMessage, opts ...grpc.CallOption) (*Updates, error)
	MessagesSendMedia(ctx context.Context, in *TLMessagesSendMedia, opts ...grpc.CallOption) (*Updates, error)
	MessagesForwardMessages(ctx context.Context, in *TLMessagesForwardMessages, opts ...grpc.CallOption) (*Updates, error)
	MessagesReadMessageContents(ctx context.Context, in *TLMessagesReadMessageContents, opts ...grpc.CallOption) (*Messages_AffectedMessages, error)
	MessagesGetMessagesViews(ctx context.Context, in *TLMessagesGetMessagesViews, opts ...grpc.CallOption) (*Messages_MessageViews, error)
	MessagesSearchGlobal(ctx context.Context, in *TLMessagesSearchGlobal, opts ...grpc.CallOption) (*Messages_Messages, error)
	MessagesGetMessageEditData(ctx context.Context, in *TLMessagesGetMessageEditData, opts ...grpc.CallOption) (*Messages_MessageEditData, error)
	MessagesEditMessage(ctx context.Context, in *TLMessagesEditMessage, opts ...grpc.CallOption) (*Updates, error)
	MessagesGetUnreadMentions(ctx context.Context, in *TLMessagesGetUnreadMentions, opts ...grpc.CallOption) (*Messages_Messages, error)
	MessagesReadMentions(ctx context.Context, in *TLMessagesReadMentions, opts ...grpc.CallOption) (*Messages_AffectedHistory, error)
	MessagesGetRecentLocations(ctx context.Context, in *TLMessagesGetRecentLocations, opts ...grpc.CallOption) (*Messages_Messages, error)
	MessagesSendMultiMedia(ctx context.Context, in *TLMessagesSendMultiMedia, opts ...grpc.CallOption) (*Updates, error)
	MessagesUpdatePinnedMessage(ctx context.Context, in *TLMessagesUpdatePinnedMessage, opts ...grpc.CallOption) (*Updates, error)
	MessagesGetSearchCounters(ctx context.Context, in *TLMessagesGetSearchCounters, opts ...grpc.CallOption) (*Vector_Messages_SearchCounter, error)
	MessagesUnpinAllMessages(ctx context.Context, in *TLMessagesUnpinAllMessages, opts ...grpc.CallOption) (*Messages_AffectedHistory, error)
	MessagesGetSearchResultsCalendar(ctx context.Context, in *TLMessagesGetSearchResultsCalendar, opts ...grpc.CallOption) (*Messages_SearchResultsCalendar, error)
	MessagesGetSearchResultsPositions(ctx context.Context, in *TLMessagesGetSearchResultsPositions, opts ...grpc.CallOption) (*Messages_SearchResultsPositions, error)
	MessagesToggleNoForwards(ctx context.Context, in *TLMessagesToggleNoForwards, opts ...grpc.CallOption) (*Updates, error)
	MessagesSaveDefaultSendAs(ctx context.Context, in *TLMessagesSaveDefaultSendAs, opts ...grpc.CallOption) (*Bool, error)
	MessagesTranslateText(ctx context.Context, in *TLMessagesTranslateText, opts ...grpc.CallOption) (*Messages_TranslatedText, error)
	MessagesSearchSentMedia(ctx context.Context, in *TLMessagesSearchSentMedia, opts ...grpc.CallOption) (*Messages_Messages, error)
	ChannelsGetSendAs(ctx context.Context, in *TLChannelsGetSendAs, opts ...grpc.CallOption) (*Channels_SendAsPeers, error)
}

type rPCMessagesClient struct {
	cc *grpc.ClientConn
}

func NewRPCMessagesClient(cc *grpc.ClientConn) RPCMessagesClient {
	return &rPCMessagesClient{cc}
}

func (c *rPCMessagesClient) MessagesGetMessages(ctx context.Context, in *TLMessagesGetMessages, opts ...grpc.CallOption) (*Messages_Messages, error) {
	out := new(Messages_Messages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_getMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesGetHistory(ctx context.Context, in *TLMessagesGetHistory, opts ...grpc.CallOption) (*Messages_Messages, error) {
	out := new(Messages_Messages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_getHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesSearch(ctx context.Context, in *TLMessagesSearch, opts ...grpc.CallOption) (*Messages_Messages, error) {
	out := new(Messages_Messages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesReadHistory(ctx context.Context, in *TLMessagesReadHistory, opts ...grpc.CallOption) (*Messages_AffectedMessages, error) {
	out := new(Messages_AffectedMessages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_readHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesDeleteHistory(ctx context.Context, in *TLMessagesDeleteHistory, opts ...grpc.CallOption) (*Messages_AffectedHistory, error) {
	out := new(Messages_AffectedHistory)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_deleteHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesDeleteMessages(ctx context.Context, in *TLMessagesDeleteMessages, opts ...grpc.CallOption) (*Messages_AffectedMessages, error) {
	out := new(Messages_AffectedMessages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_deleteMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesReceivedMessages(ctx context.Context, in *TLMessagesReceivedMessages, opts ...grpc.CallOption) (*Vector_ReceivedNotifyMessage, error) {
	out := new(Vector_ReceivedNotifyMessage)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_receivedMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesSendMessage(ctx context.Context, in *TLMessagesSendMessage, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_sendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesSendMedia(ctx context.Context, in *TLMessagesSendMedia, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_sendMedia", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesForwardMessages(ctx context.Context, in *TLMessagesForwardMessages, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_forwardMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesReadMessageContents(ctx context.Context, in *TLMessagesReadMessageContents, opts ...grpc.CallOption) (*Messages_AffectedMessages, error) {
	out := new(Messages_AffectedMessages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_readMessageContents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesGetMessagesViews(ctx context.Context, in *TLMessagesGetMessagesViews, opts ...grpc.CallOption) (*Messages_MessageViews, error) {
	out := new(Messages_MessageViews)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_getMessagesViews", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesSearchGlobal(ctx context.Context, in *TLMessagesSearchGlobal, opts ...grpc.CallOption) (*Messages_Messages, error) {
	out := new(Messages_Messages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_searchGlobal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesGetMessageEditData(ctx context.Context, in *TLMessagesGetMessageEditData, opts ...grpc.CallOption) (*Messages_MessageEditData, error) {
	out := new(Messages_MessageEditData)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_getMessageEditData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesEditMessage(ctx context.Context, in *TLMessagesEditMessage, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_editMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesGetUnreadMentions(ctx context.Context, in *TLMessagesGetUnreadMentions, opts ...grpc.CallOption) (*Messages_Messages, error) {
	out := new(Messages_Messages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_getUnreadMentions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesReadMentions(ctx context.Context, in *TLMessagesReadMentions, opts ...grpc.CallOption) (*Messages_AffectedHistory, error) {
	out := new(Messages_AffectedHistory)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_readMentions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesGetRecentLocations(ctx context.Context, in *TLMessagesGetRecentLocations, opts ...grpc.CallOption) (*Messages_Messages, error) {
	out := new(Messages_Messages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_getRecentLocations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesSendMultiMedia(ctx context.Context, in *TLMessagesSendMultiMedia, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_sendMultiMedia", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesUpdatePinnedMessage(ctx context.Context, in *TLMessagesUpdatePinnedMessage, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_updatePinnedMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesGetSearchCounters(ctx context.Context, in *TLMessagesGetSearchCounters, opts ...grpc.CallOption) (*Vector_Messages_SearchCounter, error) {
	out := new(Vector_Messages_SearchCounter)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_getSearchCounters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesUnpinAllMessages(ctx context.Context, in *TLMessagesUnpinAllMessages, opts ...grpc.CallOption) (*Messages_AffectedHistory, error) {
	out := new(Messages_AffectedHistory)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_unpinAllMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesGetSearchResultsCalendar(ctx context.Context, in *TLMessagesGetSearchResultsCalendar, opts ...grpc.CallOption) (*Messages_SearchResultsCalendar, error) {
	out := new(Messages_SearchResultsCalendar)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_getSearchResultsCalendar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesGetSearchResultsPositions(ctx context.Context, in *TLMessagesGetSearchResultsPositions, opts ...grpc.CallOption) (*Messages_SearchResultsPositions, error) {
	out := new(Messages_SearchResultsPositions)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_getSearchResultsPositions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesToggleNoForwards(ctx context.Context, in *TLMessagesToggleNoForwards, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_toggleNoForwards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesSaveDefaultSendAs(ctx context.Context, in *TLMessagesSaveDefaultSendAs, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_saveDefaultSendAs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesTranslateText(ctx context.Context, in *TLMessagesTranslateText, opts ...grpc.CallOption) (*Messages_TranslatedText, error) {
	out := new(Messages_TranslatedText)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_translateText", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) MessagesSearchSentMedia(ctx context.Context, in *TLMessagesSearchSentMedia, opts ...grpc.CallOption) (*Messages_Messages, error) {
	out := new(Messages_Messages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/messages_searchSentMedia", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMessagesClient) ChannelsGetSendAs(ctx context.Context, in *TLChannelsGetSendAs, opts ...grpc.CallOption) (*Channels_SendAsPeers, error) {
	out := new(Channels_SendAsPeers)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMessages/channels_getSendAs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCMessagesServer is the server API for RPCMessages service.
type RPCMessagesServer interface {
	MessagesGetMessages(context.Context, *TLMessagesGetMessages) (*Messages_Messages, error)
	MessagesGetHistory(context.Context, *TLMessagesGetHistory) (*Messages_Messages, error)
	MessagesSearch(context.Context, *TLMessagesSearch) (*Messages_Messages, error)
	MessagesReadHistory(context.Context, *TLMessagesReadHistory) (*Messages_AffectedMessages, error)
	MessagesDeleteHistory(context.Context, *TLMessagesDeleteHistory) (*Messages_AffectedHistory, error)
	MessagesDeleteMessages(context.Context, *TLMessagesDeleteMessages) (*Messages_AffectedMessages, error)
	MessagesReceivedMessages(context.Context, *TLMessagesReceivedMessages) (*Vector_ReceivedNotifyMessage, error)
	MessagesSendMessage(context.Context, *TLMessagesSendMessage) (*Updates, error)
	MessagesSendMedia(context.Context, *TLMessagesSendMedia) (*Updates, error)
	MessagesForwardMessages(context.Context, *TLMessagesForwardMessages) (*Updates, error)
	MessagesReadMessageContents(context.Context, *TLMessagesReadMessageContents) (*Messages_AffectedMessages, error)
	MessagesGetMessagesViews(context.Context, *TLMessagesGetMessagesViews) (*Messages_MessageViews, error)
	MessagesSearchGlobal(context.Context, *TLMessagesSearchGlobal) (*Messages_Messages, error)
	MessagesGetMessageEditData(context.Context, *TLMessagesGetMessageEditData) (*Messages_MessageEditData, error)
	MessagesEditMessage(context.Context, *TLMessagesEditMessage) (*Updates, error)
	MessagesGetUnreadMentions(context.Context, *TLMessagesGetUnreadMentions) (*Messages_Messages, error)
	MessagesReadMentions(context.Context, *TLMessagesReadMentions) (*Messages_AffectedHistory, error)
	MessagesGetRecentLocations(context.Context, *TLMessagesGetRecentLocations) (*Messages_Messages, error)
	MessagesSendMultiMedia(context.Context, *TLMessagesSendMultiMedia) (*Updates, error)
	MessagesUpdatePinnedMessage(context.Context, *TLMessagesUpdatePinnedMessage) (*Updates, error)
	MessagesGetSearchCounters(context.Context, *TLMessagesGetSearchCounters) (*Vector_Messages_SearchCounter, error)
	MessagesUnpinAllMessages(context.Context, *TLMessagesUnpinAllMessages) (*Messages_AffectedHistory, error)
	MessagesGetSearchResultsCalendar(context.Context, *TLMessagesGetSearchResultsCalendar) (*Messages_SearchResultsCalendar, error)
	MessagesGetSearchResultsPositions(context.Context, *TLMessagesGetSearchResultsPositions) (*Messages_SearchResultsPositions, error)
	MessagesToggleNoForwards(context.Context, *TLMessagesToggleNoForwards) (*Updates, error)
	MessagesSaveDefaultSendAs(context.Context, *TLMessagesSaveDefaultSendAs) (*Bool, error)
	MessagesTranslateText(context.Context, *TLMessagesTranslateText) (*Messages_TranslatedText, error)
	MessagesSearchSentMedia(context.Context, *TLMessagesSearchSentMedia) (*Messages_Messages, error)
	ChannelsGetSendAs(context.Context, *TLChannelsGetSendAs) (*Channels_SendAsPeers, error)
}

// UnimplementedRPCMessagesServer can be embedded to have forward compatible implementations.
type UnimplementedRPCMessagesServer struct {
}

func (*UnimplementedRPCMessagesServer) MessagesGetMessages(ctx context.Context, req *TLMessagesGetMessages) (*Messages_Messages, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetMessages not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesGetHistory(ctx context.Context, req *TLMessagesGetHistory) (*Messages_Messages, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetHistory not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesSearch(ctx context.Context, req *TLMessagesSearch) (*Messages_Messages, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSearch not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesReadHistory(ctx context.Context, req *TLMessagesReadHistory) (*Messages_AffectedMessages, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesReadHistory not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesDeleteHistory(ctx context.Context, req *TLMessagesDeleteHistory) (*Messages_AffectedHistory, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesDeleteHistory not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesDeleteMessages(ctx context.Context, req *TLMessagesDeleteMessages) (*Messages_AffectedMessages, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesDeleteMessages not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesReceivedMessages(ctx context.Context, req *TLMessagesReceivedMessages) (*Vector_ReceivedNotifyMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesReceivedMessages not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesSendMessage(ctx context.Context, req *TLMessagesSendMessage) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSendMessage not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesSendMedia(ctx context.Context, req *TLMessagesSendMedia) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSendMedia not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesForwardMessages(ctx context.Context, req *TLMessagesForwardMessages) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesForwardMessages not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesReadMessageContents(ctx context.Context, req *TLMessagesReadMessageContents) (*Messages_AffectedMessages, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesReadMessageContents not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesGetMessagesViews(ctx context.Context, req *TLMessagesGetMessagesViews) (*Messages_MessageViews, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetMessagesViews not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesSearchGlobal(ctx context.Context, req *TLMessagesSearchGlobal) (*Messages_Messages, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSearchGlobal not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesGetMessageEditData(ctx context.Context, req *TLMessagesGetMessageEditData) (*Messages_MessageEditData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetMessageEditData not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesEditMessage(ctx context.Context, req *TLMessagesEditMessage) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesEditMessage not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesGetUnreadMentions(ctx context.Context, req *TLMessagesGetUnreadMentions) (*Messages_Messages, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetUnreadMentions not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesReadMentions(ctx context.Context, req *TLMessagesReadMentions) (*Messages_AffectedHistory, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesReadMentions not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesGetRecentLocations(ctx context.Context, req *TLMessagesGetRecentLocations) (*Messages_Messages, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetRecentLocations not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesSendMultiMedia(ctx context.Context, req *TLMessagesSendMultiMedia) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSendMultiMedia not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesUpdatePinnedMessage(ctx context.Context, req *TLMessagesUpdatePinnedMessage) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesUpdatePinnedMessage not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesGetSearchCounters(ctx context.Context, req *TLMessagesGetSearchCounters) (*Vector_Messages_SearchCounter, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetSearchCounters not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesUnpinAllMessages(ctx context.Context, req *TLMessagesUnpinAllMessages) (*Messages_AffectedHistory, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesUnpinAllMessages not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesGetSearchResultsCalendar(ctx context.Context, req *TLMessagesGetSearchResultsCalendar) (*Messages_SearchResultsCalendar, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetSearchResultsCalendar not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesGetSearchResultsPositions(ctx context.Context, req *TLMessagesGetSearchResultsPositions) (*Messages_SearchResultsPositions, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetSearchResultsPositions not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesToggleNoForwards(ctx context.Context, req *TLMessagesToggleNoForwards) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesToggleNoForwards not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesSaveDefaultSendAs(ctx context.Context, req *TLMessagesSaveDefaultSendAs) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSaveDefaultSendAs not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesTranslateText(ctx context.Context, req *TLMessagesTranslateText) (*Messages_TranslatedText, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesTranslateText not implemented")
}
func (*UnimplementedRPCMessagesServer) MessagesSearchSentMedia(ctx context.Context, req *TLMessagesSearchSentMedia) (*Messages_Messages, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSearchSentMedia not implemented")
}
func (*UnimplementedRPCMessagesServer) ChannelsGetSendAs(ctx context.Context, req *TLChannelsGetSendAs) (*Channels_SendAsPeers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsGetSendAs not implemented")
}

func RegisterRPCMessagesServer(s *grpc.Server, srv RPCMessagesServer) {
	s.RegisterService(&_RPCMessages_serviceDesc, srv)
}

func _RPCMessages_MessagesGetMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetMessages)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesGetMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesGetMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesGetMessages(ctx, req.(*TLMessagesGetMessages))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesGetHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetHistory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesGetHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesGetHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesGetHistory(ctx, req.(*TLMessagesGetHistory))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSearch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesSearch(ctx, req.(*TLMessagesSearch))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesReadHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReadHistory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesReadHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesReadHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesReadHistory(ctx, req.(*TLMessagesReadHistory))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesDeleteHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesDeleteHistory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesDeleteHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesDeleteHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesDeleteHistory(ctx, req.(*TLMessagesDeleteHistory))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesDeleteMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesDeleteMessages)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesDeleteMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesDeleteMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesDeleteMessages(ctx, req.(*TLMessagesDeleteMessages))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesReceivedMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReceivedMessages)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesReceivedMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesReceivedMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesReceivedMessages(ctx, req.(*TLMessagesReceivedMessages))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesSendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSendMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesSendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesSendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesSendMessage(ctx, req.(*TLMessagesSendMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesSendMedia_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSendMedia)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesSendMedia(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesSendMedia",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesSendMedia(ctx, req.(*TLMessagesSendMedia))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesForwardMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesForwardMessages)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesForwardMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesForwardMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesForwardMessages(ctx, req.(*TLMessagesForwardMessages))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesReadMessageContents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReadMessageContents)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesReadMessageContents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesReadMessageContents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesReadMessageContents(ctx, req.(*TLMessagesReadMessageContents))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesGetMessagesViews_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetMessagesViews)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesGetMessagesViews(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesGetMessagesViews",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesGetMessagesViews(ctx, req.(*TLMessagesGetMessagesViews))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesSearchGlobal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSearchGlobal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesSearchGlobal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesSearchGlobal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesSearchGlobal(ctx, req.(*TLMessagesSearchGlobal))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesGetMessageEditData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetMessageEditData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesGetMessageEditData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesGetMessageEditData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesGetMessageEditData(ctx, req.(*TLMessagesGetMessageEditData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesEditMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesEditMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesEditMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesEditMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesEditMessage(ctx, req.(*TLMessagesEditMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesGetUnreadMentions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetUnreadMentions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesGetUnreadMentions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesGetUnreadMentions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesGetUnreadMentions(ctx, req.(*TLMessagesGetUnreadMentions))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesReadMentions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReadMentions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesReadMentions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesReadMentions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesReadMentions(ctx, req.(*TLMessagesReadMentions))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesGetRecentLocations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetRecentLocations)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesGetRecentLocations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesGetRecentLocations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesGetRecentLocations(ctx, req.(*TLMessagesGetRecentLocations))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesSendMultiMedia_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSendMultiMedia)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesSendMultiMedia(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesSendMultiMedia",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesSendMultiMedia(ctx, req.(*TLMessagesSendMultiMedia))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesUpdatePinnedMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesUpdatePinnedMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesUpdatePinnedMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesUpdatePinnedMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesUpdatePinnedMessage(ctx, req.(*TLMessagesUpdatePinnedMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesGetSearchCounters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetSearchCounters)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesGetSearchCounters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesGetSearchCounters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesGetSearchCounters(ctx, req.(*TLMessagesGetSearchCounters))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesUnpinAllMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesUnpinAllMessages)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesUnpinAllMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesUnpinAllMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesUnpinAllMessages(ctx, req.(*TLMessagesUnpinAllMessages))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesGetSearchResultsCalendar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetSearchResultsCalendar)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesGetSearchResultsCalendar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesGetSearchResultsCalendar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesGetSearchResultsCalendar(ctx, req.(*TLMessagesGetSearchResultsCalendar))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesGetSearchResultsPositions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetSearchResultsPositions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesGetSearchResultsPositions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesGetSearchResultsPositions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesGetSearchResultsPositions(ctx, req.(*TLMessagesGetSearchResultsPositions))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesToggleNoForwards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesToggleNoForwards)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesToggleNoForwards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesToggleNoForwards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesToggleNoForwards(ctx, req.(*TLMessagesToggleNoForwards))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesSaveDefaultSendAs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSaveDefaultSendAs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesSaveDefaultSendAs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesSaveDefaultSendAs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesSaveDefaultSendAs(ctx, req.(*TLMessagesSaveDefaultSendAs))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesTranslateText_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesTranslateText)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesTranslateText(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesTranslateText",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesTranslateText(ctx, req.(*TLMessagesTranslateText))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_MessagesSearchSentMedia_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSearchSentMedia)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).MessagesSearchSentMedia(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/MessagesSearchSentMedia",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).MessagesSearchSentMedia(ctx, req.(*TLMessagesSearchSentMedia))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMessages_ChannelsGetSendAs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsGetSendAs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMessagesServer).ChannelsGetSendAs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMessages/ChannelsGetSendAs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMessagesServer).ChannelsGetSendAs(ctx, req.(*TLChannelsGetSendAs))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCMessages_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCMessages",
	HandlerType: (*RPCMessagesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "messages_getMessages",
			Handler:    _RPCMessages_MessagesGetMessages_Handler,
		},
		{
			MethodName: "messages_getHistory",
			Handler:    _RPCMessages_MessagesGetHistory_Handler,
		},
		{
			MethodName: "messages_search",
			Handler:    _RPCMessages_MessagesSearch_Handler,
		},
		{
			MethodName: "messages_readHistory",
			Handler:    _RPCMessages_MessagesReadHistory_Handler,
		},
		{
			MethodName: "messages_deleteHistory",
			Handler:    _RPCMessages_MessagesDeleteHistory_Handler,
		},
		{
			MethodName: "messages_deleteMessages",
			Handler:    _RPCMessages_MessagesDeleteMessages_Handler,
		},
		{
			MethodName: "messages_receivedMessages",
			Handler:    _RPCMessages_MessagesReceivedMessages_Handler,
		},
		{
			MethodName: "messages_sendMessage",
			Handler:    _RPCMessages_MessagesSendMessage_Handler,
		},
		{
			MethodName: "messages_sendMedia",
			Handler:    _RPCMessages_MessagesSendMedia_Handler,
		},
		{
			MethodName: "messages_forwardMessages",
			Handler:    _RPCMessages_MessagesForwardMessages_Handler,
		},
		{
			MethodName: "messages_readMessageContents",
			Handler:    _RPCMessages_MessagesReadMessageContents_Handler,
		},
		{
			MethodName: "messages_getMessagesViews",
			Handler:    _RPCMessages_MessagesGetMessagesViews_Handler,
		},
		{
			MethodName: "messages_searchGlobal",
			Handler:    _RPCMessages_MessagesSearchGlobal_Handler,
		},
		{
			MethodName: "messages_getMessageEditData",
			Handler:    _RPCMessages_MessagesGetMessageEditData_Handler,
		},
		{
			MethodName: "messages_editMessage",
			Handler:    _RPCMessages_MessagesEditMessage_Handler,
		},
		{
			MethodName: "messages_getUnreadMentions",
			Handler:    _RPCMessages_MessagesGetUnreadMentions_Handler,
		},
		{
			MethodName: "messages_readMentions",
			Handler:    _RPCMessages_MessagesReadMentions_Handler,
		},
		{
			MethodName: "messages_getRecentLocations",
			Handler:    _RPCMessages_MessagesGetRecentLocations_Handler,
		},
		{
			MethodName: "messages_sendMultiMedia",
			Handler:    _RPCMessages_MessagesSendMultiMedia_Handler,
		},
		{
			MethodName: "messages_updatePinnedMessage",
			Handler:    _RPCMessages_MessagesUpdatePinnedMessage_Handler,
		},
		{
			MethodName: "messages_getSearchCounters",
			Handler:    _RPCMessages_MessagesGetSearchCounters_Handler,
		},
		{
			MethodName: "messages_unpinAllMessages",
			Handler:    _RPCMessages_MessagesUnpinAllMessages_Handler,
		},
		{
			MethodName: "messages_getSearchResultsCalendar",
			Handler:    _RPCMessages_MessagesGetSearchResultsCalendar_Handler,
		},
		{
			MethodName: "messages_getSearchResultsPositions",
			Handler:    _RPCMessages_MessagesGetSearchResultsPositions_Handler,
		},
		{
			MethodName: "messages_toggleNoForwards",
			Handler:    _RPCMessages_MessagesToggleNoForwards_Handler,
		},
		{
			MethodName: "messages_saveDefaultSendAs",
			Handler:    _RPCMessages_MessagesSaveDefaultSendAs_Handler,
		},
		{
			MethodName: "messages_translateText",
			Handler:    _RPCMessages_MessagesTranslateText_Handler,
		},
		{
			MethodName: "messages_searchSentMedia",
			Handler:    _RPCMessages_MessagesSearchSentMedia_Handler,
		},
		{
			MethodName: "channels_getSendAs",
			Handler:    _RPCMessages_ChannelsGetSendAs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCVoipCallsClient is the client API for RPCVoipCalls service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCVoipCallsClient interface {
	MessagesDeletePhoneCallHistory(ctx context.Context, in *TLMessagesDeletePhoneCallHistory, opts ...grpc.CallOption) (*Messages_AffectedFoundMessages, error)
	PhoneGetCallConfig(ctx context.Context, in *TLPhoneGetCallConfig, opts ...grpc.CallOption) (*DataJSON, error)
	PhoneRequestCall(ctx context.Context, in *TLPhoneRequestCall, opts ...grpc.CallOption) (*Phone_PhoneCall, error)
	PhoneAcceptCall(ctx context.Context, in *TLPhoneAcceptCall, opts ...grpc.CallOption) (*Phone_PhoneCall, error)
	PhoneConfirmCall(ctx context.Context, in *TLPhoneConfirmCall, opts ...grpc.CallOption) (*Phone_PhoneCall, error)
	PhoneReceivedCall(ctx context.Context, in *TLPhoneReceivedCall, opts ...grpc.CallOption) (*Bool, error)
	PhoneDiscardCall(ctx context.Context, in *TLPhoneDiscardCall, opts ...grpc.CallOption) (*Updates, error)
	PhoneSetCallRating(ctx context.Context, in *TLPhoneSetCallRating, opts ...grpc.CallOption) (*Updates, error)
	PhoneSaveCallDebug(ctx context.Context, in *TLPhoneSaveCallDebug, opts ...grpc.CallOption) (*Bool, error)
	PhoneSendSignalingData(ctx context.Context, in *TLPhoneSendSignalingData, opts ...grpc.CallOption) (*Bool, error)
}

type rPCVoipCallsClient struct {
	cc *grpc.ClientConn
}

func NewRPCVoipCallsClient(cc *grpc.ClientConn) RPCVoipCallsClient {
	return &rPCVoipCallsClient{cc}
}

func (c *rPCVoipCallsClient) MessagesDeletePhoneCallHistory(ctx context.Context, in *TLMessagesDeletePhoneCallHistory, opts ...grpc.CallOption) (*Messages_AffectedFoundMessages, error) {
	out := new(Messages_AffectedFoundMessages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCVoipCalls/messages_deletePhoneCallHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCVoipCallsClient) PhoneGetCallConfig(ctx context.Context, in *TLPhoneGetCallConfig, opts ...grpc.CallOption) (*DataJSON, error) {
	out := new(DataJSON)
	err := c.cc.Invoke(ctx, "/mtproto.RPCVoipCalls/phone_getCallConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCVoipCallsClient) PhoneRequestCall(ctx context.Context, in *TLPhoneRequestCall, opts ...grpc.CallOption) (*Phone_PhoneCall, error) {
	out := new(Phone_PhoneCall)
	err := c.cc.Invoke(ctx, "/mtproto.RPCVoipCalls/phone_requestCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCVoipCallsClient) PhoneAcceptCall(ctx context.Context, in *TLPhoneAcceptCall, opts ...grpc.CallOption) (*Phone_PhoneCall, error) {
	out := new(Phone_PhoneCall)
	err := c.cc.Invoke(ctx, "/mtproto.RPCVoipCalls/phone_acceptCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCVoipCallsClient) PhoneConfirmCall(ctx context.Context, in *TLPhoneConfirmCall, opts ...grpc.CallOption) (*Phone_PhoneCall, error) {
	out := new(Phone_PhoneCall)
	err := c.cc.Invoke(ctx, "/mtproto.RPCVoipCalls/phone_confirmCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCVoipCallsClient) PhoneReceivedCall(ctx context.Context, in *TLPhoneReceivedCall, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCVoipCalls/phone_receivedCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCVoipCallsClient) PhoneDiscardCall(ctx context.Context, in *TLPhoneDiscardCall, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCVoipCalls/phone_discardCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCVoipCallsClient) PhoneSetCallRating(ctx context.Context, in *TLPhoneSetCallRating, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCVoipCalls/phone_setCallRating", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCVoipCallsClient) PhoneSaveCallDebug(ctx context.Context, in *TLPhoneSaveCallDebug, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCVoipCalls/phone_saveCallDebug", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCVoipCallsClient) PhoneSendSignalingData(ctx context.Context, in *TLPhoneSendSignalingData, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCVoipCalls/phone_sendSignalingData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCVoipCallsServer is the server API for RPCVoipCalls service.
type RPCVoipCallsServer interface {
	MessagesDeletePhoneCallHistory(context.Context, *TLMessagesDeletePhoneCallHistory) (*Messages_AffectedFoundMessages, error)
	PhoneGetCallConfig(context.Context, *TLPhoneGetCallConfig) (*DataJSON, error)
	PhoneRequestCall(context.Context, *TLPhoneRequestCall) (*Phone_PhoneCall, error)
	PhoneAcceptCall(context.Context, *TLPhoneAcceptCall) (*Phone_PhoneCall, error)
	PhoneConfirmCall(context.Context, *TLPhoneConfirmCall) (*Phone_PhoneCall, error)
	PhoneReceivedCall(context.Context, *TLPhoneReceivedCall) (*Bool, error)
	PhoneDiscardCall(context.Context, *TLPhoneDiscardCall) (*Updates, error)
	PhoneSetCallRating(context.Context, *TLPhoneSetCallRating) (*Updates, error)
	PhoneSaveCallDebug(context.Context, *TLPhoneSaveCallDebug) (*Bool, error)
	PhoneSendSignalingData(context.Context, *TLPhoneSendSignalingData) (*Bool, error)
}

// UnimplementedRPCVoipCallsServer can be embedded to have forward compatible implementations.
type UnimplementedRPCVoipCallsServer struct {
}

func (*UnimplementedRPCVoipCallsServer) MessagesDeletePhoneCallHistory(ctx context.Context, req *TLMessagesDeletePhoneCallHistory) (*Messages_AffectedFoundMessages, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesDeletePhoneCallHistory not implemented")
}
func (*UnimplementedRPCVoipCallsServer) PhoneGetCallConfig(ctx context.Context, req *TLPhoneGetCallConfig) (*DataJSON, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneGetCallConfig not implemented")
}
func (*UnimplementedRPCVoipCallsServer) PhoneRequestCall(ctx context.Context, req *TLPhoneRequestCall) (*Phone_PhoneCall, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneRequestCall not implemented")
}
func (*UnimplementedRPCVoipCallsServer) PhoneAcceptCall(ctx context.Context, req *TLPhoneAcceptCall) (*Phone_PhoneCall, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneAcceptCall not implemented")
}
func (*UnimplementedRPCVoipCallsServer) PhoneConfirmCall(ctx context.Context, req *TLPhoneConfirmCall) (*Phone_PhoneCall, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneConfirmCall not implemented")
}
func (*UnimplementedRPCVoipCallsServer) PhoneReceivedCall(ctx context.Context, req *TLPhoneReceivedCall) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneReceivedCall not implemented")
}
func (*UnimplementedRPCVoipCallsServer) PhoneDiscardCall(ctx context.Context, req *TLPhoneDiscardCall) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneDiscardCall not implemented")
}
func (*UnimplementedRPCVoipCallsServer) PhoneSetCallRating(ctx context.Context, req *TLPhoneSetCallRating) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneSetCallRating not implemented")
}
func (*UnimplementedRPCVoipCallsServer) PhoneSaveCallDebug(ctx context.Context, req *TLPhoneSaveCallDebug) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneSaveCallDebug not implemented")
}
func (*UnimplementedRPCVoipCallsServer) PhoneSendSignalingData(ctx context.Context, req *TLPhoneSendSignalingData) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneSendSignalingData not implemented")
}

func RegisterRPCVoipCallsServer(s *grpc.Server, srv RPCVoipCallsServer) {
	s.RegisterService(&_RPCVoipCalls_serviceDesc, srv)
}

func _RPCVoipCalls_MessagesDeletePhoneCallHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesDeletePhoneCallHistory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCVoipCallsServer).MessagesDeletePhoneCallHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCVoipCalls/MessagesDeletePhoneCallHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCVoipCallsServer).MessagesDeletePhoneCallHistory(ctx, req.(*TLMessagesDeletePhoneCallHistory))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCVoipCalls_PhoneGetCallConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneGetCallConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCVoipCallsServer).PhoneGetCallConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCVoipCalls/PhoneGetCallConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCVoipCallsServer).PhoneGetCallConfig(ctx, req.(*TLPhoneGetCallConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCVoipCalls_PhoneRequestCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneRequestCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCVoipCallsServer).PhoneRequestCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCVoipCalls/PhoneRequestCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCVoipCallsServer).PhoneRequestCall(ctx, req.(*TLPhoneRequestCall))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCVoipCalls_PhoneAcceptCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneAcceptCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCVoipCallsServer).PhoneAcceptCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCVoipCalls/PhoneAcceptCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCVoipCallsServer).PhoneAcceptCall(ctx, req.(*TLPhoneAcceptCall))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCVoipCalls_PhoneConfirmCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneConfirmCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCVoipCallsServer).PhoneConfirmCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCVoipCalls/PhoneConfirmCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCVoipCallsServer).PhoneConfirmCall(ctx, req.(*TLPhoneConfirmCall))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCVoipCalls_PhoneReceivedCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneReceivedCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCVoipCallsServer).PhoneReceivedCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCVoipCalls/PhoneReceivedCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCVoipCallsServer).PhoneReceivedCall(ctx, req.(*TLPhoneReceivedCall))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCVoipCalls_PhoneDiscardCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneDiscardCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCVoipCallsServer).PhoneDiscardCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCVoipCalls/PhoneDiscardCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCVoipCallsServer).PhoneDiscardCall(ctx, req.(*TLPhoneDiscardCall))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCVoipCalls_PhoneSetCallRating_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneSetCallRating)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCVoipCallsServer).PhoneSetCallRating(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCVoipCalls/PhoneSetCallRating",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCVoipCallsServer).PhoneSetCallRating(ctx, req.(*TLPhoneSetCallRating))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCVoipCalls_PhoneSaveCallDebug_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneSaveCallDebug)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCVoipCallsServer).PhoneSaveCallDebug(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCVoipCalls/PhoneSaveCallDebug",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCVoipCallsServer).PhoneSaveCallDebug(ctx, req.(*TLPhoneSaveCallDebug))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCVoipCalls_PhoneSendSignalingData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneSendSignalingData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCVoipCallsServer).PhoneSendSignalingData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCVoipCalls/PhoneSendSignalingData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCVoipCallsServer).PhoneSendSignalingData(ctx, req.(*TLPhoneSendSignalingData))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCVoipCalls_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCVoipCalls",
	HandlerType: (*RPCVoipCallsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "messages_deletePhoneCallHistory",
			Handler:    _RPCVoipCalls_MessagesDeletePhoneCallHistory_Handler,
		},
		{
			MethodName: "phone_getCallConfig",
			Handler:    _RPCVoipCalls_PhoneGetCallConfig_Handler,
		},
		{
			MethodName: "phone_requestCall",
			Handler:    _RPCVoipCalls_PhoneRequestCall_Handler,
		},
		{
			MethodName: "phone_acceptCall",
			Handler:    _RPCVoipCalls_PhoneAcceptCall_Handler,
		},
		{
			MethodName: "phone_confirmCall",
			Handler:    _RPCVoipCalls_PhoneConfirmCall_Handler,
		},
		{
			MethodName: "phone_receivedCall",
			Handler:    _RPCVoipCalls_PhoneReceivedCall_Handler,
		},
		{
			MethodName: "phone_discardCall",
			Handler:    _RPCVoipCalls_PhoneDiscardCall_Handler,
		},
		{
			MethodName: "phone_setCallRating",
			Handler:    _RPCVoipCalls_PhoneSetCallRating_Handler,
		},
		{
			MethodName: "phone_saveCallDebug",
			Handler:    _RPCVoipCalls_PhoneSaveCallDebug_Handler,
		},
		{
			MethodName: "phone_sendSignalingData",
			Handler:    _RPCVoipCalls_PhoneSendSignalingData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCAuthorizationClient is the client API for RPCAuthorization service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCAuthorizationClient interface {
	AuthSendCode(ctx context.Context, in *TLAuthSendCode, opts ...grpc.CallOption) (*Auth_SentCode, error)
	AuthSignUp(ctx context.Context, in *TLAuthSignUp, opts ...grpc.CallOption) (*Auth_Authorization, error)
	AuthSignIn(ctx context.Context, in *TLAuthSignIn, opts ...grpc.CallOption) (*Auth_Authorization, error)
	AuthLogOut3E72BA19(ctx context.Context, in *TLAuthLogOut3E72BA19, opts ...grpc.CallOption) (*Auth_LoggedOut, error)
	AuthResetAuthorizations(ctx context.Context, in *TLAuthResetAuthorizations, opts ...grpc.CallOption) (*Bool, error)
	AuthExportAuthorization(ctx context.Context, in *TLAuthExportAuthorization, opts ...grpc.CallOption) (*Auth_ExportedAuthorization, error)
	AuthImportAuthorization(ctx context.Context, in *TLAuthImportAuthorization, opts ...grpc.CallOption) (*Auth_Authorization, error)
	AuthBindTempAuthKey(ctx context.Context, in *TLAuthBindTempAuthKey, opts ...grpc.CallOption) (*Bool, error)
	AuthImportBotAuthorization(ctx context.Context, in *TLAuthImportBotAuthorization, opts ...grpc.CallOption) (*Auth_Authorization, error)
	AuthCheckPassword(ctx context.Context, in *TLAuthCheckPassword, opts ...grpc.CallOption) (*Auth_Authorization, error)
	AuthRequestPasswordRecovery(ctx context.Context, in *TLAuthRequestPasswordRecovery, opts ...grpc.CallOption) (*Auth_PasswordRecovery, error)
	AuthRecoverPassword(ctx context.Context, in *TLAuthRecoverPassword, opts ...grpc.CallOption) (*Auth_Authorization, error)
	AuthResendCode(ctx context.Context, in *TLAuthResendCode, opts ...grpc.CallOption) (*Auth_SentCode, error)
	AuthCancelCode(ctx context.Context, in *TLAuthCancelCode, opts ...grpc.CallOption) (*Bool, error)
	AuthDropTempAuthKeys(ctx context.Context, in *TLAuthDropTempAuthKeys, opts ...grpc.CallOption) (*Bool, error)
	AuthCheckRecoveryPassword(ctx context.Context, in *TLAuthCheckRecoveryPassword, opts ...grpc.CallOption) (*Bool, error)
	AccountResetPassword(ctx context.Context, in *TLAccountResetPassword, opts ...grpc.CallOption) (*Account_ResetPasswordResult, error)
	AccountSetAuthorizationTTL(ctx context.Context, in *TLAccountSetAuthorizationTTL, opts ...grpc.CallOption) (*Bool, error)
	AccountChangeAuthorizationSettings(ctx context.Context, in *TLAccountChangeAuthorizationSettings, opts ...grpc.CallOption) (*Bool, error)
	AuthLogOut5717DA40(ctx context.Context, in *TLAuthLogOut5717DA40, opts ...grpc.CallOption) (*Bool, error)
	AuthToggleBan(ctx context.Context, in *TLAuthToggleBan, opts ...grpc.CallOption) (*PredefinedUser, error)
}

type rPCAuthorizationClient struct {
	cc *grpc.ClientConn
}

func NewRPCAuthorizationClient(cc *grpc.ClientConn) RPCAuthorizationClient {
	return &rPCAuthorizationClient{cc}
}

func (c *rPCAuthorizationClient) AuthSendCode(ctx context.Context, in *TLAuthSendCode, opts ...grpc.CallOption) (*Auth_SentCode, error) {
	out := new(Auth_SentCode)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuthorization/auth_sendCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) AuthSignUp(ctx context.Context, in *TLAuthSignUp, opts ...grpc.CallOption) (*Auth_Authorization, error) {
	out := new(Auth_Authorization)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuthorization/auth_signUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) AuthSignIn(ctx context.Context, in *TLAuthSignIn, opts ...grpc.CallOption) (*Auth_Authorization, error) {
	out := new(Auth_Authorization)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuthorization/auth_signIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) AuthLogOut3E72BA19(ctx context.Context, in *TLAuthLogOut3E72BA19, opts ...grpc.CallOption) (*Auth_LoggedOut, error) {
	out := new(Auth_LoggedOut)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuthorization/auth_logOut3E72BA19", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) AuthResetAuthorizations(ctx context.Context, in *TLAuthResetAuthorizations, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuthorization/auth_resetAuthorizations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) AuthExportAuthorization(ctx context.Context, in *TLAuthExportAuthorization, opts ...grpc.CallOption) (*Auth_ExportedAuthorization, error) {
	out := new(Auth_ExportedAuthorization)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuthorization/auth_exportAuthorization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) AuthImportAuthorization(ctx context.Context, in *TLAuthImportAuthorization, opts ...grpc.CallOption) (*Auth_Authorization, error) {
	out := new(Auth_Authorization)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuthorization/auth_importAuthorization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) AuthBindTempAuthKey(ctx context.Context, in *TLAuthBindTempAuthKey, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuthorization/auth_bindTempAuthKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) AuthImportBotAuthorization(ctx context.Context, in *TLAuthImportBotAuthorization, opts ...grpc.CallOption) (*Auth_Authorization, error) {
	out := new(Auth_Authorization)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuthorization/auth_importBotAuthorization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) AuthCheckPassword(ctx context.Context, in *TLAuthCheckPassword, opts ...grpc.CallOption) (*Auth_Authorization, error) {
	out := new(Auth_Authorization)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuthorization/auth_checkPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) AuthRequestPasswordRecovery(ctx context.Context, in *TLAuthRequestPasswordRecovery, opts ...grpc.CallOption) (*Auth_PasswordRecovery, error) {
	out := new(Auth_PasswordRecovery)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuthorization/auth_requestPasswordRecovery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) AuthRecoverPassword(ctx context.Context, in *TLAuthRecoverPassword, opts ...grpc.CallOption) (*Auth_Authorization, error) {
	out := new(Auth_Authorization)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuthorization/auth_recoverPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) AuthResendCode(ctx context.Context, in *TLAuthResendCode, opts ...grpc.CallOption) (*Auth_SentCode, error) {
	out := new(Auth_SentCode)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuthorization/auth_resendCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) AuthCancelCode(ctx context.Context, in *TLAuthCancelCode, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuthorization/auth_cancelCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) AuthDropTempAuthKeys(ctx context.Context, in *TLAuthDropTempAuthKeys, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuthorization/auth_dropTempAuthKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) AuthCheckRecoveryPassword(ctx context.Context, in *TLAuthCheckRecoveryPassword, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuthorization/auth_checkRecoveryPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) AccountResetPassword(ctx context.Context, in *TLAccountResetPassword, opts ...grpc.CallOption) (*Account_ResetPasswordResult, error) {
	out := new(Account_ResetPasswordResult)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuthorization/account_resetPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) AccountSetAuthorizationTTL(ctx context.Context, in *TLAccountSetAuthorizationTTL, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuthorization/account_setAuthorizationTTL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) AccountChangeAuthorizationSettings(ctx context.Context, in *TLAccountChangeAuthorizationSettings, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuthorization/account_changeAuthorizationSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) AuthLogOut5717DA40(ctx context.Context, in *TLAuthLogOut5717DA40, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuthorization/auth_logOut5717DA40", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAuthorizationClient) AuthToggleBan(ctx context.Context, in *TLAuthToggleBan, opts ...grpc.CallOption) (*PredefinedUser, error) {
	out := new(PredefinedUser)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAuthorization/auth_toggleBan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCAuthorizationServer is the server API for RPCAuthorization service.
type RPCAuthorizationServer interface {
	AuthSendCode(context.Context, *TLAuthSendCode) (*Auth_SentCode, error)
	AuthSignUp(context.Context, *TLAuthSignUp) (*Auth_Authorization, error)
	AuthSignIn(context.Context, *TLAuthSignIn) (*Auth_Authorization, error)
	AuthLogOut3E72BA19(context.Context, *TLAuthLogOut3E72BA19) (*Auth_LoggedOut, error)
	AuthResetAuthorizations(context.Context, *TLAuthResetAuthorizations) (*Bool, error)
	AuthExportAuthorization(context.Context, *TLAuthExportAuthorization) (*Auth_ExportedAuthorization, error)
	AuthImportAuthorization(context.Context, *TLAuthImportAuthorization) (*Auth_Authorization, error)
	AuthBindTempAuthKey(context.Context, *TLAuthBindTempAuthKey) (*Bool, error)
	AuthImportBotAuthorization(context.Context, *TLAuthImportBotAuthorization) (*Auth_Authorization, error)
	AuthCheckPassword(context.Context, *TLAuthCheckPassword) (*Auth_Authorization, error)
	AuthRequestPasswordRecovery(context.Context, *TLAuthRequestPasswordRecovery) (*Auth_PasswordRecovery, error)
	AuthRecoverPassword(context.Context, *TLAuthRecoverPassword) (*Auth_Authorization, error)
	AuthResendCode(context.Context, *TLAuthResendCode) (*Auth_SentCode, error)
	AuthCancelCode(context.Context, *TLAuthCancelCode) (*Bool, error)
	AuthDropTempAuthKeys(context.Context, *TLAuthDropTempAuthKeys) (*Bool, error)
	AuthCheckRecoveryPassword(context.Context, *TLAuthCheckRecoveryPassword) (*Bool, error)
	AccountResetPassword(context.Context, *TLAccountResetPassword) (*Account_ResetPasswordResult, error)
	AccountSetAuthorizationTTL(context.Context, *TLAccountSetAuthorizationTTL) (*Bool, error)
	AccountChangeAuthorizationSettings(context.Context, *TLAccountChangeAuthorizationSettings) (*Bool, error)
	AuthLogOut5717DA40(context.Context, *TLAuthLogOut5717DA40) (*Bool, error)
	AuthToggleBan(context.Context, *TLAuthToggleBan) (*PredefinedUser, error)
}

// UnimplementedRPCAuthorizationServer can be embedded to have forward compatible implementations.
type UnimplementedRPCAuthorizationServer struct {
}

func (*UnimplementedRPCAuthorizationServer) AuthSendCode(ctx context.Context, req *TLAuthSendCode) (*Auth_SentCode, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthSendCode not implemented")
}
func (*UnimplementedRPCAuthorizationServer) AuthSignUp(ctx context.Context, req *TLAuthSignUp) (*Auth_Authorization, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthSignUp not implemented")
}
func (*UnimplementedRPCAuthorizationServer) AuthSignIn(ctx context.Context, req *TLAuthSignIn) (*Auth_Authorization, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthSignIn not implemented")
}
func (*UnimplementedRPCAuthorizationServer) AuthLogOut3E72BA19(ctx context.Context, req *TLAuthLogOut3E72BA19) (*Auth_LoggedOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthLogOut3E72BA19 not implemented")
}
func (*UnimplementedRPCAuthorizationServer) AuthResetAuthorizations(ctx context.Context, req *TLAuthResetAuthorizations) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthResetAuthorizations not implemented")
}
func (*UnimplementedRPCAuthorizationServer) AuthExportAuthorization(ctx context.Context, req *TLAuthExportAuthorization) (*Auth_ExportedAuthorization, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthExportAuthorization not implemented")
}
func (*UnimplementedRPCAuthorizationServer) AuthImportAuthorization(ctx context.Context, req *TLAuthImportAuthorization) (*Auth_Authorization, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthImportAuthorization not implemented")
}
func (*UnimplementedRPCAuthorizationServer) AuthBindTempAuthKey(ctx context.Context, req *TLAuthBindTempAuthKey) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthBindTempAuthKey not implemented")
}
func (*UnimplementedRPCAuthorizationServer) AuthImportBotAuthorization(ctx context.Context, req *TLAuthImportBotAuthorization) (*Auth_Authorization, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthImportBotAuthorization not implemented")
}
func (*UnimplementedRPCAuthorizationServer) AuthCheckPassword(ctx context.Context, req *TLAuthCheckPassword) (*Auth_Authorization, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthCheckPassword not implemented")
}
func (*UnimplementedRPCAuthorizationServer) AuthRequestPasswordRecovery(ctx context.Context, req *TLAuthRequestPasswordRecovery) (*Auth_PasswordRecovery, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthRequestPasswordRecovery not implemented")
}
func (*UnimplementedRPCAuthorizationServer) AuthRecoverPassword(ctx context.Context, req *TLAuthRecoverPassword) (*Auth_Authorization, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthRecoverPassword not implemented")
}
func (*UnimplementedRPCAuthorizationServer) AuthResendCode(ctx context.Context, req *TLAuthResendCode) (*Auth_SentCode, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthResendCode not implemented")
}
func (*UnimplementedRPCAuthorizationServer) AuthCancelCode(ctx context.Context, req *TLAuthCancelCode) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthCancelCode not implemented")
}
func (*UnimplementedRPCAuthorizationServer) AuthDropTempAuthKeys(ctx context.Context, req *TLAuthDropTempAuthKeys) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthDropTempAuthKeys not implemented")
}
func (*UnimplementedRPCAuthorizationServer) AuthCheckRecoveryPassword(ctx context.Context, req *TLAuthCheckRecoveryPassword) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthCheckRecoveryPassword not implemented")
}
func (*UnimplementedRPCAuthorizationServer) AccountResetPassword(ctx context.Context, req *TLAccountResetPassword) (*Account_ResetPasswordResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountResetPassword not implemented")
}
func (*UnimplementedRPCAuthorizationServer) AccountSetAuthorizationTTL(ctx context.Context, req *TLAccountSetAuthorizationTTL) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountSetAuthorizationTTL not implemented")
}
func (*UnimplementedRPCAuthorizationServer) AccountChangeAuthorizationSettings(ctx context.Context, req *TLAccountChangeAuthorizationSettings) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountChangeAuthorizationSettings not implemented")
}
func (*UnimplementedRPCAuthorizationServer) AuthLogOut5717DA40(ctx context.Context, req *TLAuthLogOut5717DA40) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthLogOut5717DA40 not implemented")
}
func (*UnimplementedRPCAuthorizationServer) AuthToggleBan(ctx context.Context, req *TLAuthToggleBan) (*PredefinedUser, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthToggleBan not implemented")
}

func RegisterRPCAuthorizationServer(s *grpc.Server, srv RPCAuthorizationServer) {
	s.RegisterService(&_RPCAuthorization_serviceDesc, srv)
}

func _RPCAuthorization_AuthSendCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthSendCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).AuthSendCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuthorization/AuthSendCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).AuthSendCode(ctx, req.(*TLAuthSendCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_AuthSignUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthSignUp)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).AuthSignUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuthorization/AuthSignUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).AuthSignUp(ctx, req.(*TLAuthSignUp))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_AuthSignIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthSignIn)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).AuthSignIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuthorization/AuthSignIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).AuthSignIn(ctx, req.(*TLAuthSignIn))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_AuthLogOut3E72BA19_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthLogOut3E72BA19)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).AuthLogOut3E72BA19(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuthorization/AuthLogOut3E72BA19",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).AuthLogOut3E72BA19(ctx, req.(*TLAuthLogOut3E72BA19))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_AuthResetAuthorizations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthResetAuthorizations)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).AuthResetAuthorizations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuthorization/AuthResetAuthorizations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).AuthResetAuthorizations(ctx, req.(*TLAuthResetAuthorizations))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_AuthExportAuthorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthExportAuthorization)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).AuthExportAuthorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuthorization/AuthExportAuthorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).AuthExportAuthorization(ctx, req.(*TLAuthExportAuthorization))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_AuthImportAuthorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthImportAuthorization)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).AuthImportAuthorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuthorization/AuthImportAuthorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).AuthImportAuthorization(ctx, req.(*TLAuthImportAuthorization))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_AuthBindTempAuthKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthBindTempAuthKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).AuthBindTempAuthKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuthorization/AuthBindTempAuthKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).AuthBindTempAuthKey(ctx, req.(*TLAuthBindTempAuthKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_AuthImportBotAuthorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthImportBotAuthorization)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).AuthImportBotAuthorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuthorization/AuthImportBotAuthorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).AuthImportBotAuthorization(ctx, req.(*TLAuthImportBotAuthorization))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_AuthCheckPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthCheckPassword)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).AuthCheckPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuthorization/AuthCheckPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).AuthCheckPassword(ctx, req.(*TLAuthCheckPassword))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_AuthRequestPasswordRecovery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthRequestPasswordRecovery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).AuthRequestPasswordRecovery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuthorization/AuthRequestPasswordRecovery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).AuthRequestPasswordRecovery(ctx, req.(*TLAuthRequestPasswordRecovery))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_AuthRecoverPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthRecoverPassword)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).AuthRecoverPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuthorization/AuthRecoverPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).AuthRecoverPassword(ctx, req.(*TLAuthRecoverPassword))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_AuthResendCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthResendCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).AuthResendCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuthorization/AuthResendCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).AuthResendCode(ctx, req.(*TLAuthResendCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_AuthCancelCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthCancelCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).AuthCancelCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuthorization/AuthCancelCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).AuthCancelCode(ctx, req.(*TLAuthCancelCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_AuthDropTempAuthKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthDropTempAuthKeys)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).AuthDropTempAuthKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuthorization/AuthDropTempAuthKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).AuthDropTempAuthKeys(ctx, req.(*TLAuthDropTempAuthKeys))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_AuthCheckRecoveryPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthCheckRecoveryPassword)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).AuthCheckRecoveryPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuthorization/AuthCheckRecoveryPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).AuthCheckRecoveryPassword(ctx, req.(*TLAuthCheckRecoveryPassword))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_AccountResetPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountResetPassword)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).AccountResetPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuthorization/AccountResetPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).AccountResetPassword(ctx, req.(*TLAccountResetPassword))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_AccountSetAuthorizationTTL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSetAuthorizationTTL)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).AccountSetAuthorizationTTL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuthorization/AccountSetAuthorizationTTL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).AccountSetAuthorizationTTL(ctx, req.(*TLAccountSetAuthorizationTTL))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_AccountChangeAuthorizationSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountChangeAuthorizationSettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).AccountChangeAuthorizationSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuthorization/AccountChangeAuthorizationSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).AccountChangeAuthorizationSettings(ctx, req.(*TLAccountChangeAuthorizationSettings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_AuthLogOut5717DA40_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthLogOut5717DA40)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).AuthLogOut5717DA40(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuthorization/AuthLogOut5717DA40",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).AuthLogOut5717DA40(ctx, req.(*TLAuthLogOut5717DA40))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAuthorization_AuthToggleBan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAuthToggleBan)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAuthorizationServer).AuthToggleBan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAuthorization/AuthToggleBan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAuthorizationServer).AuthToggleBan(ctx, req.(*TLAuthToggleBan))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCAuthorization_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCAuthorization",
	HandlerType: (*RPCAuthorizationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "auth_sendCode",
			Handler:    _RPCAuthorization_AuthSendCode_Handler,
		},
		{
			MethodName: "auth_signUp",
			Handler:    _RPCAuthorization_AuthSignUp_Handler,
		},
		{
			MethodName: "auth_signIn",
			Handler:    _RPCAuthorization_AuthSignIn_Handler,
		},
		{
			MethodName: "auth_logOut3E72BA19",
			Handler:    _RPCAuthorization_AuthLogOut3E72BA19_Handler,
		},
		{
			MethodName: "auth_resetAuthorizations",
			Handler:    _RPCAuthorization_AuthResetAuthorizations_Handler,
		},
		{
			MethodName: "auth_exportAuthorization",
			Handler:    _RPCAuthorization_AuthExportAuthorization_Handler,
		},
		{
			MethodName: "auth_importAuthorization",
			Handler:    _RPCAuthorization_AuthImportAuthorization_Handler,
		},
		{
			MethodName: "auth_bindTempAuthKey",
			Handler:    _RPCAuthorization_AuthBindTempAuthKey_Handler,
		},
		{
			MethodName: "auth_importBotAuthorization",
			Handler:    _RPCAuthorization_AuthImportBotAuthorization_Handler,
		},
		{
			MethodName: "auth_checkPassword",
			Handler:    _RPCAuthorization_AuthCheckPassword_Handler,
		},
		{
			MethodName: "auth_requestPasswordRecovery",
			Handler:    _RPCAuthorization_AuthRequestPasswordRecovery_Handler,
		},
		{
			MethodName: "auth_recoverPassword",
			Handler:    _RPCAuthorization_AuthRecoverPassword_Handler,
		},
		{
			MethodName: "auth_resendCode",
			Handler:    _RPCAuthorization_AuthResendCode_Handler,
		},
		{
			MethodName: "auth_cancelCode",
			Handler:    _RPCAuthorization_AuthCancelCode_Handler,
		},
		{
			MethodName: "auth_dropTempAuthKeys",
			Handler:    _RPCAuthorization_AuthDropTempAuthKeys_Handler,
		},
		{
			MethodName: "auth_checkRecoveryPassword",
			Handler:    _RPCAuthorization_AuthCheckRecoveryPassword_Handler,
		},
		{
			MethodName: "account_resetPassword",
			Handler:    _RPCAuthorization_AccountResetPassword_Handler,
		},
		{
			MethodName: "account_setAuthorizationTTL",
			Handler:    _RPCAuthorization_AccountSetAuthorizationTTL_Handler,
		},
		{
			MethodName: "account_changeAuthorizationSettings",
			Handler:    _RPCAuthorization_AccountChangeAuthorizationSettings_Handler,
		},
		{
			MethodName: "auth_logOut5717DA40",
			Handler:    _RPCAuthorization_AuthLogOut5717DA40_Handler,
		},
		{
			MethodName: "auth_toggleBan",
			Handler:    _RPCAuthorization_AuthToggleBan_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCAccountClient is the client API for RPCAccount service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCAccountClient interface {
	AccountUpdateProfile(ctx context.Context, in *TLAccountUpdateProfile, opts ...grpc.CallOption) (*User, error)
	AccountUpdateStatus(ctx context.Context, in *TLAccountUpdateStatus, opts ...grpc.CallOption) (*Bool, error)
	AccountGetPrivacy(ctx context.Context, in *TLAccountGetPrivacy, opts ...grpc.CallOption) (*Account_PrivacyRules, error)
	AccountSetPrivacy(ctx context.Context, in *TLAccountSetPrivacy, opts ...grpc.CallOption) (*Account_PrivacyRules, error)
	AccountDeleteAccount(ctx context.Context, in *TLAccountDeleteAccount, opts ...grpc.CallOption) (*Bool, error)
	AccountGetAccountTTL(ctx context.Context, in *TLAccountGetAccountTTL, opts ...grpc.CallOption) (*AccountDaysTTL, error)
	AccountSetAccountTTL(ctx context.Context, in *TLAccountSetAccountTTL, opts ...grpc.CallOption) (*Bool, error)
	AccountSendChangePhoneCode(ctx context.Context, in *TLAccountSendChangePhoneCode, opts ...grpc.CallOption) (*Auth_SentCode, error)
	AccountChangePhone(ctx context.Context, in *TLAccountChangePhone, opts ...grpc.CallOption) (*User, error)
	AccountResetAuthorization(ctx context.Context, in *TLAccountResetAuthorization, opts ...grpc.CallOption) (*Bool, error)
	AccountSendConfirmPhoneCode(ctx context.Context, in *TLAccountSendConfirmPhoneCode, opts ...grpc.CallOption) (*Auth_SentCode, error)
	AccountConfirmPhone(ctx context.Context, in *TLAccountConfirmPhone, opts ...grpc.CallOption) (*Bool, error)
	AccountGetGlobalPrivacySettings(ctx context.Context, in *TLAccountGetGlobalPrivacySettings, opts ...grpc.CallOption) (*GlobalPrivacySettings, error)
	AccountSetGlobalPrivacySettings(ctx context.Context, in *TLAccountSetGlobalPrivacySettings, opts ...grpc.CallOption) (*GlobalPrivacySettings, error)
	AccountUpdateVerified(ctx context.Context, in *TLAccountUpdateVerified, opts ...grpc.CallOption) (*User, error)
}

type rPCAccountClient struct {
	cc *grpc.ClientConn
}

func NewRPCAccountClient(cc *grpc.ClientConn) RPCAccountClient {
	return &rPCAccountClient{cc}
}

func (c *rPCAccountClient) AccountUpdateProfile(ctx context.Context, in *TLAccountUpdateProfile, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_updateProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountUpdateStatus(ctx context.Context, in *TLAccountUpdateStatus, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_updateStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountGetPrivacy(ctx context.Context, in *TLAccountGetPrivacy, opts ...grpc.CallOption) (*Account_PrivacyRules, error) {
	out := new(Account_PrivacyRules)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_getPrivacy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountSetPrivacy(ctx context.Context, in *TLAccountSetPrivacy, opts ...grpc.CallOption) (*Account_PrivacyRules, error) {
	out := new(Account_PrivacyRules)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_setPrivacy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountDeleteAccount(ctx context.Context, in *TLAccountDeleteAccount, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_deleteAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountGetAccountTTL(ctx context.Context, in *TLAccountGetAccountTTL, opts ...grpc.CallOption) (*AccountDaysTTL, error) {
	out := new(AccountDaysTTL)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_getAccountTTL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountSetAccountTTL(ctx context.Context, in *TLAccountSetAccountTTL, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_setAccountTTL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountSendChangePhoneCode(ctx context.Context, in *TLAccountSendChangePhoneCode, opts ...grpc.CallOption) (*Auth_SentCode, error) {
	out := new(Auth_SentCode)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_sendChangePhoneCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountChangePhone(ctx context.Context, in *TLAccountChangePhone, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_changePhone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountResetAuthorization(ctx context.Context, in *TLAccountResetAuthorization, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_resetAuthorization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountSendConfirmPhoneCode(ctx context.Context, in *TLAccountSendConfirmPhoneCode, opts ...grpc.CallOption) (*Auth_SentCode, error) {
	out := new(Auth_SentCode)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_sendConfirmPhoneCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountConfirmPhone(ctx context.Context, in *TLAccountConfirmPhone, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_confirmPhone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountGetGlobalPrivacySettings(ctx context.Context, in *TLAccountGetGlobalPrivacySettings, opts ...grpc.CallOption) (*GlobalPrivacySettings, error) {
	out := new(GlobalPrivacySettings)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_getGlobalPrivacySettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountSetGlobalPrivacySettings(ctx context.Context, in *TLAccountSetGlobalPrivacySettings, opts ...grpc.CallOption) (*GlobalPrivacySettings, error) {
	out := new(GlobalPrivacySettings)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_setGlobalPrivacySettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAccountClient) AccountUpdateVerified(ctx context.Context, in *TLAccountUpdateVerified, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAccount/account_updateVerified", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCAccountServer is the server API for RPCAccount service.
type RPCAccountServer interface {
	AccountUpdateProfile(context.Context, *TLAccountUpdateProfile) (*User, error)
	AccountUpdateStatus(context.Context, *TLAccountUpdateStatus) (*Bool, error)
	AccountGetPrivacy(context.Context, *TLAccountGetPrivacy) (*Account_PrivacyRules, error)
	AccountSetPrivacy(context.Context, *TLAccountSetPrivacy) (*Account_PrivacyRules, error)
	AccountDeleteAccount(context.Context, *TLAccountDeleteAccount) (*Bool, error)
	AccountGetAccountTTL(context.Context, *TLAccountGetAccountTTL) (*AccountDaysTTL, error)
	AccountSetAccountTTL(context.Context, *TLAccountSetAccountTTL) (*Bool, error)
	AccountSendChangePhoneCode(context.Context, *TLAccountSendChangePhoneCode) (*Auth_SentCode, error)
	AccountChangePhone(context.Context, *TLAccountChangePhone) (*User, error)
	AccountResetAuthorization(context.Context, *TLAccountResetAuthorization) (*Bool, error)
	AccountSendConfirmPhoneCode(context.Context, *TLAccountSendConfirmPhoneCode) (*Auth_SentCode, error)
	AccountConfirmPhone(context.Context, *TLAccountConfirmPhone) (*Bool, error)
	AccountGetGlobalPrivacySettings(context.Context, *TLAccountGetGlobalPrivacySettings) (*GlobalPrivacySettings, error)
	AccountSetGlobalPrivacySettings(context.Context, *TLAccountSetGlobalPrivacySettings) (*GlobalPrivacySettings, error)
	AccountUpdateVerified(context.Context, *TLAccountUpdateVerified) (*User, error)
}

// UnimplementedRPCAccountServer can be embedded to have forward compatible implementations.
type UnimplementedRPCAccountServer struct {
}

func (*UnimplementedRPCAccountServer) AccountUpdateProfile(ctx context.Context, req *TLAccountUpdateProfile) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountUpdateProfile not implemented")
}
func (*UnimplementedRPCAccountServer) AccountUpdateStatus(ctx context.Context, req *TLAccountUpdateStatus) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountUpdateStatus not implemented")
}
func (*UnimplementedRPCAccountServer) AccountGetPrivacy(ctx context.Context, req *TLAccountGetPrivacy) (*Account_PrivacyRules, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountGetPrivacy not implemented")
}
func (*UnimplementedRPCAccountServer) AccountSetPrivacy(ctx context.Context, req *TLAccountSetPrivacy) (*Account_PrivacyRules, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountSetPrivacy not implemented")
}
func (*UnimplementedRPCAccountServer) AccountDeleteAccount(ctx context.Context, req *TLAccountDeleteAccount) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountDeleteAccount not implemented")
}
func (*UnimplementedRPCAccountServer) AccountGetAccountTTL(ctx context.Context, req *TLAccountGetAccountTTL) (*AccountDaysTTL, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountGetAccountTTL not implemented")
}
func (*UnimplementedRPCAccountServer) AccountSetAccountTTL(ctx context.Context, req *TLAccountSetAccountTTL) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountSetAccountTTL not implemented")
}
func (*UnimplementedRPCAccountServer) AccountSendChangePhoneCode(ctx context.Context, req *TLAccountSendChangePhoneCode) (*Auth_SentCode, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountSendChangePhoneCode not implemented")
}
func (*UnimplementedRPCAccountServer) AccountChangePhone(ctx context.Context, req *TLAccountChangePhone) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountChangePhone not implemented")
}
func (*UnimplementedRPCAccountServer) AccountResetAuthorization(ctx context.Context, req *TLAccountResetAuthorization) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountResetAuthorization not implemented")
}
func (*UnimplementedRPCAccountServer) AccountSendConfirmPhoneCode(ctx context.Context, req *TLAccountSendConfirmPhoneCode) (*Auth_SentCode, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountSendConfirmPhoneCode not implemented")
}
func (*UnimplementedRPCAccountServer) AccountConfirmPhone(ctx context.Context, req *TLAccountConfirmPhone) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountConfirmPhone not implemented")
}
func (*UnimplementedRPCAccountServer) AccountGetGlobalPrivacySettings(ctx context.Context, req *TLAccountGetGlobalPrivacySettings) (*GlobalPrivacySettings, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountGetGlobalPrivacySettings not implemented")
}
func (*UnimplementedRPCAccountServer) AccountSetGlobalPrivacySettings(ctx context.Context, req *TLAccountSetGlobalPrivacySettings) (*GlobalPrivacySettings, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountSetGlobalPrivacySettings not implemented")
}
func (*UnimplementedRPCAccountServer) AccountUpdateVerified(ctx context.Context, req *TLAccountUpdateVerified) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountUpdateVerified not implemented")
}

func RegisterRPCAccountServer(s *grpc.Server, srv RPCAccountServer) {
	s.RegisterService(&_RPCAccount_serviceDesc, srv)
}

func _RPCAccount_AccountUpdateProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountUpdateProfile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountUpdateProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountUpdateProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountUpdateProfile(ctx, req.(*TLAccountUpdateProfile))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountUpdateStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountUpdateStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountUpdateStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountUpdateStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountUpdateStatus(ctx, req.(*TLAccountUpdateStatus))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountGetPrivacy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetPrivacy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountGetPrivacy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountGetPrivacy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountGetPrivacy(ctx, req.(*TLAccountGetPrivacy))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountSetPrivacy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSetPrivacy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountSetPrivacy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountSetPrivacy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountSetPrivacy(ctx, req.(*TLAccountSetPrivacy))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountDeleteAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountDeleteAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountDeleteAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountDeleteAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountDeleteAccount(ctx, req.(*TLAccountDeleteAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountGetAccountTTL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetAccountTTL)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountGetAccountTTL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountGetAccountTTL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountGetAccountTTL(ctx, req.(*TLAccountGetAccountTTL))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountSetAccountTTL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSetAccountTTL)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountSetAccountTTL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountSetAccountTTL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountSetAccountTTL(ctx, req.(*TLAccountSetAccountTTL))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountSendChangePhoneCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSendChangePhoneCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountSendChangePhoneCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountSendChangePhoneCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountSendChangePhoneCode(ctx, req.(*TLAccountSendChangePhoneCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountChangePhone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountChangePhone)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountChangePhone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountChangePhone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountChangePhone(ctx, req.(*TLAccountChangePhone))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountResetAuthorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountResetAuthorization)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountResetAuthorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountResetAuthorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountResetAuthorization(ctx, req.(*TLAccountResetAuthorization))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountSendConfirmPhoneCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSendConfirmPhoneCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountSendConfirmPhoneCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountSendConfirmPhoneCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountSendConfirmPhoneCode(ctx, req.(*TLAccountSendConfirmPhoneCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountConfirmPhone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountConfirmPhone)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountConfirmPhone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountConfirmPhone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountConfirmPhone(ctx, req.(*TLAccountConfirmPhone))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountGetGlobalPrivacySettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetGlobalPrivacySettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountGetGlobalPrivacySettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountGetGlobalPrivacySettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountGetGlobalPrivacySettings(ctx, req.(*TLAccountGetGlobalPrivacySettings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountSetGlobalPrivacySettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSetGlobalPrivacySettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountSetGlobalPrivacySettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountSetGlobalPrivacySettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountSetGlobalPrivacySettings(ctx, req.(*TLAccountSetGlobalPrivacySettings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAccount_AccountUpdateVerified_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountUpdateVerified)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAccountServer).AccountUpdateVerified(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAccount/AccountUpdateVerified",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAccountServer).AccountUpdateVerified(ctx, req.(*TLAccountUpdateVerified))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCAccount_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCAccount",
	HandlerType: (*RPCAccountServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "account_updateProfile",
			Handler:    _RPCAccount_AccountUpdateProfile_Handler,
		},
		{
			MethodName: "account_updateStatus",
			Handler:    _RPCAccount_AccountUpdateStatus_Handler,
		},
		{
			MethodName: "account_getPrivacy",
			Handler:    _RPCAccount_AccountGetPrivacy_Handler,
		},
		{
			MethodName: "account_setPrivacy",
			Handler:    _RPCAccount_AccountSetPrivacy_Handler,
		},
		{
			MethodName: "account_deleteAccount",
			Handler:    _RPCAccount_AccountDeleteAccount_Handler,
		},
		{
			MethodName: "account_getAccountTTL",
			Handler:    _RPCAccount_AccountGetAccountTTL_Handler,
		},
		{
			MethodName: "account_setAccountTTL",
			Handler:    _RPCAccount_AccountSetAccountTTL_Handler,
		},
		{
			MethodName: "account_sendChangePhoneCode",
			Handler:    _RPCAccount_AccountSendChangePhoneCode_Handler,
		},
		{
			MethodName: "account_changePhone",
			Handler:    _RPCAccount_AccountChangePhone_Handler,
		},
		{
			MethodName: "account_resetAuthorization",
			Handler:    _RPCAccount_AccountResetAuthorization_Handler,
		},
		{
			MethodName: "account_sendConfirmPhoneCode",
			Handler:    _RPCAccount_AccountSendConfirmPhoneCode_Handler,
		},
		{
			MethodName: "account_confirmPhone",
			Handler:    _RPCAccount_AccountConfirmPhone_Handler,
		},
		{
			MethodName: "account_getGlobalPrivacySettings",
			Handler:    _RPCAccount_AccountGetGlobalPrivacySettings_Handler,
		},
		{
			MethodName: "account_setGlobalPrivacySettings",
			Handler:    _RPCAccount_AccountSetGlobalPrivacySettings_Handler,
		},
		{
			MethodName: "account_updateVerified",
			Handler:    _RPCAccount_AccountUpdateVerified_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCTwoFaClient is the client API for RPCTwoFa service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCTwoFaClient interface {
	AccountGetPassword(ctx context.Context, in *TLAccountGetPassword, opts ...grpc.CallOption) (*Account_Password, error)
	AccountGetPasswordSettings(ctx context.Context, in *TLAccountGetPasswordSettings, opts ...grpc.CallOption) (*Account_PasswordSettings, error)
	AccountUpdatePasswordSettings(ctx context.Context, in *TLAccountUpdatePasswordSettings, opts ...grpc.CallOption) (*Bool, error)
	AccountConfirmPasswordEmail(ctx context.Context, in *TLAccountConfirmPasswordEmail, opts ...grpc.CallOption) (*Bool, error)
	AccountResendPasswordEmail(ctx context.Context, in *TLAccountResendPasswordEmail, opts ...grpc.CallOption) (*Bool, error)
	AccountCancelPasswordEmail(ctx context.Context, in *TLAccountCancelPasswordEmail, opts ...grpc.CallOption) (*Bool, error)
	AccountDeclinePasswordReset(ctx context.Context, in *TLAccountDeclinePasswordReset, opts ...grpc.CallOption) (*Bool, error)
}

type rPCTwoFaClient struct {
	cc *grpc.ClientConn
}

func NewRPCTwoFaClient(cc *grpc.ClientConn) RPCTwoFaClient {
	return &rPCTwoFaClient{cc}
}

func (c *rPCTwoFaClient) AccountGetPassword(ctx context.Context, in *TLAccountGetPassword, opts ...grpc.CallOption) (*Account_Password, error) {
	out := new(Account_Password)
	err := c.cc.Invoke(ctx, "/mtproto.RPCTwoFa/account_getPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCTwoFaClient) AccountGetPasswordSettings(ctx context.Context, in *TLAccountGetPasswordSettings, opts ...grpc.CallOption) (*Account_PasswordSettings, error) {
	out := new(Account_PasswordSettings)
	err := c.cc.Invoke(ctx, "/mtproto.RPCTwoFa/account_getPasswordSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCTwoFaClient) AccountUpdatePasswordSettings(ctx context.Context, in *TLAccountUpdatePasswordSettings, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCTwoFa/account_updatePasswordSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCTwoFaClient) AccountConfirmPasswordEmail(ctx context.Context, in *TLAccountConfirmPasswordEmail, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCTwoFa/account_confirmPasswordEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCTwoFaClient) AccountResendPasswordEmail(ctx context.Context, in *TLAccountResendPasswordEmail, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCTwoFa/account_resendPasswordEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCTwoFaClient) AccountCancelPasswordEmail(ctx context.Context, in *TLAccountCancelPasswordEmail, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCTwoFa/account_cancelPasswordEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCTwoFaClient) AccountDeclinePasswordReset(ctx context.Context, in *TLAccountDeclinePasswordReset, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCTwoFa/account_declinePasswordReset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCTwoFaServer is the server API for RPCTwoFa service.
type RPCTwoFaServer interface {
	AccountGetPassword(context.Context, *TLAccountGetPassword) (*Account_Password, error)
	AccountGetPasswordSettings(context.Context, *TLAccountGetPasswordSettings) (*Account_PasswordSettings, error)
	AccountUpdatePasswordSettings(context.Context, *TLAccountUpdatePasswordSettings) (*Bool, error)
	AccountConfirmPasswordEmail(context.Context, *TLAccountConfirmPasswordEmail) (*Bool, error)
	AccountResendPasswordEmail(context.Context, *TLAccountResendPasswordEmail) (*Bool, error)
	AccountCancelPasswordEmail(context.Context, *TLAccountCancelPasswordEmail) (*Bool, error)
	AccountDeclinePasswordReset(context.Context, *TLAccountDeclinePasswordReset) (*Bool, error)
}

// UnimplementedRPCTwoFaServer can be embedded to have forward compatible implementations.
type UnimplementedRPCTwoFaServer struct {
}

func (*UnimplementedRPCTwoFaServer) AccountGetPassword(ctx context.Context, req *TLAccountGetPassword) (*Account_Password, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountGetPassword not implemented")
}
func (*UnimplementedRPCTwoFaServer) AccountGetPasswordSettings(ctx context.Context, req *TLAccountGetPasswordSettings) (*Account_PasswordSettings, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountGetPasswordSettings not implemented")
}
func (*UnimplementedRPCTwoFaServer) AccountUpdatePasswordSettings(ctx context.Context, req *TLAccountUpdatePasswordSettings) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountUpdatePasswordSettings not implemented")
}
func (*UnimplementedRPCTwoFaServer) AccountConfirmPasswordEmail(ctx context.Context, req *TLAccountConfirmPasswordEmail) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountConfirmPasswordEmail not implemented")
}
func (*UnimplementedRPCTwoFaServer) AccountResendPasswordEmail(ctx context.Context, req *TLAccountResendPasswordEmail) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountResendPasswordEmail not implemented")
}
func (*UnimplementedRPCTwoFaServer) AccountCancelPasswordEmail(ctx context.Context, req *TLAccountCancelPasswordEmail) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountCancelPasswordEmail not implemented")
}
func (*UnimplementedRPCTwoFaServer) AccountDeclinePasswordReset(ctx context.Context, req *TLAccountDeclinePasswordReset) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountDeclinePasswordReset not implemented")
}

func RegisterRPCTwoFaServer(s *grpc.Server, srv RPCTwoFaServer) {
	s.RegisterService(&_RPCTwoFa_serviceDesc, srv)
}

func _RPCTwoFa_AccountGetPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetPassword)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCTwoFaServer).AccountGetPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCTwoFa/AccountGetPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCTwoFaServer).AccountGetPassword(ctx, req.(*TLAccountGetPassword))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCTwoFa_AccountGetPasswordSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetPasswordSettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCTwoFaServer).AccountGetPasswordSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCTwoFa/AccountGetPasswordSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCTwoFaServer).AccountGetPasswordSettings(ctx, req.(*TLAccountGetPasswordSettings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCTwoFa_AccountUpdatePasswordSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountUpdatePasswordSettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCTwoFaServer).AccountUpdatePasswordSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCTwoFa/AccountUpdatePasswordSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCTwoFaServer).AccountUpdatePasswordSettings(ctx, req.(*TLAccountUpdatePasswordSettings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCTwoFa_AccountConfirmPasswordEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountConfirmPasswordEmail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCTwoFaServer).AccountConfirmPasswordEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCTwoFa/AccountConfirmPasswordEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCTwoFaServer).AccountConfirmPasswordEmail(ctx, req.(*TLAccountConfirmPasswordEmail))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCTwoFa_AccountResendPasswordEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountResendPasswordEmail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCTwoFaServer).AccountResendPasswordEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCTwoFa/AccountResendPasswordEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCTwoFaServer).AccountResendPasswordEmail(ctx, req.(*TLAccountResendPasswordEmail))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCTwoFa_AccountCancelPasswordEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountCancelPasswordEmail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCTwoFaServer).AccountCancelPasswordEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCTwoFa/AccountCancelPasswordEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCTwoFaServer).AccountCancelPasswordEmail(ctx, req.(*TLAccountCancelPasswordEmail))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCTwoFa_AccountDeclinePasswordReset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountDeclinePasswordReset)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCTwoFaServer).AccountDeclinePasswordReset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCTwoFa/AccountDeclinePasswordReset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCTwoFaServer).AccountDeclinePasswordReset(ctx, req.(*TLAccountDeclinePasswordReset))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCTwoFa_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCTwoFa",
	HandlerType: (*RPCTwoFaServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "account_getPassword",
			Handler:    _RPCTwoFa_AccountGetPassword_Handler,
		},
		{
			MethodName: "account_getPasswordSettings",
			Handler:    _RPCTwoFa_AccountGetPasswordSettings_Handler,
		},
		{
			MethodName: "account_updatePasswordSettings",
			Handler:    _RPCTwoFa_AccountUpdatePasswordSettings_Handler,
		},
		{
			MethodName: "account_confirmPasswordEmail",
			Handler:    _RPCTwoFa_AccountConfirmPasswordEmail_Handler,
		},
		{
			MethodName: "account_resendPasswordEmail",
			Handler:    _RPCTwoFa_AccountResendPasswordEmail_Handler,
		},
		{
			MethodName: "account_cancelPasswordEmail",
			Handler:    _RPCTwoFa_AccountCancelPasswordEmail_Handler,
		},
		{
			MethodName: "account_declinePasswordReset",
			Handler:    _RPCTwoFa_AccountDeclinePasswordReset_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCPhotosClient is the client API for RPCPhotos service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCPhotosClient interface {
	PhotosUpdateProfilePhoto(ctx context.Context, in *TLPhotosUpdateProfilePhoto, opts ...grpc.CallOption) (*Photos_Photo, error)
	PhotosUploadProfilePhoto(ctx context.Context, in *TLPhotosUploadProfilePhoto, opts ...grpc.CallOption) (*Photos_Photo, error)
	PhotosDeletePhotos(ctx context.Context, in *TLPhotosDeletePhotos, opts ...grpc.CallOption) (*Vector_Long, error)
	PhotosGetUserPhotos(ctx context.Context, in *TLPhotosGetUserPhotos, opts ...grpc.CallOption) (*Photos_Photos, error)
}

type rPCPhotosClient struct {
	cc *grpc.ClientConn
}

func NewRPCPhotosClient(cc *grpc.ClientConn) RPCPhotosClient {
	return &rPCPhotosClient{cc}
}

func (c *rPCPhotosClient) PhotosUpdateProfilePhoto(ctx context.Context, in *TLPhotosUpdateProfilePhoto, opts ...grpc.CallOption) (*Photos_Photo, error) {
	out := new(Photos_Photo)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPhotos/photos_updateProfilePhoto", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPhotosClient) PhotosUploadProfilePhoto(ctx context.Context, in *TLPhotosUploadProfilePhoto, opts ...grpc.CallOption) (*Photos_Photo, error) {
	out := new(Photos_Photo)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPhotos/photos_uploadProfilePhoto", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPhotosClient) PhotosDeletePhotos(ctx context.Context, in *TLPhotosDeletePhotos, opts ...grpc.CallOption) (*Vector_Long, error) {
	out := new(Vector_Long)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPhotos/photos_deletePhotos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPhotosClient) PhotosGetUserPhotos(ctx context.Context, in *TLPhotosGetUserPhotos, opts ...grpc.CallOption) (*Photos_Photos, error) {
	out := new(Photos_Photos)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPhotos/photos_getUserPhotos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCPhotosServer is the server API for RPCPhotos service.
type RPCPhotosServer interface {
	PhotosUpdateProfilePhoto(context.Context, *TLPhotosUpdateProfilePhoto) (*Photos_Photo, error)
	PhotosUploadProfilePhoto(context.Context, *TLPhotosUploadProfilePhoto) (*Photos_Photo, error)
	PhotosDeletePhotos(context.Context, *TLPhotosDeletePhotos) (*Vector_Long, error)
	PhotosGetUserPhotos(context.Context, *TLPhotosGetUserPhotos) (*Photos_Photos, error)
}

// UnimplementedRPCPhotosServer can be embedded to have forward compatible implementations.
type UnimplementedRPCPhotosServer struct {
}

func (*UnimplementedRPCPhotosServer) PhotosUpdateProfilePhoto(ctx context.Context, req *TLPhotosUpdateProfilePhoto) (*Photos_Photo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhotosUpdateProfilePhoto not implemented")
}
func (*UnimplementedRPCPhotosServer) PhotosUploadProfilePhoto(ctx context.Context, req *TLPhotosUploadProfilePhoto) (*Photos_Photo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhotosUploadProfilePhoto not implemented")
}
func (*UnimplementedRPCPhotosServer) PhotosDeletePhotos(ctx context.Context, req *TLPhotosDeletePhotos) (*Vector_Long, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhotosDeletePhotos not implemented")
}
func (*UnimplementedRPCPhotosServer) PhotosGetUserPhotos(ctx context.Context, req *TLPhotosGetUserPhotos) (*Photos_Photos, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhotosGetUserPhotos not implemented")
}

func RegisterRPCPhotosServer(s *grpc.Server, srv RPCPhotosServer) {
	s.RegisterService(&_RPCPhotos_serviceDesc, srv)
}

func _RPCPhotos_PhotosUpdateProfilePhoto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhotosUpdateProfilePhoto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPhotosServer).PhotosUpdateProfilePhoto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPhotos/PhotosUpdateProfilePhoto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPhotosServer).PhotosUpdateProfilePhoto(ctx, req.(*TLPhotosUpdateProfilePhoto))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPhotos_PhotosUploadProfilePhoto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhotosUploadProfilePhoto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPhotosServer).PhotosUploadProfilePhoto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPhotos/PhotosUploadProfilePhoto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPhotosServer).PhotosUploadProfilePhoto(ctx, req.(*TLPhotosUploadProfilePhoto))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPhotos_PhotosDeletePhotos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhotosDeletePhotos)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPhotosServer).PhotosDeletePhotos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPhotos/PhotosDeletePhotos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPhotosServer).PhotosDeletePhotos(ctx, req.(*TLPhotosDeletePhotos))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPhotos_PhotosGetUserPhotos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhotosGetUserPhotos)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPhotosServer).PhotosGetUserPhotos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPhotos/PhotosGetUserPhotos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPhotosServer).PhotosGetUserPhotos(ctx, req.(*TLPhotosGetUserPhotos))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCPhotos_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCPhotos",
	HandlerType: (*RPCPhotosServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "photos_updateProfilePhoto",
			Handler:    _RPCPhotos_PhotosUpdateProfilePhoto_Handler,
		},
		{
			MethodName: "photos_uploadProfilePhoto",
			Handler:    _RPCPhotos_PhotosUploadProfilePhoto_Handler,
		},
		{
			MethodName: "photos_deletePhotos",
			Handler:    _RPCPhotos_PhotosDeletePhotos_Handler,
		},
		{
			MethodName: "photos_getUserPhotos",
			Handler:    _RPCPhotos_PhotosGetUserPhotos_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCReactionsClient is the client API for RPCReactions service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCReactionsClient interface {
	MessagesSendReaction(ctx context.Context, in *TLMessagesSendReaction, opts ...grpc.CallOption) (*Updates, error)
	MessagesGetMessagesReactions(ctx context.Context, in *TLMessagesGetMessagesReactions, opts ...grpc.CallOption) (*Updates, error)
	MessagesGetMessageReactionsList(ctx context.Context, in *TLMessagesGetMessageReactionsList, opts ...grpc.CallOption) (*Messages_MessageReactionsList, error)
	MessagesSetChatAvailableReactions(ctx context.Context, in *TLMessagesSetChatAvailableReactions, opts ...grpc.CallOption) (*Updates, error)
	MessagesGetAvailableReactions(ctx context.Context, in *TLMessagesGetAvailableReactions, opts ...grpc.CallOption) (*Messages_AvailableReactions, error)
	MessagesSetDefaultReaction(ctx context.Context, in *TLMessagesSetDefaultReaction, opts ...grpc.CallOption) (*Bool, error)
	MessagesGetUnreadReactions(ctx context.Context, in *TLMessagesGetUnreadReactions, opts ...grpc.CallOption) (*Messages_Messages, error)
	MessagesReadReactions(ctx context.Context, in *TLMessagesReadReactions, opts ...grpc.CallOption) (*Messages_AffectedHistory, error)
}

type rPCReactionsClient struct {
	cc *grpc.ClientConn
}

func NewRPCReactionsClient(cc *grpc.ClientConn) RPCReactionsClient {
	return &rPCReactionsClient{cc}
}

func (c *rPCReactionsClient) MessagesSendReaction(ctx context.Context, in *TLMessagesSendReaction, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCReactions/messages_sendReaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCReactionsClient) MessagesGetMessagesReactions(ctx context.Context, in *TLMessagesGetMessagesReactions, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCReactions/messages_getMessagesReactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCReactionsClient) MessagesGetMessageReactionsList(ctx context.Context, in *TLMessagesGetMessageReactionsList, opts ...grpc.CallOption) (*Messages_MessageReactionsList, error) {
	out := new(Messages_MessageReactionsList)
	err := c.cc.Invoke(ctx, "/mtproto.RPCReactions/messages_getMessageReactionsList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCReactionsClient) MessagesSetChatAvailableReactions(ctx context.Context, in *TLMessagesSetChatAvailableReactions, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCReactions/messages_setChatAvailableReactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCReactionsClient) MessagesGetAvailableReactions(ctx context.Context, in *TLMessagesGetAvailableReactions, opts ...grpc.CallOption) (*Messages_AvailableReactions, error) {
	out := new(Messages_AvailableReactions)
	err := c.cc.Invoke(ctx, "/mtproto.RPCReactions/messages_getAvailableReactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCReactionsClient) MessagesSetDefaultReaction(ctx context.Context, in *TLMessagesSetDefaultReaction, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCReactions/messages_setDefaultReaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCReactionsClient) MessagesGetUnreadReactions(ctx context.Context, in *TLMessagesGetUnreadReactions, opts ...grpc.CallOption) (*Messages_Messages, error) {
	out := new(Messages_Messages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCReactions/messages_getUnreadReactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCReactionsClient) MessagesReadReactions(ctx context.Context, in *TLMessagesReadReactions, opts ...grpc.CallOption) (*Messages_AffectedHistory, error) {
	out := new(Messages_AffectedHistory)
	err := c.cc.Invoke(ctx, "/mtproto.RPCReactions/messages_readReactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCReactionsServer is the server API for RPCReactions service.
type RPCReactionsServer interface {
	MessagesSendReaction(context.Context, *TLMessagesSendReaction) (*Updates, error)
	MessagesGetMessagesReactions(context.Context, *TLMessagesGetMessagesReactions) (*Updates, error)
	MessagesGetMessageReactionsList(context.Context, *TLMessagesGetMessageReactionsList) (*Messages_MessageReactionsList, error)
	MessagesSetChatAvailableReactions(context.Context, *TLMessagesSetChatAvailableReactions) (*Updates, error)
	MessagesGetAvailableReactions(context.Context, *TLMessagesGetAvailableReactions) (*Messages_AvailableReactions, error)
	MessagesSetDefaultReaction(context.Context, *TLMessagesSetDefaultReaction) (*Bool, error)
	MessagesGetUnreadReactions(context.Context, *TLMessagesGetUnreadReactions) (*Messages_Messages, error)
	MessagesReadReactions(context.Context, *TLMessagesReadReactions) (*Messages_AffectedHistory, error)
}

// UnimplementedRPCReactionsServer can be embedded to have forward compatible implementations.
type UnimplementedRPCReactionsServer struct {
}

func (*UnimplementedRPCReactionsServer) MessagesSendReaction(ctx context.Context, req *TLMessagesSendReaction) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSendReaction not implemented")
}
func (*UnimplementedRPCReactionsServer) MessagesGetMessagesReactions(ctx context.Context, req *TLMessagesGetMessagesReactions) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetMessagesReactions not implemented")
}
func (*UnimplementedRPCReactionsServer) MessagesGetMessageReactionsList(ctx context.Context, req *TLMessagesGetMessageReactionsList) (*Messages_MessageReactionsList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetMessageReactionsList not implemented")
}
func (*UnimplementedRPCReactionsServer) MessagesSetChatAvailableReactions(ctx context.Context, req *TLMessagesSetChatAvailableReactions) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSetChatAvailableReactions not implemented")
}
func (*UnimplementedRPCReactionsServer) MessagesGetAvailableReactions(ctx context.Context, req *TLMessagesGetAvailableReactions) (*Messages_AvailableReactions, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetAvailableReactions not implemented")
}
func (*UnimplementedRPCReactionsServer) MessagesSetDefaultReaction(ctx context.Context, req *TLMessagesSetDefaultReaction) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSetDefaultReaction not implemented")
}
func (*UnimplementedRPCReactionsServer) MessagesGetUnreadReactions(ctx context.Context, req *TLMessagesGetUnreadReactions) (*Messages_Messages, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetUnreadReactions not implemented")
}
func (*UnimplementedRPCReactionsServer) MessagesReadReactions(ctx context.Context, req *TLMessagesReadReactions) (*Messages_AffectedHistory, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesReadReactions not implemented")
}

func RegisterRPCReactionsServer(s *grpc.Server, srv RPCReactionsServer) {
	s.RegisterService(&_RPCReactions_serviceDesc, srv)
}

func _RPCReactions_MessagesSendReaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSendReaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCReactionsServer).MessagesSendReaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCReactions/MessagesSendReaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCReactionsServer).MessagesSendReaction(ctx, req.(*TLMessagesSendReaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCReactions_MessagesGetMessagesReactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetMessagesReactions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCReactionsServer).MessagesGetMessagesReactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCReactions/MessagesGetMessagesReactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCReactionsServer).MessagesGetMessagesReactions(ctx, req.(*TLMessagesGetMessagesReactions))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCReactions_MessagesGetMessageReactionsList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetMessageReactionsList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCReactionsServer).MessagesGetMessageReactionsList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCReactions/MessagesGetMessageReactionsList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCReactionsServer).MessagesGetMessageReactionsList(ctx, req.(*TLMessagesGetMessageReactionsList))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCReactions_MessagesSetChatAvailableReactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSetChatAvailableReactions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCReactionsServer).MessagesSetChatAvailableReactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCReactions/MessagesSetChatAvailableReactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCReactionsServer).MessagesSetChatAvailableReactions(ctx, req.(*TLMessagesSetChatAvailableReactions))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCReactions_MessagesGetAvailableReactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetAvailableReactions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCReactionsServer).MessagesGetAvailableReactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCReactions/MessagesGetAvailableReactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCReactionsServer).MessagesGetAvailableReactions(ctx, req.(*TLMessagesGetAvailableReactions))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCReactions_MessagesSetDefaultReaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSetDefaultReaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCReactionsServer).MessagesSetDefaultReaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCReactions/MessagesSetDefaultReaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCReactionsServer).MessagesSetDefaultReaction(ctx, req.(*TLMessagesSetDefaultReaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCReactions_MessagesGetUnreadReactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetUnreadReactions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCReactionsServer).MessagesGetUnreadReactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCReactions/MessagesGetUnreadReactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCReactionsServer).MessagesGetUnreadReactions(ctx, req.(*TLMessagesGetUnreadReactions))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCReactions_MessagesReadReactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReadReactions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCReactionsServer).MessagesReadReactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCReactions/MessagesReadReactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCReactionsServer).MessagesReadReactions(ctx, req.(*TLMessagesReadReactions))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCReactions_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCReactions",
	HandlerType: (*RPCReactionsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "messages_sendReaction",
			Handler:    _RPCReactions_MessagesSendReaction_Handler,
		},
		{
			MethodName: "messages_getMessagesReactions",
			Handler:    _RPCReactions_MessagesGetMessagesReactions_Handler,
		},
		{
			MethodName: "messages_getMessageReactionsList",
			Handler:    _RPCReactions_MessagesGetMessageReactionsList_Handler,
		},
		{
			MethodName: "messages_setChatAvailableReactions",
			Handler:    _RPCReactions_MessagesSetChatAvailableReactions_Handler,
		},
		{
			MethodName: "messages_getAvailableReactions",
			Handler:    _RPCReactions_MessagesGetAvailableReactions_Handler,
		},
		{
			MethodName: "messages_setDefaultReaction",
			Handler:    _RPCReactions_MessagesSetDefaultReaction_Handler,
		},
		{
			MethodName: "messages_getUnreadReactions",
			Handler:    _RPCReactions_MessagesGetUnreadReactions_Handler,
		},
		{
			MethodName: "messages_readReactions",
			Handler:    _RPCReactions_MessagesReadReactions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCChannelsClient is the client API for RPCChannels service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCChannelsClient interface {
	ChannelsReadHistory(ctx context.Context, in *TLChannelsReadHistory, opts ...grpc.CallOption) (*Bool, error)
	ChannelsDeleteMessages(ctx context.Context, in *TLChannelsDeleteMessages, opts ...grpc.CallOption) (*Messages_AffectedMessages, error)
	ChannelsGetMessages(ctx context.Context, in *TLChannelsGetMessages, opts ...grpc.CallOption) (*Messages_Messages, error)
	ChannelsGetParticipants(ctx context.Context, in *TLChannelsGetParticipants, opts ...grpc.CallOption) (*Channels_ChannelParticipants, error)
	ChannelsGetParticipant(ctx context.Context, in *TLChannelsGetParticipant, opts ...grpc.CallOption) (*Channels_ChannelParticipant, error)
	ChannelsGetChannels(ctx context.Context, in *TLChannelsGetChannels, opts ...grpc.CallOption) (*Messages_Chats, error)
	ChannelsGetFullChannel(ctx context.Context, in *TLChannelsGetFullChannel, opts ...grpc.CallOption) (*Messages_ChatFull, error)
	ChannelsCreateChannel(ctx context.Context, in *TLChannelsCreateChannel, opts ...grpc.CallOption) (*Updates, error)
	ChannelsEditAdmin(ctx context.Context, in *TLChannelsEditAdmin, opts ...grpc.CallOption) (*Updates, error)
	ChannelsEditTitle(ctx context.Context, in *TLChannelsEditTitle, opts ...grpc.CallOption) (*Updates, error)
	ChannelsEditPhoto(ctx context.Context, in *TLChannelsEditPhoto, opts ...grpc.CallOption) (*Updates, error)
	ChannelsJoinChannel(ctx context.Context, in *TLChannelsJoinChannel, opts ...grpc.CallOption) (*Updates, error)
	ChannelsLeaveChannel(ctx context.Context, in *TLChannelsLeaveChannel, opts ...grpc.CallOption) (*Updates, error)
	ChannelsInviteToChannel(ctx context.Context, in *TLChannelsInviteToChannel, opts ...grpc.CallOption) (*Updates, error)
	ChannelsDeleteChannel(ctx context.Context, in *TLChannelsDeleteChannel, opts ...grpc.CallOption) (*Updates, error)
	ChannelsExportMessageLink(ctx context.Context, in *TLChannelsExportMessageLink, opts ...grpc.CallOption) (*ExportedMessageLink, error)
	ChannelsToggleSignatures(ctx context.Context, in *TLChannelsToggleSignatures, opts ...grpc.CallOption) (*Updates, error)
	ChannelsGetAdminedPublicChannels(ctx context.Context, in *TLChannelsGetAdminedPublicChannels, opts ...grpc.CallOption) (*Messages_Chats, error)
	ChannelsEditBanned(ctx context.Context, in *TLChannelsEditBanned, opts ...grpc.CallOption) (*Updates, error)
	ChannelsGetAdminLog(ctx context.Context, in *TLChannelsGetAdminLog, opts ...grpc.CallOption) (*Channels_AdminLogResults, error)
	ChannelsSetStickers(ctx context.Context, in *TLChannelsSetStickers, opts ...grpc.CallOption) (*Bool, error)
	ChannelsReadMessageContents(ctx context.Context, in *TLChannelsReadMessageContents, opts ...grpc.CallOption) (*Bool, error)
	ChannelsDeleteHistory(ctx context.Context, in *TLChannelsDeleteHistory, opts ...grpc.CallOption) (*Bool, error)
	ChannelsTogglePreHistoryHidden(ctx context.Context, in *TLChannelsTogglePreHistoryHidden, opts ...grpc.CallOption) (*Updates, error)
	ChannelsGetGroupsForDiscussion(ctx context.Context, in *TLChannelsGetGroupsForDiscussion, opts ...grpc.CallOption) (*Messages_Chats, error)
	ChannelsSetDiscussionGroup(ctx context.Context, in *TLChannelsSetDiscussionGroup, opts ...grpc.CallOption) (*Bool, error)
	ChannelsEditCreator(ctx context.Context, in *TLChannelsEditCreator, opts ...grpc.CallOption) (*Updates, error)
	ChannelsEditLocation(ctx context.Context, in *TLChannelsEditLocation, opts ...grpc.CallOption) (*Bool, error)
	ChannelsToggleSlowMode(ctx context.Context, in *TLChannelsToggleSlowMode, opts ...grpc.CallOption) (*Updates, error)
	ChannelsGetInactiveChannels(ctx context.Context, in *TLChannelsGetInactiveChannels, opts ...grpc.CallOption) (*Messages_InactiveChats, error)
	ChannelsDeleteParticipantHistory(ctx context.Context, in *TLChannelsDeleteParticipantHistory, opts ...grpc.CallOption) (*Messages_AffectedHistory, error)
	ChannelsDeleteUserHistory(ctx context.Context, in *TLChannelsDeleteUserHistory, opts ...grpc.CallOption) (*Messages_AffectedHistory, error)
}

type rPCChannelsClient struct {
	cc *grpc.ClientConn
}

func NewRPCChannelsClient(cc *grpc.ClientConn) RPCChannelsClient {
	return &rPCChannelsClient{cc}
}

func (c *rPCChannelsClient) ChannelsReadHistory(ctx context.Context, in *TLChannelsReadHistory, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_readHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsDeleteMessages(ctx context.Context, in *TLChannelsDeleteMessages, opts ...grpc.CallOption) (*Messages_AffectedMessages, error) {
	out := new(Messages_AffectedMessages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_deleteMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsGetMessages(ctx context.Context, in *TLChannelsGetMessages, opts ...grpc.CallOption) (*Messages_Messages, error) {
	out := new(Messages_Messages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_getMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsGetParticipants(ctx context.Context, in *TLChannelsGetParticipants, opts ...grpc.CallOption) (*Channels_ChannelParticipants, error) {
	out := new(Channels_ChannelParticipants)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_getParticipants", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsGetParticipant(ctx context.Context, in *TLChannelsGetParticipant, opts ...grpc.CallOption) (*Channels_ChannelParticipant, error) {
	out := new(Channels_ChannelParticipant)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_getParticipant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsGetChannels(ctx context.Context, in *TLChannelsGetChannels, opts ...grpc.CallOption) (*Messages_Chats, error) {
	out := new(Messages_Chats)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_getChannels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsGetFullChannel(ctx context.Context, in *TLChannelsGetFullChannel, opts ...grpc.CallOption) (*Messages_ChatFull, error) {
	out := new(Messages_ChatFull)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_getFullChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsCreateChannel(ctx context.Context, in *TLChannelsCreateChannel, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_createChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsEditAdmin(ctx context.Context, in *TLChannelsEditAdmin, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_editAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsEditTitle(ctx context.Context, in *TLChannelsEditTitle, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_editTitle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsEditPhoto(ctx context.Context, in *TLChannelsEditPhoto, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_editPhoto", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsJoinChannel(ctx context.Context, in *TLChannelsJoinChannel, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_joinChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsLeaveChannel(ctx context.Context, in *TLChannelsLeaveChannel, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_leaveChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsInviteToChannel(ctx context.Context, in *TLChannelsInviteToChannel, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_inviteToChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsDeleteChannel(ctx context.Context, in *TLChannelsDeleteChannel, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_deleteChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsExportMessageLink(ctx context.Context, in *TLChannelsExportMessageLink, opts ...grpc.CallOption) (*ExportedMessageLink, error) {
	out := new(ExportedMessageLink)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_exportMessageLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsToggleSignatures(ctx context.Context, in *TLChannelsToggleSignatures, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_toggleSignatures", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsGetAdminedPublicChannels(ctx context.Context, in *TLChannelsGetAdminedPublicChannels, opts ...grpc.CallOption) (*Messages_Chats, error) {
	out := new(Messages_Chats)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_getAdminedPublicChannels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsEditBanned(ctx context.Context, in *TLChannelsEditBanned, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_editBanned", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsGetAdminLog(ctx context.Context, in *TLChannelsGetAdminLog, opts ...grpc.CallOption) (*Channels_AdminLogResults, error) {
	out := new(Channels_AdminLogResults)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_getAdminLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsSetStickers(ctx context.Context, in *TLChannelsSetStickers, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_setStickers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsReadMessageContents(ctx context.Context, in *TLChannelsReadMessageContents, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_readMessageContents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsDeleteHistory(ctx context.Context, in *TLChannelsDeleteHistory, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_deleteHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsTogglePreHistoryHidden(ctx context.Context, in *TLChannelsTogglePreHistoryHidden, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_togglePreHistoryHidden", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsGetGroupsForDiscussion(ctx context.Context, in *TLChannelsGetGroupsForDiscussion, opts ...grpc.CallOption) (*Messages_Chats, error) {
	out := new(Messages_Chats)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_getGroupsForDiscussion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsSetDiscussionGroup(ctx context.Context, in *TLChannelsSetDiscussionGroup, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_setDiscussionGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsEditCreator(ctx context.Context, in *TLChannelsEditCreator, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_editCreator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsEditLocation(ctx context.Context, in *TLChannelsEditLocation, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_editLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsToggleSlowMode(ctx context.Context, in *TLChannelsToggleSlowMode, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_toggleSlowMode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsGetInactiveChannels(ctx context.Context, in *TLChannelsGetInactiveChannels, opts ...grpc.CallOption) (*Messages_InactiveChats, error) {
	out := new(Messages_InactiveChats)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_getInactiveChannels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsDeleteParticipantHistory(ctx context.Context, in *TLChannelsDeleteParticipantHistory, opts ...grpc.CallOption) (*Messages_AffectedHistory, error) {
	out := new(Messages_AffectedHistory)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_deleteParticipantHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChannelsClient) ChannelsDeleteUserHistory(ctx context.Context, in *TLChannelsDeleteUserHistory, opts ...grpc.CallOption) (*Messages_AffectedHistory, error) {
	out := new(Messages_AffectedHistory)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChannels/channels_deleteUserHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCChannelsServer is the server API for RPCChannels service.
type RPCChannelsServer interface {
	ChannelsReadHistory(context.Context, *TLChannelsReadHistory) (*Bool, error)
	ChannelsDeleteMessages(context.Context, *TLChannelsDeleteMessages) (*Messages_AffectedMessages, error)
	ChannelsGetMessages(context.Context, *TLChannelsGetMessages) (*Messages_Messages, error)
	ChannelsGetParticipants(context.Context, *TLChannelsGetParticipants) (*Channels_ChannelParticipants, error)
	ChannelsGetParticipant(context.Context, *TLChannelsGetParticipant) (*Channels_ChannelParticipant, error)
	ChannelsGetChannels(context.Context, *TLChannelsGetChannels) (*Messages_Chats, error)
	ChannelsGetFullChannel(context.Context, *TLChannelsGetFullChannel) (*Messages_ChatFull, error)
	ChannelsCreateChannel(context.Context, *TLChannelsCreateChannel) (*Updates, error)
	ChannelsEditAdmin(context.Context, *TLChannelsEditAdmin) (*Updates, error)
	ChannelsEditTitle(context.Context, *TLChannelsEditTitle) (*Updates, error)
	ChannelsEditPhoto(context.Context, *TLChannelsEditPhoto) (*Updates, error)
	ChannelsJoinChannel(context.Context, *TLChannelsJoinChannel) (*Updates, error)
	ChannelsLeaveChannel(context.Context, *TLChannelsLeaveChannel) (*Updates, error)
	ChannelsInviteToChannel(context.Context, *TLChannelsInviteToChannel) (*Updates, error)
	ChannelsDeleteChannel(context.Context, *TLChannelsDeleteChannel) (*Updates, error)
	ChannelsExportMessageLink(context.Context, *TLChannelsExportMessageLink) (*ExportedMessageLink, error)
	ChannelsToggleSignatures(context.Context, *TLChannelsToggleSignatures) (*Updates, error)
	ChannelsGetAdminedPublicChannels(context.Context, *TLChannelsGetAdminedPublicChannels) (*Messages_Chats, error)
	ChannelsEditBanned(context.Context, *TLChannelsEditBanned) (*Updates, error)
	ChannelsGetAdminLog(context.Context, *TLChannelsGetAdminLog) (*Channels_AdminLogResults, error)
	ChannelsSetStickers(context.Context, *TLChannelsSetStickers) (*Bool, error)
	ChannelsReadMessageContents(context.Context, *TLChannelsReadMessageContents) (*Bool, error)
	ChannelsDeleteHistory(context.Context, *TLChannelsDeleteHistory) (*Bool, error)
	ChannelsTogglePreHistoryHidden(context.Context, *TLChannelsTogglePreHistoryHidden) (*Updates, error)
	ChannelsGetGroupsForDiscussion(context.Context, *TLChannelsGetGroupsForDiscussion) (*Messages_Chats, error)
	ChannelsSetDiscussionGroup(context.Context, *TLChannelsSetDiscussionGroup) (*Bool, error)
	ChannelsEditCreator(context.Context, *TLChannelsEditCreator) (*Updates, error)
	ChannelsEditLocation(context.Context, *TLChannelsEditLocation) (*Bool, error)
	ChannelsToggleSlowMode(context.Context, *TLChannelsToggleSlowMode) (*Updates, error)
	ChannelsGetInactiveChannels(context.Context, *TLChannelsGetInactiveChannels) (*Messages_InactiveChats, error)
	ChannelsDeleteParticipantHistory(context.Context, *TLChannelsDeleteParticipantHistory) (*Messages_AffectedHistory, error)
	ChannelsDeleteUserHistory(context.Context, *TLChannelsDeleteUserHistory) (*Messages_AffectedHistory, error)
}

// UnimplementedRPCChannelsServer can be embedded to have forward compatible implementations.
type UnimplementedRPCChannelsServer struct {
}

func (*UnimplementedRPCChannelsServer) ChannelsReadHistory(ctx context.Context, req *TLChannelsReadHistory) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsReadHistory not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsDeleteMessages(ctx context.Context, req *TLChannelsDeleteMessages) (*Messages_AffectedMessages, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsDeleteMessages not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsGetMessages(ctx context.Context, req *TLChannelsGetMessages) (*Messages_Messages, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsGetMessages not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsGetParticipants(ctx context.Context, req *TLChannelsGetParticipants) (*Channels_ChannelParticipants, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsGetParticipants not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsGetParticipant(ctx context.Context, req *TLChannelsGetParticipant) (*Channels_ChannelParticipant, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsGetParticipant not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsGetChannels(ctx context.Context, req *TLChannelsGetChannels) (*Messages_Chats, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsGetChannels not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsGetFullChannel(ctx context.Context, req *TLChannelsGetFullChannel) (*Messages_ChatFull, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsGetFullChannel not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsCreateChannel(ctx context.Context, req *TLChannelsCreateChannel) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsCreateChannel not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsEditAdmin(ctx context.Context, req *TLChannelsEditAdmin) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsEditAdmin not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsEditTitle(ctx context.Context, req *TLChannelsEditTitle) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsEditTitle not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsEditPhoto(ctx context.Context, req *TLChannelsEditPhoto) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsEditPhoto not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsJoinChannel(ctx context.Context, req *TLChannelsJoinChannel) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsJoinChannel not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsLeaveChannel(ctx context.Context, req *TLChannelsLeaveChannel) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsLeaveChannel not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsInviteToChannel(ctx context.Context, req *TLChannelsInviteToChannel) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsInviteToChannel not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsDeleteChannel(ctx context.Context, req *TLChannelsDeleteChannel) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsDeleteChannel not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsExportMessageLink(ctx context.Context, req *TLChannelsExportMessageLink) (*ExportedMessageLink, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsExportMessageLink not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsToggleSignatures(ctx context.Context, req *TLChannelsToggleSignatures) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsToggleSignatures not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsGetAdminedPublicChannels(ctx context.Context, req *TLChannelsGetAdminedPublicChannels) (*Messages_Chats, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsGetAdminedPublicChannels not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsEditBanned(ctx context.Context, req *TLChannelsEditBanned) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsEditBanned not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsGetAdminLog(ctx context.Context, req *TLChannelsGetAdminLog) (*Channels_AdminLogResults, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsGetAdminLog not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsSetStickers(ctx context.Context, req *TLChannelsSetStickers) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsSetStickers not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsReadMessageContents(ctx context.Context, req *TLChannelsReadMessageContents) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsReadMessageContents not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsDeleteHistory(ctx context.Context, req *TLChannelsDeleteHistory) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsDeleteHistory not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsTogglePreHistoryHidden(ctx context.Context, req *TLChannelsTogglePreHistoryHidden) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsTogglePreHistoryHidden not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsGetGroupsForDiscussion(ctx context.Context, req *TLChannelsGetGroupsForDiscussion) (*Messages_Chats, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsGetGroupsForDiscussion not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsSetDiscussionGroup(ctx context.Context, req *TLChannelsSetDiscussionGroup) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsSetDiscussionGroup not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsEditCreator(ctx context.Context, req *TLChannelsEditCreator) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsEditCreator not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsEditLocation(ctx context.Context, req *TLChannelsEditLocation) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsEditLocation not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsToggleSlowMode(ctx context.Context, req *TLChannelsToggleSlowMode) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsToggleSlowMode not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsGetInactiveChannels(ctx context.Context, req *TLChannelsGetInactiveChannels) (*Messages_InactiveChats, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsGetInactiveChannels not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsDeleteParticipantHistory(ctx context.Context, req *TLChannelsDeleteParticipantHistory) (*Messages_AffectedHistory, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsDeleteParticipantHistory not implemented")
}
func (*UnimplementedRPCChannelsServer) ChannelsDeleteUserHistory(ctx context.Context, req *TLChannelsDeleteUserHistory) (*Messages_AffectedHistory, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsDeleteUserHistory not implemented")
}

func RegisterRPCChannelsServer(s *grpc.Server, srv RPCChannelsServer) {
	s.RegisterService(&_RPCChannels_serviceDesc, srv)
}

func _RPCChannels_ChannelsReadHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsReadHistory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsReadHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsReadHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsReadHistory(ctx, req.(*TLChannelsReadHistory))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsDeleteMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsDeleteMessages)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsDeleteMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsDeleteMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsDeleteMessages(ctx, req.(*TLChannelsDeleteMessages))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsGetMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsGetMessages)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsGetMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsGetMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsGetMessages(ctx, req.(*TLChannelsGetMessages))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsGetParticipants_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsGetParticipants)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsGetParticipants(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsGetParticipants",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsGetParticipants(ctx, req.(*TLChannelsGetParticipants))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsGetParticipant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsGetParticipant)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsGetParticipant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsGetParticipant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsGetParticipant(ctx, req.(*TLChannelsGetParticipant))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsGetChannels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsGetChannels)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsGetChannels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsGetChannels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsGetChannels(ctx, req.(*TLChannelsGetChannels))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsGetFullChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsGetFullChannel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsGetFullChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsGetFullChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsGetFullChannel(ctx, req.(*TLChannelsGetFullChannel))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsCreateChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsCreateChannel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsCreateChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsCreateChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsCreateChannel(ctx, req.(*TLChannelsCreateChannel))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsEditAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsEditAdmin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsEditAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsEditAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsEditAdmin(ctx, req.(*TLChannelsEditAdmin))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsEditTitle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsEditTitle)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsEditTitle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsEditTitle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsEditTitle(ctx, req.(*TLChannelsEditTitle))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsEditPhoto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsEditPhoto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsEditPhoto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsEditPhoto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsEditPhoto(ctx, req.(*TLChannelsEditPhoto))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsJoinChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsJoinChannel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsJoinChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsJoinChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsJoinChannel(ctx, req.(*TLChannelsJoinChannel))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsLeaveChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsLeaveChannel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsLeaveChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsLeaveChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsLeaveChannel(ctx, req.(*TLChannelsLeaveChannel))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsInviteToChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsInviteToChannel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsInviteToChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsInviteToChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsInviteToChannel(ctx, req.(*TLChannelsInviteToChannel))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsDeleteChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsDeleteChannel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsDeleteChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsDeleteChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsDeleteChannel(ctx, req.(*TLChannelsDeleteChannel))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsExportMessageLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsExportMessageLink)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsExportMessageLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsExportMessageLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsExportMessageLink(ctx, req.(*TLChannelsExportMessageLink))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsToggleSignatures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsToggleSignatures)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsToggleSignatures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsToggleSignatures",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsToggleSignatures(ctx, req.(*TLChannelsToggleSignatures))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsGetAdminedPublicChannels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsGetAdminedPublicChannels)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsGetAdminedPublicChannels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsGetAdminedPublicChannels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsGetAdminedPublicChannels(ctx, req.(*TLChannelsGetAdminedPublicChannels))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsEditBanned_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsEditBanned)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsEditBanned(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsEditBanned",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsEditBanned(ctx, req.(*TLChannelsEditBanned))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsGetAdminLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsGetAdminLog)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsGetAdminLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsGetAdminLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsGetAdminLog(ctx, req.(*TLChannelsGetAdminLog))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsSetStickers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsSetStickers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsSetStickers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsSetStickers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsSetStickers(ctx, req.(*TLChannelsSetStickers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsReadMessageContents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsReadMessageContents)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsReadMessageContents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsReadMessageContents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsReadMessageContents(ctx, req.(*TLChannelsReadMessageContents))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsDeleteHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsDeleteHistory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsDeleteHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsDeleteHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsDeleteHistory(ctx, req.(*TLChannelsDeleteHistory))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsTogglePreHistoryHidden_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsTogglePreHistoryHidden)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsTogglePreHistoryHidden(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsTogglePreHistoryHidden",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsTogglePreHistoryHidden(ctx, req.(*TLChannelsTogglePreHistoryHidden))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsGetGroupsForDiscussion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsGetGroupsForDiscussion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsGetGroupsForDiscussion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsGetGroupsForDiscussion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsGetGroupsForDiscussion(ctx, req.(*TLChannelsGetGroupsForDiscussion))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsSetDiscussionGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsSetDiscussionGroup)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsSetDiscussionGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsSetDiscussionGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsSetDiscussionGroup(ctx, req.(*TLChannelsSetDiscussionGroup))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsEditCreator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsEditCreator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsEditCreator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsEditCreator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsEditCreator(ctx, req.(*TLChannelsEditCreator))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsEditLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsEditLocation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsEditLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsEditLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsEditLocation(ctx, req.(*TLChannelsEditLocation))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsToggleSlowMode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsToggleSlowMode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsToggleSlowMode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsToggleSlowMode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsToggleSlowMode(ctx, req.(*TLChannelsToggleSlowMode))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsGetInactiveChannels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsGetInactiveChannels)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsGetInactiveChannels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsGetInactiveChannels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsGetInactiveChannels(ctx, req.(*TLChannelsGetInactiveChannels))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsDeleteParticipantHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsDeleteParticipantHistory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsDeleteParticipantHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsDeleteParticipantHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsDeleteParticipantHistory(ctx, req.(*TLChannelsDeleteParticipantHistory))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChannels_ChannelsDeleteUserHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsDeleteUserHistory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChannelsServer).ChannelsDeleteUserHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChannels/ChannelsDeleteUserHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChannelsServer).ChannelsDeleteUserHistory(ctx, req.(*TLChannelsDeleteUserHistory))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCChannels_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCChannels",
	HandlerType: (*RPCChannelsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "channels_readHistory",
			Handler:    _RPCChannels_ChannelsReadHistory_Handler,
		},
		{
			MethodName: "channels_deleteMessages",
			Handler:    _RPCChannels_ChannelsDeleteMessages_Handler,
		},
		{
			MethodName: "channels_getMessages",
			Handler:    _RPCChannels_ChannelsGetMessages_Handler,
		},
		{
			MethodName: "channels_getParticipants",
			Handler:    _RPCChannels_ChannelsGetParticipants_Handler,
		},
		{
			MethodName: "channels_getParticipant",
			Handler:    _RPCChannels_ChannelsGetParticipant_Handler,
		},
		{
			MethodName: "channels_getChannels",
			Handler:    _RPCChannels_ChannelsGetChannels_Handler,
		},
		{
			MethodName: "channels_getFullChannel",
			Handler:    _RPCChannels_ChannelsGetFullChannel_Handler,
		},
		{
			MethodName: "channels_createChannel",
			Handler:    _RPCChannels_ChannelsCreateChannel_Handler,
		},
		{
			MethodName: "channels_editAdmin",
			Handler:    _RPCChannels_ChannelsEditAdmin_Handler,
		},
		{
			MethodName: "channels_editTitle",
			Handler:    _RPCChannels_ChannelsEditTitle_Handler,
		},
		{
			MethodName: "channels_editPhoto",
			Handler:    _RPCChannels_ChannelsEditPhoto_Handler,
		},
		{
			MethodName: "channels_joinChannel",
			Handler:    _RPCChannels_ChannelsJoinChannel_Handler,
		},
		{
			MethodName: "channels_leaveChannel",
			Handler:    _RPCChannels_ChannelsLeaveChannel_Handler,
		},
		{
			MethodName: "channels_inviteToChannel",
			Handler:    _RPCChannels_ChannelsInviteToChannel_Handler,
		},
		{
			MethodName: "channels_deleteChannel",
			Handler:    _RPCChannels_ChannelsDeleteChannel_Handler,
		},
		{
			MethodName: "channels_exportMessageLink",
			Handler:    _RPCChannels_ChannelsExportMessageLink_Handler,
		},
		{
			MethodName: "channels_toggleSignatures",
			Handler:    _RPCChannels_ChannelsToggleSignatures_Handler,
		},
		{
			MethodName: "channels_getAdminedPublicChannels",
			Handler:    _RPCChannels_ChannelsGetAdminedPublicChannels_Handler,
		},
		{
			MethodName: "channels_editBanned",
			Handler:    _RPCChannels_ChannelsEditBanned_Handler,
		},
		{
			MethodName: "channels_getAdminLog",
			Handler:    _RPCChannels_ChannelsGetAdminLog_Handler,
		},
		{
			MethodName: "channels_setStickers",
			Handler:    _RPCChannels_ChannelsSetStickers_Handler,
		},
		{
			MethodName: "channels_readMessageContents",
			Handler:    _RPCChannels_ChannelsReadMessageContents_Handler,
		},
		{
			MethodName: "channels_deleteHistory",
			Handler:    _RPCChannels_ChannelsDeleteHistory_Handler,
		},
		{
			MethodName: "channels_togglePreHistoryHidden",
			Handler:    _RPCChannels_ChannelsTogglePreHistoryHidden_Handler,
		},
		{
			MethodName: "channels_getGroupsForDiscussion",
			Handler:    _RPCChannels_ChannelsGetGroupsForDiscussion_Handler,
		},
		{
			MethodName: "channels_setDiscussionGroup",
			Handler:    _RPCChannels_ChannelsSetDiscussionGroup_Handler,
		},
		{
			MethodName: "channels_editCreator",
			Handler:    _RPCChannels_ChannelsEditCreator_Handler,
		},
		{
			MethodName: "channels_editLocation",
			Handler:    _RPCChannels_ChannelsEditLocation_Handler,
		},
		{
			MethodName: "channels_toggleSlowMode",
			Handler:    _RPCChannels_ChannelsToggleSlowMode_Handler,
		},
		{
			MethodName: "channels_getInactiveChannels",
			Handler:    _RPCChannels_ChannelsGetInactiveChannels_Handler,
		},
		{
			MethodName: "channels_deleteParticipantHistory",
			Handler:    _RPCChannels_ChannelsDeleteParticipantHistory_Handler,
		},
		{
			MethodName: "channels_deleteUserHistory",
			Handler:    _RPCChannels_ChannelsDeleteUserHistory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCCreditCardsClient is the client API for RPCCreditCards service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCCreditCardsClient interface {
	PaymentsGetBankCardData(ctx context.Context, in *TLPaymentsGetBankCardData, opts ...grpc.CallOption) (*Payments_BankCardData, error)
}

type rPCCreditCardsClient struct {
	cc *grpc.ClientConn
}

func NewRPCCreditCardsClient(cc *grpc.ClientConn) RPCCreditCardsClient {
	return &rPCCreditCardsClient{cc}
}

func (c *rPCCreditCardsClient) PaymentsGetBankCardData(ctx context.Context, in *TLPaymentsGetBankCardData, opts ...grpc.CallOption) (*Payments_BankCardData, error) {
	out := new(Payments_BankCardData)
	err := c.cc.Invoke(ctx, "/mtproto.RPCCreditCards/payments_getBankCardData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCCreditCardsServer is the server API for RPCCreditCards service.
type RPCCreditCardsServer interface {
	PaymentsGetBankCardData(context.Context, *TLPaymentsGetBankCardData) (*Payments_BankCardData, error)
}

// UnimplementedRPCCreditCardsServer can be embedded to have forward compatible implementations.
type UnimplementedRPCCreditCardsServer struct {
}

func (*UnimplementedRPCCreditCardsServer) PaymentsGetBankCardData(ctx context.Context, req *TLPaymentsGetBankCardData) (*Payments_BankCardData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentsGetBankCardData not implemented")
}

func RegisterRPCCreditCardsServer(s *grpc.Server, srv RPCCreditCardsServer) {
	s.RegisterService(&_RPCCreditCards_serviceDesc, srv)
}

func _RPCCreditCards_PaymentsGetBankCardData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPaymentsGetBankCardData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCCreditCardsServer).PaymentsGetBankCardData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCCreditCards/PaymentsGetBankCardData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCCreditCardsServer).PaymentsGetBankCardData(ctx, req.(*TLPaymentsGetBankCardData))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCCreditCards_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCCreditCards",
	HandlerType: (*RPCCreditCardsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "payments_getBankCardData",
			Handler:    _RPCCreditCards_PaymentsGetBankCardData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCSecretChatsClient is the client API for RPCSecretChats service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCSecretChatsClient interface {
	MessagesGetDhConfig(ctx context.Context, in *TLMessagesGetDhConfig, opts ...grpc.CallOption) (*Messages_DhConfig, error)
	MessagesRequestEncryption(ctx context.Context, in *TLMessagesRequestEncryption, opts ...grpc.CallOption) (*EncryptedChat, error)
	MessagesAcceptEncryption(ctx context.Context, in *TLMessagesAcceptEncryption, opts ...grpc.CallOption) (*EncryptedChat, error)
	MessagesDiscardEncryption(ctx context.Context, in *TLMessagesDiscardEncryption, opts ...grpc.CallOption) (*Bool, error)
	MessagesSetEncryptedTyping(ctx context.Context, in *TLMessagesSetEncryptedTyping, opts ...grpc.CallOption) (*Bool, error)
	MessagesReadEncryptedHistory(ctx context.Context, in *TLMessagesReadEncryptedHistory, opts ...grpc.CallOption) (*Bool, error)
	MessagesSendEncrypted(ctx context.Context, in *TLMessagesSendEncrypted, opts ...grpc.CallOption) (*Messages_SentEncryptedMessage, error)
	MessagesSendEncryptedFile(ctx context.Context, in *TLMessagesSendEncryptedFile, opts ...grpc.CallOption) (*Messages_SentEncryptedMessage, error)
	MessagesSendEncryptedService(ctx context.Context, in *TLMessagesSendEncryptedService, opts ...grpc.CallOption) (*Messages_SentEncryptedMessage, error)
	MessagesReceivedQueue(ctx context.Context, in *TLMessagesReceivedQueue, opts ...grpc.CallOption) (*Vector_Long, error)
}

type rPCSecretChatsClient struct {
	cc *grpc.ClientConn
}

func NewRPCSecretChatsClient(cc *grpc.ClientConn) RPCSecretChatsClient {
	return &rPCSecretChatsClient{cc}
}

func (c *rPCSecretChatsClient) MessagesGetDhConfig(ctx context.Context, in *TLMessagesGetDhConfig, opts ...grpc.CallOption) (*Messages_DhConfig, error) {
	out := new(Messages_DhConfig)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSecretChats/messages_getDhConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSecretChatsClient) MessagesRequestEncryption(ctx context.Context, in *TLMessagesRequestEncryption, opts ...grpc.CallOption) (*EncryptedChat, error) {
	out := new(EncryptedChat)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSecretChats/messages_requestEncryption", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSecretChatsClient) MessagesAcceptEncryption(ctx context.Context, in *TLMessagesAcceptEncryption, opts ...grpc.CallOption) (*EncryptedChat, error) {
	out := new(EncryptedChat)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSecretChats/messages_acceptEncryption", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSecretChatsClient) MessagesDiscardEncryption(ctx context.Context, in *TLMessagesDiscardEncryption, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSecretChats/messages_discardEncryption", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSecretChatsClient) MessagesSetEncryptedTyping(ctx context.Context, in *TLMessagesSetEncryptedTyping, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSecretChats/messages_setEncryptedTyping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSecretChatsClient) MessagesReadEncryptedHistory(ctx context.Context, in *TLMessagesReadEncryptedHistory, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSecretChats/messages_readEncryptedHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSecretChatsClient) MessagesSendEncrypted(ctx context.Context, in *TLMessagesSendEncrypted, opts ...grpc.CallOption) (*Messages_SentEncryptedMessage, error) {
	out := new(Messages_SentEncryptedMessage)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSecretChats/messages_sendEncrypted", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSecretChatsClient) MessagesSendEncryptedFile(ctx context.Context, in *TLMessagesSendEncryptedFile, opts ...grpc.CallOption) (*Messages_SentEncryptedMessage, error) {
	out := new(Messages_SentEncryptedMessage)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSecretChats/messages_sendEncryptedFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSecretChatsClient) MessagesSendEncryptedService(ctx context.Context, in *TLMessagesSendEncryptedService, opts ...grpc.CallOption) (*Messages_SentEncryptedMessage, error) {
	out := new(Messages_SentEncryptedMessage)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSecretChats/messages_sendEncryptedService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSecretChatsClient) MessagesReceivedQueue(ctx context.Context, in *TLMessagesReceivedQueue, opts ...grpc.CallOption) (*Vector_Long, error) {
	out := new(Vector_Long)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSecretChats/messages_receivedQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCSecretChatsServer is the server API for RPCSecretChats service.
type RPCSecretChatsServer interface {
	MessagesGetDhConfig(context.Context, *TLMessagesGetDhConfig) (*Messages_DhConfig, error)
	MessagesRequestEncryption(context.Context, *TLMessagesRequestEncryption) (*EncryptedChat, error)
	MessagesAcceptEncryption(context.Context, *TLMessagesAcceptEncryption) (*EncryptedChat, error)
	MessagesDiscardEncryption(context.Context, *TLMessagesDiscardEncryption) (*Bool, error)
	MessagesSetEncryptedTyping(context.Context, *TLMessagesSetEncryptedTyping) (*Bool, error)
	MessagesReadEncryptedHistory(context.Context, *TLMessagesReadEncryptedHistory) (*Bool, error)
	MessagesSendEncrypted(context.Context, *TLMessagesSendEncrypted) (*Messages_SentEncryptedMessage, error)
	MessagesSendEncryptedFile(context.Context, *TLMessagesSendEncryptedFile) (*Messages_SentEncryptedMessage, error)
	MessagesSendEncryptedService(context.Context, *TLMessagesSendEncryptedService) (*Messages_SentEncryptedMessage, error)
	MessagesReceivedQueue(context.Context, *TLMessagesReceivedQueue) (*Vector_Long, error)
}

// UnimplementedRPCSecretChatsServer can be embedded to have forward compatible implementations.
type UnimplementedRPCSecretChatsServer struct {
}

func (*UnimplementedRPCSecretChatsServer) MessagesGetDhConfig(ctx context.Context, req *TLMessagesGetDhConfig) (*Messages_DhConfig, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetDhConfig not implemented")
}
func (*UnimplementedRPCSecretChatsServer) MessagesRequestEncryption(ctx context.Context, req *TLMessagesRequestEncryption) (*EncryptedChat, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesRequestEncryption not implemented")
}
func (*UnimplementedRPCSecretChatsServer) MessagesAcceptEncryption(ctx context.Context, req *TLMessagesAcceptEncryption) (*EncryptedChat, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesAcceptEncryption not implemented")
}
func (*UnimplementedRPCSecretChatsServer) MessagesDiscardEncryption(ctx context.Context, req *TLMessagesDiscardEncryption) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesDiscardEncryption not implemented")
}
func (*UnimplementedRPCSecretChatsServer) MessagesSetEncryptedTyping(ctx context.Context, req *TLMessagesSetEncryptedTyping) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSetEncryptedTyping not implemented")
}
func (*UnimplementedRPCSecretChatsServer) MessagesReadEncryptedHistory(ctx context.Context, req *TLMessagesReadEncryptedHistory) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesReadEncryptedHistory not implemented")
}
func (*UnimplementedRPCSecretChatsServer) MessagesSendEncrypted(ctx context.Context, req *TLMessagesSendEncrypted) (*Messages_SentEncryptedMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSendEncrypted not implemented")
}
func (*UnimplementedRPCSecretChatsServer) MessagesSendEncryptedFile(ctx context.Context, req *TLMessagesSendEncryptedFile) (*Messages_SentEncryptedMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSendEncryptedFile not implemented")
}
func (*UnimplementedRPCSecretChatsServer) MessagesSendEncryptedService(ctx context.Context, req *TLMessagesSendEncryptedService) (*Messages_SentEncryptedMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSendEncryptedService not implemented")
}
func (*UnimplementedRPCSecretChatsServer) MessagesReceivedQueue(ctx context.Context, req *TLMessagesReceivedQueue) (*Vector_Long, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesReceivedQueue not implemented")
}

func RegisterRPCSecretChatsServer(s *grpc.Server, srv RPCSecretChatsServer) {
	s.RegisterService(&_RPCSecretChats_serviceDesc, srv)
}

func _RPCSecretChats_MessagesGetDhConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetDhConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSecretChatsServer).MessagesGetDhConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSecretChats/MessagesGetDhConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSecretChatsServer).MessagesGetDhConfig(ctx, req.(*TLMessagesGetDhConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSecretChats_MessagesRequestEncryption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesRequestEncryption)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSecretChatsServer).MessagesRequestEncryption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSecretChats/MessagesRequestEncryption",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSecretChatsServer).MessagesRequestEncryption(ctx, req.(*TLMessagesRequestEncryption))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSecretChats_MessagesAcceptEncryption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesAcceptEncryption)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSecretChatsServer).MessagesAcceptEncryption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSecretChats/MessagesAcceptEncryption",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSecretChatsServer).MessagesAcceptEncryption(ctx, req.(*TLMessagesAcceptEncryption))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSecretChats_MessagesDiscardEncryption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesDiscardEncryption)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSecretChatsServer).MessagesDiscardEncryption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSecretChats/MessagesDiscardEncryption",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSecretChatsServer).MessagesDiscardEncryption(ctx, req.(*TLMessagesDiscardEncryption))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSecretChats_MessagesSetEncryptedTyping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSetEncryptedTyping)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSecretChatsServer).MessagesSetEncryptedTyping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSecretChats/MessagesSetEncryptedTyping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSecretChatsServer).MessagesSetEncryptedTyping(ctx, req.(*TLMessagesSetEncryptedTyping))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSecretChats_MessagesReadEncryptedHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReadEncryptedHistory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSecretChatsServer).MessagesReadEncryptedHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSecretChats/MessagesReadEncryptedHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSecretChatsServer).MessagesReadEncryptedHistory(ctx, req.(*TLMessagesReadEncryptedHistory))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSecretChats_MessagesSendEncrypted_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSendEncrypted)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSecretChatsServer).MessagesSendEncrypted(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSecretChats/MessagesSendEncrypted",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSecretChatsServer).MessagesSendEncrypted(ctx, req.(*TLMessagesSendEncrypted))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSecretChats_MessagesSendEncryptedFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSendEncryptedFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSecretChatsServer).MessagesSendEncryptedFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSecretChats/MessagesSendEncryptedFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSecretChatsServer).MessagesSendEncryptedFile(ctx, req.(*TLMessagesSendEncryptedFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSecretChats_MessagesSendEncryptedService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSendEncryptedService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSecretChatsServer).MessagesSendEncryptedService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSecretChats/MessagesSendEncryptedService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSecretChatsServer).MessagesSendEncryptedService(ctx, req.(*TLMessagesSendEncryptedService))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSecretChats_MessagesReceivedQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReceivedQueue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSecretChatsServer).MessagesReceivedQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSecretChats/MessagesReceivedQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSecretChatsServer).MessagesReceivedQueue(ctx, req.(*TLMessagesReceivedQueue))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCSecretChats_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCSecretChats",
	HandlerType: (*RPCSecretChatsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "messages_getDhConfig",
			Handler:    _RPCSecretChats_MessagesGetDhConfig_Handler,
		},
		{
			MethodName: "messages_requestEncryption",
			Handler:    _RPCSecretChats_MessagesRequestEncryption_Handler,
		},
		{
			MethodName: "messages_acceptEncryption",
			Handler:    _RPCSecretChats_MessagesAcceptEncryption_Handler,
		},
		{
			MethodName: "messages_discardEncryption",
			Handler:    _RPCSecretChats_MessagesDiscardEncryption_Handler,
		},
		{
			MethodName: "messages_setEncryptedTyping",
			Handler:    _RPCSecretChats_MessagesSetEncryptedTyping_Handler,
		},
		{
			MethodName: "messages_readEncryptedHistory",
			Handler:    _RPCSecretChats_MessagesReadEncryptedHistory_Handler,
		},
		{
			MethodName: "messages_sendEncrypted",
			Handler:    _RPCSecretChats_MessagesSendEncrypted_Handler,
		},
		{
			MethodName: "messages_sendEncryptedFile",
			Handler:    _RPCSecretChats_MessagesSendEncryptedFile_Handler,
		},
		{
			MethodName: "messages_sendEncryptedService",
			Handler:    _RPCSecretChats_MessagesSendEncryptedService_Handler,
		},
		{
			MethodName: "messages_receivedQueue",
			Handler:    _RPCSecretChats_MessagesReceivedQueue_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCWebPageClient is the client API for RPCWebPage service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCWebPageClient interface {
	MessagesGetWebPagePreview(ctx context.Context, in *TLMessagesGetWebPagePreview, opts ...grpc.CallOption) (*MessageMedia, error)
	MessagesGetWebPage(ctx context.Context, in *TLMessagesGetWebPage, opts ...grpc.CallOption) (*WebPage, error)
}

type rPCWebPageClient struct {
	cc *grpc.ClientConn
}

func NewRPCWebPageClient(cc *grpc.ClientConn) RPCWebPageClient {
	return &rPCWebPageClient{cc}
}

func (c *rPCWebPageClient) MessagesGetWebPagePreview(ctx context.Context, in *TLMessagesGetWebPagePreview, opts ...grpc.CallOption) (*MessageMedia, error) {
	out := new(MessageMedia)
	err := c.cc.Invoke(ctx, "/mtproto.RPCWebPage/messages_getWebPagePreview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCWebPageClient) MessagesGetWebPage(ctx context.Context, in *TLMessagesGetWebPage, opts ...grpc.CallOption) (*WebPage, error) {
	out := new(WebPage)
	err := c.cc.Invoke(ctx, "/mtproto.RPCWebPage/messages_getWebPage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCWebPageServer is the server API for RPCWebPage service.
type RPCWebPageServer interface {
	MessagesGetWebPagePreview(context.Context, *TLMessagesGetWebPagePreview) (*MessageMedia, error)
	MessagesGetWebPage(context.Context, *TLMessagesGetWebPage) (*WebPage, error)
}

// UnimplementedRPCWebPageServer can be embedded to have forward compatible implementations.
type UnimplementedRPCWebPageServer struct {
}

func (*UnimplementedRPCWebPageServer) MessagesGetWebPagePreview(ctx context.Context, req *TLMessagesGetWebPagePreview) (*MessageMedia, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetWebPagePreview not implemented")
}
func (*UnimplementedRPCWebPageServer) MessagesGetWebPage(ctx context.Context, req *TLMessagesGetWebPage) (*WebPage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetWebPage not implemented")
}

func RegisterRPCWebPageServer(s *grpc.Server, srv RPCWebPageServer) {
	s.RegisterService(&_RPCWebPage_serviceDesc, srv)
}

func _RPCWebPage_MessagesGetWebPagePreview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetWebPagePreview)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCWebPageServer).MessagesGetWebPagePreview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCWebPage/MessagesGetWebPagePreview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCWebPageServer).MessagesGetWebPagePreview(ctx, req.(*TLMessagesGetWebPagePreview))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCWebPage_MessagesGetWebPage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetWebPage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCWebPageServer).MessagesGetWebPage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCWebPage/MessagesGetWebPage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCWebPageServer).MessagesGetWebPage(ctx, req.(*TLMessagesGetWebPage))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCWebPage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCWebPage",
	HandlerType: (*RPCWebPageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "messages_getWebPagePreview",
			Handler:    _RPCWebPage_MessagesGetWebPagePreview_Handler,
		},
		{
			MethodName: "messages_getWebPage",
			Handler:    _RPCWebPage_MessagesGetWebPage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCDraftsClient is the client API for RPCDrafts service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCDraftsClient interface {
	MessagesSaveDraft(ctx context.Context, in *TLMessagesSaveDraft, opts ...grpc.CallOption) (*Bool, error)
	MessagesGetAllDrafts(ctx context.Context, in *TLMessagesGetAllDrafts, opts ...grpc.CallOption) (*Updates, error)
	MessagesClearAllDrafts(ctx context.Context, in *TLMessagesClearAllDrafts, opts ...grpc.CallOption) (*Bool, error)
}

type rPCDraftsClient struct {
	cc *grpc.ClientConn
}

func NewRPCDraftsClient(cc *grpc.ClientConn) RPCDraftsClient {
	return &rPCDraftsClient{cc}
}

func (c *rPCDraftsClient) MessagesSaveDraft(ctx context.Context, in *TLMessagesSaveDraft, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCDrafts/messages_saveDraft", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCDraftsClient) MessagesGetAllDrafts(ctx context.Context, in *TLMessagesGetAllDrafts, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCDrafts/messages_getAllDrafts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCDraftsClient) MessagesClearAllDrafts(ctx context.Context, in *TLMessagesClearAllDrafts, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCDrafts/messages_clearAllDrafts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCDraftsServer is the server API for RPCDrafts service.
type RPCDraftsServer interface {
	MessagesSaveDraft(context.Context, *TLMessagesSaveDraft) (*Bool, error)
	MessagesGetAllDrafts(context.Context, *TLMessagesGetAllDrafts) (*Updates, error)
	MessagesClearAllDrafts(context.Context, *TLMessagesClearAllDrafts) (*Bool, error)
}

// UnimplementedRPCDraftsServer can be embedded to have forward compatible implementations.
type UnimplementedRPCDraftsServer struct {
}

func (*UnimplementedRPCDraftsServer) MessagesSaveDraft(ctx context.Context, req *TLMessagesSaveDraft) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSaveDraft not implemented")
}
func (*UnimplementedRPCDraftsServer) MessagesGetAllDrafts(ctx context.Context, req *TLMessagesGetAllDrafts) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetAllDrafts not implemented")
}
func (*UnimplementedRPCDraftsServer) MessagesClearAllDrafts(ctx context.Context, req *TLMessagesClearAllDrafts) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesClearAllDrafts not implemented")
}

func RegisterRPCDraftsServer(s *grpc.Server, srv RPCDraftsServer) {
	s.RegisterService(&_RPCDrafts_serviceDesc, srv)
}

func _RPCDrafts_MessagesSaveDraft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSaveDraft)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCDraftsServer).MessagesSaveDraft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCDrafts/MessagesSaveDraft",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCDraftsServer).MessagesSaveDraft(ctx, req.(*TLMessagesSaveDraft))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCDrafts_MessagesGetAllDrafts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetAllDrafts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCDraftsServer).MessagesGetAllDrafts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCDrafts/MessagesGetAllDrafts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCDraftsServer).MessagesGetAllDrafts(ctx, req.(*TLMessagesGetAllDrafts))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCDrafts_MessagesClearAllDrafts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesClearAllDrafts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCDraftsServer).MessagesClearAllDrafts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCDrafts/MessagesClearAllDrafts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCDraftsServer).MessagesClearAllDrafts(ctx, req.(*TLMessagesClearAllDrafts))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCDrafts_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCDrafts",
	HandlerType: (*RPCDraftsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "messages_saveDraft",
			Handler:    _RPCDrafts_MessagesSaveDraft_Handler,
		},
		{
			MethodName: "messages_getAllDrafts",
			Handler:    _RPCDrafts_MessagesGetAllDrafts_Handler,
		},
		{
			MethodName: "messages_clearAllDrafts",
			Handler:    _RPCDrafts_MessagesClearAllDrafts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCGamesClient is the client API for RPCGames service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCGamesClient interface {
	MessagesSetGameScore(ctx context.Context, in *TLMessagesSetGameScore, opts ...grpc.CallOption) (*Updates, error)
	MessagesSetInlineGameScore(ctx context.Context, in *TLMessagesSetInlineGameScore, opts ...grpc.CallOption) (*Bool, error)
	MessagesGetGameHighScores(ctx context.Context, in *TLMessagesGetGameHighScores, opts ...grpc.CallOption) (*Messages_HighScores, error)
	MessagesGetInlineGameHighScores(ctx context.Context, in *TLMessagesGetInlineGameHighScores, opts ...grpc.CallOption) (*Messages_HighScores, error)
}

type rPCGamesClient struct {
	cc *grpc.ClientConn
}

func NewRPCGamesClient(cc *grpc.ClientConn) RPCGamesClient {
	return &rPCGamesClient{cc}
}

func (c *rPCGamesClient) MessagesSetGameScore(ctx context.Context, in *TLMessagesSetGameScore, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGames/messages_setGameScore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGamesClient) MessagesSetInlineGameScore(ctx context.Context, in *TLMessagesSetInlineGameScore, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGames/messages_setInlineGameScore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGamesClient) MessagesGetGameHighScores(ctx context.Context, in *TLMessagesGetGameHighScores, opts ...grpc.CallOption) (*Messages_HighScores, error) {
	out := new(Messages_HighScores)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGames/messages_getGameHighScores", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGamesClient) MessagesGetInlineGameHighScores(ctx context.Context, in *TLMessagesGetInlineGameHighScores, opts ...grpc.CallOption) (*Messages_HighScores, error) {
	out := new(Messages_HighScores)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGames/messages_getInlineGameHighScores", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCGamesServer is the server API for RPCGames service.
type RPCGamesServer interface {
	MessagesSetGameScore(context.Context, *TLMessagesSetGameScore) (*Updates, error)
	MessagesSetInlineGameScore(context.Context, *TLMessagesSetInlineGameScore) (*Bool, error)
	MessagesGetGameHighScores(context.Context, *TLMessagesGetGameHighScores) (*Messages_HighScores, error)
	MessagesGetInlineGameHighScores(context.Context, *TLMessagesGetInlineGameHighScores) (*Messages_HighScores, error)
}

// UnimplementedRPCGamesServer can be embedded to have forward compatible implementations.
type UnimplementedRPCGamesServer struct {
}

func (*UnimplementedRPCGamesServer) MessagesSetGameScore(ctx context.Context, req *TLMessagesSetGameScore) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSetGameScore not implemented")
}
func (*UnimplementedRPCGamesServer) MessagesSetInlineGameScore(ctx context.Context, req *TLMessagesSetInlineGameScore) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSetInlineGameScore not implemented")
}
func (*UnimplementedRPCGamesServer) MessagesGetGameHighScores(ctx context.Context, req *TLMessagesGetGameHighScores) (*Messages_HighScores, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetGameHighScores not implemented")
}
func (*UnimplementedRPCGamesServer) MessagesGetInlineGameHighScores(ctx context.Context, req *TLMessagesGetInlineGameHighScores) (*Messages_HighScores, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetInlineGameHighScores not implemented")
}

func RegisterRPCGamesServer(s *grpc.Server, srv RPCGamesServer) {
	s.RegisterService(&_RPCGames_serviceDesc, srv)
}

func _RPCGames_MessagesSetGameScore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSetGameScore)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGamesServer).MessagesSetGameScore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGames/MessagesSetGameScore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGamesServer).MessagesSetGameScore(ctx, req.(*TLMessagesSetGameScore))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGames_MessagesSetInlineGameScore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSetInlineGameScore)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGamesServer).MessagesSetInlineGameScore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGames/MessagesSetInlineGameScore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGamesServer).MessagesSetInlineGameScore(ctx, req.(*TLMessagesSetInlineGameScore))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGames_MessagesGetGameHighScores_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetGameHighScores)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGamesServer).MessagesGetGameHighScores(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGames/MessagesGetGameHighScores",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGamesServer).MessagesGetGameHighScores(ctx, req.(*TLMessagesGetGameHighScores))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGames_MessagesGetInlineGameHighScores_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetInlineGameHighScores)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGamesServer).MessagesGetInlineGameHighScores(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGames/MessagesGetInlineGameHighScores",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGamesServer).MessagesGetInlineGameHighScores(ctx, req.(*TLMessagesGetInlineGameHighScores))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCGames_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCGames",
	HandlerType: (*RPCGamesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "messages_setGameScore",
			Handler:    _RPCGames_MessagesSetGameScore_Handler,
		},
		{
			MethodName: "messages_setInlineGameScore",
			Handler:    _RPCGames_MessagesSetInlineGameScore_Handler,
		},
		{
			MethodName: "messages_getGameHighScores",
			Handler:    _RPCGames_MessagesGetGameHighScores_Handler,
		},
		{
			MethodName: "messages_getInlineGameHighScores",
			Handler:    _RPCGames_MessagesGetInlineGameHighScores_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCWallpapersClient is the client API for RPCWallpapers service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCWallpapersClient interface {
	AccountGetWallPapers(ctx context.Context, in *TLAccountGetWallPapers, opts ...grpc.CallOption) (*Account_WallPapers, error)
	AccountGetWallPaper(ctx context.Context, in *TLAccountGetWallPaper, opts ...grpc.CallOption) (*WallPaper, error)
	AccountUploadWallPaper(ctx context.Context, in *TLAccountUploadWallPaper, opts ...grpc.CallOption) (*WallPaper, error)
	AccountSaveWallPaper(ctx context.Context, in *TLAccountSaveWallPaper, opts ...grpc.CallOption) (*Bool, error)
	AccountInstallWallPaper(ctx context.Context, in *TLAccountInstallWallPaper, opts ...grpc.CallOption) (*Bool, error)
	AccountResetWallPapers(ctx context.Context, in *TLAccountResetWallPapers, opts ...grpc.CallOption) (*Bool, error)
	AccountGetMultiWallPapers(ctx context.Context, in *TLAccountGetMultiWallPapers, opts ...grpc.CallOption) (*Vector_WallPaper, error)
}

type rPCWallpapersClient struct {
	cc *grpc.ClientConn
}

func NewRPCWallpapersClient(cc *grpc.ClientConn) RPCWallpapersClient {
	return &rPCWallpapersClient{cc}
}

func (c *rPCWallpapersClient) AccountGetWallPapers(ctx context.Context, in *TLAccountGetWallPapers, opts ...grpc.CallOption) (*Account_WallPapers, error) {
	out := new(Account_WallPapers)
	err := c.cc.Invoke(ctx, "/mtproto.RPCWallpapers/account_getWallPapers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCWallpapersClient) AccountGetWallPaper(ctx context.Context, in *TLAccountGetWallPaper, opts ...grpc.CallOption) (*WallPaper, error) {
	out := new(WallPaper)
	err := c.cc.Invoke(ctx, "/mtproto.RPCWallpapers/account_getWallPaper", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCWallpapersClient) AccountUploadWallPaper(ctx context.Context, in *TLAccountUploadWallPaper, opts ...grpc.CallOption) (*WallPaper, error) {
	out := new(WallPaper)
	err := c.cc.Invoke(ctx, "/mtproto.RPCWallpapers/account_uploadWallPaper", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCWallpapersClient) AccountSaveWallPaper(ctx context.Context, in *TLAccountSaveWallPaper, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCWallpapers/account_saveWallPaper", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCWallpapersClient) AccountInstallWallPaper(ctx context.Context, in *TLAccountInstallWallPaper, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCWallpapers/account_installWallPaper", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCWallpapersClient) AccountResetWallPapers(ctx context.Context, in *TLAccountResetWallPapers, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCWallpapers/account_resetWallPapers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCWallpapersClient) AccountGetMultiWallPapers(ctx context.Context, in *TLAccountGetMultiWallPapers, opts ...grpc.CallOption) (*Vector_WallPaper, error) {
	out := new(Vector_WallPaper)
	err := c.cc.Invoke(ctx, "/mtproto.RPCWallpapers/account_getMultiWallPapers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCWallpapersServer is the server API for RPCWallpapers service.
type RPCWallpapersServer interface {
	AccountGetWallPapers(context.Context, *TLAccountGetWallPapers) (*Account_WallPapers, error)
	AccountGetWallPaper(context.Context, *TLAccountGetWallPaper) (*WallPaper, error)
	AccountUploadWallPaper(context.Context, *TLAccountUploadWallPaper) (*WallPaper, error)
	AccountSaveWallPaper(context.Context, *TLAccountSaveWallPaper) (*Bool, error)
	AccountInstallWallPaper(context.Context, *TLAccountInstallWallPaper) (*Bool, error)
	AccountResetWallPapers(context.Context, *TLAccountResetWallPapers) (*Bool, error)
	AccountGetMultiWallPapers(context.Context, *TLAccountGetMultiWallPapers) (*Vector_WallPaper, error)
}

// UnimplementedRPCWallpapersServer can be embedded to have forward compatible implementations.
type UnimplementedRPCWallpapersServer struct {
}

func (*UnimplementedRPCWallpapersServer) AccountGetWallPapers(ctx context.Context, req *TLAccountGetWallPapers) (*Account_WallPapers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountGetWallPapers not implemented")
}
func (*UnimplementedRPCWallpapersServer) AccountGetWallPaper(ctx context.Context, req *TLAccountGetWallPaper) (*WallPaper, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountGetWallPaper not implemented")
}
func (*UnimplementedRPCWallpapersServer) AccountUploadWallPaper(ctx context.Context, req *TLAccountUploadWallPaper) (*WallPaper, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountUploadWallPaper not implemented")
}
func (*UnimplementedRPCWallpapersServer) AccountSaveWallPaper(ctx context.Context, req *TLAccountSaveWallPaper) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountSaveWallPaper not implemented")
}
func (*UnimplementedRPCWallpapersServer) AccountInstallWallPaper(ctx context.Context, req *TLAccountInstallWallPaper) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountInstallWallPaper not implemented")
}
func (*UnimplementedRPCWallpapersServer) AccountResetWallPapers(ctx context.Context, req *TLAccountResetWallPapers) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountResetWallPapers not implemented")
}
func (*UnimplementedRPCWallpapersServer) AccountGetMultiWallPapers(ctx context.Context, req *TLAccountGetMultiWallPapers) (*Vector_WallPaper, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountGetMultiWallPapers not implemented")
}

func RegisterRPCWallpapersServer(s *grpc.Server, srv RPCWallpapersServer) {
	s.RegisterService(&_RPCWallpapers_serviceDesc, srv)
}

func _RPCWallpapers_AccountGetWallPapers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetWallPapers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCWallpapersServer).AccountGetWallPapers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCWallpapers/AccountGetWallPapers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCWallpapersServer).AccountGetWallPapers(ctx, req.(*TLAccountGetWallPapers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCWallpapers_AccountGetWallPaper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetWallPaper)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCWallpapersServer).AccountGetWallPaper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCWallpapers/AccountGetWallPaper",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCWallpapersServer).AccountGetWallPaper(ctx, req.(*TLAccountGetWallPaper))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCWallpapers_AccountUploadWallPaper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountUploadWallPaper)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCWallpapersServer).AccountUploadWallPaper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCWallpapers/AccountUploadWallPaper",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCWallpapersServer).AccountUploadWallPaper(ctx, req.(*TLAccountUploadWallPaper))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCWallpapers_AccountSaveWallPaper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSaveWallPaper)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCWallpapersServer).AccountSaveWallPaper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCWallpapers/AccountSaveWallPaper",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCWallpapersServer).AccountSaveWallPaper(ctx, req.(*TLAccountSaveWallPaper))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCWallpapers_AccountInstallWallPaper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountInstallWallPaper)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCWallpapersServer).AccountInstallWallPaper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCWallpapers/AccountInstallWallPaper",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCWallpapersServer).AccountInstallWallPaper(ctx, req.(*TLAccountInstallWallPaper))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCWallpapers_AccountResetWallPapers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountResetWallPapers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCWallpapersServer).AccountResetWallPapers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCWallpapers/AccountResetWallPapers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCWallpapersServer).AccountResetWallPapers(ctx, req.(*TLAccountResetWallPapers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCWallpapers_AccountGetMultiWallPapers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetMultiWallPapers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCWallpapersServer).AccountGetMultiWallPapers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCWallpapers/AccountGetMultiWallPapers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCWallpapersServer).AccountGetMultiWallPapers(ctx, req.(*TLAccountGetMultiWallPapers))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCWallpapers_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCWallpapers",
	HandlerType: (*RPCWallpapersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "account_getWallPapers",
			Handler:    _RPCWallpapers_AccountGetWallPapers_Handler,
		},
		{
			MethodName: "account_getWallPaper",
			Handler:    _RPCWallpapers_AccountGetWallPaper_Handler,
		},
		{
			MethodName: "account_uploadWallPaper",
			Handler:    _RPCWallpapers_AccountUploadWallPaper_Handler,
		},
		{
			MethodName: "account_saveWallPaper",
			Handler:    _RPCWallpapers_AccountSaveWallPaper_Handler,
		},
		{
			MethodName: "account_installWallPaper",
			Handler:    _RPCWallpapers_AccountInstallWallPaper_Handler,
		},
		{
			MethodName: "account_resetWallPapers",
			Handler:    _RPCWallpapers_AccountResetWallPapers_Handler,
		},
		{
			MethodName: "account_getMultiWallPapers",
			Handler:    _RPCWallpapers_AccountGetMultiWallPapers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCUsernamesClient is the client API for RPCUsernames service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCUsernamesClient interface {
	AccountCheckUsername(ctx context.Context, in *TLAccountCheckUsername, opts ...grpc.CallOption) (*Bool, error)
	AccountUpdateUsername(ctx context.Context, in *TLAccountUpdateUsername, opts ...grpc.CallOption) (*User, error)
	ContactsResolveUsername(ctx context.Context, in *TLContactsResolveUsername, opts ...grpc.CallOption) (*Contacts_ResolvedPeer, error)
	ChannelsCheckUsername(ctx context.Context, in *TLChannelsCheckUsername, opts ...grpc.CallOption) (*Bool, error)
	ChannelsUpdateUsername(ctx context.Context, in *TLChannelsUpdateUsername, opts ...grpc.CallOption) (*Bool, error)
}

type rPCUsernamesClient struct {
	cc *grpc.ClientConn
}

func NewRPCUsernamesClient(cc *grpc.ClientConn) RPCUsernamesClient {
	return &rPCUsernamesClient{cc}
}

func (c *rPCUsernamesClient) AccountCheckUsername(ctx context.Context, in *TLAccountCheckUsername, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUsernames/account_checkUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCUsernamesClient) AccountUpdateUsername(ctx context.Context, in *TLAccountUpdateUsername, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUsernames/account_updateUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCUsernamesClient) ContactsResolveUsername(ctx context.Context, in *TLContactsResolveUsername, opts ...grpc.CallOption) (*Contacts_ResolvedPeer, error) {
	out := new(Contacts_ResolvedPeer)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUsernames/contacts_resolveUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCUsernamesClient) ChannelsCheckUsername(ctx context.Context, in *TLChannelsCheckUsername, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUsernames/channels_checkUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCUsernamesClient) ChannelsUpdateUsername(ctx context.Context, in *TLChannelsUpdateUsername, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUsernames/channels_updateUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCUsernamesServer is the server API for RPCUsernames service.
type RPCUsernamesServer interface {
	AccountCheckUsername(context.Context, *TLAccountCheckUsername) (*Bool, error)
	AccountUpdateUsername(context.Context, *TLAccountUpdateUsername) (*User, error)
	ContactsResolveUsername(context.Context, *TLContactsResolveUsername) (*Contacts_ResolvedPeer, error)
	ChannelsCheckUsername(context.Context, *TLChannelsCheckUsername) (*Bool, error)
	ChannelsUpdateUsername(context.Context, *TLChannelsUpdateUsername) (*Bool, error)
}

// UnimplementedRPCUsernamesServer can be embedded to have forward compatible implementations.
type UnimplementedRPCUsernamesServer struct {
}

func (*UnimplementedRPCUsernamesServer) AccountCheckUsername(ctx context.Context, req *TLAccountCheckUsername) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountCheckUsername not implemented")
}
func (*UnimplementedRPCUsernamesServer) AccountUpdateUsername(ctx context.Context, req *TLAccountUpdateUsername) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountUpdateUsername not implemented")
}
func (*UnimplementedRPCUsernamesServer) ContactsResolveUsername(ctx context.Context, req *TLContactsResolveUsername) (*Contacts_ResolvedPeer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactsResolveUsername not implemented")
}
func (*UnimplementedRPCUsernamesServer) ChannelsCheckUsername(ctx context.Context, req *TLChannelsCheckUsername) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsCheckUsername not implemented")
}
func (*UnimplementedRPCUsernamesServer) ChannelsUpdateUsername(ctx context.Context, req *TLChannelsUpdateUsername) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsUpdateUsername not implemented")
}

func RegisterRPCUsernamesServer(s *grpc.Server, srv RPCUsernamesServer) {
	s.RegisterService(&_RPCUsernames_serviceDesc, srv)
}

func _RPCUsernames_AccountCheckUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountCheckUsername)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUsernamesServer).AccountCheckUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUsernames/AccountCheckUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUsernamesServer).AccountCheckUsername(ctx, req.(*TLAccountCheckUsername))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCUsernames_AccountUpdateUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountUpdateUsername)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUsernamesServer).AccountUpdateUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUsernames/AccountUpdateUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUsernamesServer).AccountUpdateUsername(ctx, req.(*TLAccountUpdateUsername))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCUsernames_ContactsResolveUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsResolveUsername)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUsernamesServer).ContactsResolveUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUsernames/ContactsResolveUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUsernamesServer).ContactsResolveUsername(ctx, req.(*TLContactsResolveUsername))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCUsernames_ChannelsCheckUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsCheckUsername)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUsernamesServer).ChannelsCheckUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUsernames/ChannelsCheckUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUsernamesServer).ChannelsCheckUsername(ctx, req.(*TLChannelsCheckUsername))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCUsernames_ChannelsUpdateUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsUpdateUsername)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUsernamesServer).ChannelsUpdateUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUsernames/ChannelsUpdateUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUsernamesServer).ChannelsUpdateUsername(ctx, req.(*TLChannelsUpdateUsername))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCUsernames_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCUsernames",
	HandlerType: (*RPCUsernamesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "account_checkUsername",
			Handler:    _RPCUsernames_AccountCheckUsername_Handler,
		},
		{
			MethodName: "account_updateUsername",
			Handler:    _RPCUsernames_AccountUpdateUsername_Handler,
		},
		{
			MethodName: "contacts_resolveUsername",
			Handler:    _RPCUsernames_ContactsResolveUsername_Handler,
		},
		{
			MethodName: "channels_checkUsername",
			Handler:    _RPCUsernames_ChannelsCheckUsername_Handler,
		},
		{
			MethodName: "channels_updateUsername",
			Handler:    _RPCUsernames_ChannelsUpdateUsername_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCChatsClient is the client API for RPCChats service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCChatsClient interface {
	MessagesGetChats(ctx context.Context, in *TLMessagesGetChats, opts ...grpc.CallOption) (*Messages_Chats, error)
	MessagesGetFullChat(ctx context.Context, in *TLMessagesGetFullChat, opts ...grpc.CallOption) (*Messages_ChatFull, error)
	MessagesEditChatTitle(ctx context.Context, in *TLMessagesEditChatTitle, opts ...grpc.CallOption) (*Updates, error)
	MessagesEditChatPhoto(ctx context.Context, in *TLMessagesEditChatPhoto, opts ...grpc.CallOption) (*Updates, error)
	MessagesAddChatUser(ctx context.Context, in *TLMessagesAddChatUser, opts ...grpc.CallOption) (*Updates, error)
	MessagesDeleteChatUser(ctx context.Context, in *TLMessagesDeleteChatUser, opts ...grpc.CallOption) (*Updates, error)
	MessagesCreateChat(ctx context.Context, in *TLMessagesCreateChat, opts ...grpc.CallOption) (*Updates, error)
	MessagesEditChatAdmin(ctx context.Context, in *TLMessagesEditChatAdmin, opts ...grpc.CallOption) (*Bool, error)
	MessagesMigrateChat(ctx context.Context, in *TLMessagesMigrateChat, opts ...grpc.CallOption) (*Updates, error)
	MessagesGetCommonChats(ctx context.Context, in *TLMessagesGetCommonChats, opts ...grpc.CallOption) (*Messages_Chats, error)
	MessagesGetAllChats(ctx context.Context, in *TLMessagesGetAllChats, opts ...grpc.CallOption) (*Messages_Chats, error)
	MessagesEditChatAbout(ctx context.Context, in *TLMessagesEditChatAbout, opts ...grpc.CallOption) (*Bool, error)
	MessagesEditChatDefaultBannedRights(ctx context.Context, in *TLMessagesEditChatDefaultBannedRights, opts ...grpc.CallOption) (*Updates, error)
	MessagesDeleteChat(ctx context.Context, in *TLMessagesDeleteChat, opts ...grpc.CallOption) (*Bool, error)
	MessagesGetMessageReadParticipants(ctx context.Context, in *TLMessagesGetMessageReadParticipants, opts ...grpc.CallOption) (*Vector_Long, error)
	ChannelsConvertToGigagroup(ctx context.Context, in *TLChannelsConvertToGigagroup, opts ...grpc.CallOption) (*Updates, error)
}

type rPCChatsClient struct {
	cc *grpc.ClientConn
}

func NewRPCChatsClient(cc *grpc.ClientConn) RPCChatsClient {
	return &rPCChatsClient{cc}
}

func (c *rPCChatsClient) MessagesGetChats(ctx context.Context, in *TLMessagesGetChats, opts ...grpc.CallOption) (*Messages_Chats, error) {
	out := new(Messages_Chats)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChats/messages_getChats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChatsClient) MessagesGetFullChat(ctx context.Context, in *TLMessagesGetFullChat, opts ...grpc.CallOption) (*Messages_ChatFull, error) {
	out := new(Messages_ChatFull)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChats/messages_getFullChat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChatsClient) MessagesEditChatTitle(ctx context.Context, in *TLMessagesEditChatTitle, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChats/messages_editChatTitle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChatsClient) MessagesEditChatPhoto(ctx context.Context, in *TLMessagesEditChatPhoto, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChats/messages_editChatPhoto", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChatsClient) MessagesAddChatUser(ctx context.Context, in *TLMessagesAddChatUser, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChats/messages_addChatUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChatsClient) MessagesDeleteChatUser(ctx context.Context, in *TLMessagesDeleteChatUser, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChats/messages_deleteChatUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChatsClient) MessagesCreateChat(ctx context.Context, in *TLMessagesCreateChat, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChats/messages_createChat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChatsClient) MessagesEditChatAdmin(ctx context.Context, in *TLMessagesEditChatAdmin, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChats/messages_editChatAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChatsClient) MessagesMigrateChat(ctx context.Context, in *TLMessagesMigrateChat, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChats/messages_migrateChat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChatsClient) MessagesGetCommonChats(ctx context.Context, in *TLMessagesGetCommonChats, opts ...grpc.CallOption) (*Messages_Chats, error) {
	out := new(Messages_Chats)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChats/messages_getCommonChats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChatsClient) MessagesGetAllChats(ctx context.Context, in *TLMessagesGetAllChats, opts ...grpc.CallOption) (*Messages_Chats, error) {
	out := new(Messages_Chats)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChats/messages_getAllChats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChatsClient) MessagesEditChatAbout(ctx context.Context, in *TLMessagesEditChatAbout, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChats/messages_editChatAbout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChatsClient) MessagesEditChatDefaultBannedRights(ctx context.Context, in *TLMessagesEditChatDefaultBannedRights, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChats/messages_editChatDefaultBannedRights", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChatsClient) MessagesDeleteChat(ctx context.Context, in *TLMessagesDeleteChat, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChats/messages_deleteChat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChatsClient) MessagesGetMessageReadParticipants(ctx context.Context, in *TLMessagesGetMessageReadParticipants, opts ...grpc.CallOption) (*Vector_Long, error) {
	out := new(Vector_Long)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChats/messages_getMessageReadParticipants", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCChatsClient) ChannelsConvertToGigagroup(ctx context.Context, in *TLChannelsConvertToGigagroup, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCChats/channels_convertToGigagroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCChatsServer is the server API for RPCChats service.
type RPCChatsServer interface {
	MessagesGetChats(context.Context, *TLMessagesGetChats) (*Messages_Chats, error)
	MessagesGetFullChat(context.Context, *TLMessagesGetFullChat) (*Messages_ChatFull, error)
	MessagesEditChatTitle(context.Context, *TLMessagesEditChatTitle) (*Updates, error)
	MessagesEditChatPhoto(context.Context, *TLMessagesEditChatPhoto) (*Updates, error)
	MessagesAddChatUser(context.Context, *TLMessagesAddChatUser) (*Updates, error)
	MessagesDeleteChatUser(context.Context, *TLMessagesDeleteChatUser) (*Updates, error)
	MessagesCreateChat(context.Context, *TLMessagesCreateChat) (*Updates, error)
	MessagesEditChatAdmin(context.Context, *TLMessagesEditChatAdmin) (*Bool, error)
	MessagesMigrateChat(context.Context, *TLMessagesMigrateChat) (*Updates, error)
	MessagesGetCommonChats(context.Context, *TLMessagesGetCommonChats) (*Messages_Chats, error)
	MessagesGetAllChats(context.Context, *TLMessagesGetAllChats) (*Messages_Chats, error)
	MessagesEditChatAbout(context.Context, *TLMessagesEditChatAbout) (*Bool, error)
	MessagesEditChatDefaultBannedRights(context.Context, *TLMessagesEditChatDefaultBannedRights) (*Updates, error)
	MessagesDeleteChat(context.Context, *TLMessagesDeleteChat) (*Bool, error)
	MessagesGetMessageReadParticipants(context.Context, *TLMessagesGetMessageReadParticipants) (*Vector_Long, error)
	ChannelsConvertToGigagroup(context.Context, *TLChannelsConvertToGigagroup) (*Updates, error)
}

// UnimplementedRPCChatsServer can be embedded to have forward compatible implementations.
type UnimplementedRPCChatsServer struct {
}

func (*UnimplementedRPCChatsServer) MessagesGetChats(ctx context.Context, req *TLMessagesGetChats) (*Messages_Chats, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetChats not implemented")
}
func (*UnimplementedRPCChatsServer) MessagesGetFullChat(ctx context.Context, req *TLMessagesGetFullChat) (*Messages_ChatFull, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetFullChat not implemented")
}
func (*UnimplementedRPCChatsServer) MessagesEditChatTitle(ctx context.Context, req *TLMessagesEditChatTitle) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesEditChatTitle not implemented")
}
func (*UnimplementedRPCChatsServer) MessagesEditChatPhoto(ctx context.Context, req *TLMessagesEditChatPhoto) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesEditChatPhoto not implemented")
}
func (*UnimplementedRPCChatsServer) MessagesAddChatUser(ctx context.Context, req *TLMessagesAddChatUser) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesAddChatUser not implemented")
}
func (*UnimplementedRPCChatsServer) MessagesDeleteChatUser(ctx context.Context, req *TLMessagesDeleteChatUser) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesDeleteChatUser not implemented")
}
func (*UnimplementedRPCChatsServer) MessagesCreateChat(ctx context.Context, req *TLMessagesCreateChat) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesCreateChat not implemented")
}
func (*UnimplementedRPCChatsServer) MessagesEditChatAdmin(ctx context.Context, req *TLMessagesEditChatAdmin) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesEditChatAdmin not implemented")
}
func (*UnimplementedRPCChatsServer) MessagesMigrateChat(ctx context.Context, req *TLMessagesMigrateChat) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesMigrateChat not implemented")
}
func (*UnimplementedRPCChatsServer) MessagesGetCommonChats(ctx context.Context, req *TLMessagesGetCommonChats) (*Messages_Chats, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetCommonChats not implemented")
}
func (*UnimplementedRPCChatsServer) MessagesGetAllChats(ctx context.Context, req *TLMessagesGetAllChats) (*Messages_Chats, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetAllChats not implemented")
}
func (*UnimplementedRPCChatsServer) MessagesEditChatAbout(ctx context.Context, req *TLMessagesEditChatAbout) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesEditChatAbout not implemented")
}
func (*UnimplementedRPCChatsServer) MessagesEditChatDefaultBannedRights(ctx context.Context, req *TLMessagesEditChatDefaultBannedRights) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesEditChatDefaultBannedRights not implemented")
}
func (*UnimplementedRPCChatsServer) MessagesDeleteChat(ctx context.Context, req *TLMessagesDeleteChat) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesDeleteChat not implemented")
}
func (*UnimplementedRPCChatsServer) MessagesGetMessageReadParticipants(ctx context.Context, req *TLMessagesGetMessageReadParticipants) (*Vector_Long, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetMessageReadParticipants not implemented")
}
func (*UnimplementedRPCChatsServer) ChannelsConvertToGigagroup(ctx context.Context, req *TLChannelsConvertToGigagroup) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsConvertToGigagroup not implemented")
}

func RegisterRPCChatsServer(s *grpc.Server, srv RPCChatsServer) {
	s.RegisterService(&_RPCChats_serviceDesc, srv)
}

func _RPCChats_MessagesGetChats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetChats)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatsServer).MessagesGetChats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChats/MessagesGetChats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatsServer).MessagesGetChats(ctx, req.(*TLMessagesGetChats))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChats_MessagesGetFullChat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetFullChat)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatsServer).MessagesGetFullChat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChats/MessagesGetFullChat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatsServer).MessagesGetFullChat(ctx, req.(*TLMessagesGetFullChat))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChats_MessagesEditChatTitle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesEditChatTitle)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatsServer).MessagesEditChatTitle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChats/MessagesEditChatTitle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatsServer).MessagesEditChatTitle(ctx, req.(*TLMessagesEditChatTitle))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChats_MessagesEditChatPhoto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesEditChatPhoto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatsServer).MessagesEditChatPhoto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChats/MessagesEditChatPhoto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatsServer).MessagesEditChatPhoto(ctx, req.(*TLMessagesEditChatPhoto))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChats_MessagesAddChatUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesAddChatUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatsServer).MessagesAddChatUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChats/MessagesAddChatUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatsServer).MessagesAddChatUser(ctx, req.(*TLMessagesAddChatUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChats_MessagesDeleteChatUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesDeleteChatUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatsServer).MessagesDeleteChatUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChats/MessagesDeleteChatUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatsServer).MessagesDeleteChatUser(ctx, req.(*TLMessagesDeleteChatUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChats_MessagesCreateChat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesCreateChat)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatsServer).MessagesCreateChat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChats/MessagesCreateChat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatsServer).MessagesCreateChat(ctx, req.(*TLMessagesCreateChat))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChats_MessagesEditChatAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesEditChatAdmin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatsServer).MessagesEditChatAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChats/MessagesEditChatAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatsServer).MessagesEditChatAdmin(ctx, req.(*TLMessagesEditChatAdmin))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChats_MessagesMigrateChat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesMigrateChat)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatsServer).MessagesMigrateChat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChats/MessagesMigrateChat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatsServer).MessagesMigrateChat(ctx, req.(*TLMessagesMigrateChat))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChats_MessagesGetCommonChats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetCommonChats)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatsServer).MessagesGetCommonChats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChats/MessagesGetCommonChats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatsServer).MessagesGetCommonChats(ctx, req.(*TLMessagesGetCommonChats))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChats_MessagesGetAllChats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetAllChats)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatsServer).MessagesGetAllChats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChats/MessagesGetAllChats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatsServer).MessagesGetAllChats(ctx, req.(*TLMessagesGetAllChats))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChats_MessagesEditChatAbout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesEditChatAbout)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatsServer).MessagesEditChatAbout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChats/MessagesEditChatAbout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatsServer).MessagesEditChatAbout(ctx, req.(*TLMessagesEditChatAbout))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChats_MessagesEditChatDefaultBannedRights_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesEditChatDefaultBannedRights)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatsServer).MessagesEditChatDefaultBannedRights(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChats/MessagesEditChatDefaultBannedRights",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatsServer).MessagesEditChatDefaultBannedRights(ctx, req.(*TLMessagesEditChatDefaultBannedRights))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChats_MessagesDeleteChat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesDeleteChat)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatsServer).MessagesDeleteChat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChats/MessagesDeleteChat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatsServer).MessagesDeleteChat(ctx, req.(*TLMessagesDeleteChat))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChats_MessagesGetMessageReadParticipants_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetMessageReadParticipants)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatsServer).MessagesGetMessageReadParticipants(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChats/MessagesGetMessageReadParticipants",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatsServer).MessagesGetMessageReadParticipants(ctx, req.(*TLMessagesGetMessageReadParticipants))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCChats_ChannelsConvertToGigagroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsConvertToGigagroup)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCChatsServer).ChannelsConvertToGigagroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCChats/ChannelsConvertToGigagroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCChatsServer).ChannelsConvertToGigagroup(ctx, req.(*TLChannelsConvertToGigagroup))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCChats_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCChats",
	HandlerType: (*RPCChatsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "messages_getChats",
			Handler:    _RPCChats_MessagesGetChats_Handler,
		},
		{
			MethodName: "messages_getFullChat",
			Handler:    _RPCChats_MessagesGetFullChat_Handler,
		},
		{
			MethodName: "messages_editChatTitle",
			Handler:    _RPCChats_MessagesEditChatTitle_Handler,
		},
		{
			MethodName: "messages_editChatPhoto",
			Handler:    _RPCChats_MessagesEditChatPhoto_Handler,
		},
		{
			MethodName: "messages_addChatUser",
			Handler:    _RPCChats_MessagesAddChatUser_Handler,
		},
		{
			MethodName: "messages_deleteChatUser",
			Handler:    _RPCChats_MessagesDeleteChatUser_Handler,
		},
		{
			MethodName: "messages_createChat",
			Handler:    _RPCChats_MessagesCreateChat_Handler,
		},
		{
			MethodName: "messages_editChatAdmin",
			Handler:    _RPCChats_MessagesEditChatAdmin_Handler,
		},
		{
			MethodName: "messages_migrateChat",
			Handler:    _RPCChats_MessagesMigrateChat_Handler,
		},
		{
			MethodName: "messages_getCommonChats",
			Handler:    _RPCChats_MessagesGetCommonChats_Handler,
		},
		{
			MethodName: "messages_getAllChats",
			Handler:    _RPCChats_MessagesGetAllChats_Handler,
		},
		{
			MethodName: "messages_editChatAbout",
			Handler:    _RPCChats_MessagesEditChatAbout_Handler,
		},
		{
			MethodName: "messages_editChatDefaultBannedRights",
			Handler:    _RPCChats_MessagesEditChatDefaultBannedRights_Handler,
		},
		{
			MethodName: "messages_deleteChat",
			Handler:    _RPCChats_MessagesDeleteChat_Handler,
		},
		{
			MethodName: "messages_getMessageReadParticipants",
			Handler:    _RPCChats_MessagesGetMessageReadParticipants_Handler,
		},
		{
			MethodName: "channels_convertToGigagroup",
			Handler:    _RPCChats_ChannelsConvertToGigagroup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCDeepLinksClient is the client API for RPCDeepLinks service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCDeepLinksClient interface {
	MessagesStartBot(ctx context.Context, in *TLMessagesStartBot, opts ...grpc.CallOption) (*Updates, error)
	HelpGetRecentMeUrls(ctx context.Context, in *TLHelpGetRecentMeUrls, opts ...grpc.CallOption) (*Help_RecentMeUrls, error)
	HelpGetDeepLinkInfo(ctx context.Context, in *TLHelpGetDeepLinkInfo, opts ...grpc.CallOption) (*Help_DeepLinkInfo, error)
}

type rPCDeepLinksClient struct {
	cc *grpc.ClientConn
}

func NewRPCDeepLinksClient(cc *grpc.ClientConn) RPCDeepLinksClient {
	return &rPCDeepLinksClient{cc}
}

func (c *rPCDeepLinksClient) MessagesStartBot(ctx context.Context, in *TLMessagesStartBot, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCDeepLinks/messages_startBot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCDeepLinksClient) HelpGetRecentMeUrls(ctx context.Context, in *TLHelpGetRecentMeUrls, opts ...grpc.CallOption) (*Help_RecentMeUrls, error) {
	out := new(Help_RecentMeUrls)
	err := c.cc.Invoke(ctx, "/mtproto.RPCDeepLinks/help_getRecentMeUrls", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCDeepLinksClient) HelpGetDeepLinkInfo(ctx context.Context, in *TLHelpGetDeepLinkInfo, opts ...grpc.CallOption) (*Help_DeepLinkInfo, error) {
	out := new(Help_DeepLinkInfo)
	err := c.cc.Invoke(ctx, "/mtproto.RPCDeepLinks/help_getDeepLinkInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCDeepLinksServer is the server API for RPCDeepLinks service.
type RPCDeepLinksServer interface {
	MessagesStartBot(context.Context, *TLMessagesStartBot) (*Updates, error)
	HelpGetRecentMeUrls(context.Context, *TLHelpGetRecentMeUrls) (*Help_RecentMeUrls, error)
	HelpGetDeepLinkInfo(context.Context, *TLHelpGetDeepLinkInfo) (*Help_DeepLinkInfo, error)
}

// UnimplementedRPCDeepLinksServer can be embedded to have forward compatible implementations.
type UnimplementedRPCDeepLinksServer struct {
}

func (*UnimplementedRPCDeepLinksServer) MessagesStartBot(ctx context.Context, req *TLMessagesStartBot) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesStartBot not implemented")
}
func (*UnimplementedRPCDeepLinksServer) HelpGetRecentMeUrls(ctx context.Context, req *TLHelpGetRecentMeUrls) (*Help_RecentMeUrls, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelpGetRecentMeUrls not implemented")
}
func (*UnimplementedRPCDeepLinksServer) HelpGetDeepLinkInfo(ctx context.Context, req *TLHelpGetDeepLinkInfo) (*Help_DeepLinkInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelpGetDeepLinkInfo not implemented")
}

func RegisterRPCDeepLinksServer(s *grpc.Server, srv RPCDeepLinksServer) {
	s.RegisterService(&_RPCDeepLinks_serviceDesc, srv)
}

func _RPCDeepLinks_MessagesStartBot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesStartBot)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCDeepLinksServer).MessagesStartBot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCDeepLinks/MessagesStartBot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCDeepLinksServer).MessagesStartBot(ctx, req.(*TLMessagesStartBot))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCDeepLinks_HelpGetRecentMeUrls_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetRecentMeUrls)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCDeepLinksServer).HelpGetRecentMeUrls(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCDeepLinks/HelpGetRecentMeUrls",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCDeepLinksServer).HelpGetRecentMeUrls(ctx, req.(*TLHelpGetRecentMeUrls))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCDeepLinks_HelpGetDeepLinkInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetDeepLinkInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCDeepLinksServer).HelpGetDeepLinkInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCDeepLinks/HelpGetDeepLinkInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCDeepLinksServer).HelpGetDeepLinkInfo(ctx, req.(*TLHelpGetDeepLinkInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCDeepLinks_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCDeepLinks",
	HandlerType: (*RPCDeepLinksServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "messages_startBot",
			Handler:    _RPCDeepLinks_MessagesStartBot_Handler,
		},
		{
			MethodName: "help_getRecentMeUrls",
			Handler:    _RPCDeepLinks_HelpGetRecentMeUrls_Handler,
		},
		{
			MethodName: "help_getDeepLinkInfo",
			Handler:    _RPCDeepLinks_HelpGetDeepLinkInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCConfigurationClient is the client API for RPCConfiguration service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCConfigurationClient interface {
	HelpGetConfig(ctx context.Context, in *TLHelpGetConfig, opts ...grpc.CallOption) (*Config, error)
	HelpGetNearestDc(ctx context.Context, in *TLHelpGetNearestDc, opts ...grpc.CallOption) (*NearestDc, error)
	HelpGetAppUpdate(ctx context.Context, in *TLHelpGetAppUpdate, opts ...grpc.CallOption) (*Help_AppUpdate, error)
	HelpGetInviteText(ctx context.Context, in *TLHelpGetInviteText, opts ...grpc.CallOption) (*Help_InviteText, error)
	HelpGetSupport(ctx context.Context, in *TLHelpGetSupport, opts ...grpc.CallOption) (*Help_Support, error)
	HelpGetAppChangelog(ctx context.Context, in *TLHelpGetAppChangelog, opts ...grpc.CallOption) (*Updates, error)
	HelpGetAppConfig(ctx context.Context, in *TLHelpGetAppConfig, opts ...grpc.CallOption) (*JSONValue, error)
	HelpGetSupportName(ctx context.Context, in *TLHelpGetSupportName, opts ...grpc.CallOption) (*Help_SupportName, error)
	HelpDismissSuggestion(ctx context.Context, in *TLHelpDismissSuggestion, opts ...grpc.CallOption) (*Bool, error)
	HelpGetCountriesList(ctx context.Context, in *TLHelpGetCountriesList, opts ...grpc.CallOption) (*Help_CountriesList, error)
}

type rPCConfigurationClient struct {
	cc *grpc.ClientConn
}

func NewRPCConfigurationClient(cc *grpc.ClientConn) RPCConfigurationClient {
	return &rPCConfigurationClient{cc}
}

func (c *rPCConfigurationClient) HelpGetConfig(ctx context.Context, in *TLHelpGetConfig, opts ...grpc.CallOption) (*Config, error) {
	out := new(Config)
	err := c.cc.Invoke(ctx, "/mtproto.RPCConfiguration/help_getConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCConfigurationClient) HelpGetNearestDc(ctx context.Context, in *TLHelpGetNearestDc, opts ...grpc.CallOption) (*NearestDc, error) {
	out := new(NearestDc)
	err := c.cc.Invoke(ctx, "/mtproto.RPCConfiguration/help_getNearestDc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCConfigurationClient) HelpGetAppUpdate(ctx context.Context, in *TLHelpGetAppUpdate, opts ...grpc.CallOption) (*Help_AppUpdate, error) {
	out := new(Help_AppUpdate)
	err := c.cc.Invoke(ctx, "/mtproto.RPCConfiguration/help_getAppUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCConfigurationClient) HelpGetInviteText(ctx context.Context, in *TLHelpGetInviteText, opts ...grpc.CallOption) (*Help_InviteText, error) {
	out := new(Help_InviteText)
	err := c.cc.Invoke(ctx, "/mtproto.RPCConfiguration/help_getInviteText", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCConfigurationClient) HelpGetSupport(ctx context.Context, in *TLHelpGetSupport, opts ...grpc.CallOption) (*Help_Support, error) {
	out := new(Help_Support)
	err := c.cc.Invoke(ctx, "/mtproto.RPCConfiguration/help_getSupport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCConfigurationClient) HelpGetAppChangelog(ctx context.Context, in *TLHelpGetAppChangelog, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCConfiguration/help_getAppChangelog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCConfigurationClient) HelpGetAppConfig(ctx context.Context, in *TLHelpGetAppConfig, opts ...grpc.CallOption) (*JSONValue, error) {
	out := new(JSONValue)
	err := c.cc.Invoke(ctx, "/mtproto.RPCConfiguration/help_getAppConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCConfigurationClient) HelpGetSupportName(ctx context.Context, in *TLHelpGetSupportName, opts ...grpc.CallOption) (*Help_SupportName, error) {
	out := new(Help_SupportName)
	err := c.cc.Invoke(ctx, "/mtproto.RPCConfiguration/help_getSupportName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCConfigurationClient) HelpDismissSuggestion(ctx context.Context, in *TLHelpDismissSuggestion, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCConfiguration/help_dismissSuggestion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCConfigurationClient) HelpGetCountriesList(ctx context.Context, in *TLHelpGetCountriesList, opts ...grpc.CallOption) (*Help_CountriesList, error) {
	out := new(Help_CountriesList)
	err := c.cc.Invoke(ctx, "/mtproto.RPCConfiguration/help_getCountriesList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCConfigurationServer is the server API for RPCConfiguration service.
type RPCConfigurationServer interface {
	HelpGetConfig(context.Context, *TLHelpGetConfig) (*Config, error)
	HelpGetNearestDc(context.Context, *TLHelpGetNearestDc) (*NearestDc, error)
	HelpGetAppUpdate(context.Context, *TLHelpGetAppUpdate) (*Help_AppUpdate, error)
	HelpGetInviteText(context.Context, *TLHelpGetInviteText) (*Help_InviteText, error)
	HelpGetSupport(context.Context, *TLHelpGetSupport) (*Help_Support, error)
	HelpGetAppChangelog(context.Context, *TLHelpGetAppChangelog) (*Updates, error)
	HelpGetAppConfig(context.Context, *TLHelpGetAppConfig) (*JSONValue, error)
	HelpGetSupportName(context.Context, *TLHelpGetSupportName) (*Help_SupportName, error)
	HelpDismissSuggestion(context.Context, *TLHelpDismissSuggestion) (*Bool, error)
	HelpGetCountriesList(context.Context, *TLHelpGetCountriesList) (*Help_CountriesList, error)
}

// UnimplementedRPCConfigurationServer can be embedded to have forward compatible implementations.
type UnimplementedRPCConfigurationServer struct {
}

func (*UnimplementedRPCConfigurationServer) HelpGetConfig(ctx context.Context, req *TLHelpGetConfig) (*Config, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelpGetConfig not implemented")
}
func (*UnimplementedRPCConfigurationServer) HelpGetNearestDc(ctx context.Context, req *TLHelpGetNearestDc) (*NearestDc, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelpGetNearestDc not implemented")
}
func (*UnimplementedRPCConfigurationServer) HelpGetAppUpdate(ctx context.Context, req *TLHelpGetAppUpdate) (*Help_AppUpdate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelpGetAppUpdate not implemented")
}
func (*UnimplementedRPCConfigurationServer) HelpGetInviteText(ctx context.Context, req *TLHelpGetInviteText) (*Help_InviteText, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelpGetInviteText not implemented")
}
func (*UnimplementedRPCConfigurationServer) HelpGetSupport(ctx context.Context, req *TLHelpGetSupport) (*Help_Support, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelpGetSupport not implemented")
}
func (*UnimplementedRPCConfigurationServer) HelpGetAppChangelog(ctx context.Context, req *TLHelpGetAppChangelog) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelpGetAppChangelog not implemented")
}
func (*UnimplementedRPCConfigurationServer) HelpGetAppConfig(ctx context.Context, req *TLHelpGetAppConfig) (*JSONValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelpGetAppConfig not implemented")
}
func (*UnimplementedRPCConfigurationServer) HelpGetSupportName(ctx context.Context, req *TLHelpGetSupportName) (*Help_SupportName, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelpGetSupportName not implemented")
}
func (*UnimplementedRPCConfigurationServer) HelpDismissSuggestion(ctx context.Context, req *TLHelpDismissSuggestion) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelpDismissSuggestion not implemented")
}
func (*UnimplementedRPCConfigurationServer) HelpGetCountriesList(ctx context.Context, req *TLHelpGetCountriesList) (*Help_CountriesList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelpGetCountriesList not implemented")
}

func RegisterRPCConfigurationServer(s *grpc.Server, srv RPCConfigurationServer) {
	s.RegisterService(&_RPCConfiguration_serviceDesc, srv)
}

func _RPCConfiguration_HelpGetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCConfigurationServer).HelpGetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCConfiguration/HelpGetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCConfigurationServer).HelpGetConfig(ctx, req.(*TLHelpGetConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCConfiguration_HelpGetNearestDc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetNearestDc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCConfigurationServer).HelpGetNearestDc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCConfiguration/HelpGetNearestDc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCConfigurationServer).HelpGetNearestDc(ctx, req.(*TLHelpGetNearestDc))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCConfiguration_HelpGetAppUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetAppUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCConfigurationServer).HelpGetAppUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCConfiguration/HelpGetAppUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCConfigurationServer).HelpGetAppUpdate(ctx, req.(*TLHelpGetAppUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCConfiguration_HelpGetInviteText_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetInviteText)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCConfigurationServer).HelpGetInviteText(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCConfiguration/HelpGetInviteText",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCConfigurationServer).HelpGetInviteText(ctx, req.(*TLHelpGetInviteText))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCConfiguration_HelpGetSupport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetSupport)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCConfigurationServer).HelpGetSupport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCConfiguration/HelpGetSupport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCConfigurationServer).HelpGetSupport(ctx, req.(*TLHelpGetSupport))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCConfiguration_HelpGetAppChangelog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetAppChangelog)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCConfigurationServer).HelpGetAppChangelog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCConfiguration/HelpGetAppChangelog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCConfigurationServer).HelpGetAppChangelog(ctx, req.(*TLHelpGetAppChangelog))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCConfiguration_HelpGetAppConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetAppConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCConfigurationServer).HelpGetAppConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCConfiguration/HelpGetAppConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCConfigurationServer).HelpGetAppConfig(ctx, req.(*TLHelpGetAppConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCConfiguration_HelpGetSupportName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetSupportName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCConfigurationServer).HelpGetSupportName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCConfiguration/HelpGetSupportName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCConfigurationServer).HelpGetSupportName(ctx, req.(*TLHelpGetSupportName))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCConfiguration_HelpDismissSuggestion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpDismissSuggestion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCConfigurationServer).HelpDismissSuggestion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCConfiguration/HelpDismissSuggestion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCConfigurationServer).HelpDismissSuggestion(ctx, req.(*TLHelpDismissSuggestion))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCConfiguration_HelpGetCountriesList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetCountriesList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCConfigurationServer).HelpGetCountriesList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCConfiguration/HelpGetCountriesList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCConfigurationServer).HelpGetCountriesList(ctx, req.(*TLHelpGetCountriesList))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCConfiguration_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCConfiguration",
	HandlerType: (*RPCConfigurationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "help_getConfig",
			Handler:    _RPCConfiguration_HelpGetConfig_Handler,
		},
		{
			MethodName: "help_getNearestDc",
			Handler:    _RPCConfiguration_HelpGetNearestDc_Handler,
		},
		{
			MethodName: "help_getAppUpdate",
			Handler:    _RPCConfiguration_HelpGetAppUpdate_Handler,
		},
		{
			MethodName: "help_getInviteText",
			Handler:    _RPCConfiguration_HelpGetInviteText_Handler,
		},
		{
			MethodName: "help_getSupport",
			Handler:    _RPCConfiguration_HelpGetSupport_Handler,
		},
		{
			MethodName: "help_getAppChangelog",
			Handler:    _RPCConfiguration_HelpGetAppChangelog_Handler,
		},
		{
			MethodName: "help_getAppConfig",
			Handler:    _RPCConfiguration_HelpGetAppConfig_Handler,
		},
		{
			MethodName: "help_getSupportName",
			Handler:    _RPCConfiguration_HelpGetSupportName_Handler,
		},
		{
			MethodName: "help_dismissSuggestion",
			Handler:    _RPCConfiguration_HelpDismissSuggestion_Handler,
		},
		{
			MethodName: "help_getCountriesList",
			Handler:    _RPCConfiguration_HelpGetCountriesList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCMiscellaneousClient is the client API for RPCMiscellaneous service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCMiscellaneousClient interface {
	HelpSaveAppLog(ctx context.Context, in *TLHelpSaveAppLog, opts ...grpc.CallOption) (*Bool, error)
	HelpTest(ctx context.Context, in *TLHelpTest, opts ...grpc.CallOption) (*Bool, error)
}

type rPCMiscellaneousClient struct {
	cc *grpc.ClientConn
}

func NewRPCMiscellaneousClient(cc *grpc.ClientConn) RPCMiscellaneousClient {
	return &rPCMiscellaneousClient{cc}
}

func (c *rPCMiscellaneousClient) HelpSaveAppLog(ctx context.Context, in *TLHelpSaveAppLog, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMiscellaneous/help_saveAppLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCMiscellaneousClient) HelpTest(ctx context.Context, in *TLHelpTest, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCMiscellaneous/help_test", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCMiscellaneousServer is the server API for RPCMiscellaneous service.
type RPCMiscellaneousServer interface {
	HelpSaveAppLog(context.Context, *TLHelpSaveAppLog) (*Bool, error)
	HelpTest(context.Context, *TLHelpTest) (*Bool, error)
}

// UnimplementedRPCMiscellaneousServer can be embedded to have forward compatible implementations.
type UnimplementedRPCMiscellaneousServer struct {
}

func (*UnimplementedRPCMiscellaneousServer) HelpSaveAppLog(ctx context.Context, req *TLHelpSaveAppLog) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelpSaveAppLog not implemented")
}
func (*UnimplementedRPCMiscellaneousServer) HelpTest(ctx context.Context, req *TLHelpTest) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelpTest not implemented")
}

func RegisterRPCMiscellaneousServer(s *grpc.Server, srv RPCMiscellaneousServer) {
	s.RegisterService(&_RPCMiscellaneous_serviceDesc, srv)
}

func _RPCMiscellaneous_HelpSaveAppLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpSaveAppLog)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMiscellaneousServer).HelpSaveAppLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMiscellaneous/HelpSaveAppLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMiscellaneousServer).HelpSaveAppLog(ctx, req.(*TLHelpSaveAppLog))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCMiscellaneous_HelpTest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpTest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCMiscellaneousServer).HelpTest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCMiscellaneous/HelpTest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCMiscellaneousServer).HelpTest(ctx, req.(*TLHelpTest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCMiscellaneous_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCMiscellaneous",
	HandlerType: (*RPCMiscellaneousServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "help_saveAppLog",
			Handler:    _RPCMiscellaneous_HelpSaveAppLog_Handler,
		},
		{
			MethodName: "help_test",
			Handler:    _RPCMiscellaneous_HelpTest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCLangpackClient is the client API for RPCLangpack service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCLangpackClient interface {
	LangpackGetLangPack(ctx context.Context, in *TLLangpackGetLangPack, opts ...grpc.CallOption) (*LangPackDifference, error)
	LangpackGetStrings(ctx context.Context, in *TLLangpackGetStrings, opts ...grpc.CallOption) (*Vector_LangPackString, error)
	LangpackGetDifference(ctx context.Context, in *TLLangpackGetDifference, opts ...grpc.CallOption) (*LangPackDifference, error)
	LangpackGetLanguages(ctx context.Context, in *TLLangpackGetLanguages, opts ...grpc.CallOption) (*Vector_LangPackLanguage, error)
	LangpackGetLanguage(ctx context.Context, in *TLLangpackGetLanguage, opts ...grpc.CallOption) (*LangPackLanguage, error)
}

type rPCLangpackClient struct {
	cc *grpc.ClientConn
}

func NewRPCLangpackClient(cc *grpc.ClientConn) RPCLangpackClient {
	return &rPCLangpackClient{cc}
}

func (c *rPCLangpackClient) LangpackGetLangPack(ctx context.Context, in *TLLangpackGetLangPack, opts ...grpc.CallOption) (*LangPackDifference, error) {
	out := new(LangPackDifference)
	err := c.cc.Invoke(ctx, "/mtproto.RPCLangpack/langpack_getLangPack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCLangpackClient) LangpackGetStrings(ctx context.Context, in *TLLangpackGetStrings, opts ...grpc.CallOption) (*Vector_LangPackString, error) {
	out := new(Vector_LangPackString)
	err := c.cc.Invoke(ctx, "/mtproto.RPCLangpack/langpack_getStrings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCLangpackClient) LangpackGetDifference(ctx context.Context, in *TLLangpackGetDifference, opts ...grpc.CallOption) (*LangPackDifference, error) {
	out := new(LangPackDifference)
	err := c.cc.Invoke(ctx, "/mtproto.RPCLangpack/langpack_getDifference", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCLangpackClient) LangpackGetLanguages(ctx context.Context, in *TLLangpackGetLanguages, opts ...grpc.CallOption) (*Vector_LangPackLanguage, error) {
	out := new(Vector_LangPackLanguage)
	err := c.cc.Invoke(ctx, "/mtproto.RPCLangpack/langpack_getLanguages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCLangpackClient) LangpackGetLanguage(ctx context.Context, in *TLLangpackGetLanguage, opts ...grpc.CallOption) (*LangPackLanguage, error) {
	out := new(LangPackLanguage)
	err := c.cc.Invoke(ctx, "/mtproto.RPCLangpack/langpack_getLanguage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCLangpackServer is the server API for RPCLangpack service.
type RPCLangpackServer interface {
	LangpackGetLangPack(context.Context, *TLLangpackGetLangPack) (*LangPackDifference, error)
	LangpackGetStrings(context.Context, *TLLangpackGetStrings) (*Vector_LangPackString, error)
	LangpackGetDifference(context.Context, *TLLangpackGetDifference) (*LangPackDifference, error)
	LangpackGetLanguages(context.Context, *TLLangpackGetLanguages) (*Vector_LangPackLanguage, error)
	LangpackGetLanguage(context.Context, *TLLangpackGetLanguage) (*LangPackLanguage, error)
}

// UnimplementedRPCLangpackServer can be embedded to have forward compatible implementations.
type UnimplementedRPCLangpackServer struct {
}

func (*UnimplementedRPCLangpackServer) LangpackGetLangPack(ctx context.Context, req *TLLangpackGetLangPack) (*LangPackDifference, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LangpackGetLangPack not implemented")
}
func (*UnimplementedRPCLangpackServer) LangpackGetStrings(ctx context.Context, req *TLLangpackGetStrings) (*Vector_LangPackString, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LangpackGetStrings not implemented")
}
func (*UnimplementedRPCLangpackServer) LangpackGetDifference(ctx context.Context, req *TLLangpackGetDifference) (*LangPackDifference, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LangpackGetDifference not implemented")
}
func (*UnimplementedRPCLangpackServer) LangpackGetLanguages(ctx context.Context, req *TLLangpackGetLanguages) (*Vector_LangPackLanguage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LangpackGetLanguages not implemented")
}
func (*UnimplementedRPCLangpackServer) LangpackGetLanguage(ctx context.Context, req *TLLangpackGetLanguage) (*LangPackLanguage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LangpackGetLanguage not implemented")
}

func RegisterRPCLangpackServer(s *grpc.Server, srv RPCLangpackServer) {
	s.RegisterService(&_RPCLangpack_serviceDesc, srv)
}

func _RPCLangpack_LangpackGetLangPack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLLangpackGetLangPack)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCLangpackServer).LangpackGetLangPack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCLangpack/LangpackGetLangPack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCLangpackServer).LangpackGetLangPack(ctx, req.(*TLLangpackGetLangPack))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCLangpack_LangpackGetStrings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLLangpackGetStrings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCLangpackServer).LangpackGetStrings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCLangpack/LangpackGetStrings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCLangpackServer).LangpackGetStrings(ctx, req.(*TLLangpackGetStrings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCLangpack_LangpackGetDifference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLLangpackGetDifference)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCLangpackServer).LangpackGetDifference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCLangpack/LangpackGetDifference",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCLangpackServer).LangpackGetDifference(ctx, req.(*TLLangpackGetDifference))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCLangpack_LangpackGetLanguages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLLangpackGetLanguages)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCLangpackServer).LangpackGetLanguages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCLangpack/LangpackGetLanguages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCLangpackServer).LangpackGetLanguages(ctx, req.(*TLLangpackGetLanguages))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCLangpack_LangpackGetLanguage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLLangpackGetLanguage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCLangpackServer).LangpackGetLanguage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCLangpack/LangpackGetLanguage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCLangpackServer).LangpackGetLanguage(ctx, req.(*TLLangpackGetLanguage))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCLangpack_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCLangpack",
	HandlerType: (*RPCLangpackServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "langpack_getLangPack",
			Handler:    _RPCLangpack_LangpackGetLangPack_Handler,
		},
		{
			MethodName: "langpack_getStrings",
			Handler:    _RPCLangpack_LangpackGetStrings_Handler,
		},
		{
			MethodName: "langpack_getDifference",
			Handler:    _RPCLangpack_LangpackGetDifference_Handler,
		},
		{
			MethodName: "langpack_getLanguages",
			Handler:    _RPCLangpack_LangpackGetLanguages_Handler,
		},
		{
			MethodName: "langpack_getLanguage",
			Handler:    _RPCLangpack_LangpackGetLanguage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCStatisticsClient is the client API for RPCStatistics service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCStatisticsClient interface {
	StatsGetBroadcastStats(ctx context.Context, in *TLStatsGetBroadcastStats, opts ...grpc.CallOption) (*Stats_BroadcastStats, error)
	StatsLoadAsyncGraph(ctx context.Context, in *TLStatsLoadAsyncGraph, opts ...grpc.CallOption) (*StatsGraph, error)
	StatsGetMegagroupStats(ctx context.Context, in *TLStatsGetMegagroupStats, opts ...grpc.CallOption) (*Stats_MegagroupStats, error)
	StatsGetMessagePublicForwards(ctx context.Context, in *TLStatsGetMessagePublicForwards, opts ...grpc.CallOption) (*Messages_Messages, error)
	StatsGetMessageStats(ctx context.Context, in *TLStatsGetMessageStats, opts ...grpc.CallOption) (*Stats_MessageStats, error)
	MessagesGetStatsURL(ctx context.Context, in *TLMessagesGetStatsURL, opts ...grpc.CallOption) (*StatsURL, error)
}

type rPCStatisticsClient struct {
	cc *grpc.ClientConn
}

func NewRPCStatisticsClient(cc *grpc.ClientConn) RPCStatisticsClient {
	return &rPCStatisticsClient{cc}
}

func (c *rPCStatisticsClient) StatsGetBroadcastStats(ctx context.Context, in *TLStatsGetBroadcastStats, opts ...grpc.CallOption) (*Stats_BroadcastStats, error) {
	out := new(Stats_BroadcastStats)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStatistics/stats_getBroadcastStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStatisticsClient) StatsLoadAsyncGraph(ctx context.Context, in *TLStatsLoadAsyncGraph, opts ...grpc.CallOption) (*StatsGraph, error) {
	out := new(StatsGraph)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStatistics/stats_loadAsyncGraph", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStatisticsClient) StatsGetMegagroupStats(ctx context.Context, in *TLStatsGetMegagroupStats, opts ...grpc.CallOption) (*Stats_MegagroupStats, error) {
	out := new(Stats_MegagroupStats)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStatistics/stats_getMegagroupStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStatisticsClient) StatsGetMessagePublicForwards(ctx context.Context, in *TLStatsGetMessagePublicForwards, opts ...grpc.CallOption) (*Messages_Messages, error) {
	out := new(Messages_Messages)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStatistics/stats_getMessagePublicForwards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStatisticsClient) StatsGetMessageStats(ctx context.Context, in *TLStatsGetMessageStats, opts ...grpc.CallOption) (*Stats_MessageStats, error) {
	out := new(Stats_MessageStats)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStatistics/stats_getMessageStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCStatisticsClient) MessagesGetStatsURL(ctx context.Context, in *TLMessagesGetStatsURL, opts ...grpc.CallOption) (*StatsURL, error) {
	out := new(StatsURL)
	err := c.cc.Invoke(ctx, "/mtproto.RPCStatistics/messages_getStatsURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCStatisticsServer is the server API for RPCStatistics service.
type RPCStatisticsServer interface {
	StatsGetBroadcastStats(context.Context, *TLStatsGetBroadcastStats) (*Stats_BroadcastStats, error)
	StatsLoadAsyncGraph(context.Context, *TLStatsLoadAsyncGraph) (*StatsGraph, error)
	StatsGetMegagroupStats(context.Context, *TLStatsGetMegagroupStats) (*Stats_MegagroupStats, error)
	StatsGetMessagePublicForwards(context.Context, *TLStatsGetMessagePublicForwards) (*Messages_Messages, error)
	StatsGetMessageStats(context.Context, *TLStatsGetMessageStats) (*Stats_MessageStats, error)
	MessagesGetStatsURL(context.Context, *TLMessagesGetStatsURL) (*StatsURL, error)
}

// UnimplementedRPCStatisticsServer can be embedded to have forward compatible implementations.
type UnimplementedRPCStatisticsServer struct {
}

func (*UnimplementedRPCStatisticsServer) StatsGetBroadcastStats(ctx context.Context, req *TLStatsGetBroadcastStats) (*Stats_BroadcastStats, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StatsGetBroadcastStats not implemented")
}
func (*UnimplementedRPCStatisticsServer) StatsLoadAsyncGraph(ctx context.Context, req *TLStatsLoadAsyncGraph) (*StatsGraph, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StatsLoadAsyncGraph not implemented")
}
func (*UnimplementedRPCStatisticsServer) StatsGetMegagroupStats(ctx context.Context, req *TLStatsGetMegagroupStats) (*Stats_MegagroupStats, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StatsGetMegagroupStats not implemented")
}
func (*UnimplementedRPCStatisticsServer) StatsGetMessagePublicForwards(ctx context.Context, req *TLStatsGetMessagePublicForwards) (*Messages_Messages, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StatsGetMessagePublicForwards not implemented")
}
func (*UnimplementedRPCStatisticsServer) StatsGetMessageStats(ctx context.Context, req *TLStatsGetMessageStats) (*Stats_MessageStats, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StatsGetMessageStats not implemented")
}
func (*UnimplementedRPCStatisticsServer) MessagesGetStatsURL(ctx context.Context, req *TLMessagesGetStatsURL) (*StatsURL, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetStatsURL not implemented")
}

func RegisterRPCStatisticsServer(s *grpc.Server, srv RPCStatisticsServer) {
	s.RegisterService(&_RPCStatistics_serviceDesc, srv)
}

func _RPCStatistics_StatsGetBroadcastStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLStatsGetBroadcastStats)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStatisticsServer).StatsGetBroadcastStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStatistics/StatsGetBroadcastStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStatisticsServer).StatsGetBroadcastStats(ctx, req.(*TLStatsGetBroadcastStats))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStatistics_StatsLoadAsyncGraph_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLStatsLoadAsyncGraph)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStatisticsServer).StatsLoadAsyncGraph(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStatistics/StatsLoadAsyncGraph",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStatisticsServer).StatsLoadAsyncGraph(ctx, req.(*TLStatsLoadAsyncGraph))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStatistics_StatsGetMegagroupStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLStatsGetMegagroupStats)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStatisticsServer).StatsGetMegagroupStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStatistics/StatsGetMegagroupStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStatisticsServer).StatsGetMegagroupStats(ctx, req.(*TLStatsGetMegagroupStats))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStatistics_StatsGetMessagePublicForwards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLStatsGetMessagePublicForwards)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStatisticsServer).StatsGetMessagePublicForwards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStatistics/StatsGetMessagePublicForwards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStatisticsServer).StatsGetMessagePublicForwards(ctx, req.(*TLStatsGetMessagePublicForwards))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStatistics_StatsGetMessageStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLStatsGetMessageStats)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStatisticsServer).StatsGetMessageStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStatistics/StatsGetMessageStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStatisticsServer).StatsGetMessageStats(ctx, req.(*TLStatsGetMessageStats))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCStatistics_MessagesGetStatsURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetStatsURL)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCStatisticsServer).MessagesGetStatsURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCStatistics/MessagesGetStatsURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCStatisticsServer).MessagesGetStatsURL(ctx, req.(*TLMessagesGetStatsURL))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCStatistics_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCStatistics",
	HandlerType: (*RPCStatisticsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "stats_getBroadcastStats",
			Handler:    _RPCStatistics_StatsGetBroadcastStats_Handler,
		},
		{
			MethodName: "stats_loadAsyncGraph",
			Handler:    _RPCStatistics_StatsLoadAsyncGraph_Handler,
		},
		{
			MethodName: "stats_getMegagroupStats",
			Handler:    _RPCStatistics_StatsGetMegagroupStats_Handler,
		},
		{
			MethodName: "stats_getMessagePublicForwards",
			Handler:    _RPCStatistics_StatsGetMessagePublicForwards_Handler,
		},
		{
			MethodName: "stats_getMessageStats",
			Handler:    _RPCStatistics_StatsGetMessageStats_Handler,
		},
		{
			MethodName: "messages_getStatsURL",
			Handler:    _RPCStatistics_MessagesGetStatsURL_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCAutoDownloadClient is the client API for RPCAutoDownload service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCAutoDownloadClient interface {
	AccountGetAutoDownloadSettings(ctx context.Context, in *TLAccountGetAutoDownloadSettings, opts ...grpc.CallOption) (*Account_AutoDownloadSettings, error)
	AccountSaveAutoDownloadSettings(ctx context.Context, in *TLAccountSaveAutoDownloadSettings, opts ...grpc.CallOption) (*Bool, error)
}

type rPCAutoDownloadClient struct {
	cc *grpc.ClientConn
}

func NewRPCAutoDownloadClient(cc *grpc.ClientConn) RPCAutoDownloadClient {
	return &rPCAutoDownloadClient{cc}
}

func (c *rPCAutoDownloadClient) AccountGetAutoDownloadSettings(ctx context.Context, in *TLAccountGetAutoDownloadSettings, opts ...grpc.CallOption) (*Account_AutoDownloadSettings, error) {
	out := new(Account_AutoDownloadSettings)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAutoDownload/account_getAutoDownloadSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCAutoDownloadClient) AccountSaveAutoDownloadSettings(ctx context.Context, in *TLAccountSaveAutoDownloadSettings, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCAutoDownload/account_saveAutoDownloadSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCAutoDownloadServer is the server API for RPCAutoDownload service.
type RPCAutoDownloadServer interface {
	AccountGetAutoDownloadSettings(context.Context, *TLAccountGetAutoDownloadSettings) (*Account_AutoDownloadSettings, error)
	AccountSaveAutoDownloadSettings(context.Context, *TLAccountSaveAutoDownloadSettings) (*Bool, error)
}

// UnimplementedRPCAutoDownloadServer can be embedded to have forward compatible implementations.
type UnimplementedRPCAutoDownloadServer struct {
}

func (*UnimplementedRPCAutoDownloadServer) AccountGetAutoDownloadSettings(ctx context.Context, req *TLAccountGetAutoDownloadSettings) (*Account_AutoDownloadSettings, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountGetAutoDownloadSettings not implemented")
}
func (*UnimplementedRPCAutoDownloadServer) AccountSaveAutoDownloadSettings(ctx context.Context, req *TLAccountSaveAutoDownloadSettings) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountSaveAutoDownloadSettings not implemented")
}

func RegisterRPCAutoDownloadServer(s *grpc.Server, srv RPCAutoDownloadServer) {
	s.RegisterService(&_RPCAutoDownload_serviceDesc, srv)
}

func _RPCAutoDownload_AccountGetAutoDownloadSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetAutoDownloadSettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAutoDownloadServer).AccountGetAutoDownloadSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAutoDownload/AccountGetAutoDownloadSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAutoDownloadServer).AccountGetAutoDownloadSettings(ctx, req.(*TLAccountGetAutoDownloadSettings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCAutoDownload_AccountSaveAutoDownloadSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSaveAutoDownloadSettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCAutoDownloadServer).AccountSaveAutoDownloadSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCAutoDownload/AccountSaveAutoDownloadSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCAutoDownloadServer).AccountSaveAutoDownloadSettings(ctx, req.(*TLAccountSaveAutoDownloadSettings))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCAutoDownload_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCAutoDownload",
	HandlerType: (*RPCAutoDownloadServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "account_getAutoDownloadSettings",
			Handler:    _RPCAutoDownload_AccountGetAutoDownloadSettings_Handler,
		},
		{
			MethodName: "account_saveAutoDownloadSettings",
			Handler:    _RPCAutoDownload_AccountSaveAutoDownloadSettings_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCImportedChatsClient is the client API for RPCImportedChats service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCImportedChatsClient interface {
	MessagesCheckHistoryImport(ctx context.Context, in *TLMessagesCheckHistoryImport, opts ...grpc.CallOption) (*Messages_HistoryImportParsed, error)
	MessagesInitHistoryImport(ctx context.Context, in *TLMessagesInitHistoryImport, opts ...grpc.CallOption) (*Messages_HistoryImport, error)
	MessagesUploadImportedMedia(ctx context.Context, in *TLMessagesUploadImportedMedia, opts ...grpc.CallOption) (*MessageMedia, error)
	MessagesStartHistoryImport(ctx context.Context, in *TLMessagesStartHistoryImport, opts ...grpc.CallOption) (*Bool, error)
	MessagesCheckHistoryImportPeer(ctx context.Context, in *TLMessagesCheckHistoryImportPeer, opts ...grpc.CallOption) (*Messages_CheckedHistoryImportPeer, error)
}

type rPCImportedChatsClient struct {
	cc *grpc.ClientConn
}

func NewRPCImportedChatsClient(cc *grpc.ClientConn) RPCImportedChatsClient {
	return &rPCImportedChatsClient{cc}
}

func (c *rPCImportedChatsClient) MessagesCheckHistoryImport(ctx context.Context, in *TLMessagesCheckHistoryImport, opts ...grpc.CallOption) (*Messages_HistoryImportParsed, error) {
	out := new(Messages_HistoryImportParsed)
	err := c.cc.Invoke(ctx, "/mtproto.RPCImportedChats/messages_checkHistoryImport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCImportedChatsClient) MessagesInitHistoryImport(ctx context.Context, in *TLMessagesInitHistoryImport, opts ...grpc.CallOption) (*Messages_HistoryImport, error) {
	out := new(Messages_HistoryImport)
	err := c.cc.Invoke(ctx, "/mtproto.RPCImportedChats/messages_initHistoryImport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCImportedChatsClient) MessagesUploadImportedMedia(ctx context.Context, in *TLMessagesUploadImportedMedia, opts ...grpc.CallOption) (*MessageMedia, error) {
	out := new(MessageMedia)
	err := c.cc.Invoke(ctx, "/mtproto.RPCImportedChats/messages_uploadImportedMedia", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCImportedChatsClient) MessagesStartHistoryImport(ctx context.Context, in *TLMessagesStartHistoryImport, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCImportedChats/messages_startHistoryImport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCImportedChatsClient) MessagesCheckHistoryImportPeer(ctx context.Context, in *TLMessagesCheckHistoryImportPeer, opts ...grpc.CallOption) (*Messages_CheckedHistoryImportPeer, error) {
	out := new(Messages_CheckedHistoryImportPeer)
	err := c.cc.Invoke(ctx, "/mtproto.RPCImportedChats/messages_checkHistoryImportPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCImportedChatsServer is the server API for RPCImportedChats service.
type RPCImportedChatsServer interface {
	MessagesCheckHistoryImport(context.Context, *TLMessagesCheckHistoryImport) (*Messages_HistoryImportParsed, error)
	MessagesInitHistoryImport(context.Context, *TLMessagesInitHistoryImport) (*Messages_HistoryImport, error)
	MessagesUploadImportedMedia(context.Context, *TLMessagesUploadImportedMedia) (*MessageMedia, error)
	MessagesStartHistoryImport(context.Context, *TLMessagesStartHistoryImport) (*Bool, error)
	MessagesCheckHistoryImportPeer(context.Context, *TLMessagesCheckHistoryImportPeer) (*Messages_CheckedHistoryImportPeer, error)
}

// UnimplementedRPCImportedChatsServer can be embedded to have forward compatible implementations.
type UnimplementedRPCImportedChatsServer struct {
}

func (*UnimplementedRPCImportedChatsServer) MessagesCheckHistoryImport(ctx context.Context, req *TLMessagesCheckHistoryImport) (*Messages_HistoryImportParsed, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesCheckHistoryImport not implemented")
}
func (*UnimplementedRPCImportedChatsServer) MessagesInitHistoryImport(ctx context.Context, req *TLMessagesInitHistoryImport) (*Messages_HistoryImport, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesInitHistoryImport not implemented")
}
func (*UnimplementedRPCImportedChatsServer) MessagesUploadImportedMedia(ctx context.Context, req *TLMessagesUploadImportedMedia) (*MessageMedia, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesUploadImportedMedia not implemented")
}
func (*UnimplementedRPCImportedChatsServer) MessagesStartHistoryImport(ctx context.Context, req *TLMessagesStartHistoryImport) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesStartHistoryImport not implemented")
}
func (*UnimplementedRPCImportedChatsServer) MessagesCheckHistoryImportPeer(ctx context.Context, req *TLMessagesCheckHistoryImportPeer) (*Messages_CheckedHistoryImportPeer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesCheckHistoryImportPeer not implemented")
}

func RegisterRPCImportedChatsServer(s *grpc.Server, srv RPCImportedChatsServer) {
	s.RegisterService(&_RPCImportedChats_serviceDesc, srv)
}

func _RPCImportedChats_MessagesCheckHistoryImport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesCheckHistoryImport)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCImportedChatsServer).MessagesCheckHistoryImport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCImportedChats/MessagesCheckHistoryImport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCImportedChatsServer).MessagesCheckHistoryImport(ctx, req.(*TLMessagesCheckHistoryImport))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCImportedChats_MessagesInitHistoryImport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesInitHistoryImport)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCImportedChatsServer).MessagesInitHistoryImport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCImportedChats/MessagesInitHistoryImport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCImportedChatsServer).MessagesInitHistoryImport(ctx, req.(*TLMessagesInitHistoryImport))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCImportedChats_MessagesUploadImportedMedia_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesUploadImportedMedia)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCImportedChatsServer).MessagesUploadImportedMedia(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCImportedChats/MessagesUploadImportedMedia",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCImportedChatsServer).MessagesUploadImportedMedia(ctx, req.(*TLMessagesUploadImportedMedia))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCImportedChats_MessagesStartHistoryImport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesStartHistoryImport)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCImportedChatsServer).MessagesStartHistoryImport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCImportedChats/MessagesStartHistoryImport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCImportedChatsServer).MessagesStartHistoryImport(ctx, req.(*TLMessagesStartHistoryImport))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCImportedChats_MessagesCheckHistoryImportPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesCheckHistoryImportPeer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCImportedChatsServer).MessagesCheckHistoryImportPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCImportedChats/MessagesCheckHistoryImportPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCImportedChatsServer).MessagesCheckHistoryImportPeer(ctx, req.(*TLMessagesCheckHistoryImportPeer))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCImportedChats_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCImportedChats",
	HandlerType: (*RPCImportedChatsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "messages_checkHistoryImport",
			Handler:    _RPCImportedChats_MessagesCheckHistoryImport_Handler,
		},
		{
			MethodName: "messages_initHistoryImport",
			Handler:    _RPCImportedChats_MessagesInitHistoryImport_Handler,
		},
		{
			MethodName: "messages_uploadImportedMedia",
			Handler:    _RPCImportedChats_MessagesUploadImportedMedia_Handler,
		},
		{
			MethodName: "messages_startHistoryImport",
			Handler:    _RPCImportedChats_MessagesStartHistoryImport_Handler,
		},
		{
			MethodName: "messages_checkHistoryImportPeer",
			Handler:    _RPCImportedChats_MessagesCheckHistoryImportPeer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCFoldersClient is the client API for RPCFolders service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCFoldersClient interface {
	MessagesGetDialogFilters(ctx context.Context, in *TLMessagesGetDialogFilters, opts ...grpc.CallOption) (*Vector_DialogFilter, error)
	MessagesGetSuggestedDialogFilters(ctx context.Context, in *TLMessagesGetSuggestedDialogFilters, opts ...grpc.CallOption) (*Vector_DialogFilterSuggested, error)
	MessagesUpdateDialogFilter(ctx context.Context, in *TLMessagesUpdateDialogFilter, opts ...grpc.CallOption) (*Bool, error)
	MessagesUpdateDialogFiltersOrder(ctx context.Context, in *TLMessagesUpdateDialogFiltersOrder, opts ...grpc.CallOption) (*Bool, error)
	FoldersEditPeerFolders(ctx context.Context, in *TLFoldersEditPeerFolders, opts ...grpc.CallOption) (*Updates, error)
	FoldersDeleteFolder(ctx context.Context, in *TLFoldersDeleteFolder, opts ...grpc.CallOption) (*Updates, error)
}

type rPCFoldersClient struct {
	cc *grpc.ClientConn
}

func NewRPCFoldersClient(cc *grpc.ClientConn) RPCFoldersClient {
	return &rPCFoldersClient{cc}
}

func (c *rPCFoldersClient) MessagesGetDialogFilters(ctx context.Context, in *TLMessagesGetDialogFilters, opts ...grpc.CallOption) (*Vector_DialogFilter, error) {
	out := new(Vector_DialogFilter)
	err := c.cc.Invoke(ctx, "/mtproto.RPCFolders/messages_getDialogFilters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCFoldersClient) MessagesGetSuggestedDialogFilters(ctx context.Context, in *TLMessagesGetSuggestedDialogFilters, opts ...grpc.CallOption) (*Vector_DialogFilterSuggested, error) {
	out := new(Vector_DialogFilterSuggested)
	err := c.cc.Invoke(ctx, "/mtproto.RPCFolders/messages_getSuggestedDialogFilters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCFoldersClient) MessagesUpdateDialogFilter(ctx context.Context, in *TLMessagesUpdateDialogFilter, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCFolders/messages_updateDialogFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCFoldersClient) MessagesUpdateDialogFiltersOrder(ctx context.Context, in *TLMessagesUpdateDialogFiltersOrder, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCFolders/messages_updateDialogFiltersOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCFoldersClient) FoldersEditPeerFolders(ctx context.Context, in *TLFoldersEditPeerFolders, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCFolders/folders_editPeerFolders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCFoldersClient) FoldersDeleteFolder(ctx context.Context, in *TLFoldersDeleteFolder, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCFolders/folders_deleteFolder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCFoldersServer is the server API for RPCFolders service.
type RPCFoldersServer interface {
	MessagesGetDialogFilters(context.Context, *TLMessagesGetDialogFilters) (*Vector_DialogFilter, error)
	MessagesGetSuggestedDialogFilters(context.Context, *TLMessagesGetSuggestedDialogFilters) (*Vector_DialogFilterSuggested, error)
	MessagesUpdateDialogFilter(context.Context, *TLMessagesUpdateDialogFilter) (*Bool, error)
	MessagesUpdateDialogFiltersOrder(context.Context, *TLMessagesUpdateDialogFiltersOrder) (*Bool, error)
	FoldersEditPeerFolders(context.Context, *TLFoldersEditPeerFolders) (*Updates, error)
	FoldersDeleteFolder(context.Context, *TLFoldersDeleteFolder) (*Updates, error)
}

// UnimplementedRPCFoldersServer can be embedded to have forward compatible implementations.
type UnimplementedRPCFoldersServer struct {
}

func (*UnimplementedRPCFoldersServer) MessagesGetDialogFilters(ctx context.Context, req *TLMessagesGetDialogFilters) (*Vector_DialogFilter, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetDialogFilters not implemented")
}
func (*UnimplementedRPCFoldersServer) MessagesGetSuggestedDialogFilters(ctx context.Context, req *TLMessagesGetSuggestedDialogFilters) (*Vector_DialogFilterSuggested, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetSuggestedDialogFilters not implemented")
}
func (*UnimplementedRPCFoldersServer) MessagesUpdateDialogFilter(ctx context.Context, req *TLMessagesUpdateDialogFilter) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesUpdateDialogFilter not implemented")
}
func (*UnimplementedRPCFoldersServer) MessagesUpdateDialogFiltersOrder(ctx context.Context, req *TLMessagesUpdateDialogFiltersOrder) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesUpdateDialogFiltersOrder not implemented")
}
func (*UnimplementedRPCFoldersServer) FoldersEditPeerFolders(ctx context.Context, req *TLFoldersEditPeerFolders) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FoldersEditPeerFolders not implemented")
}
func (*UnimplementedRPCFoldersServer) FoldersDeleteFolder(ctx context.Context, req *TLFoldersDeleteFolder) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FoldersDeleteFolder not implemented")
}

func RegisterRPCFoldersServer(s *grpc.Server, srv RPCFoldersServer) {
	s.RegisterService(&_RPCFolders_serviceDesc, srv)
}

func _RPCFolders_MessagesGetDialogFilters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetDialogFilters)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCFoldersServer).MessagesGetDialogFilters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCFolders/MessagesGetDialogFilters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCFoldersServer).MessagesGetDialogFilters(ctx, req.(*TLMessagesGetDialogFilters))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCFolders_MessagesGetSuggestedDialogFilters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetSuggestedDialogFilters)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCFoldersServer).MessagesGetSuggestedDialogFilters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCFolders/MessagesGetSuggestedDialogFilters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCFoldersServer).MessagesGetSuggestedDialogFilters(ctx, req.(*TLMessagesGetSuggestedDialogFilters))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCFolders_MessagesUpdateDialogFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesUpdateDialogFilter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCFoldersServer).MessagesUpdateDialogFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCFolders/MessagesUpdateDialogFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCFoldersServer).MessagesUpdateDialogFilter(ctx, req.(*TLMessagesUpdateDialogFilter))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCFolders_MessagesUpdateDialogFiltersOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesUpdateDialogFiltersOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCFoldersServer).MessagesUpdateDialogFiltersOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCFolders/MessagesUpdateDialogFiltersOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCFoldersServer).MessagesUpdateDialogFiltersOrder(ctx, req.(*TLMessagesUpdateDialogFiltersOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCFolders_FoldersEditPeerFolders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLFoldersEditPeerFolders)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCFoldersServer).FoldersEditPeerFolders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCFolders/FoldersEditPeerFolders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCFoldersServer).FoldersEditPeerFolders(ctx, req.(*TLFoldersEditPeerFolders))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCFolders_FoldersDeleteFolder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLFoldersDeleteFolder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCFoldersServer).FoldersDeleteFolder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCFolders/FoldersDeleteFolder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCFoldersServer).FoldersDeleteFolder(ctx, req.(*TLFoldersDeleteFolder))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCFolders_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCFolders",
	HandlerType: (*RPCFoldersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "messages_getDialogFilters",
			Handler:    _RPCFolders_MessagesGetDialogFilters_Handler,
		},
		{
			MethodName: "messages_getSuggestedDialogFilters",
			Handler:    _RPCFolders_MessagesGetSuggestedDialogFilters_Handler,
		},
		{
			MethodName: "messages_updateDialogFilter",
			Handler:    _RPCFolders_MessagesUpdateDialogFilter_Handler,
		},
		{
			MethodName: "messages_updateDialogFiltersOrder",
			Handler:    _RPCFolders_MessagesUpdateDialogFiltersOrder_Handler,
		},
		{
			MethodName: "folders_editPeerFolders",
			Handler:    _RPCFolders_FoldersEditPeerFolders_Handler,
		},
		{
			MethodName: "folders_deleteFolder",
			Handler:    _RPCFolders_FoldersDeleteFolder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCGroupCallsClient is the client API for RPCGroupCalls service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCGroupCallsClient interface {
	PhoneCreateGroupCall(ctx context.Context, in *TLPhoneCreateGroupCall, opts ...grpc.CallOption) (*Updates, error)
	PhoneJoinGroupCall(ctx context.Context, in *TLPhoneJoinGroupCall, opts ...grpc.CallOption) (*Updates, error)
	PhoneLeaveGroupCall(ctx context.Context, in *TLPhoneLeaveGroupCall, opts ...grpc.CallOption) (*Updates, error)
	PhoneInviteToGroupCall(ctx context.Context, in *TLPhoneInviteToGroupCall, opts ...grpc.CallOption) (*Updates, error)
	PhoneDiscardGroupCall(ctx context.Context, in *TLPhoneDiscardGroupCall, opts ...grpc.CallOption) (*Updates, error)
	PhoneToggleGroupCallSettings(ctx context.Context, in *TLPhoneToggleGroupCallSettings, opts ...grpc.CallOption) (*Updates, error)
	PhoneGetGroupCall(ctx context.Context, in *TLPhoneGetGroupCall, opts ...grpc.CallOption) (*Phone_GroupCall, error)
	PhoneGetGroupParticipants(ctx context.Context, in *TLPhoneGetGroupParticipants, opts ...grpc.CallOption) (*Phone_GroupParticipants, error)
	PhoneCheckGroupCall(ctx context.Context, in *TLPhoneCheckGroupCall, opts ...grpc.CallOption) (*Vector_Int, error)
	PhoneToggleGroupCallRecord(ctx context.Context, in *TLPhoneToggleGroupCallRecord, opts ...grpc.CallOption) (*Updates, error)
	PhoneEditGroupCallParticipant(ctx context.Context, in *TLPhoneEditGroupCallParticipant, opts ...grpc.CallOption) (*Updates, error)
	PhoneEditGroupCallTitle(ctx context.Context, in *TLPhoneEditGroupCallTitle, opts ...grpc.CallOption) (*Updates, error)
	PhoneGetGroupCallJoinAs(ctx context.Context, in *TLPhoneGetGroupCallJoinAs, opts ...grpc.CallOption) (*Phone_JoinAsPeers, error)
	PhoneExportGroupCallInvite(ctx context.Context, in *TLPhoneExportGroupCallInvite, opts ...grpc.CallOption) (*Phone_ExportedGroupCallInvite, error)
	PhoneToggleGroupCallStartSubscription(ctx context.Context, in *TLPhoneToggleGroupCallStartSubscription, opts ...grpc.CallOption) (*Updates, error)
	PhoneStartScheduledGroupCall(ctx context.Context, in *TLPhoneStartScheduledGroupCall, opts ...grpc.CallOption) (*Updates, error)
	PhoneSaveDefaultGroupCallJoinAs(ctx context.Context, in *TLPhoneSaveDefaultGroupCallJoinAs, opts ...grpc.CallOption) (*Bool, error)
	PhoneJoinGroupCallPresentation(ctx context.Context, in *TLPhoneJoinGroupCallPresentation, opts ...grpc.CallOption) (*Updates, error)
	PhoneLeaveGroupCallPresentation(ctx context.Context, in *TLPhoneLeaveGroupCallPresentation, opts ...grpc.CallOption) (*Updates, error)
	PhoneGetGroupCallStreamChannels(ctx context.Context, in *TLPhoneGetGroupCallStreamChannels, opts ...grpc.CallOption) (*Phone_GroupCallStreamChannels, error)
	PhoneGetGroupCallStreamRtmpUrl(ctx context.Context, in *TLPhoneGetGroupCallStreamRtmpUrl, opts ...grpc.CallOption) (*Phone_GroupCallStreamRtmpUrl, error)
}

type rPCGroupCallsClient struct {
	cc *grpc.ClientConn
}

func NewRPCGroupCallsClient(cc *grpc.ClientConn) RPCGroupCallsClient {
	return &rPCGroupCallsClient{cc}
}

func (c *rPCGroupCallsClient) PhoneCreateGroupCall(ctx context.Context, in *TLPhoneCreateGroupCall, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGroupCalls/phone_createGroupCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGroupCallsClient) PhoneJoinGroupCall(ctx context.Context, in *TLPhoneJoinGroupCall, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGroupCalls/phone_joinGroupCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGroupCallsClient) PhoneLeaveGroupCall(ctx context.Context, in *TLPhoneLeaveGroupCall, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGroupCalls/phone_leaveGroupCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGroupCallsClient) PhoneInviteToGroupCall(ctx context.Context, in *TLPhoneInviteToGroupCall, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGroupCalls/phone_inviteToGroupCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGroupCallsClient) PhoneDiscardGroupCall(ctx context.Context, in *TLPhoneDiscardGroupCall, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGroupCalls/phone_discardGroupCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGroupCallsClient) PhoneToggleGroupCallSettings(ctx context.Context, in *TLPhoneToggleGroupCallSettings, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGroupCalls/phone_toggleGroupCallSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGroupCallsClient) PhoneGetGroupCall(ctx context.Context, in *TLPhoneGetGroupCall, opts ...grpc.CallOption) (*Phone_GroupCall, error) {
	out := new(Phone_GroupCall)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGroupCalls/phone_getGroupCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGroupCallsClient) PhoneGetGroupParticipants(ctx context.Context, in *TLPhoneGetGroupParticipants, opts ...grpc.CallOption) (*Phone_GroupParticipants, error) {
	out := new(Phone_GroupParticipants)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGroupCalls/phone_getGroupParticipants", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGroupCallsClient) PhoneCheckGroupCall(ctx context.Context, in *TLPhoneCheckGroupCall, opts ...grpc.CallOption) (*Vector_Int, error) {
	out := new(Vector_Int)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGroupCalls/phone_checkGroupCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGroupCallsClient) PhoneToggleGroupCallRecord(ctx context.Context, in *TLPhoneToggleGroupCallRecord, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGroupCalls/phone_toggleGroupCallRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGroupCallsClient) PhoneEditGroupCallParticipant(ctx context.Context, in *TLPhoneEditGroupCallParticipant, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGroupCalls/phone_editGroupCallParticipant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGroupCallsClient) PhoneEditGroupCallTitle(ctx context.Context, in *TLPhoneEditGroupCallTitle, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGroupCalls/phone_editGroupCallTitle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGroupCallsClient) PhoneGetGroupCallJoinAs(ctx context.Context, in *TLPhoneGetGroupCallJoinAs, opts ...grpc.CallOption) (*Phone_JoinAsPeers, error) {
	out := new(Phone_JoinAsPeers)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGroupCalls/phone_getGroupCallJoinAs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGroupCallsClient) PhoneExportGroupCallInvite(ctx context.Context, in *TLPhoneExportGroupCallInvite, opts ...grpc.CallOption) (*Phone_ExportedGroupCallInvite, error) {
	out := new(Phone_ExportedGroupCallInvite)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGroupCalls/phone_exportGroupCallInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGroupCallsClient) PhoneToggleGroupCallStartSubscription(ctx context.Context, in *TLPhoneToggleGroupCallStartSubscription, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGroupCalls/phone_toggleGroupCallStartSubscription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGroupCallsClient) PhoneStartScheduledGroupCall(ctx context.Context, in *TLPhoneStartScheduledGroupCall, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGroupCalls/phone_startScheduledGroupCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGroupCallsClient) PhoneSaveDefaultGroupCallJoinAs(ctx context.Context, in *TLPhoneSaveDefaultGroupCallJoinAs, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGroupCalls/phone_saveDefaultGroupCallJoinAs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGroupCallsClient) PhoneJoinGroupCallPresentation(ctx context.Context, in *TLPhoneJoinGroupCallPresentation, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGroupCalls/phone_joinGroupCallPresentation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGroupCallsClient) PhoneLeaveGroupCallPresentation(ctx context.Context, in *TLPhoneLeaveGroupCallPresentation, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGroupCalls/phone_leaveGroupCallPresentation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGroupCallsClient) PhoneGetGroupCallStreamChannels(ctx context.Context, in *TLPhoneGetGroupCallStreamChannels, opts ...grpc.CallOption) (*Phone_GroupCallStreamChannels, error) {
	out := new(Phone_GroupCallStreamChannels)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGroupCalls/phone_getGroupCallStreamChannels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGroupCallsClient) PhoneGetGroupCallStreamRtmpUrl(ctx context.Context, in *TLPhoneGetGroupCallStreamRtmpUrl, opts ...grpc.CallOption) (*Phone_GroupCallStreamRtmpUrl, error) {
	out := new(Phone_GroupCallStreamRtmpUrl)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGroupCalls/phone_getGroupCallStreamRtmpUrl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCGroupCallsServer is the server API for RPCGroupCalls service.
type RPCGroupCallsServer interface {
	PhoneCreateGroupCall(context.Context, *TLPhoneCreateGroupCall) (*Updates, error)
	PhoneJoinGroupCall(context.Context, *TLPhoneJoinGroupCall) (*Updates, error)
	PhoneLeaveGroupCall(context.Context, *TLPhoneLeaveGroupCall) (*Updates, error)
	PhoneInviteToGroupCall(context.Context, *TLPhoneInviteToGroupCall) (*Updates, error)
	PhoneDiscardGroupCall(context.Context, *TLPhoneDiscardGroupCall) (*Updates, error)
	PhoneToggleGroupCallSettings(context.Context, *TLPhoneToggleGroupCallSettings) (*Updates, error)
	PhoneGetGroupCall(context.Context, *TLPhoneGetGroupCall) (*Phone_GroupCall, error)
	PhoneGetGroupParticipants(context.Context, *TLPhoneGetGroupParticipants) (*Phone_GroupParticipants, error)
	PhoneCheckGroupCall(context.Context, *TLPhoneCheckGroupCall) (*Vector_Int, error)
	PhoneToggleGroupCallRecord(context.Context, *TLPhoneToggleGroupCallRecord) (*Updates, error)
	PhoneEditGroupCallParticipant(context.Context, *TLPhoneEditGroupCallParticipant) (*Updates, error)
	PhoneEditGroupCallTitle(context.Context, *TLPhoneEditGroupCallTitle) (*Updates, error)
	PhoneGetGroupCallJoinAs(context.Context, *TLPhoneGetGroupCallJoinAs) (*Phone_JoinAsPeers, error)
	PhoneExportGroupCallInvite(context.Context, *TLPhoneExportGroupCallInvite) (*Phone_ExportedGroupCallInvite, error)
	PhoneToggleGroupCallStartSubscription(context.Context, *TLPhoneToggleGroupCallStartSubscription) (*Updates, error)
	PhoneStartScheduledGroupCall(context.Context, *TLPhoneStartScheduledGroupCall) (*Updates, error)
	PhoneSaveDefaultGroupCallJoinAs(context.Context, *TLPhoneSaveDefaultGroupCallJoinAs) (*Bool, error)
	PhoneJoinGroupCallPresentation(context.Context, *TLPhoneJoinGroupCallPresentation) (*Updates, error)
	PhoneLeaveGroupCallPresentation(context.Context, *TLPhoneLeaveGroupCallPresentation) (*Updates, error)
	PhoneGetGroupCallStreamChannels(context.Context, *TLPhoneGetGroupCallStreamChannels) (*Phone_GroupCallStreamChannels, error)
	PhoneGetGroupCallStreamRtmpUrl(context.Context, *TLPhoneGetGroupCallStreamRtmpUrl) (*Phone_GroupCallStreamRtmpUrl, error)
}

// UnimplementedRPCGroupCallsServer can be embedded to have forward compatible implementations.
type UnimplementedRPCGroupCallsServer struct {
}

func (*UnimplementedRPCGroupCallsServer) PhoneCreateGroupCall(ctx context.Context, req *TLPhoneCreateGroupCall) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneCreateGroupCall not implemented")
}
func (*UnimplementedRPCGroupCallsServer) PhoneJoinGroupCall(ctx context.Context, req *TLPhoneJoinGroupCall) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneJoinGroupCall not implemented")
}
func (*UnimplementedRPCGroupCallsServer) PhoneLeaveGroupCall(ctx context.Context, req *TLPhoneLeaveGroupCall) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneLeaveGroupCall not implemented")
}
func (*UnimplementedRPCGroupCallsServer) PhoneInviteToGroupCall(ctx context.Context, req *TLPhoneInviteToGroupCall) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneInviteToGroupCall not implemented")
}
func (*UnimplementedRPCGroupCallsServer) PhoneDiscardGroupCall(ctx context.Context, req *TLPhoneDiscardGroupCall) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneDiscardGroupCall not implemented")
}
func (*UnimplementedRPCGroupCallsServer) PhoneToggleGroupCallSettings(ctx context.Context, req *TLPhoneToggleGroupCallSettings) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneToggleGroupCallSettings not implemented")
}
func (*UnimplementedRPCGroupCallsServer) PhoneGetGroupCall(ctx context.Context, req *TLPhoneGetGroupCall) (*Phone_GroupCall, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneGetGroupCall not implemented")
}
func (*UnimplementedRPCGroupCallsServer) PhoneGetGroupParticipants(ctx context.Context, req *TLPhoneGetGroupParticipants) (*Phone_GroupParticipants, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneGetGroupParticipants not implemented")
}
func (*UnimplementedRPCGroupCallsServer) PhoneCheckGroupCall(ctx context.Context, req *TLPhoneCheckGroupCall) (*Vector_Int, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneCheckGroupCall not implemented")
}
func (*UnimplementedRPCGroupCallsServer) PhoneToggleGroupCallRecord(ctx context.Context, req *TLPhoneToggleGroupCallRecord) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneToggleGroupCallRecord not implemented")
}
func (*UnimplementedRPCGroupCallsServer) PhoneEditGroupCallParticipant(ctx context.Context, req *TLPhoneEditGroupCallParticipant) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneEditGroupCallParticipant not implemented")
}
func (*UnimplementedRPCGroupCallsServer) PhoneEditGroupCallTitle(ctx context.Context, req *TLPhoneEditGroupCallTitle) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneEditGroupCallTitle not implemented")
}
func (*UnimplementedRPCGroupCallsServer) PhoneGetGroupCallJoinAs(ctx context.Context, req *TLPhoneGetGroupCallJoinAs) (*Phone_JoinAsPeers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneGetGroupCallJoinAs not implemented")
}
func (*UnimplementedRPCGroupCallsServer) PhoneExportGroupCallInvite(ctx context.Context, req *TLPhoneExportGroupCallInvite) (*Phone_ExportedGroupCallInvite, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneExportGroupCallInvite not implemented")
}
func (*UnimplementedRPCGroupCallsServer) PhoneToggleGroupCallStartSubscription(ctx context.Context, req *TLPhoneToggleGroupCallStartSubscription) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneToggleGroupCallStartSubscription not implemented")
}
func (*UnimplementedRPCGroupCallsServer) PhoneStartScheduledGroupCall(ctx context.Context, req *TLPhoneStartScheduledGroupCall) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneStartScheduledGroupCall not implemented")
}
func (*UnimplementedRPCGroupCallsServer) PhoneSaveDefaultGroupCallJoinAs(ctx context.Context, req *TLPhoneSaveDefaultGroupCallJoinAs) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneSaveDefaultGroupCallJoinAs not implemented")
}
func (*UnimplementedRPCGroupCallsServer) PhoneJoinGroupCallPresentation(ctx context.Context, req *TLPhoneJoinGroupCallPresentation) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneJoinGroupCallPresentation not implemented")
}
func (*UnimplementedRPCGroupCallsServer) PhoneLeaveGroupCallPresentation(ctx context.Context, req *TLPhoneLeaveGroupCallPresentation) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneLeaveGroupCallPresentation not implemented")
}
func (*UnimplementedRPCGroupCallsServer) PhoneGetGroupCallStreamChannels(ctx context.Context, req *TLPhoneGetGroupCallStreamChannels) (*Phone_GroupCallStreamChannels, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneGetGroupCallStreamChannels not implemented")
}
func (*UnimplementedRPCGroupCallsServer) PhoneGetGroupCallStreamRtmpUrl(ctx context.Context, req *TLPhoneGetGroupCallStreamRtmpUrl) (*Phone_GroupCallStreamRtmpUrl, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneGetGroupCallStreamRtmpUrl not implemented")
}

func RegisterRPCGroupCallsServer(s *grpc.Server, srv RPCGroupCallsServer) {
	s.RegisterService(&_RPCGroupCalls_serviceDesc, srv)
}

func _RPCGroupCalls_PhoneCreateGroupCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneCreateGroupCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGroupCallsServer).PhoneCreateGroupCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGroupCalls/PhoneCreateGroupCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGroupCallsServer).PhoneCreateGroupCall(ctx, req.(*TLPhoneCreateGroupCall))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGroupCalls_PhoneJoinGroupCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneJoinGroupCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGroupCallsServer).PhoneJoinGroupCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGroupCalls/PhoneJoinGroupCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGroupCallsServer).PhoneJoinGroupCall(ctx, req.(*TLPhoneJoinGroupCall))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGroupCalls_PhoneLeaveGroupCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneLeaveGroupCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGroupCallsServer).PhoneLeaveGroupCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGroupCalls/PhoneLeaveGroupCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGroupCallsServer).PhoneLeaveGroupCall(ctx, req.(*TLPhoneLeaveGroupCall))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGroupCalls_PhoneInviteToGroupCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneInviteToGroupCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGroupCallsServer).PhoneInviteToGroupCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGroupCalls/PhoneInviteToGroupCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGroupCallsServer).PhoneInviteToGroupCall(ctx, req.(*TLPhoneInviteToGroupCall))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGroupCalls_PhoneDiscardGroupCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneDiscardGroupCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGroupCallsServer).PhoneDiscardGroupCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGroupCalls/PhoneDiscardGroupCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGroupCallsServer).PhoneDiscardGroupCall(ctx, req.(*TLPhoneDiscardGroupCall))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGroupCalls_PhoneToggleGroupCallSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneToggleGroupCallSettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGroupCallsServer).PhoneToggleGroupCallSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGroupCalls/PhoneToggleGroupCallSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGroupCallsServer).PhoneToggleGroupCallSettings(ctx, req.(*TLPhoneToggleGroupCallSettings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGroupCalls_PhoneGetGroupCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneGetGroupCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGroupCallsServer).PhoneGetGroupCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGroupCalls/PhoneGetGroupCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGroupCallsServer).PhoneGetGroupCall(ctx, req.(*TLPhoneGetGroupCall))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGroupCalls_PhoneGetGroupParticipants_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneGetGroupParticipants)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGroupCallsServer).PhoneGetGroupParticipants(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGroupCalls/PhoneGetGroupParticipants",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGroupCallsServer).PhoneGetGroupParticipants(ctx, req.(*TLPhoneGetGroupParticipants))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGroupCalls_PhoneCheckGroupCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneCheckGroupCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGroupCallsServer).PhoneCheckGroupCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGroupCalls/PhoneCheckGroupCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGroupCallsServer).PhoneCheckGroupCall(ctx, req.(*TLPhoneCheckGroupCall))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGroupCalls_PhoneToggleGroupCallRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneToggleGroupCallRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGroupCallsServer).PhoneToggleGroupCallRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGroupCalls/PhoneToggleGroupCallRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGroupCallsServer).PhoneToggleGroupCallRecord(ctx, req.(*TLPhoneToggleGroupCallRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGroupCalls_PhoneEditGroupCallParticipant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneEditGroupCallParticipant)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGroupCallsServer).PhoneEditGroupCallParticipant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGroupCalls/PhoneEditGroupCallParticipant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGroupCallsServer).PhoneEditGroupCallParticipant(ctx, req.(*TLPhoneEditGroupCallParticipant))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGroupCalls_PhoneEditGroupCallTitle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneEditGroupCallTitle)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGroupCallsServer).PhoneEditGroupCallTitle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGroupCalls/PhoneEditGroupCallTitle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGroupCallsServer).PhoneEditGroupCallTitle(ctx, req.(*TLPhoneEditGroupCallTitle))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGroupCalls_PhoneGetGroupCallJoinAs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneGetGroupCallJoinAs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGroupCallsServer).PhoneGetGroupCallJoinAs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGroupCalls/PhoneGetGroupCallJoinAs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGroupCallsServer).PhoneGetGroupCallJoinAs(ctx, req.(*TLPhoneGetGroupCallJoinAs))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGroupCalls_PhoneExportGroupCallInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneExportGroupCallInvite)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGroupCallsServer).PhoneExportGroupCallInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGroupCalls/PhoneExportGroupCallInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGroupCallsServer).PhoneExportGroupCallInvite(ctx, req.(*TLPhoneExportGroupCallInvite))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGroupCalls_PhoneToggleGroupCallStartSubscription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneToggleGroupCallStartSubscription)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGroupCallsServer).PhoneToggleGroupCallStartSubscription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGroupCalls/PhoneToggleGroupCallStartSubscription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGroupCallsServer).PhoneToggleGroupCallStartSubscription(ctx, req.(*TLPhoneToggleGroupCallStartSubscription))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGroupCalls_PhoneStartScheduledGroupCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneStartScheduledGroupCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGroupCallsServer).PhoneStartScheduledGroupCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGroupCalls/PhoneStartScheduledGroupCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGroupCallsServer).PhoneStartScheduledGroupCall(ctx, req.(*TLPhoneStartScheduledGroupCall))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGroupCalls_PhoneSaveDefaultGroupCallJoinAs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneSaveDefaultGroupCallJoinAs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGroupCallsServer).PhoneSaveDefaultGroupCallJoinAs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGroupCalls/PhoneSaveDefaultGroupCallJoinAs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGroupCallsServer).PhoneSaveDefaultGroupCallJoinAs(ctx, req.(*TLPhoneSaveDefaultGroupCallJoinAs))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGroupCalls_PhoneJoinGroupCallPresentation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneJoinGroupCallPresentation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGroupCallsServer).PhoneJoinGroupCallPresentation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGroupCalls/PhoneJoinGroupCallPresentation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGroupCallsServer).PhoneJoinGroupCallPresentation(ctx, req.(*TLPhoneJoinGroupCallPresentation))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGroupCalls_PhoneLeaveGroupCallPresentation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneLeaveGroupCallPresentation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGroupCallsServer).PhoneLeaveGroupCallPresentation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGroupCalls/PhoneLeaveGroupCallPresentation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGroupCallsServer).PhoneLeaveGroupCallPresentation(ctx, req.(*TLPhoneLeaveGroupCallPresentation))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGroupCalls_PhoneGetGroupCallStreamChannels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneGetGroupCallStreamChannels)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGroupCallsServer).PhoneGetGroupCallStreamChannels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGroupCalls/PhoneGetGroupCallStreamChannels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGroupCallsServer).PhoneGetGroupCallStreamChannels(ctx, req.(*TLPhoneGetGroupCallStreamChannels))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGroupCalls_PhoneGetGroupCallStreamRtmpUrl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLPhoneGetGroupCallStreamRtmpUrl)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGroupCallsServer).PhoneGetGroupCallStreamRtmpUrl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGroupCalls/PhoneGetGroupCallStreamRtmpUrl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGroupCallsServer).PhoneGetGroupCallStreamRtmpUrl(ctx, req.(*TLPhoneGetGroupCallStreamRtmpUrl))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCGroupCalls_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCGroupCalls",
	HandlerType: (*RPCGroupCallsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "phone_createGroupCall",
			Handler:    _RPCGroupCalls_PhoneCreateGroupCall_Handler,
		},
		{
			MethodName: "phone_joinGroupCall",
			Handler:    _RPCGroupCalls_PhoneJoinGroupCall_Handler,
		},
		{
			MethodName: "phone_leaveGroupCall",
			Handler:    _RPCGroupCalls_PhoneLeaveGroupCall_Handler,
		},
		{
			MethodName: "phone_inviteToGroupCall",
			Handler:    _RPCGroupCalls_PhoneInviteToGroupCall_Handler,
		},
		{
			MethodName: "phone_discardGroupCall",
			Handler:    _RPCGroupCalls_PhoneDiscardGroupCall_Handler,
		},
		{
			MethodName: "phone_toggleGroupCallSettings",
			Handler:    _RPCGroupCalls_PhoneToggleGroupCallSettings_Handler,
		},
		{
			MethodName: "phone_getGroupCall",
			Handler:    _RPCGroupCalls_PhoneGetGroupCall_Handler,
		},
		{
			MethodName: "phone_getGroupParticipants",
			Handler:    _RPCGroupCalls_PhoneGetGroupParticipants_Handler,
		},
		{
			MethodName: "phone_checkGroupCall",
			Handler:    _RPCGroupCalls_PhoneCheckGroupCall_Handler,
		},
		{
			MethodName: "phone_toggleGroupCallRecord",
			Handler:    _RPCGroupCalls_PhoneToggleGroupCallRecord_Handler,
		},
		{
			MethodName: "phone_editGroupCallParticipant",
			Handler:    _RPCGroupCalls_PhoneEditGroupCallParticipant_Handler,
		},
		{
			MethodName: "phone_editGroupCallTitle",
			Handler:    _RPCGroupCalls_PhoneEditGroupCallTitle_Handler,
		},
		{
			MethodName: "phone_getGroupCallJoinAs",
			Handler:    _RPCGroupCalls_PhoneGetGroupCallJoinAs_Handler,
		},
		{
			MethodName: "phone_exportGroupCallInvite",
			Handler:    _RPCGroupCalls_PhoneExportGroupCallInvite_Handler,
		},
		{
			MethodName: "phone_toggleGroupCallStartSubscription",
			Handler:    _RPCGroupCalls_PhoneToggleGroupCallStartSubscription_Handler,
		},
		{
			MethodName: "phone_startScheduledGroupCall",
			Handler:    _RPCGroupCalls_PhoneStartScheduledGroupCall_Handler,
		},
		{
			MethodName: "phone_saveDefaultGroupCallJoinAs",
			Handler:    _RPCGroupCalls_PhoneSaveDefaultGroupCallJoinAs_Handler,
		},
		{
			MethodName: "phone_joinGroupCallPresentation",
			Handler:    _RPCGroupCalls_PhoneJoinGroupCallPresentation_Handler,
		},
		{
			MethodName: "phone_leaveGroupCallPresentation",
			Handler:    _RPCGroupCalls_PhoneLeaveGroupCallPresentation_Handler,
		},
		{
			MethodName: "phone_getGroupCallStreamChannels",
			Handler:    _RPCGroupCalls_PhoneGetGroupCallStreamChannels_Handler,
		},
		{
			MethodName: "phone_getGroupCallStreamRtmpUrl",
			Handler:    _RPCGroupCalls_PhoneGetGroupCallStreamRtmpUrl_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCNotificationClient is the client API for RPCNotification service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCNotificationClient interface {
	AccountRegisterDevice(ctx context.Context, in *TLAccountRegisterDevice, opts ...grpc.CallOption) (*Bool, error)
	AccountUnregisterDevice(ctx context.Context, in *TLAccountUnregisterDevice, opts ...grpc.CallOption) (*Bool, error)
	AccountUpdateNotifySettings(ctx context.Context, in *TLAccountUpdateNotifySettings, opts ...grpc.CallOption) (*Bool, error)
	AccountGetNotifySettings(ctx context.Context, in *TLAccountGetNotifySettings, opts ...grpc.CallOption) (*PeerNotifySettings, error)
	AccountResetNotifySettings(ctx context.Context, in *TLAccountResetNotifySettings, opts ...grpc.CallOption) (*Bool, error)
	AccountUpdateDeviceLocked(ctx context.Context, in *TLAccountUpdateDeviceLocked, opts ...grpc.CallOption) (*Bool, error)
	AccountGetNotifyExceptions(ctx context.Context, in *TLAccountGetNotifyExceptions, opts ...grpc.CallOption) (*Updates, error)
}

type rPCNotificationClient struct {
	cc *grpc.ClientConn
}

func NewRPCNotificationClient(cc *grpc.ClientConn) RPCNotificationClient {
	return &rPCNotificationClient{cc}
}

func (c *rPCNotificationClient) AccountRegisterDevice(ctx context.Context, in *TLAccountRegisterDevice, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCNotification/account_registerDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCNotificationClient) AccountUnregisterDevice(ctx context.Context, in *TLAccountUnregisterDevice, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCNotification/account_unregisterDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCNotificationClient) AccountUpdateNotifySettings(ctx context.Context, in *TLAccountUpdateNotifySettings, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCNotification/account_updateNotifySettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCNotificationClient) AccountGetNotifySettings(ctx context.Context, in *TLAccountGetNotifySettings, opts ...grpc.CallOption) (*PeerNotifySettings, error) {
	out := new(PeerNotifySettings)
	err := c.cc.Invoke(ctx, "/mtproto.RPCNotification/account_getNotifySettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCNotificationClient) AccountResetNotifySettings(ctx context.Context, in *TLAccountResetNotifySettings, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCNotification/account_resetNotifySettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCNotificationClient) AccountUpdateDeviceLocked(ctx context.Context, in *TLAccountUpdateDeviceLocked, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCNotification/account_updateDeviceLocked", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCNotificationClient) AccountGetNotifyExceptions(ctx context.Context, in *TLAccountGetNotifyExceptions, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCNotification/account_getNotifyExceptions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCNotificationServer is the server API for RPCNotification service.
type RPCNotificationServer interface {
	AccountRegisterDevice(context.Context, *TLAccountRegisterDevice) (*Bool, error)
	AccountUnregisterDevice(context.Context, *TLAccountUnregisterDevice) (*Bool, error)
	AccountUpdateNotifySettings(context.Context, *TLAccountUpdateNotifySettings) (*Bool, error)
	AccountGetNotifySettings(context.Context, *TLAccountGetNotifySettings) (*PeerNotifySettings, error)
	AccountResetNotifySettings(context.Context, *TLAccountResetNotifySettings) (*Bool, error)
	AccountUpdateDeviceLocked(context.Context, *TLAccountUpdateDeviceLocked) (*Bool, error)
	AccountGetNotifyExceptions(context.Context, *TLAccountGetNotifyExceptions) (*Updates, error)
}

// UnimplementedRPCNotificationServer can be embedded to have forward compatible implementations.
type UnimplementedRPCNotificationServer struct {
}

func (*UnimplementedRPCNotificationServer) AccountRegisterDevice(ctx context.Context, req *TLAccountRegisterDevice) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountRegisterDevice not implemented")
}
func (*UnimplementedRPCNotificationServer) AccountUnregisterDevice(ctx context.Context, req *TLAccountUnregisterDevice) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountUnregisterDevice not implemented")
}
func (*UnimplementedRPCNotificationServer) AccountUpdateNotifySettings(ctx context.Context, req *TLAccountUpdateNotifySettings) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountUpdateNotifySettings not implemented")
}
func (*UnimplementedRPCNotificationServer) AccountGetNotifySettings(ctx context.Context, req *TLAccountGetNotifySettings) (*PeerNotifySettings, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountGetNotifySettings not implemented")
}
func (*UnimplementedRPCNotificationServer) AccountResetNotifySettings(ctx context.Context, req *TLAccountResetNotifySettings) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountResetNotifySettings not implemented")
}
func (*UnimplementedRPCNotificationServer) AccountUpdateDeviceLocked(ctx context.Context, req *TLAccountUpdateDeviceLocked) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountUpdateDeviceLocked not implemented")
}
func (*UnimplementedRPCNotificationServer) AccountGetNotifyExceptions(ctx context.Context, req *TLAccountGetNotifyExceptions) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountGetNotifyExceptions not implemented")
}

func RegisterRPCNotificationServer(s *grpc.Server, srv RPCNotificationServer) {
	s.RegisterService(&_RPCNotification_serviceDesc, srv)
}

func _RPCNotification_AccountRegisterDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountRegisterDevice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCNotificationServer).AccountRegisterDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCNotification/AccountRegisterDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCNotificationServer).AccountRegisterDevice(ctx, req.(*TLAccountRegisterDevice))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCNotification_AccountUnregisterDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountUnregisterDevice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCNotificationServer).AccountUnregisterDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCNotification/AccountUnregisterDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCNotificationServer).AccountUnregisterDevice(ctx, req.(*TLAccountUnregisterDevice))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCNotification_AccountUpdateNotifySettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountUpdateNotifySettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCNotificationServer).AccountUpdateNotifySettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCNotification/AccountUpdateNotifySettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCNotificationServer).AccountUpdateNotifySettings(ctx, req.(*TLAccountUpdateNotifySettings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCNotification_AccountGetNotifySettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetNotifySettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCNotificationServer).AccountGetNotifySettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCNotification/AccountGetNotifySettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCNotificationServer).AccountGetNotifySettings(ctx, req.(*TLAccountGetNotifySettings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCNotification_AccountResetNotifySettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountResetNotifySettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCNotificationServer).AccountResetNotifySettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCNotification/AccountResetNotifySettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCNotificationServer).AccountResetNotifySettings(ctx, req.(*TLAccountResetNotifySettings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCNotification_AccountUpdateDeviceLocked_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountUpdateDeviceLocked)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCNotificationServer).AccountUpdateDeviceLocked(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCNotification/AccountUpdateDeviceLocked",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCNotificationServer).AccountUpdateDeviceLocked(ctx, req.(*TLAccountUpdateDeviceLocked))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCNotification_AccountGetNotifyExceptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetNotifyExceptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCNotificationServer).AccountGetNotifyExceptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCNotification/AccountGetNotifyExceptions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCNotificationServer).AccountGetNotifyExceptions(ctx, req.(*TLAccountGetNotifyExceptions))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCNotification_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCNotification",
	HandlerType: (*RPCNotificationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "account_registerDevice",
			Handler:    _RPCNotification_AccountRegisterDevice_Handler,
		},
		{
			MethodName: "account_unregisterDevice",
			Handler:    _RPCNotification_AccountUnregisterDevice_Handler,
		},
		{
			MethodName: "account_updateNotifySettings",
			Handler:    _RPCNotification_AccountUpdateNotifySettings_Handler,
		},
		{
			MethodName: "account_getNotifySettings",
			Handler:    _RPCNotification_AccountGetNotifySettings_Handler,
		},
		{
			MethodName: "account_resetNotifySettings",
			Handler:    _RPCNotification_AccountResetNotifySettings_Handler,
		},
		{
			MethodName: "account_updateDeviceLocked",
			Handler:    _RPCNotification_AccountUpdateDeviceLocked_Handler,
		},
		{
			MethodName: "account_getNotifyExceptions",
			Handler:    _RPCNotification_AccountGetNotifyExceptions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCPassportClient is the client API for RPCPassport service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCPassportClient interface {
	AccountGetAuthorizations(ctx context.Context, in *TLAccountGetAuthorizations, opts ...grpc.CallOption) (*Account_Authorizations, error)
	AccountGetAllSecureValues(ctx context.Context, in *TLAccountGetAllSecureValues, opts ...grpc.CallOption) (*Vector_SecureValue, error)
	AccountGetSecureValue(ctx context.Context, in *TLAccountGetSecureValue, opts ...grpc.CallOption) (*Vector_SecureValue, error)
	AccountSaveSecureValue(ctx context.Context, in *TLAccountSaveSecureValue, opts ...grpc.CallOption) (*SecureValue, error)
	AccountDeleteSecureValue(ctx context.Context, in *TLAccountDeleteSecureValue, opts ...grpc.CallOption) (*Bool, error)
	AccountGetAuthorizationForm(ctx context.Context, in *TLAccountGetAuthorizationForm, opts ...grpc.CallOption) (*Account_AuthorizationForm, error)
	AccountAcceptAuthorization(ctx context.Context, in *TLAccountAcceptAuthorization, opts ...grpc.CallOption) (*Bool, error)
	AccountSendVerifyPhoneCode(ctx context.Context, in *TLAccountSendVerifyPhoneCode, opts ...grpc.CallOption) (*Auth_SentCode, error)
	AccountVerifyPhone(ctx context.Context, in *TLAccountVerifyPhone, opts ...grpc.CallOption) (*Bool, error)
	AccountSendVerifyEmailCode(ctx context.Context, in *TLAccountSendVerifyEmailCode, opts ...grpc.CallOption) (*Account_SentEmailCode, error)
	AccountVerifyEmail(ctx context.Context, in *TLAccountVerifyEmail, opts ...grpc.CallOption) (*Bool, error)
	UsersSetSecureValueErrors(ctx context.Context, in *TLUsersSetSecureValueErrors, opts ...grpc.CallOption) (*Bool, error)
	HelpGetPassportConfig(ctx context.Context, in *TLHelpGetPassportConfig, opts ...grpc.CallOption) (*Help_PassportConfig, error)
}

type rPCPassportClient struct {
	cc *grpc.ClientConn
}

func NewRPCPassportClient(cc *grpc.ClientConn) RPCPassportClient {
	return &rPCPassportClient{cc}
}

func (c *rPCPassportClient) AccountGetAuthorizations(ctx context.Context, in *TLAccountGetAuthorizations, opts ...grpc.CallOption) (*Account_Authorizations, error) {
	out := new(Account_Authorizations)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPassport/account_getAuthorizations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPassportClient) AccountGetAllSecureValues(ctx context.Context, in *TLAccountGetAllSecureValues, opts ...grpc.CallOption) (*Vector_SecureValue, error) {
	out := new(Vector_SecureValue)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPassport/account_getAllSecureValues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPassportClient) AccountGetSecureValue(ctx context.Context, in *TLAccountGetSecureValue, opts ...grpc.CallOption) (*Vector_SecureValue, error) {
	out := new(Vector_SecureValue)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPassport/account_getSecureValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPassportClient) AccountSaveSecureValue(ctx context.Context, in *TLAccountSaveSecureValue, opts ...grpc.CallOption) (*SecureValue, error) {
	out := new(SecureValue)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPassport/account_saveSecureValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPassportClient) AccountDeleteSecureValue(ctx context.Context, in *TLAccountDeleteSecureValue, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPassport/account_deleteSecureValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPassportClient) AccountGetAuthorizationForm(ctx context.Context, in *TLAccountGetAuthorizationForm, opts ...grpc.CallOption) (*Account_AuthorizationForm, error) {
	out := new(Account_AuthorizationForm)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPassport/account_getAuthorizationForm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPassportClient) AccountAcceptAuthorization(ctx context.Context, in *TLAccountAcceptAuthorization, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPassport/account_acceptAuthorization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPassportClient) AccountSendVerifyPhoneCode(ctx context.Context, in *TLAccountSendVerifyPhoneCode, opts ...grpc.CallOption) (*Auth_SentCode, error) {
	out := new(Auth_SentCode)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPassport/account_sendVerifyPhoneCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPassportClient) AccountVerifyPhone(ctx context.Context, in *TLAccountVerifyPhone, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPassport/account_verifyPhone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPassportClient) AccountSendVerifyEmailCode(ctx context.Context, in *TLAccountSendVerifyEmailCode, opts ...grpc.CallOption) (*Account_SentEmailCode, error) {
	out := new(Account_SentEmailCode)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPassport/account_sendVerifyEmailCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPassportClient) AccountVerifyEmail(ctx context.Context, in *TLAccountVerifyEmail, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPassport/account_verifyEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPassportClient) UsersSetSecureValueErrors(ctx context.Context, in *TLUsersSetSecureValueErrors, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPassport/users_setSecureValueErrors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPassportClient) HelpGetPassportConfig(ctx context.Context, in *TLHelpGetPassportConfig, opts ...grpc.CallOption) (*Help_PassportConfig, error) {
	out := new(Help_PassportConfig)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPassport/help_getPassportConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCPassportServer is the server API for RPCPassport service.
type RPCPassportServer interface {
	AccountGetAuthorizations(context.Context, *TLAccountGetAuthorizations) (*Account_Authorizations, error)
	AccountGetAllSecureValues(context.Context, *TLAccountGetAllSecureValues) (*Vector_SecureValue, error)
	AccountGetSecureValue(context.Context, *TLAccountGetSecureValue) (*Vector_SecureValue, error)
	AccountSaveSecureValue(context.Context, *TLAccountSaveSecureValue) (*SecureValue, error)
	AccountDeleteSecureValue(context.Context, *TLAccountDeleteSecureValue) (*Bool, error)
	AccountGetAuthorizationForm(context.Context, *TLAccountGetAuthorizationForm) (*Account_AuthorizationForm, error)
	AccountAcceptAuthorization(context.Context, *TLAccountAcceptAuthorization) (*Bool, error)
	AccountSendVerifyPhoneCode(context.Context, *TLAccountSendVerifyPhoneCode) (*Auth_SentCode, error)
	AccountVerifyPhone(context.Context, *TLAccountVerifyPhone) (*Bool, error)
	AccountSendVerifyEmailCode(context.Context, *TLAccountSendVerifyEmailCode) (*Account_SentEmailCode, error)
	AccountVerifyEmail(context.Context, *TLAccountVerifyEmail) (*Bool, error)
	UsersSetSecureValueErrors(context.Context, *TLUsersSetSecureValueErrors) (*Bool, error)
	HelpGetPassportConfig(context.Context, *TLHelpGetPassportConfig) (*Help_PassportConfig, error)
}

// UnimplementedRPCPassportServer can be embedded to have forward compatible implementations.
type UnimplementedRPCPassportServer struct {
}

func (*UnimplementedRPCPassportServer) AccountGetAuthorizations(ctx context.Context, req *TLAccountGetAuthorizations) (*Account_Authorizations, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountGetAuthorizations not implemented")
}
func (*UnimplementedRPCPassportServer) AccountGetAllSecureValues(ctx context.Context, req *TLAccountGetAllSecureValues) (*Vector_SecureValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountGetAllSecureValues not implemented")
}
func (*UnimplementedRPCPassportServer) AccountGetSecureValue(ctx context.Context, req *TLAccountGetSecureValue) (*Vector_SecureValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountGetSecureValue not implemented")
}
func (*UnimplementedRPCPassportServer) AccountSaveSecureValue(ctx context.Context, req *TLAccountSaveSecureValue) (*SecureValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountSaveSecureValue not implemented")
}
func (*UnimplementedRPCPassportServer) AccountDeleteSecureValue(ctx context.Context, req *TLAccountDeleteSecureValue) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountDeleteSecureValue not implemented")
}
func (*UnimplementedRPCPassportServer) AccountGetAuthorizationForm(ctx context.Context, req *TLAccountGetAuthorizationForm) (*Account_AuthorizationForm, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountGetAuthorizationForm not implemented")
}
func (*UnimplementedRPCPassportServer) AccountAcceptAuthorization(ctx context.Context, req *TLAccountAcceptAuthorization) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountAcceptAuthorization not implemented")
}
func (*UnimplementedRPCPassportServer) AccountSendVerifyPhoneCode(ctx context.Context, req *TLAccountSendVerifyPhoneCode) (*Auth_SentCode, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountSendVerifyPhoneCode not implemented")
}
func (*UnimplementedRPCPassportServer) AccountVerifyPhone(ctx context.Context, req *TLAccountVerifyPhone) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountVerifyPhone not implemented")
}
func (*UnimplementedRPCPassportServer) AccountSendVerifyEmailCode(ctx context.Context, req *TLAccountSendVerifyEmailCode) (*Account_SentEmailCode, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountSendVerifyEmailCode not implemented")
}
func (*UnimplementedRPCPassportServer) AccountVerifyEmail(ctx context.Context, req *TLAccountVerifyEmail) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountVerifyEmail not implemented")
}
func (*UnimplementedRPCPassportServer) UsersSetSecureValueErrors(ctx context.Context, req *TLUsersSetSecureValueErrors) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UsersSetSecureValueErrors not implemented")
}
func (*UnimplementedRPCPassportServer) HelpGetPassportConfig(ctx context.Context, req *TLHelpGetPassportConfig) (*Help_PassportConfig, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelpGetPassportConfig not implemented")
}

func RegisterRPCPassportServer(s *grpc.Server, srv RPCPassportServer) {
	s.RegisterService(&_RPCPassport_serviceDesc, srv)
}

func _RPCPassport_AccountGetAuthorizations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetAuthorizations)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPassportServer).AccountGetAuthorizations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPassport/AccountGetAuthorizations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPassportServer).AccountGetAuthorizations(ctx, req.(*TLAccountGetAuthorizations))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPassport_AccountGetAllSecureValues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetAllSecureValues)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPassportServer).AccountGetAllSecureValues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPassport/AccountGetAllSecureValues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPassportServer).AccountGetAllSecureValues(ctx, req.(*TLAccountGetAllSecureValues))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPassport_AccountGetSecureValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetSecureValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPassportServer).AccountGetSecureValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPassport/AccountGetSecureValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPassportServer).AccountGetSecureValue(ctx, req.(*TLAccountGetSecureValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPassport_AccountSaveSecureValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSaveSecureValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPassportServer).AccountSaveSecureValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPassport/AccountSaveSecureValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPassportServer).AccountSaveSecureValue(ctx, req.(*TLAccountSaveSecureValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPassport_AccountDeleteSecureValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountDeleteSecureValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPassportServer).AccountDeleteSecureValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPassport/AccountDeleteSecureValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPassportServer).AccountDeleteSecureValue(ctx, req.(*TLAccountDeleteSecureValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPassport_AccountGetAuthorizationForm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetAuthorizationForm)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPassportServer).AccountGetAuthorizationForm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPassport/AccountGetAuthorizationForm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPassportServer).AccountGetAuthorizationForm(ctx, req.(*TLAccountGetAuthorizationForm))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPassport_AccountAcceptAuthorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountAcceptAuthorization)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPassportServer).AccountAcceptAuthorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPassport/AccountAcceptAuthorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPassportServer).AccountAcceptAuthorization(ctx, req.(*TLAccountAcceptAuthorization))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPassport_AccountSendVerifyPhoneCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSendVerifyPhoneCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPassportServer).AccountSendVerifyPhoneCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPassport/AccountSendVerifyPhoneCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPassportServer).AccountSendVerifyPhoneCode(ctx, req.(*TLAccountSendVerifyPhoneCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPassport_AccountVerifyPhone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountVerifyPhone)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPassportServer).AccountVerifyPhone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPassport/AccountVerifyPhone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPassportServer).AccountVerifyPhone(ctx, req.(*TLAccountVerifyPhone))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPassport_AccountSendVerifyEmailCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSendVerifyEmailCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPassportServer).AccountSendVerifyEmailCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPassport/AccountSendVerifyEmailCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPassportServer).AccountSendVerifyEmailCode(ctx, req.(*TLAccountSendVerifyEmailCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPassport_AccountVerifyEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountVerifyEmail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPassportServer).AccountVerifyEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPassport/AccountVerifyEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPassportServer).AccountVerifyEmail(ctx, req.(*TLAccountVerifyEmail))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPassport_UsersSetSecureValueErrors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUsersSetSecureValueErrors)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPassportServer).UsersSetSecureValueErrors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPassport/UsersSetSecureValueErrors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPassportServer).UsersSetSecureValueErrors(ctx, req.(*TLUsersSetSecureValueErrors))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPassport_HelpGetPassportConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetPassportConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPassportServer).HelpGetPassportConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPassport/HelpGetPassportConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPassportServer).HelpGetPassportConfig(ctx, req.(*TLHelpGetPassportConfig))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCPassport_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCPassport",
	HandlerType: (*RPCPassportServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "account_getAuthorizations",
			Handler:    _RPCPassport_AccountGetAuthorizations_Handler,
		},
		{
			MethodName: "account_getAllSecureValues",
			Handler:    _RPCPassport_AccountGetAllSecureValues_Handler,
		},
		{
			MethodName: "account_getSecureValue",
			Handler:    _RPCPassport_AccountGetSecureValue_Handler,
		},
		{
			MethodName: "account_saveSecureValue",
			Handler:    _RPCPassport_AccountSaveSecureValue_Handler,
		},
		{
			MethodName: "account_deleteSecureValue",
			Handler:    _RPCPassport_AccountDeleteSecureValue_Handler,
		},
		{
			MethodName: "account_getAuthorizationForm",
			Handler:    _RPCPassport_AccountGetAuthorizationForm_Handler,
		},
		{
			MethodName: "account_acceptAuthorization",
			Handler:    _RPCPassport_AccountAcceptAuthorization_Handler,
		},
		{
			MethodName: "account_sendVerifyPhoneCode",
			Handler:    _RPCPassport_AccountSendVerifyPhoneCode_Handler,
		},
		{
			MethodName: "account_verifyPhone",
			Handler:    _RPCPassport_AccountVerifyPhone_Handler,
		},
		{
			MethodName: "account_sendVerifyEmailCode",
			Handler:    _RPCPassport_AccountSendVerifyEmailCode_Handler,
		},
		{
			MethodName: "account_verifyEmail",
			Handler:    _RPCPassport_AccountVerifyEmail_Handler,
		},
		{
			MethodName: "users_setSecureValueErrors",
			Handler:    _RPCPassport_UsersSetSecureValueErrors_Handler,
		},
		{
			MethodName: "help_getPassportConfig",
			Handler:    _RPCPassport_HelpGetPassportConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCPromoDataClient is the client API for RPCPromoData service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCPromoDataClient interface {
	HelpGetPromoData(ctx context.Context, in *TLHelpGetPromoData, opts ...grpc.CallOption) (*Help_PromoData, error)
	HelpHidePromoData(ctx context.Context, in *TLHelpHidePromoData, opts ...grpc.CallOption) (*Bool, error)
}

type rPCPromoDataClient struct {
	cc *grpc.ClientConn
}

func NewRPCPromoDataClient(cc *grpc.ClientConn) RPCPromoDataClient {
	return &rPCPromoDataClient{cc}
}

func (c *rPCPromoDataClient) HelpGetPromoData(ctx context.Context, in *TLHelpGetPromoData, opts ...grpc.CallOption) (*Help_PromoData, error) {
	out := new(Help_PromoData)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPromoData/help_getPromoData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCPromoDataClient) HelpHidePromoData(ctx context.Context, in *TLHelpHidePromoData, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCPromoData/help_hidePromoData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCPromoDataServer is the server API for RPCPromoData service.
type RPCPromoDataServer interface {
	HelpGetPromoData(context.Context, *TLHelpGetPromoData) (*Help_PromoData, error)
	HelpHidePromoData(context.Context, *TLHelpHidePromoData) (*Bool, error)
}

// UnimplementedRPCPromoDataServer can be embedded to have forward compatible implementations.
type UnimplementedRPCPromoDataServer struct {
}

func (*UnimplementedRPCPromoDataServer) HelpGetPromoData(ctx context.Context, req *TLHelpGetPromoData) (*Help_PromoData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelpGetPromoData not implemented")
}
func (*UnimplementedRPCPromoDataServer) HelpHidePromoData(ctx context.Context, req *TLHelpHidePromoData) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelpHidePromoData not implemented")
}

func RegisterRPCPromoDataServer(s *grpc.Server, srv RPCPromoDataServer) {
	s.RegisterService(&_RPCPromoData_serviceDesc, srv)
}

func _RPCPromoData_HelpGetPromoData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetPromoData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPromoDataServer).HelpGetPromoData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPromoData/HelpGetPromoData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPromoDataServer).HelpGetPromoData(ctx, req.(*TLHelpGetPromoData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCPromoData_HelpHidePromoData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpHidePromoData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCPromoDataServer).HelpHidePromoData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCPromoData/HelpHidePromoData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCPromoDataServer).HelpHidePromoData(ctx, req.(*TLHelpHidePromoData))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCPromoData_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCPromoData",
	HandlerType: (*RPCPromoDataServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "help_getPromoData",
			Handler:    _RPCPromoData_HelpGetPromoData_Handler,
		},
		{
			MethodName: "help_hidePromoData",
			Handler:    _RPCPromoData_HelpHidePromoData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCTosClient is the client API for RPCTos service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCTosClient interface {
	HelpGetTermsOfServiceUpdate(ctx context.Context, in *TLHelpGetTermsOfServiceUpdate, opts ...grpc.CallOption) (*Help_TermsOfServiceUpdate, error)
	HelpAcceptTermsOfService(ctx context.Context, in *TLHelpAcceptTermsOfService, opts ...grpc.CallOption) (*Bool, error)
}

type rPCTosClient struct {
	cc *grpc.ClientConn
}

func NewRPCTosClient(cc *grpc.ClientConn) RPCTosClient {
	return &rPCTosClient{cc}
}

func (c *rPCTosClient) HelpGetTermsOfServiceUpdate(ctx context.Context, in *TLHelpGetTermsOfServiceUpdate, opts ...grpc.CallOption) (*Help_TermsOfServiceUpdate, error) {
	out := new(Help_TermsOfServiceUpdate)
	err := c.cc.Invoke(ctx, "/mtproto.RPCTos/help_getTermsOfServiceUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCTosClient) HelpAcceptTermsOfService(ctx context.Context, in *TLHelpAcceptTermsOfService, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCTos/help_acceptTermsOfService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCTosServer is the server API for RPCTos service.
type RPCTosServer interface {
	HelpGetTermsOfServiceUpdate(context.Context, *TLHelpGetTermsOfServiceUpdate) (*Help_TermsOfServiceUpdate, error)
	HelpAcceptTermsOfService(context.Context, *TLHelpAcceptTermsOfService) (*Bool, error)
}

// UnimplementedRPCTosServer can be embedded to have forward compatible implementations.
type UnimplementedRPCTosServer struct {
}

func (*UnimplementedRPCTosServer) HelpGetTermsOfServiceUpdate(ctx context.Context, req *TLHelpGetTermsOfServiceUpdate) (*Help_TermsOfServiceUpdate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelpGetTermsOfServiceUpdate not implemented")
}
func (*UnimplementedRPCTosServer) HelpAcceptTermsOfService(ctx context.Context, req *TLHelpAcceptTermsOfService) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelpAcceptTermsOfService not implemented")
}

func RegisterRPCTosServer(s *grpc.Server, srv RPCTosServer) {
	s.RegisterService(&_RPCTos_serviceDesc, srv)
}

func _RPCTos_HelpGetTermsOfServiceUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpGetTermsOfServiceUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCTosServer).HelpGetTermsOfServiceUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCTos/HelpGetTermsOfServiceUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCTosServer).HelpGetTermsOfServiceUpdate(ctx, req.(*TLHelpGetTermsOfServiceUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCTos_HelpAcceptTermsOfService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpAcceptTermsOfService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCTosServer).HelpAcceptTermsOfService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCTos/HelpAcceptTermsOfService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCTosServer).HelpAcceptTermsOfService(ctx, req.(*TLHelpAcceptTermsOfService))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCTos_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCTos",
	HandlerType: (*RPCTosServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "help_getTermsOfServiceUpdate",
			Handler:    _RPCTos_HelpGetTermsOfServiceUpdate_Handler,
		},
		{
			MethodName: "help_acceptTermsOfService",
			Handler:    _RPCTos_HelpAcceptTermsOfService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCSeamlessClient is the client API for RPCSeamless service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCSeamlessClient interface {
	AccountGetWebAuthorizations(ctx context.Context, in *TLAccountGetWebAuthorizations, opts ...grpc.CallOption) (*Account_WebAuthorizations, error)
	AccountResetWebAuthorization(ctx context.Context, in *TLAccountResetWebAuthorization, opts ...grpc.CallOption) (*Bool, error)
	AccountResetWebAuthorizations(ctx context.Context, in *TLAccountResetWebAuthorizations, opts ...grpc.CallOption) (*Bool, error)
	MessagesRequestUrlAuth(ctx context.Context, in *TLMessagesRequestUrlAuth, opts ...grpc.CallOption) (*UrlAuthResult, error)
	MessagesAcceptUrlAuth(ctx context.Context, in *TLMessagesAcceptUrlAuth, opts ...grpc.CallOption) (*UrlAuthResult, error)
}

type rPCSeamlessClient struct {
	cc *grpc.ClientConn
}

func NewRPCSeamlessClient(cc *grpc.ClientConn) RPCSeamlessClient {
	return &rPCSeamlessClient{cc}
}

func (c *rPCSeamlessClient) AccountGetWebAuthorizations(ctx context.Context, in *TLAccountGetWebAuthorizations, opts ...grpc.CallOption) (*Account_WebAuthorizations, error) {
	out := new(Account_WebAuthorizations)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSeamless/account_getWebAuthorizations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSeamlessClient) AccountResetWebAuthorization(ctx context.Context, in *TLAccountResetWebAuthorization, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSeamless/account_resetWebAuthorization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSeamlessClient) AccountResetWebAuthorizations(ctx context.Context, in *TLAccountResetWebAuthorizations, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSeamless/account_resetWebAuthorizations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSeamlessClient) MessagesRequestUrlAuth(ctx context.Context, in *TLMessagesRequestUrlAuth, opts ...grpc.CallOption) (*UrlAuthResult, error) {
	out := new(UrlAuthResult)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSeamless/messages_requestUrlAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCSeamlessClient) MessagesAcceptUrlAuth(ctx context.Context, in *TLMessagesAcceptUrlAuth, opts ...grpc.CallOption) (*UrlAuthResult, error) {
	out := new(UrlAuthResult)
	err := c.cc.Invoke(ctx, "/mtproto.RPCSeamless/messages_acceptUrlAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCSeamlessServer is the server API for RPCSeamless service.
type RPCSeamlessServer interface {
	AccountGetWebAuthorizations(context.Context, *TLAccountGetWebAuthorizations) (*Account_WebAuthorizations, error)
	AccountResetWebAuthorization(context.Context, *TLAccountResetWebAuthorization) (*Bool, error)
	AccountResetWebAuthorizations(context.Context, *TLAccountResetWebAuthorizations) (*Bool, error)
	MessagesRequestUrlAuth(context.Context, *TLMessagesRequestUrlAuth) (*UrlAuthResult, error)
	MessagesAcceptUrlAuth(context.Context, *TLMessagesAcceptUrlAuth) (*UrlAuthResult, error)
}

// UnimplementedRPCSeamlessServer can be embedded to have forward compatible implementations.
type UnimplementedRPCSeamlessServer struct {
}

func (*UnimplementedRPCSeamlessServer) AccountGetWebAuthorizations(ctx context.Context, req *TLAccountGetWebAuthorizations) (*Account_WebAuthorizations, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountGetWebAuthorizations not implemented")
}
func (*UnimplementedRPCSeamlessServer) AccountResetWebAuthorization(ctx context.Context, req *TLAccountResetWebAuthorization) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountResetWebAuthorization not implemented")
}
func (*UnimplementedRPCSeamlessServer) AccountResetWebAuthorizations(ctx context.Context, req *TLAccountResetWebAuthorizations) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountResetWebAuthorizations not implemented")
}
func (*UnimplementedRPCSeamlessServer) MessagesRequestUrlAuth(ctx context.Context, req *TLMessagesRequestUrlAuth) (*UrlAuthResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesRequestUrlAuth not implemented")
}
func (*UnimplementedRPCSeamlessServer) MessagesAcceptUrlAuth(ctx context.Context, req *TLMessagesAcceptUrlAuth) (*UrlAuthResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesAcceptUrlAuth not implemented")
}

func RegisterRPCSeamlessServer(s *grpc.Server, srv RPCSeamlessServer) {
	s.RegisterService(&_RPCSeamless_serviceDesc, srv)
}

func _RPCSeamless_AccountGetWebAuthorizations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetWebAuthorizations)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSeamlessServer).AccountGetWebAuthorizations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSeamless/AccountGetWebAuthorizations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSeamlessServer).AccountGetWebAuthorizations(ctx, req.(*TLAccountGetWebAuthorizations))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSeamless_AccountResetWebAuthorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountResetWebAuthorization)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSeamlessServer).AccountResetWebAuthorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSeamless/AccountResetWebAuthorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSeamlessServer).AccountResetWebAuthorization(ctx, req.(*TLAccountResetWebAuthorization))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSeamless_AccountResetWebAuthorizations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountResetWebAuthorizations)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSeamlessServer).AccountResetWebAuthorizations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSeamless/AccountResetWebAuthorizations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSeamlessServer).AccountResetWebAuthorizations(ctx, req.(*TLAccountResetWebAuthorizations))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSeamless_MessagesRequestUrlAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesRequestUrlAuth)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSeamlessServer).MessagesRequestUrlAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSeamless/MessagesRequestUrlAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSeamlessServer).MessagesRequestUrlAuth(ctx, req.(*TLMessagesRequestUrlAuth))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCSeamless_MessagesAcceptUrlAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesAcceptUrlAuth)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCSeamlessServer).MessagesAcceptUrlAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCSeamless/MessagesAcceptUrlAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCSeamlessServer).MessagesAcceptUrlAuth(ctx, req.(*TLMessagesAcceptUrlAuth))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCSeamless_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCSeamless",
	HandlerType: (*RPCSeamlessServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "account_getWebAuthorizations",
			Handler:    _RPCSeamless_AccountGetWebAuthorizations_Handler,
		},
		{
			MethodName: "account_resetWebAuthorization",
			Handler:    _RPCSeamless_AccountResetWebAuthorization_Handler,
		},
		{
			MethodName: "account_resetWebAuthorizations",
			Handler:    _RPCSeamless_AccountResetWebAuthorizations_Handler,
		},
		{
			MethodName: "messages_requestUrlAuth",
			Handler:    _RPCSeamless_MessagesRequestUrlAuth_Handler,
		},
		{
			MethodName: "messages_acceptUrlAuth",
			Handler:    _RPCSeamless_MessagesAcceptUrlAuth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCGdprClient is the client API for RPCGdpr service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCGdprClient interface {
	AccountInitTakeoutSession(ctx context.Context, in *TLAccountInitTakeoutSession, opts ...grpc.CallOption) (*Account_Takeout, error)
	AccountFinishTakeoutSession(ctx context.Context, in *TLAccountFinishTakeoutSession, opts ...grpc.CallOption) (*Bool, error)
	MessagesGetSplitRanges(ctx context.Context, in *TLMessagesGetSplitRanges, opts ...grpc.CallOption) (*Vector_MessageRange, error)
	ChannelsGetLeftChannels(ctx context.Context, in *TLChannelsGetLeftChannels, opts ...grpc.CallOption) (*Messages_Chats, error)
}

type rPCGdprClient struct {
	cc *grpc.ClientConn
}

func NewRPCGdprClient(cc *grpc.ClientConn) RPCGdprClient {
	return &rPCGdprClient{cc}
}

func (c *rPCGdprClient) AccountInitTakeoutSession(ctx context.Context, in *TLAccountInitTakeoutSession, opts ...grpc.CallOption) (*Account_Takeout, error) {
	out := new(Account_Takeout)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGdpr/account_initTakeoutSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGdprClient) AccountFinishTakeoutSession(ctx context.Context, in *TLAccountFinishTakeoutSession, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGdpr/account_finishTakeoutSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGdprClient) MessagesGetSplitRanges(ctx context.Context, in *TLMessagesGetSplitRanges, opts ...grpc.CallOption) (*Vector_MessageRange, error) {
	out := new(Vector_MessageRange)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGdpr/messages_getSplitRanges", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCGdprClient) ChannelsGetLeftChannels(ctx context.Context, in *TLChannelsGetLeftChannels, opts ...grpc.CallOption) (*Messages_Chats, error) {
	out := new(Messages_Chats)
	err := c.cc.Invoke(ctx, "/mtproto.RPCGdpr/channels_getLeftChannels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCGdprServer is the server API for RPCGdpr service.
type RPCGdprServer interface {
	AccountInitTakeoutSession(context.Context, *TLAccountInitTakeoutSession) (*Account_Takeout, error)
	AccountFinishTakeoutSession(context.Context, *TLAccountFinishTakeoutSession) (*Bool, error)
	MessagesGetSplitRanges(context.Context, *TLMessagesGetSplitRanges) (*Vector_MessageRange, error)
	ChannelsGetLeftChannels(context.Context, *TLChannelsGetLeftChannels) (*Messages_Chats, error)
}

// UnimplementedRPCGdprServer can be embedded to have forward compatible implementations.
type UnimplementedRPCGdprServer struct {
}

func (*UnimplementedRPCGdprServer) AccountInitTakeoutSession(ctx context.Context, req *TLAccountInitTakeoutSession) (*Account_Takeout, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountInitTakeoutSession not implemented")
}
func (*UnimplementedRPCGdprServer) AccountFinishTakeoutSession(ctx context.Context, req *TLAccountFinishTakeoutSession) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountFinishTakeoutSession not implemented")
}
func (*UnimplementedRPCGdprServer) MessagesGetSplitRanges(ctx context.Context, req *TLMessagesGetSplitRanges) (*Vector_MessageRange, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetSplitRanges not implemented")
}
func (*UnimplementedRPCGdprServer) ChannelsGetLeftChannels(ctx context.Context, req *TLChannelsGetLeftChannels) (*Messages_Chats, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelsGetLeftChannels not implemented")
}

func RegisterRPCGdprServer(s *grpc.Server, srv RPCGdprServer) {
	s.RegisterService(&_RPCGdpr_serviceDesc, srv)
}

func _RPCGdpr_AccountInitTakeoutSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountInitTakeoutSession)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGdprServer).AccountInitTakeoutSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGdpr/AccountInitTakeoutSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGdprServer).AccountInitTakeoutSession(ctx, req.(*TLAccountInitTakeoutSession))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGdpr_AccountFinishTakeoutSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountFinishTakeoutSession)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGdprServer).AccountFinishTakeoutSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGdpr/AccountFinishTakeoutSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGdprServer).AccountFinishTakeoutSession(ctx, req.(*TLAccountFinishTakeoutSession))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGdpr_MessagesGetSplitRanges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetSplitRanges)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGdprServer).MessagesGetSplitRanges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGdpr/MessagesGetSplitRanges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGdprServer).MessagesGetSplitRanges(ctx, req.(*TLMessagesGetSplitRanges))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCGdpr_ChannelsGetLeftChannels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLChannelsGetLeftChannels)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCGdprServer).ChannelsGetLeftChannels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCGdpr/ChannelsGetLeftChannels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCGdprServer).ChannelsGetLeftChannels(ctx, req.(*TLChannelsGetLeftChannels))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCGdpr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCGdpr",
	HandlerType: (*RPCGdprServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "account_initTakeoutSession",
			Handler:    _RPCGdpr_AccountInitTakeoutSession_Handler,
		},
		{
			MethodName: "account_finishTakeoutSession",
			Handler:    _RPCGdpr_AccountFinishTakeoutSession_Handler,
		},
		{
			MethodName: "messages_getSplitRanges",
			Handler:    _RPCGdpr_MessagesGetSplitRanges_Handler,
		},
		{
			MethodName: "channels_getLeftChannels",
			Handler:    _RPCGdpr_ChannelsGetLeftChannels_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCEmojiClient is the client API for RPCEmoji service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCEmojiClient interface {
	MessagesGetEmojiKeywords(ctx context.Context, in *TLMessagesGetEmojiKeywords, opts ...grpc.CallOption) (*EmojiKeywordsDifference, error)
	MessagesGetEmojiKeywordsDifference(ctx context.Context, in *TLMessagesGetEmojiKeywordsDifference, opts ...grpc.CallOption) (*EmojiKeywordsDifference, error)
	MessagesGetEmojiKeywordsLanguages(ctx context.Context, in *TLMessagesGetEmojiKeywordsLanguages, opts ...grpc.CallOption) (*Vector_EmojiLanguage, error)
	MessagesGetEmojiURL(ctx context.Context, in *TLMessagesGetEmojiURL, opts ...grpc.CallOption) (*EmojiURL, error)
}

type rPCEmojiClient struct {
	cc *grpc.ClientConn
}

func NewRPCEmojiClient(cc *grpc.ClientConn) RPCEmojiClient {
	return &rPCEmojiClient{cc}
}

func (c *rPCEmojiClient) MessagesGetEmojiKeywords(ctx context.Context, in *TLMessagesGetEmojiKeywords, opts ...grpc.CallOption) (*EmojiKeywordsDifference, error) {
	out := new(EmojiKeywordsDifference)
	err := c.cc.Invoke(ctx, "/mtproto.RPCEmoji/messages_getEmojiKeywords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCEmojiClient) MessagesGetEmojiKeywordsDifference(ctx context.Context, in *TLMessagesGetEmojiKeywordsDifference, opts ...grpc.CallOption) (*EmojiKeywordsDifference, error) {
	out := new(EmojiKeywordsDifference)
	err := c.cc.Invoke(ctx, "/mtproto.RPCEmoji/messages_getEmojiKeywordsDifference", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCEmojiClient) MessagesGetEmojiKeywordsLanguages(ctx context.Context, in *TLMessagesGetEmojiKeywordsLanguages, opts ...grpc.CallOption) (*Vector_EmojiLanguage, error) {
	out := new(Vector_EmojiLanguage)
	err := c.cc.Invoke(ctx, "/mtproto.RPCEmoji/messages_getEmojiKeywordsLanguages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCEmojiClient) MessagesGetEmojiURL(ctx context.Context, in *TLMessagesGetEmojiURL, opts ...grpc.CallOption) (*EmojiURL, error) {
	out := new(EmojiURL)
	err := c.cc.Invoke(ctx, "/mtproto.RPCEmoji/messages_getEmojiURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCEmojiServer is the server API for RPCEmoji service.
type RPCEmojiServer interface {
	MessagesGetEmojiKeywords(context.Context, *TLMessagesGetEmojiKeywords) (*EmojiKeywordsDifference, error)
	MessagesGetEmojiKeywordsDifference(context.Context, *TLMessagesGetEmojiKeywordsDifference) (*EmojiKeywordsDifference, error)
	MessagesGetEmojiKeywordsLanguages(context.Context, *TLMessagesGetEmojiKeywordsLanguages) (*Vector_EmojiLanguage, error)
	MessagesGetEmojiURL(context.Context, *TLMessagesGetEmojiURL) (*EmojiURL, error)
}

// UnimplementedRPCEmojiServer can be embedded to have forward compatible implementations.
type UnimplementedRPCEmojiServer struct {
}

func (*UnimplementedRPCEmojiServer) MessagesGetEmojiKeywords(ctx context.Context, req *TLMessagesGetEmojiKeywords) (*EmojiKeywordsDifference, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetEmojiKeywords not implemented")
}
func (*UnimplementedRPCEmojiServer) MessagesGetEmojiKeywordsDifference(ctx context.Context, req *TLMessagesGetEmojiKeywordsDifference) (*EmojiKeywordsDifference, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetEmojiKeywordsDifference not implemented")
}
func (*UnimplementedRPCEmojiServer) MessagesGetEmojiKeywordsLanguages(ctx context.Context, req *TLMessagesGetEmojiKeywordsLanguages) (*Vector_EmojiLanguage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetEmojiKeywordsLanguages not implemented")
}
func (*UnimplementedRPCEmojiServer) MessagesGetEmojiURL(ctx context.Context, req *TLMessagesGetEmojiURL) (*EmojiURL, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetEmojiURL not implemented")
}

func RegisterRPCEmojiServer(s *grpc.Server, srv RPCEmojiServer) {
	s.RegisterService(&_RPCEmoji_serviceDesc, srv)
}

func _RPCEmoji_MessagesGetEmojiKeywords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetEmojiKeywords)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCEmojiServer).MessagesGetEmojiKeywords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCEmoji/MessagesGetEmojiKeywords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCEmojiServer).MessagesGetEmojiKeywords(ctx, req.(*TLMessagesGetEmojiKeywords))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCEmoji_MessagesGetEmojiKeywordsDifference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetEmojiKeywordsDifference)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCEmojiServer).MessagesGetEmojiKeywordsDifference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCEmoji/MessagesGetEmojiKeywordsDifference",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCEmojiServer).MessagesGetEmojiKeywordsDifference(ctx, req.(*TLMessagesGetEmojiKeywordsDifference))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCEmoji_MessagesGetEmojiKeywordsLanguages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetEmojiKeywordsLanguages)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCEmojiServer).MessagesGetEmojiKeywordsLanguages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCEmoji/MessagesGetEmojiKeywordsLanguages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCEmojiServer).MessagesGetEmojiKeywordsLanguages(ctx, req.(*TLMessagesGetEmojiKeywordsLanguages))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCEmoji_MessagesGetEmojiURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetEmojiURL)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCEmojiServer).MessagesGetEmojiURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCEmoji/MessagesGetEmojiURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCEmojiServer).MessagesGetEmojiURL(ctx, req.(*TLMessagesGetEmojiURL))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCEmoji_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCEmoji",
	HandlerType: (*RPCEmojiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "messages_getEmojiKeywords",
			Handler:    _RPCEmoji_MessagesGetEmojiKeywords_Handler,
		},
		{
			MethodName: "messages_getEmojiKeywordsDifference",
			Handler:    _RPCEmoji_MessagesGetEmojiKeywordsDifference_Handler,
		},
		{
			MethodName: "messages_getEmojiKeywordsLanguages",
			Handler:    _RPCEmoji_MessagesGetEmojiKeywordsLanguages_Handler,
		},
		{
			MethodName: "messages_getEmojiURL",
			Handler:    _RPCEmoji_MessagesGetEmojiURL_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCContactsClient is the client API for RPCContacts service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCContactsClient interface {
	AccountGetContactSignUpNotification(ctx context.Context, in *TLAccountGetContactSignUpNotification, opts ...grpc.CallOption) (*Bool, error)
	AccountSetContactSignUpNotification(ctx context.Context, in *TLAccountSetContactSignUpNotification, opts ...grpc.CallOption) (*Bool, error)
	ContactsGetContactIDs(ctx context.Context, in *TLContactsGetContactIDs, opts ...grpc.CallOption) (*Vector_Int, error)
	ContactsGetStatuses(ctx context.Context, in *TLContactsGetStatuses, opts ...grpc.CallOption) (*Vector_ContactStatus, error)
	ContactsGetContacts(ctx context.Context, in *TLContactsGetContacts, opts ...grpc.CallOption) (*Contacts_Contacts, error)
	ContactsImportContacts(ctx context.Context, in *TLContactsImportContacts, opts ...grpc.CallOption) (*Contacts_ImportedContacts, error)
	ContactsDeleteContacts(ctx context.Context, in *TLContactsDeleteContacts, opts ...grpc.CallOption) (*Updates, error)
	ContactsDeleteByPhones(ctx context.Context, in *TLContactsDeleteByPhones, opts ...grpc.CallOption) (*Bool, error)
	ContactsBlock(ctx context.Context, in *TLContactsBlock, opts ...grpc.CallOption) (*Bool, error)
	ContactsUnblock(ctx context.Context, in *TLContactsUnblock, opts ...grpc.CallOption) (*Bool, error)
	ContactsGetBlocked(ctx context.Context, in *TLContactsGetBlocked, opts ...grpc.CallOption) (*Contacts_Blocked, error)
	ContactsSearch(ctx context.Context, in *TLContactsSearch, opts ...grpc.CallOption) (*Contacts_Found, error)
	ContactsGetTopPeers(ctx context.Context, in *TLContactsGetTopPeers, opts ...grpc.CallOption) (*Contacts_TopPeers, error)
	ContactsResetTopPeerRating(ctx context.Context, in *TLContactsResetTopPeerRating, opts ...grpc.CallOption) (*Bool, error)
	ContactsResetSaved(ctx context.Context, in *TLContactsResetSaved, opts ...grpc.CallOption) (*Bool, error)
	ContactsGetSaved(ctx context.Context, in *TLContactsGetSaved, opts ...grpc.CallOption) (*Vector_SavedContact, error)
	ContactsToggleTopPeers(ctx context.Context, in *TLContactsToggleTopPeers, opts ...grpc.CallOption) (*Bool, error)
	ContactsAddContact(ctx context.Context, in *TLContactsAddContact, opts ...grpc.CallOption) (*Updates, error)
	ContactsAcceptContact(ctx context.Context, in *TLContactsAcceptContact, opts ...grpc.CallOption) (*Updates, error)
	ContactsGetLocated(ctx context.Context, in *TLContactsGetLocated, opts ...grpc.CallOption) (*Updates, error)
}

type rPCContactsClient struct {
	cc *grpc.ClientConn
}

func NewRPCContactsClient(cc *grpc.ClientConn) RPCContactsClient {
	return &rPCContactsClient{cc}
}

func (c *rPCContactsClient) AccountGetContactSignUpNotification(ctx context.Context, in *TLAccountGetContactSignUpNotification, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/account_getContactSignUpNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) AccountSetContactSignUpNotification(ctx context.Context, in *TLAccountSetContactSignUpNotification, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/account_setContactSignUpNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsGetContactIDs(ctx context.Context, in *TLContactsGetContactIDs, opts ...grpc.CallOption) (*Vector_Int, error) {
	out := new(Vector_Int)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_getContactIDs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsGetStatuses(ctx context.Context, in *TLContactsGetStatuses, opts ...grpc.CallOption) (*Vector_ContactStatus, error) {
	out := new(Vector_ContactStatus)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_getStatuses", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsGetContacts(ctx context.Context, in *TLContactsGetContacts, opts ...grpc.CallOption) (*Contacts_Contacts, error) {
	out := new(Contacts_Contacts)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_getContacts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsImportContacts(ctx context.Context, in *TLContactsImportContacts, opts ...grpc.CallOption) (*Contacts_ImportedContacts, error) {
	out := new(Contacts_ImportedContacts)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_importContacts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsDeleteContacts(ctx context.Context, in *TLContactsDeleteContacts, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_deleteContacts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsDeleteByPhones(ctx context.Context, in *TLContactsDeleteByPhones, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_deleteByPhones", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsBlock(ctx context.Context, in *TLContactsBlock, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_block", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsUnblock(ctx context.Context, in *TLContactsUnblock, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_unblock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsGetBlocked(ctx context.Context, in *TLContactsGetBlocked, opts ...grpc.CallOption) (*Contacts_Blocked, error) {
	out := new(Contacts_Blocked)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_getBlocked", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsSearch(ctx context.Context, in *TLContactsSearch, opts ...grpc.CallOption) (*Contacts_Found, error) {
	out := new(Contacts_Found)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsGetTopPeers(ctx context.Context, in *TLContactsGetTopPeers, opts ...grpc.CallOption) (*Contacts_TopPeers, error) {
	out := new(Contacts_TopPeers)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_getTopPeers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsResetTopPeerRating(ctx context.Context, in *TLContactsResetTopPeerRating, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_resetTopPeerRating", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsResetSaved(ctx context.Context, in *TLContactsResetSaved, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_resetSaved", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsGetSaved(ctx context.Context, in *TLContactsGetSaved, opts ...grpc.CallOption) (*Vector_SavedContact, error) {
	out := new(Vector_SavedContact)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_getSaved", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsToggleTopPeers(ctx context.Context, in *TLContactsToggleTopPeers, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_toggleTopPeers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsAddContact(ctx context.Context, in *TLContactsAddContact, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_addContact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsAcceptContact(ctx context.Context, in *TLContactsAcceptContact, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_acceptContact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCContactsClient) ContactsGetLocated(ctx context.Context, in *TLContactsGetLocated, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCContacts/contacts_getLocated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCContactsServer is the server API for RPCContacts service.
type RPCContactsServer interface {
	AccountGetContactSignUpNotification(context.Context, *TLAccountGetContactSignUpNotification) (*Bool, error)
	AccountSetContactSignUpNotification(context.Context, *TLAccountSetContactSignUpNotification) (*Bool, error)
	ContactsGetContactIDs(context.Context, *TLContactsGetContactIDs) (*Vector_Int, error)
	ContactsGetStatuses(context.Context, *TLContactsGetStatuses) (*Vector_ContactStatus, error)
	ContactsGetContacts(context.Context, *TLContactsGetContacts) (*Contacts_Contacts, error)
	ContactsImportContacts(context.Context, *TLContactsImportContacts) (*Contacts_ImportedContacts, error)
	ContactsDeleteContacts(context.Context, *TLContactsDeleteContacts) (*Updates, error)
	ContactsDeleteByPhones(context.Context, *TLContactsDeleteByPhones) (*Bool, error)
	ContactsBlock(context.Context, *TLContactsBlock) (*Bool, error)
	ContactsUnblock(context.Context, *TLContactsUnblock) (*Bool, error)
	ContactsGetBlocked(context.Context, *TLContactsGetBlocked) (*Contacts_Blocked, error)
	ContactsSearch(context.Context, *TLContactsSearch) (*Contacts_Found, error)
	ContactsGetTopPeers(context.Context, *TLContactsGetTopPeers) (*Contacts_TopPeers, error)
	ContactsResetTopPeerRating(context.Context, *TLContactsResetTopPeerRating) (*Bool, error)
	ContactsResetSaved(context.Context, *TLContactsResetSaved) (*Bool, error)
	ContactsGetSaved(context.Context, *TLContactsGetSaved) (*Vector_SavedContact, error)
	ContactsToggleTopPeers(context.Context, *TLContactsToggleTopPeers) (*Bool, error)
	ContactsAddContact(context.Context, *TLContactsAddContact) (*Updates, error)
	ContactsAcceptContact(context.Context, *TLContactsAcceptContact) (*Updates, error)
	ContactsGetLocated(context.Context, *TLContactsGetLocated) (*Updates, error)
}

// UnimplementedRPCContactsServer can be embedded to have forward compatible implementations.
type UnimplementedRPCContactsServer struct {
}

func (*UnimplementedRPCContactsServer) AccountGetContactSignUpNotification(ctx context.Context, req *TLAccountGetContactSignUpNotification) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountGetContactSignUpNotification not implemented")
}
func (*UnimplementedRPCContactsServer) AccountSetContactSignUpNotification(ctx context.Context, req *TLAccountSetContactSignUpNotification) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountSetContactSignUpNotification not implemented")
}
func (*UnimplementedRPCContactsServer) ContactsGetContactIDs(ctx context.Context, req *TLContactsGetContactIDs) (*Vector_Int, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactsGetContactIDs not implemented")
}
func (*UnimplementedRPCContactsServer) ContactsGetStatuses(ctx context.Context, req *TLContactsGetStatuses) (*Vector_ContactStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactsGetStatuses not implemented")
}
func (*UnimplementedRPCContactsServer) ContactsGetContacts(ctx context.Context, req *TLContactsGetContacts) (*Contacts_Contacts, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactsGetContacts not implemented")
}
func (*UnimplementedRPCContactsServer) ContactsImportContacts(ctx context.Context, req *TLContactsImportContacts) (*Contacts_ImportedContacts, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactsImportContacts not implemented")
}
func (*UnimplementedRPCContactsServer) ContactsDeleteContacts(ctx context.Context, req *TLContactsDeleteContacts) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactsDeleteContacts not implemented")
}
func (*UnimplementedRPCContactsServer) ContactsDeleteByPhones(ctx context.Context, req *TLContactsDeleteByPhones) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactsDeleteByPhones not implemented")
}
func (*UnimplementedRPCContactsServer) ContactsBlock(ctx context.Context, req *TLContactsBlock) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactsBlock not implemented")
}
func (*UnimplementedRPCContactsServer) ContactsUnblock(ctx context.Context, req *TLContactsUnblock) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactsUnblock not implemented")
}
func (*UnimplementedRPCContactsServer) ContactsGetBlocked(ctx context.Context, req *TLContactsGetBlocked) (*Contacts_Blocked, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactsGetBlocked not implemented")
}
func (*UnimplementedRPCContactsServer) ContactsSearch(ctx context.Context, req *TLContactsSearch) (*Contacts_Found, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactsSearch not implemented")
}
func (*UnimplementedRPCContactsServer) ContactsGetTopPeers(ctx context.Context, req *TLContactsGetTopPeers) (*Contacts_TopPeers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactsGetTopPeers not implemented")
}
func (*UnimplementedRPCContactsServer) ContactsResetTopPeerRating(ctx context.Context, req *TLContactsResetTopPeerRating) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactsResetTopPeerRating not implemented")
}
func (*UnimplementedRPCContactsServer) ContactsResetSaved(ctx context.Context, req *TLContactsResetSaved) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactsResetSaved not implemented")
}
func (*UnimplementedRPCContactsServer) ContactsGetSaved(ctx context.Context, req *TLContactsGetSaved) (*Vector_SavedContact, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactsGetSaved not implemented")
}
func (*UnimplementedRPCContactsServer) ContactsToggleTopPeers(ctx context.Context, req *TLContactsToggleTopPeers) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactsToggleTopPeers not implemented")
}
func (*UnimplementedRPCContactsServer) ContactsAddContact(ctx context.Context, req *TLContactsAddContact) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactsAddContact not implemented")
}
func (*UnimplementedRPCContactsServer) ContactsAcceptContact(ctx context.Context, req *TLContactsAcceptContact) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactsAcceptContact not implemented")
}
func (*UnimplementedRPCContactsServer) ContactsGetLocated(ctx context.Context, req *TLContactsGetLocated) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactsGetLocated not implemented")
}

func RegisterRPCContactsServer(s *grpc.Server, srv RPCContactsServer) {
	s.RegisterService(&_RPCContacts_serviceDesc, srv)
}

func _RPCContacts_AccountGetContactSignUpNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetContactSignUpNotification)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).AccountGetContactSignUpNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/AccountGetContactSignUpNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).AccountGetContactSignUpNotification(ctx, req.(*TLAccountGetContactSignUpNotification))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_AccountSetContactSignUpNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSetContactSignUpNotification)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).AccountSetContactSignUpNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/AccountSetContactSignUpNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).AccountSetContactSignUpNotification(ctx, req.(*TLAccountSetContactSignUpNotification))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsGetContactIDs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsGetContactIDs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsGetContactIDs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsGetContactIDs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsGetContactIDs(ctx, req.(*TLContactsGetContactIDs))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsGetStatuses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsGetStatuses)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsGetStatuses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsGetStatuses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsGetStatuses(ctx, req.(*TLContactsGetStatuses))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsGetContacts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsGetContacts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsGetContacts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsGetContacts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsGetContacts(ctx, req.(*TLContactsGetContacts))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsImportContacts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsImportContacts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsImportContacts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsImportContacts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsImportContacts(ctx, req.(*TLContactsImportContacts))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsDeleteContacts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsDeleteContacts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsDeleteContacts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsDeleteContacts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsDeleteContacts(ctx, req.(*TLContactsDeleteContacts))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsDeleteByPhones_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsDeleteByPhones)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsDeleteByPhones(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsDeleteByPhones",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsDeleteByPhones(ctx, req.(*TLContactsDeleteByPhones))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsBlock)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsBlock(ctx, req.(*TLContactsBlock))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsUnblock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsUnblock)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsUnblock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsUnblock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsUnblock(ctx, req.(*TLContactsUnblock))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsGetBlocked_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsGetBlocked)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsGetBlocked(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsGetBlocked",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsGetBlocked(ctx, req.(*TLContactsGetBlocked))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsSearch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsSearch(ctx, req.(*TLContactsSearch))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsGetTopPeers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsGetTopPeers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsGetTopPeers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsGetTopPeers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsGetTopPeers(ctx, req.(*TLContactsGetTopPeers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsResetTopPeerRating_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsResetTopPeerRating)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsResetTopPeerRating(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsResetTopPeerRating",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsResetTopPeerRating(ctx, req.(*TLContactsResetTopPeerRating))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsResetSaved_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsResetSaved)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsResetSaved(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsResetSaved",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsResetSaved(ctx, req.(*TLContactsResetSaved))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsGetSaved_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsGetSaved)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsGetSaved(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsGetSaved",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsGetSaved(ctx, req.(*TLContactsGetSaved))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsToggleTopPeers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsToggleTopPeers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsToggleTopPeers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsToggleTopPeers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsToggleTopPeers(ctx, req.(*TLContactsToggleTopPeers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsAddContact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsAddContact)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsAddContact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsAddContact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsAddContact(ctx, req.(*TLContactsAddContact))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsAcceptContact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsAcceptContact)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsAcceptContact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsAcceptContact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsAcceptContact(ctx, req.(*TLContactsAcceptContact))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCContacts_ContactsGetLocated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsGetLocated)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCContactsServer).ContactsGetLocated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCContacts/ContactsGetLocated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCContactsServer).ContactsGetLocated(ctx, req.(*TLContactsGetLocated))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCContacts_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCContacts",
	HandlerType: (*RPCContactsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "account_getContactSignUpNotification",
			Handler:    _RPCContacts_AccountGetContactSignUpNotification_Handler,
		},
		{
			MethodName: "account_setContactSignUpNotification",
			Handler:    _RPCContacts_AccountSetContactSignUpNotification_Handler,
		},
		{
			MethodName: "contacts_getContactIDs",
			Handler:    _RPCContacts_ContactsGetContactIDs_Handler,
		},
		{
			MethodName: "contacts_getStatuses",
			Handler:    _RPCContacts_ContactsGetStatuses_Handler,
		},
		{
			MethodName: "contacts_getContacts",
			Handler:    _RPCContacts_ContactsGetContacts_Handler,
		},
		{
			MethodName: "contacts_importContacts",
			Handler:    _RPCContacts_ContactsImportContacts_Handler,
		},
		{
			MethodName: "contacts_deleteContacts",
			Handler:    _RPCContacts_ContactsDeleteContacts_Handler,
		},
		{
			MethodName: "contacts_deleteByPhones",
			Handler:    _RPCContacts_ContactsDeleteByPhones_Handler,
		},
		{
			MethodName: "contacts_block",
			Handler:    _RPCContacts_ContactsBlock_Handler,
		},
		{
			MethodName: "contacts_unblock",
			Handler:    _RPCContacts_ContactsUnblock_Handler,
		},
		{
			MethodName: "contacts_getBlocked",
			Handler:    _RPCContacts_ContactsGetBlocked_Handler,
		},
		{
			MethodName: "contacts_search",
			Handler:    _RPCContacts_ContactsSearch_Handler,
		},
		{
			MethodName: "contacts_getTopPeers",
			Handler:    _RPCContacts_ContactsGetTopPeers_Handler,
		},
		{
			MethodName: "contacts_resetTopPeerRating",
			Handler:    _RPCContacts_ContactsResetTopPeerRating_Handler,
		},
		{
			MethodName: "contacts_resetSaved",
			Handler:    _RPCContacts_ContactsResetSaved_Handler,
		},
		{
			MethodName: "contacts_getSaved",
			Handler:    _RPCContacts_ContactsGetSaved_Handler,
		},
		{
			MethodName: "contacts_toggleTopPeers",
			Handler:    _RPCContacts_ContactsToggleTopPeers_Handler,
		},
		{
			MethodName: "contacts_addContact",
			Handler:    _RPCContacts_ContactsAddContact_Handler,
		},
		{
			MethodName: "contacts_acceptContact",
			Handler:    _RPCContacts_ContactsAcceptContact_Handler,
		},
		{
			MethodName: "contacts_getLocated",
			Handler:    _RPCContacts_ContactsGetLocated_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCNsfwClient is the client API for RPCNsfw service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCNsfwClient interface {
	AccountSetContentSettings(ctx context.Context, in *TLAccountSetContentSettings, opts ...grpc.CallOption) (*Bool, error)
	AccountGetContentSettings(ctx context.Context, in *TLAccountGetContentSettings, opts ...grpc.CallOption) (*Account_ContentSettings, error)
}

type rPCNsfwClient struct {
	cc *grpc.ClientConn
}

func NewRPCNsfwClient(cc *grpc.ClientConn) RPCNsfwClient {
	return &rPCNsfwClient{cc}
}

func (c *rPCNsfwClient) AccountSetContentSettings(ctx context.Context, in *TLAccountSetContentSettings, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCNsfw/account_setContentSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCNsfwClient) AccountGetContentSettings(ctx context.Context, in *TLAccountGetContentSettings, opts ...grpc.CallOption) (*Account_ContentSettings, error) {
	out := new(Account_ContentSettings)
	err := c.cc.Invoke(ctx, "/mtproto.RPCNsfw/account_getContentSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCNsfwServer is the server API for RPCNsfw service.
type RPCNsfwServer interface {
	AccountSetContentSettings(context.Context, *TLAccountSetContentSettings) (*Bool, error)
	AccountGetContentSettings(context.Context, *TLAccountGetContentSettings) (*Account_ContentSettings, error)
}

// UnimplementedRPCNsfwServer can be embedded to have forward compatible implementations.
type UnimplementedRPCNsfwServer struct {
}

func (*UnimplementedRPCNsfwServer) AccountSetContentSettings(ctx context.Context, req *TLAccountSetContentSettings) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountSetContentSettings not implemented")
}
func (*UnimplementedRPCNsfwServer) AccountGetContentSettings(ctx context.Context, req *TLAccountGetContentSettings) (*Account_ContentSettings, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountGetContentSettings not implemented")
}

func RegisterRPCNsfwServer(s *grpc.Server, srv RPCNsfwServer) {
	s.RegisterService(&_RPCNsfw_serviceDesc, srv)
}

func _RPCNsfw_AccountSetContentSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountSetContentSettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCNsfwServer).AccountSetContentSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCNsfw/AccountSetContentSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCNsfwServer).AccountSetContentSettings(ctx, req.(*TLAccountSetContentSettings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCNsfw_AccountGetContentSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLAccountGetContentSettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCNsfwServer).AccountGetContentSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCNsfw/AccountGetContentSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCNsfwServer).AccountGetContentSettings(ctx, req.(*TLAccountGetContentSettings))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCNsfw_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCNsfw",
	HandlerType: (*RPCNsfwServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "account_setContentSettings",
			Handler:    _RPCNsfw_AccountSetContentSettings_Handler,
		},
		{
			MethodName: "account_getContentSettings",
			Handler:    _RPCNsfw_AccountGetContentSettings_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCUsersClient is the client API for RPCUsers service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCUsersClient interface {
	UsersGetUsers(ctx context.Context, in *TLUsersGetUsers, opts ...grpc.CallOption) (*Vector_User, error)
	UsersGetFullUserB60F5918(ctx context.Context, in *TLUsersGetFullUserB60F5918, opts ...grpc.CallOption) (*Users_UserFull, error)
	ContactsResolvePhone(ctx context.Context, in *TLContactsResolvePhone, opts ...grpc.CallOption) (*Contacts_ResolvedPeer, error)
	UsersGetFullUserCA30A5B1(ctx context.Context, in *TLUsersGetFullUserCA30A5B1, opts ...grpc.CallOption) (*UserFull, error)
	UsersGetMe(ctx context.Context, in *TLUsersGetMe, opts ...grpc.CallOption) (*User, error)
}

type rPCUsersClient struct {
	cc *grpc.ClientConn
}

func NewRPCUsersClient(cc *grpc.ClientConn) RPCUsersClient {
	return &rPCUsersClient{cc}
}

func (c *rPCUsersClient) UsersGetUsers(ctx context.Context, in *TLUsersGetUsers, opts ...grpc.CallOption) (*Vector_User, error) {
	out := new(Vector_User)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUsers/users_getUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCUsersClient) UsersGetFullUserB60F5918(ctx context.Context, in *TLUsersGetFullUserB60F5918, opts ...grpc.CallOption) (*Users_UserFull, error) {
	out := new(Users_UserFull)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUsers/users_getFullUserB60F5918", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCUsersClient) ContactsResolvePhone(ctx context.Context, in *TLContactsResolvePhone, opts ...grpc.CallOption) (*Contacts_ResolvedPeer, error) {
	out := new(Contacts_ResolvedPeer)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUsers/contacts_resolvePhone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCUsersClient) UsersGetFullUserCA30A5B1(ctx context.Context, in *TLUsersGetFullUserCA30A5B1, opts ...grpc.CallOption) (*UserFull, error) {
	out := new(UserFull)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUsers/users_getFullUserCA30A5B1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCUsersClient) UsersGetMe(ctx context.Context, in *TLUsersGetMe, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/mtproto.RPCUsers/users_getMe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCUsersServer is the server API for RPCUsers service.
type RPCUsersServer interface {
	UsersGetUsers(context.Context, *TLUsersGetUsers) (*Vector_User, error)
	UsersGetFullUserB60F5918(context.Context, *TLUsersGetFullUserB60F5918) (*Users_UserFull, error)
	ContactsResolvePhone(context.Context, *TLContactsResolvePhone) (*Contacts_ResolvedPeer, error)
	UsersGetFullUserCA30A5B1(context.Context, *TLUsersGetFullUserCA30A5B1) (*UserFull, error)
	UsersGetMe(context.Context, *TLUsersGetMe) (*User, error)
}

// UnimplementedRPCUsersServer can be embedded to have forward compatible implementations.
type UnimplementedRPCUsersServer struct {
}

func (*UnimplementedRPCUsersServer) UsersGetUsers(ctx context.Context, req *TLUsersGetUsers) (*Vector_User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UsersGetUsers not implemented")
}
func (*UnimplementedRPCUsersServer) UsersGetFullUserB60F5918(ctx context.Context, req *TLUsersGetFullUserB60F5918) (*Users_UserFull, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UsersGetFullUserB60F5918 not implemented")
}
func (*UnimplementedRPCUsersServer) ContactsResolvePhone(ctx context.Context, req *TLContactsResolvePhone) (*Contacts_ResolvedPeer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContactsResolvePhone not implemented")
}
func (*UnimplementedRPCUsersServer) UsersGetFullUserCA30A5B1(ctx context.Context, req *TLUsersGetFullUserCA30A5B1) (*UserFull, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UsersGetFullUserCA30A5B1 not implemented")
}
func (*UnimplementedRPCUsersServer) UsersGetMe(ctx context.Context, req *TLUsersGetMe) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UsersGetMe not implemented")
}

func RegisterRPCUsersServer(s *grpc.Server, srv RPCUsersServer) {
	s.RegisterService(&_RPCUsers_serviceDesc, srv)
}

func _RPCUsers_UsersGetUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUsersGetUsers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUsersServer).UsersGetUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUsers/UsersGetUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUsersServer).UsersGetUsers(ctx, req.(*TLUsersGetUsers))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCUsers_UsersGetFullUserB60F5918_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUsersGetFullUserB60F5918)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUsersServer).UsersGetFullUserB60F5918(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUsers/UsersGetFullUserB60F5918",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUsersServer).UsersGetFullUserB60F5918(ctx, req.(*TLUsersGetFullUserB60F5918))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCUsers_ContactsResolvePhone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLContactsResolvePhone)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUsersServer).ContactsResolvePhone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUsers/ContactsResolvePhone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUsersServer).ContactsResolvePhone(ctx, req.(*TLContactsResolvePhone))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCUsers_UsersGetFullUserCA30A5B1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUsersGetFullUserCA30A5B1)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUsersServer).UsersGetFullUserCA30A5B1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUsers/UsersGetFullUserCA30A5B1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUsersServer).UsersGetFullUserCA30A5B1(ctx, req.(*TLUsersGetFullUserCA30A5B1))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCUsers_UsersGetMe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLUsersGetMe)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCUsersServer).UsersGetMe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCUsers/UsersGetMe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCUsersServer).UsersGetMe(ctx, req.(*TLUsersGetMe))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCUsers_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCUsers",
	HandlerType: (*RPCUsersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "users_getUsers",
			Handler:    _RPCUsers_UsersGetUsers_Handler,
		},
		{
			MethodName: "users_getFullUserB60F5918",
			Handler:    _RPCUsers_UsersGetFullUserB60F5918_Handler,
		},
		{
			MethodName: "contacts_resolvePhone",
			Handler:    _RPCUsers_ContactsResolvePhone_Handler,
		},
		{
			MethodName: "users_getFullUserCA30A5B1",
			Handler:    _RPCUsers_UsersGetFullUserCA30A5B1_Handler,
		},
		{
			MethodName: "users_getMe",
			Handler:    _RPCUsers_UsersGetMe_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCDialogsClient is the client API for RPCDialogs service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCDialogsClient interface {
	MessagesGetDialogs(ctx context.Context, in *TLMessagesGetDialogs, opts ...grpc.CallOption) (*Messages_Dialogs, error)
	MessagesSetTyping(ctx context.Context, in *TLMessagesSetTyping, opts ...grpc.CallOption) (*Bool, error)
	MessagesGetPeerSettingsEFD9A6A2(ctx context.Context, in *TLMessagesGetPeerSettingsEFD9A6A2, opts ...grpc.CallOption) (*Messages_PeerSettings, error)
	MessagesGetPeerDialogs(ctx context.Context, in *TLMessagesGetPeerDialogs, opts ...grpc.CallOption) (*Messages_PeerDialogs, error)
	MessagesToggleDialogPin(ctx context.Context, in *TLMessagesToggleDialogPin, opts ...grpc.CallOption) (*Bool, error)
	MessagesReorderPinnedDialogs(ctx context.Context, in *TLMessagesReorderPinnedDialogs, opts ...grpc.CallOption) (*Bool, error)
	MessagesGetPinnedDialogs(ctx context.Context, in *TLMessagesGetPinnedDialogs, opts ...grpc.CallOption) (*Messages_PeerDialogs, error)
	MessagesSendScreenshotNotification(ctx context.Context, in *TLMessagesSendScreenshotNotification, opts ...grpc.CallOption) (*Updates, error)
	MessagesMarkDialogUnread(ctx context.Context, in *TLMessagesMarkDialogUnread, opts ...grpc.CallOption) (*Bool, error)
	MessagesGetDialogUnreadMarks(ctx context.Context, in *TLMessagesGetDialogUnreadMarks, opts ...grpc.CallOption) (*Vector_DialogPeer, error)
	MessagesGetOnlines(ctx context.Context, in *TLMessagesGetOnlines, opts ...grpc.CallOption) (*ChatOnlines, error)
	MessagesHidePeerSettingsBar(ctx context.Context, in *TLMessagesHidePeerSettingsBar, opts ...grpc.CallOption) (*Bool, error)
	MessagesSetHistoryTTL(ctx context.Context, in *TLMessagesSetHistoryTTL, opts ...grpc.CallOption) (*Updates, error)
	MessagesGetPeerSettings3672E09C(ctx context.Context, in *TLMessagesGetPeerSettings3672E09C, opts ...grpc.CallOption) (*PeerSettings, error)
}

type rPCDialogsClient struct {
	cc *grpc.ClientConn
}

func NewRPCDialogsClient(cc *grpc.ClientConn) RPCDialogsClient {
	return &rPCDialogsClient{cc}
}

func (c *rPCDialogsClient) MessagesGetDialogs(ctx context.Context, in *TLMessagesGetDialogs, opts ...grpc.CallOption) (*Messages_Dialogs, error) {
	out := new(Messages_Dialogs)
	err := c.cc.Invoke(ctx, "/mtproto.RPCDialogs/messages_getDialogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCDialogsClient) MessagesSetTyping(ctx context.Context, in *TLMessagesSetTyping, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCDialogs/messages_setTyping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCDialogsClient) MessagesGetPeerSettingsEFD9A6A2(ctx context.Context, in *TLMessagesGetPeerSettingsEFD9A6A2, opts ...grpc.CallOption) (*Messages_PeerSettings, error) {
	out := new(Messages_PeerSettings)
	err := c.cc.Invoke(ctx, "/mtproto.RPCDialogs/messages_getPeerSettingsEFD9A6A2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCDialogsClient) MessagesGetPeerDialogs(ctx context.Context, in *TLMessagesGetPeerDialogs, opts ...grpc.CallOption) (*Messages_PeerDialogs, error) {
	out := new(Messages_PeerDialogs)
	err := c.cc.Invoke(ctx, "/mtproto.RPCDialogs/messages_getPeerDialogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCDialogsClient) MessagesToggleDialogPin(ctx context.Context, in *TLMessagesToggleDialogPin, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCDialogs/messages_toggleDialogPin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCDialogsClient) MessagesReorderPinnedDialogs(ctx context.Context, in *TLMessagesReorderPinnedDialogs, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCDialogs/messages_reorderPinnedDialogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCDialogsClient) MessagesGetPinnedDialogs(ctx context.Context, in *TLMessagesGetPinnedDialogs, opts ...grpc.CallOption) (*Messages_PeerDialogs, error) {
	out := new(Messages_PeerDialogs)
	err := c.cc.Invoke(ctx, "/mtproto.RPCDialogs/messages_getPinnedDialogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCDialogsClient) MessagesSendScreenshotNotification(ctx context.Context, in *TLMessagesSendScreenshotNotification, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCDialogs/messages_sendScreenshotNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCDialogsClient) MessagesMarkDialogUnread(ctx context.Context, in *TLMessagesMarkDialogUnread, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCDialogs/messages_markDialogUnread", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCDialogsClient) MessagesGetDialogUnreadMarks(ctx context.Context, in *TLMessagesGetDialogUnreadMarks, opts ...grpc.CallOption) (*Vector_DialogPeer, error) {
	out := new(Vector_DialogPeer)
	err := c.cc.Invoke(ctx, "/mtproto.RPCDialogs/messages_getDialogUnreadMarks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCDialogsClient) MessagesGetOnlines(ctx context.Context, in *TLMessagesGetOnlines, opts ...grpc.CallOption) (*ChatOnlines, error) {
	out := new(ChatOnlines)
	err := c.cc.Invoke(ctx, "/mtproto.RPCDialogs/messages_getOnlines", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCDialogsClient) MessagesHidePeerSettingsBar(ctx context.Context, in *TLMessagesHidePeerSettingsBar, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCDialogs/messages_hidePeerSettingsBar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCDialogsClient) MessagesSetHistoryTTL(ctx context.Context, in *TLMessagesSetHistoryTTL, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCDialogs/messages_setHistoryTTL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCDialogsClient) MessagesGetPeerSettings3672E09C(ctx context.Context, in *TLMessagesGetPeerSettings3672E09C, opts ...grpc.CallOption) (*PeerSettings, error) {
	out := new(PeerSettings)
	err := c.cc.Invoke(ctx, "/mtproto.RPCDialogs/messages_getPeerSettings3672E09C", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCDialogsServer is the server API for RPCDialogs service.
type RPCDialogsServer interface {
	MessagesGetDialogs(context.Context, *TLMessagesGetDialogs) (*Messages_Dialogs, error)
	MessagesSetTyping(context.Context, *TLMessagesSetTyping) (*Bool, error)
	MessagesGetPeerSettingsEFD9A6A2(context.Context, *TLMessagesGetPeerSettingsEFD9A6A2) (*Messages_PeerSettings, error)
	MessagesGetPeerDialogs(context.Context, *TLMessagesGetPeerDialogs) (*Messages_PeerDialogs, error)
	MessagesToggleDialogPin(context.Context, *TLMessagesToggleDialogPin) (*Bool, error)
	MessagesReorderPinnedDialogs(context.Context, *TLMessagesReorderPinnedDialogs) (*Bool, error)
	MessagesGetPinnedDialogs(context.Context, *TLMessagesGetPinnedDialogs) (*Messages_PeerDialogs, error)
	MessagesSendScreenshotNotification(context.Context, *TLMessagesSendScreenshotNotification) (*Updates, error)
	MessagesMarkDialogUnread(context.Context, *TLMessagesMarkDialogUnread) (*Bool, error)
	MessagesGetDialogUnreadMarks(context.Context, *TLMessagesGetDialogUnreadMarks) (*Vector_DialogPeer, error)
	MessagesGetOnlines(context.Context, *TLMessagesGetOnlines) (*ChatOnlines, error)
	MessagesHidePeerSettingsBar(context.Context, *TLMessagesHidePeerSettingsBar) (*Bool, error)
	MessagesSetHistoryTTL(context.Context, *TLMessagesSetHistoryTTL) (*Updates, error)
	MessagesGetPeerSettings3672E09C(context.Context, *TLMessagesGetPeerSettings3672E09C) (*PeerSettings, error)
}

// UnimplementedRPCDialogsServer can be embedded to have forward compatible implementations.
type UnimplementedRPCDialogsServer struct {
}

func (*UnimplementedRPCDialogsServer) MessagesGetDialogs(ctx context.Context, req *TLMessagesGetDialogs) (*Messages_Dialogs, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetDialogs not implemented")
}
func (*UnimplementedRPCDialogsServer) MessagesSetTyping(ctx context.Context, req *TLMessagesSetTyping) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSetTyping not implemented")
}
func (*UnimplementedRPCDialogsServer) MessagesGetPeerSettingsEFD9A6A2(ctx context.Context, req *TLMessagesGetPeerSettingsEFD9A6A2) (*Messages_PeerSettings, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetPeerSettingsEFD9A6A2 not implemented")
}
func (*UnimplementedRPCDialogsServer) MessagesGetPeerDialogs(ctx context.Context, req *TLMessagesGetPeerDialogs) (*Messages_PeerDialogs, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetPeerDialogs not implemented")
}
func (*UnimplementedRPCDialogsServer) MessagesToggleDialogPin(ctx context.Context, req *TLMessagesToggleDialogPin) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesToggleDialogPin not implemented")
}
func (*UnimplementedRPCDialogsServer) MessagesReorderPinnedDialogs(ctx context.Context, req *TLMessagesReorderPinnedDialogs) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesReorderPinnedDialogs not implemented")
}
func (*UnimplementedRPCDialogsServer) MessagesGetPinnedDialogs(ctx context.Context, req *TLMessagesGetPinnedDialogs) (*Messages_PeerDialogs, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetPinnedDialogs not implemented")
}
func (*UnimplementedRPCDialogsServer) MessagesSendScreenshotNotification(ctx context.Context, req *TLMessagesSendScreenshotNotification) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSendScreenshotNotification not implemented")
}
func (*UnimplementedRPCDialogsServer) MessagesMarkDialogUnread(ctx context.Context, req *TLMessagesMarkDialogUnread) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesMarkDialogUnread not implemented")
}
func (*UnimplementedRPCDialogsServer) MessagesGetDialogUnreadMarks(ctx context.Context, req *TLMessagesGetDialogUnreadMarks) (*Vector_DialogPeer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetDialogUnreadMarks not implemented")
}
func (*UnimplementedRPCDialogsServer) MessagesGetOnlines(ctx context.Context, req *TLMessagesGetOnlines) (*ChatOnlines, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetOnlines not implemented")
}
func (*UnimplementedRPCDialogsServer) MessagesHidePeerSettingsBar(ctx context.Context, req *TLMessagesHidePeerSettingsBar) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesHidePeerSettingsBar not implemented")
}
func (*UnimplementedRPCDialogsServer) MessagesSetHistoryTTL(ctx context.Context, req *TLMessagesSetHistoryTTL) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSetHistoryTTL not implemented")
}
func (*UnimplementedRPCDialogsServer) MessagesGetPeerSettings3672E09C(ctx context.Context, req *TLMessagesGetPeerSettings3672E09C) (*PeerSettings, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetPeerSettings3672E09C not implemented")
}

func RegisterRPCDialogsServer(s *grpc.Server, srv RPCDialogsServer) {
	s.RegisterService(&_RPCDialogs_serviceDesc, srv)
}

func _RPCDialogs_MessagesGetDialogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetDialogs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCDialogsServer).MessagesGetDialogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCDialogs/MessagesGetDialogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCDialogsServer).MessagesGetDialogs(ctx, req.(*TLMessagesGetDialogs))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCDialogs_MessagesSetTyping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSetTyping)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCDialogsServer).MessagesSetTyping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCDialogs/MessagesSetTyping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCDialogsServer).MessagesSetTyping(ctx, req.(*TLMessagesSetTyping))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCDialogs_MessagesGetPeerSettingsEFD9A6A2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetPeerSettingsEFD9A6A2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCDialogsServer).MessagesGetPeerSettingsEFD9A6A2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCDialogs/MessagesGetPeerSettingsEFD9A6A2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCDialogsServer).MessagesGetPeerSettingsEFD9A6A2(ctx, req.(*TLMessagesGetPeerSettingsEFD9A6A2))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCDialogs_MessagesGetPeerDialogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetPeerDialogs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCDialogsServer).MessagesGetPeerDialogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCDialogs/MessagesGetPeerDialogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCDialogsServer).MessagesGetPeerDialogs(ctx, req.(*TLMessagesGetPeerDialogs))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCDialogs_MessagesToggleDialogPin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesToggleDialogPin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCDialogsServer).MessagesToggleDialogPin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCDialogs/MessagesToggleDialogPin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCDialogsServer).MessagesToggleDialogPin(ctx, req.(*TLMessagesToggleDialogPin))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCDialogs_MessagesReorderPinnedDialogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesReorderPinnedDialogs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCDialogsServer).MessagesReorderPinnedDialogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCDialogs/MessagesReorderPinnedDialogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCDialogsServer).MessagesReorderPinnedDialogs(ctx, req.(*TLMessagesReorderPinnedDialogs))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCDialogs_MessagesGetPinnedDialogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetPinnedDialogs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCDialogsServer).MessagesGetPinnedDialogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCDialogs/MessagesGetPinnedDialogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCDialogsServer).MessagesGetPinnedDialogs(ctx, req.(*TLMessagesGetPinnedDialogs))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCDialogs_MessagesSendScreenshotNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSendScreenshotNotification)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCDialogsServer).MessagesSendScreenshotNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCDialogs/MessagesSendScreenshotNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCDialogsServer).MessagesSendScreenshotNotification(ctx, req.(*TLMessagesSendScreenshotNotification))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCDialogs_MessagesMarkDialogUnread_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesMarkDialogUnread)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCDialogsServer).MessagesMarkDialogUnread(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCDialogs/MessagesMarkDialogUnread",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCDialogsServer).MessagesMarkDialogUnread(ctx, req.(*TLMessagesMarkDialogUnread))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCDialogs_MessagesGetDialogUnreadMarks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetDialogUnreadMarks)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCDialogsServer).MessagesGetDialogUnreadMarks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCDialogs/MessagesGetDialogUnreadMarks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCDialogsServer).MessagesGetDialogUnreadMarks(ctx, req.(*TLMessagesGetDialogUnreadMarks))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCDialogs_MessagesGetOnlines_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetOnlines)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCDialogsServer).MessagesGetOnlines(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCDialogs/MessagesGetOnlines",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCDialogsServer).MessagesGetOnlines(ctx, req.(*TLMessagesGetOnlines))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCDialogs_MessagesHidePeerSettingsBar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesHidePeerSettingsBar)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCDialogsServer).MessagesHidePeerSettingsBar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCDialogs/MessagesHidePeerSettingsBar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCDialogsServer).MessagesHidePeerSettingsBar(ctx, req.(*TLMessagesHidePeerSettingsBar))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCDialogs_MessagesSetHistoryTTL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSetHistoryTTL)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCDialogsServer).MessagesSetHistoryTTL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCDialogs/MessagesSetHistoryTTL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCDialogsServer).MessagesSetHistoryTTL(ctx, req.(*TLMessagesSetHistoryTTL))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCDialogs_MessagesGetPeerSettings3672E09C_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetPeerSettings3672E09C)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCDialogsServer).MessagesGetPeerSettings3672E09C(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCDialogs/MessagesGetPeerSettings3672E09C",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCDialogsServer).MessagesGetPeerSettings3672E09C(ctx, req.(*TLMessagesGetPeerSettings3672E09C))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCDialogs_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCDialogs",
	HandlerType: (*RPCDialogsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "messages_getDialogs",
			Handler:    _RPCDialogs_MessagesGetDialogs_Handler,
		},
		{
			MethodName: "messages_setTyping",
			Handler:    _RPCDialogs_MessagesSetTyping_Handler,
		},
		{
			MethodName: "messages_getPeerSettingsEFD9A6A2",
			Handler:    _RPCDialogs_MessagesGetPeerSettingsEFD9A6A2_Handler,
		},
		{
			MethodName: "messages_getPeerDialogs",
			Handler:    _RPCDialogs_MessagesGetPeerDialogs_Handler,
		},
		{
			MethodName: "messages_toggleDialogPin",
			Handler:    _RPCDialogs_MessagesToggleDialogPin_Handler,
		},
		{
			MethodName: "messages_reorderPinnedDialogs",
			Handler:    _RPCDialogs_MessagesReorderPinnedDialogs_Handler,
		},
		{
			MethodName: "messages_getPinnedDialogs",
			Handler:    _RPCDialogs_MessagesGetPinnedDialogs_Handler,
		},
		{
			MethodName: "messages_sendScreenshotNotification",
			Handler:    _RPCDialogs_MessagesSendScreenshotNotification_Handler,
		},
		{
			MethodName: "messages_markDialogUnread",
			Handler:    _RPCDialogs_MessagesMarkDialogUnread_Handler,
		},
		{
			MethodName: "messages_getDialogUnreadMarks",
			Handler:    _RPCDialogs_MessagesGetDialogUnreadMarks_Handler,
		},
		{
			MethodName: "messages_getOnlines",
			Handler:    _RPCDialogs_MessagesGetOnlines_Handler,
		},
		{
			MethodName: "messages_hidePeerSettingsBar",
			Handler:    _RPCDialogs_MessagesHidePeerSettingsBar_Handler,
		},
		{
			MethodName: "messages_setHistoryTTL",
			Handler:    _RPCDialogs_MessagesSetHistoryTTL_Handler,
		},
		{
			MethodName: "messages_getPeerSettings3672E09C",
			Handler:    _RPCDialogs_MessagesGetPeerSettings3672E09C_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCInlineBotClient is the client API for RPCInlineBot service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCInlineBotClient interface {
	MessagesGetInlineBotResults(ctx context.Context, in *TLMessagesGetInlineBotResults, opts ...grpc.CallOption) (*Messages_BotResults, error)
	MessagesSetInlineBotResults(ctx context.Context, in *TLMessagesSetInlineBotResults, opts ...grpc.CallOption) (*Bool, error)
	MessagesSendInlineBotResult(ctx context.Context, in *TLMessagesSendInlineBotResult, opts ...grpc.CallOption) (*Updates, error)
	MessagesEditInlineBotMessage(ctx context.Context, in *TLMessagesEditInlineBotMessage, opts ...grpc.CallOption) (*Bool, error)
	MessagesGetBotCallbackAnswer(ctx context.Context, in *TLMessagesGetBotCallbackAnswer, opts ...grpc.CallOption) (*Messages_BotCallbackAnswer, error)
	MessagesSetBotCallbackAnswer(ctx context.Context, in *TLMessagesSetBotCallbackAnswer, opts ...grpc.CallOption) (*Bool, error)
}

type rPCInlineBotClient struct {
	cc *grpc.ClientConn
}

func NewRPCInlineBotClient(cc *grpc.ClientConn) RPCInlineBotClient {
	return &rPCInlineBotClient{cc}
}

func (c *rPCInlineBotClient) MessagesGetInlineBotResults(ctx context.Context, in *TLMessagesGetInlineBotResults, opts ...grpc.CallOption) (*Messages_BotResults, error) {
	out := new(Messages_BotResults)
	err := c.cc.Invoke(ctx, "/mtproto.RPCInlineBot/messages_getInlineBotResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCInlineBotClient) MessagesSetInlineBotResults(ctx context.Context, in *TLMessagesSetInlineBotResults, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCInlineBot/messages_setInlineBotResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCInlineBotClient) MessagesSendInlineBotResult(ctx context.Context, in *TLMessagesSendInlineBotResult, opts ...grpc.CallOption) (*Updates, error) {
	out := new(Updates)
	err := c.cc.Invoke(ctx, "/mtproto.RPCInlineBot/messages_sendInlineBotResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCInlineBotClient) MessagesEditInlineBotMessage(ctx context.Context, in *TLMessagesEditInlineBotMessage, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCInlineBot/messages_editInlineBotMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCInlineBotClient) MessagesGetBotCallbackAnswer(ctx context.Context, in *TLMessagesGetBotCallbackAnswer, opts ...grpc.CallOption) (*Messages_BotCallbackAnswer, error) {
	out := new(Messages_BotCallbackAnswer)
	err := c.cc.Invoke(ctx, "/mtproto.RPCInlineBot/messages_getBotCallbackAnswer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCInlineBotClient) MessagesSetBotCallbackAnswer(ctx context.Context, in *TLMessagesSetBotCallbackAnswer, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCInlineBot/messages_setBotCallbackAnswer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCInlineBotServer is the server API for RPCInlineBot service.
type RPCInlineBotServer interface {
	MessagesGetInlineBotResults(context.Context, *TLMessagesGetInlineBotResults) (*Messages_BotResults, error)
	MessagesSetInlineBotResults(context.Context, *TLMessagesSetInlineBotResults) (*Bool, error)
	MessagesSendInlineBotResult(context.Context, *TLMessagesSendInlineBotResult) (*Updates, error)
	MessagesEditInlineBotMessage(context.Context, *TLMessagesEditInlineBotMessage) (*Bool, error)
	MessagesGetBotCallbackAnswer(context.Context, *TLMessagesGetBotCallbackAnswer) (*Messages_BotCallbackAnswer, error)
	MessagesSetBotCallbackAnswer(context.Context, *TLMessagesSetBotCallbackAnswer) (*Bool, error)
}

// UnimplementedRPCInlineBotServer can be embedded to have forward compatible implementations.
type UnimplementedRPCInlineBotServer struct {
}

func (*UnimplementedRPCInlineBotServer) MessagesGetInlineBotResults(ctx context.Context, req *TLMessagesGetInlineBotResults) (*Messages_BotResults, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetInlineBotResults not implemented")
}
func (*UnimplementedRPCInlineBotServer) MessagesSetInlineBotResults(ctx context.Context, req *TLMessagesSetInlineBotResults) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSetInlineBotResults not implemented")
}
func (*UnimplementedRPCInlineBotServer) MessagesSendInlineBotResult(ctx context.Context, req *TLMessagesSendInlineBotResult) (*Updates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSendInlineBotResult not implemented")
}
func (*UnimplementedRPCInlineBotServer) MessagesEditInlineBotMessage(ctx context.Context, req *TLMessagesEditInlineBotMessage) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesEditInlineBotMessage not implemented")
}
func (*UnimplementedRPCInlineBotServer) MessagesGetBotCallbackAnswer(ctx context.Context, req *TLMessagesGetBotCallbackAnswer) (*Messages_BotCallbackAnswer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesGetBotCallbackAnswer not implemented")
}
func (*UnimplementedRPCInlineBotServer) MessagesSetBotCallbackAnswer(ctx context.Context, req *TLMessagesSetBotCallbackAnswer) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagesSetBotCallbackAnswer not implemented")
}

func RegisterRPCInlineBotServer(s *grpc.Server, srv RPCInlineBotServer) {
	s.RegisterService(&_RPCInlineBot_serviceDesc, srv)
}

func _RPCInlineBot_MessagesGetInlineBotResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetInlineBotResults)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCInlineBotServer).MessagesGetInlineBotResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCInlineBot/MessagesGetInlineBotResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCInlineBotServer).MessagesGetInlineBotResults(ctx, req.(*TLMessagesGetInlineBotResults))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCInlineBot_MessagesSetInlineBotResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSetInlineBotResults)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCInlineBotServer).MessagesSetInlineBotResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCInlineBot/MessagesSetInlineBotResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCInlineBotServer).MessagesSetInlineBotResults(ctx, req.(*TLMessagesSetInlineBotResults))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCInlineBot_MessagesSendInlineBotResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSendInlineBotResult)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCInlineBotServer).MessagesSendInlineBotResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCInlineBot/MessagesSendInlineBotResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCInlineBotServer).MessagesSendInlineBotResult(ctx, req.(*TLMessagesSendInlineBotResult))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCInlineBot_MessagesEditInlineBotMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesEditInlineBotMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCInlineBotServer).MessagesEditInlineBotMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCInlineBot/MessagesEditInlineBotMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCInlineBotServer).MessagesEditInlineBotMessage(ctx, req.(*TLMessagesEditInlineBotMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCInlineBot_MessagesGetBotCallbackAnswer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesGetBotCallbackAnswer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCInlineBotServer).MessagesGetBotCallbackAnswer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCInlineBot/MessagesGetBotCallbackAnswer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCInlineBotServer).MessagesGetBotCallbackAnswer(ctx, req.(*TLMessagesGetBotCallbackAnswer))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCInlineBot_MessagesSetBotCallbackAnswer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLMessagesSetBotCallbackAnswer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCInlineBotServer).MessagesSetBotCallbackAnswer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCInlineBot/MessagesSetBotCallbackAnswer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCInlineBotServer).MessagesSetBotCallbackAnswer(ctx, req.(*TLMessagesSetBotCallbackAnswer))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCInlineBot_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCInlineBot",
	HandlerType: (*RPCInlineBotServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "messages_getInlineBotResults",
			Handler:    _RPCInlineBot_MessagesGetInlineBotResults_Handler,
		},
		{
			MethodName: "messages_setInlineBotResults",
			Handler:    _RPCInlineBot_MessagesSetInlineBotResults_Handler,
		},
		{
			MethodName: "messages_sendInlineBotResult",
			Handler:    _RPCInlineBot_MessagesSendInlineBotResult_Handler,
		},
		{
			MethodName: "messages_editInlineBotMessage",
			Handler:    _RPCInlineBot_MessagesEditInlineBotMessage_Handler,
		},
		{
			MethodName: "messages_getBotCallbackAnswer",
			Handler:    _RPCInlineBot_MessagesGetBotCallbackAnswer_Handler,
		},
		{
			MethodName: "messages_setBotCallbackAnswer",
			Handler:    _RPCInlineBot_MessagesSetBotCallbackAnswer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCInternalBotClient is the client API for RPCInternalBot service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCInternalBotClient interface {
	HelpSetBotUpdatesStatus(ctx context.Context, in *TLHelpSetBotUpdatesStatus, opts ...grpc.CallOption) (*Bool, error)
	BotsSendCustomRequest(ctx context.Context, in *TLBotsSendCustomRequest, opts ...grpc.CallOption) (*DataJSON, error)
	BotsAnswerWebhookJSONQuery(ctx context.Context, in *TLBotsAnswerWebhookJSONQuery, opts ...grpc.CallOption) (*Bool, error)
}

type rPCInternalBotClient struct {
	cc *grpc.ClientConn
}

func NewRPCInternalBotClient(cc *grpc.ClientConn) RPCInternalBotClient {
	return &rPCInternalBotClient{cc}
}

func (c *rPCInternalBotClient) HelpSetBotUpdatesStatus(ctx context.Context, in *TLHelpSetBotUpdatesStatus, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCInternalBot/help_setBotUpdatesStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCInternalBotClient) BotsSendCustomRequest(ctx context.Context, in *TLBotsSendCustomRequest, opts ...grpc.CallOption) (*DataJSON, error) {
	out := new(DataJSON)
	err := c.cc.Invoke(ctx, "/mtproto.RPCInternalBot/bots_sendCustomRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCInternalBotClient) BotsAnswerWebhookJSONQuery(ctx context.Context, in *TLBotsAnswerWebhookJSONQuery, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/mtproto.RPCInternalBot/bots_answerWebhookJSONQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCInternalBotServer is the server API for RPCInternalBot service.
type RPCInternalBotServer interface {
	HelpSetBotUpdatesStatus(context.Context, *TLHelpSetBotUpdatesStatus) (*Bool, error)
	BotsSendCustomRequest(context.Context, *TLBotsSendCustomRequest) (*DataJSON, error)
	BotsAnswerWebhookJSONQuery(context.Context, *TLBotsAnswerWebhookJSONQuery) (*Bool, error)
}

// UnimplementedRPCInternalBotServer can be embedded to have forward compatible implementations.
type UnimplementedRPCInternalBotServer struct {
}

func (*UnimplementedRPCInternalBotServer) HelpSetBotUpdatesStatus(ctx context.Context, req *TLHelpSetBotUpdatesStatus) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelpSetBotUpdatesStatus not implemented")
}
func (*UnimplementedRPCInternalBotServer) BotsSendCustomRequest(ctx context.Context, req *TLBotsSendCustomRequest) (*DataJSON, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BotsSendCustomRequest not implemented")
}
func (*UnimplementedRPCInternalBotServer) BotsAnswerWebhookJSONQuery(ctx context.Context, req *TLBotsAnswerWebhookJSONQuery) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BotsAnswerWebhookJSONQuery not implemented")
}

func RegisterRPCInternalBotServer(s *grpc.Server, srv RPCInternalBotServer) {
	s.RegisterService(&_RPCInternalBot_serviceDesc, srv)
}

func _RPCInternalBot_HelpSetBotUpdatesStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLHelpSetBotUpdatesStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCInternalBotServer).HelpSetBotUpdatesStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCInternalBot/HelpSetBotUpdatesStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCInternalBotServer).HelpSetBotUpdatesStatus(ctx, req.(*TLHelpSetBotUpdatesStatus))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCInternalBot_BotsSendCustomRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBotsSendCustomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCInternalBotServer).BotsSendCustomRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCInternalBot/BotsSendCustomRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCInternalBotServer).BotsSendCustomRequest(ctx, req.(*TLBotsSendCustomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCInternalBot_BotsAnswerWebhookJSONQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBotsAnswerWebhookJSONQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCInternalBotServer).BotsAnswerWebhookJSONQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCInternalBot/BotsAnswerWebhookJSONQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCInternalBotServer).BotsAnswerWebhookJSONQuery(ctx, req.(*TLBotsAnswerWebhookJSONQuery))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCInternalBot_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCInternalBot",
	HandlerType: (*RPCInternalBotServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "help_setBotUpdatesStatus",
			Handler:    _RPCInternalBot_HelpSetBotUpdatesStatus_Handler,
		},
		{
			MethodName: "bots_sendCustomRequest",
			Handler:    _RPCInternalBot_BotsSendCustomRequest_Handler,
		},
		{
			MethodName: "bots_answerWebhookJSONQuery",
			Handler:    _RPCInternalBot_BotsAnswerWebhookJSONQuery_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

// RPCBizClient is the client API for RPCBiz service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCBizClient interface {
	BizInvokeBizDataRaw(ctx context.Context, in *TLBizInvokeBizDataRaw, opts ...grpc.CallOption) (*BizDataRaw, error)
}

type rPCBizClient struct {
	cc *grpc.ClientConn
}

func NewRPCBizClient(cc *grpc.ClientConn) RPCBizClient {
	return &rPCBizClient{cc}
}

func (c *rPCBizClient) BizInvokeBizDataRaw(ctx context.Context, in *TLBizInvokeBizDataRaw, opts ...grpc.CallOption) (*BizDataRaw, error) {
	out := new(BizDataRaw)
	err := c.cc.Invoke(ctx, "/mtproto.RPCBiz/biz_invokeBizDataRaw", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCBizServer is the server API for RPCBiz service.
type RPCBizServer interface {
	BizInvokeBizDataRaw(context.Context, *TLBizInvokeBizDataRaw) (*BizDataRaw, error)
}

// UnimplementedRPCBizServer can be embedded to have forward compatible implementations.
type UnimplementedRPCBizServer struct {
}

func (*UnimplementedRPCBizServer) BizInvokeBizDataRaw(ctx context.Context, req *TLBizInvokeBizDataRaw) (*BizDataRaw, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BizInvokeBizDataRaw not implemented")
}

func RegisterRPCBizServer(s *grpc.Server, srv RPCBizServer) {
	s.RegisterService(&_RPCBiz_serviceDesc, srv)
}

func _RPCBiz_BizInvokeBizDataRaw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TLBizInvokeBizDataRaw)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCBizServer).BizInvokeBizDataRaw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCBiz/BizInvokeBizDataRaw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCBizServer).BizInvokeBizDataRaw(ctx, req.(*TLBizInvokeBizDataRaw))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCBiz_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCBiz",
	HandlerType: (*RPCBizServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "biz_invokeBizDataRaw",
			Handler:    _RPCBiz_BizInvokeBizDataRaw_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema.tl.sync_service.proto",
}

func (m *TLInvokeAfterMsg) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLInvokeAfterMsg) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLInvokeAfterMsg) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Query) > 0 {
		i -= len(m.Query)
		copy(dAtA[i:], m.Query)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Query)))
		i--
		dAtA[i] = 0x22
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLInvokeAfterMsgs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLInvokeAfterMsgs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLInvokeAfterMsgs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Query) > 0 {
		i -= len(m.Query)
		copy(dAtA[i:], m.Query)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Query)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.MsgIds) > 0 {
		dAtA2 := make([]byte, len(m.MsgIds)*10)
		var j1 int
		for _, num1 := range m.MsgIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA2[j1] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j1++
			}
			dAtA2[j1] = uint8(num)
			j1++
		}
		i -= j1
		copy(dAtA[i:], dAtA2[:j1])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j1))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLInitConnection) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLInitConnection) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLInitConnection) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Query) > 0 {
		i -= len(m.Query)
		copy(dAtA[i:], m.Query)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Query)))
		i--
		dAtA[i] = 0x62
	}
	if m.Params != nil {
		{
			size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	if m.Proxy != nil {
		{
			size, err := m.Proxy.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if len(m.LangCode) > 0 {
		i -= len(m.LangCode)
		copy(dAtA[i:], m.LangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.LangPack) > 0 {
		i -= len(m.LangPack)
		copy(dAtA[i:], m.LangPack)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangPack)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.SystemLangCode) > 0 {
		i -= len(m.SystemLangCode)
		copy(dAtA[i:], m.SystemLangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.SystemLangCode)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.AppVersion) > 0 {
		i -= len(m.AppVersion)
		copy(dAtA[i:], m.AppVersion)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.AppVersion)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.SystemVersion) > 0 {
		i -= len(m.SystemVersion)
		copy(dAtA[i:], m.SystemVersion)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.SystemVersion)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.DeviceModel) > 0 {
		i -= len(m.DeviceModel)
		copy(dAtA[i:], m.DeviceModel)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.DeviceModel)))
		i--
		dAtA[i] = 0x22
	}
	if m.ApiId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ApiId))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLInvokeWithLayer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLInvokeWithLayer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLInvokeWithLayer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Query) > 0 {
		i -= len(m.Query)
		copy(dAtA[i:], m.Query)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Query)))
		i--
		dAtA[i] = 0x22
	}
	if m.Layer != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Layer))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLInvokeWithoutUpdates) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLInvokeWithoutUpdates) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLInvokeWithoutUpdates) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Query) > 0 {
		i -= len(m.Query)
		copy(dAtA[i:], m.Query)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Query)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLInvokeWithMessagesRange) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLInvokeWithMessagesRange) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLInvokeWithMessagesRange) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Query) > 0 {
		i -= len(m.Query)
		copy(dAtA[i:], m.Query)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Query)))
		i--
		dAtA[i] = 0x22
	}
	if m.Range != nil {
		{
			size, err := m.Range.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLInvokeWithTakeout) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLInvokeWithTakeout) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLInvokeWithTakeout) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Query) > 0 {
		i -= len(m.Query)
		copy(dAtA[i:], m.Query)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Query)))
		i--
		dAtA[i] = 0x22
	}
	if m.TakeoutId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.TakeoutId))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthSendCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthSendCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthSendCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Settings != nil {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.ApiHash) > 0 {
		i -= len(m.ApiHash)
		copy(dAtA[i:], m.ApiHash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ApiHash)))
		i--
		dAtA[i] = 0x2a
	}
	if m.ApiId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ApiId))
		i--
		dAtA[i] = 0x20
	}
	if len(m.PhoneNumber) > 0 {
		i -= len(m.PhoneNumber)
		copy(dAtA[i:], m.PhoneNumber)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthSignUp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthSignUp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthSignUp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LastName) > 0 {
		i -= len(m.LastName)
		copy(dAtA[i:], m.LastName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LastName)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.FirstName) > 0 {
		i -= len(m.FirstName)
		copy(dAtA[i:], m.FirstName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.FirstName)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.PhoneCodeHash) > 0 {
		i -= len(m.PhoneCodeHash)
		copy(dAtA[i:], m.PhoneCodeHash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCodeHash)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PhoneNumber) > 0 {
		i -= len(m.PhoneNumber)
		copy(dAtA[i:], m.PhoneNumber)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthSignIn) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthSignIn) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthSignIn) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PhoneCode) > 0 {
		i -= len(m.PhoneCode)
		copy(dAtA[i:], m.PhoneCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCode)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.PhoneCodeHash) > 0 {
		i -= len(m.PhoneCodeHash)
		copy(dAtA[i:], m.PhoneCodeHash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCodeHash)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PhoneNumber) > 0 {
		i -= len(m.PhoneNumber)
		copy(dAtA[i:], m.PhoneNumber)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthLogOut3E72BA19) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthLogOut3E72BA19) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthLogOut3E72BA19) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthResetAuthorizations) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthResetAuthorizations) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthResetAuthorizations) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthExportAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthExportAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthExportAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.DcId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.DcId))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthImportAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthImportAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthImportAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Bytes) > 0 {
		i -= len(m.Bytes)
		copy(dAtA[i:], m.Bytes)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Bytes)))
		i--
		dAtA[i] = 0x22
	}
	if m.Id != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthBindTempAuthKey) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthBindTempAuthKey) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthBindTempAuthKey) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.EncryptedMessage) > 0 {
		i -= len(m.EncryptedMessage)
		copy(dAtA[i:], m.EncryptedMessage)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.EncryptedMessage)))
		i--
		dAtA[i] = 0x32
	}
	if m.ExpiresAt != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ExpiresAt))
		i--
		dAtA[i] = 0x28
	}
	if m.Nonce != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Nonce))
		i--
		dAtA[i] = 0x20
	}
	if m.PermAuthKeyId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.PermAuthKeyId))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthImportBotAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthImportBotAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthImportBotAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.BotAuthToken) > 0 {
		i -= len(m.BotAuthToken)
		copy(dAtA[i:], m.BotAuthToken)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.BotAuthToken)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.ApiHash) > 0 {
		i -= len(m.ApiHash)
		copy(dAtA[i:], m.ApiHash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ApiHash)))
		i--
		dAtA[i] = 0x2a
	}
	if m.ApiId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ApiId))
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthCheckPassword) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthCheckPassword) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthCheckPassword) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Password != nil {
		{
			size, err := m.Password.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthRequestPasswordRecovery) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthRequestPasswordRecovery) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthRequestPasswordRecovery) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthRecoverPassword) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthRecoverPassword) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthRecoverPassword) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.NewSettings != nil {
		{
			size, err := m.NewSettings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Code) > 0 {
		i -= len(m.Code)
		copy(dAtA[i:], m.Code)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Code)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthResendCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthResendCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthResendCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PhoneCodeHash) > 0 {
		i -= len(m.PhoneCodeHash)
		copy(dAtA[i:], m.PhoneCodeHash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCodeHash)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PhoneNumber) > 0 {
		i -= len(m.PhoneNumber)
		copy(dAtA[i:], m.PhoneNumber)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthCancelCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthCancelCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthCancelCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PhoneCodeHash) > 0 {
		i -= len(m.PhoneCodeHash)
		copy(dAtA[i:], m.PhoneCodeHash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCodeHash)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PhoneNumber) > 0 {
		i -= len(m.PhoneNumber)
		copy(dAtA[i:], m.PhoneNumber)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthDropTempAuthKeys) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthDropTempAuthKeys) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthDropTempAuthKeys) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ExceptAuthKeys) > 0 {
		dAtA10 := make([]byte, len(m.ExceptAuthKeys)*10)
		var j9 int
		for _, num1 := range m.ExceptAuthKeys {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA10[j9] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j9++
			}
			dAtA10[j9] = uint8(num)
			j9++
		}
		i -= j9
		copy(dAtA[i:], dAtA10[:j9])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j9))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthExportLoginToken) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthExportLoginToken) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthExportLoginToken) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ExceptIds) > 0 {
		dAtA12 := make([]byte, len(m.ExceptIds)*10)
		var j11 int
		for _, num1 := range m.ExceptIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA12[j11] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j11++
			}
			dAtA12[j11] = uint8(num)
			j11++
		}
		i -= j11
		copy(dAtA[i:], dAtA12[:j11])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j11))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ApiHash) > 0 {
		i -= len(m.ApiHash)
		copy(dAtA[i:], m.ApiHash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ApiHash)))
		i--
		dAtA[i] = 0x22
	}
	if m.ApiId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ApiId))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthImportLoginToken) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthImportLoginToken) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthImportLoginToken) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Token) > 0 {
		i -= len(m.Token)
		copy(dAtA[i:], m.Token)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Token)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthAcceptLoginToken) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthAcceptLoginToken) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthAcceptLoginToken) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Token) > 0 {
		i -= len(m.Token)
		copy(dAtA[i:], m.Token)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Token)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthCheckRecoveryPassword) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthCheckRecoveryPassword) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthCheckRecoveryPassword) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Code) > 0 {
		i -= len(m.Code)
		copy(dAtA[i:], m.Code)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Code)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountRegisterDevice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountRegisterDevice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountRegisterDevice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.OtherUids) > 0 {
		dAtA14 := make([]byte, len(m.OtherUids)*10)
		var j13 int
		for _, num1 := range m.OtherUids {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA14[j13] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j13++
			}
			dAtA14[j13] = uint8(num)
			j13++
		}
		i -= j13
		copy(dAtA[i:], dAtA14[:j13])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j13))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Secret) > 0 {
		i -= len(m.Secret)
		copy(dAtA[i:], m.Secret)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Secret)))
		i--
		dAtA[i] = 0x3a
	}
	if m.AppSandbox != nil {
		{
			size, err := m.AppSandbox.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.Token) > 0 {
		i -= len(m.Token)
		copy(dAtA[i:], m.Token)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Token)))
		i--
		dAtA[i] = 0x2a
	}
	if m.TokenType != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.TokenType))
		i--
		dAtA[i] = 0x20
	}
	if m.NoMuted {
		i--
		if m.NoMuted {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountUnregisterDevice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUnregisterDevice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountUnregisterDevice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.OtherUids) > 0 {
		dAtA17 := make([]byte, len(m.OtherUids)*10)
		var j16 int
		for _, num1 := range m.OtherUids {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA17[j16] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j16++
			}
			dAtA17[j16] = uint8(num)
			j16++
		}
		i -= j16
		copy(dAtA[i:], dAtA17[:j16])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j16))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Token) > 0 {
		i -= len(m.Token)
		copy(dAtA[i:], m.Token)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Token)))
		i--
		dAtA[i] = 0x22
	}
	if m.TokenType != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.TokenType))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountUpdateNotifySettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdateNotifySettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountUpdateNotifySettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Settings != nil {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetNotifySettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetNotifySettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetNotifySettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountResetNotifySettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountResetNotifySettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountResetNotifySettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountUpdateProfile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdateProfile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountUpdateProfile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.About != nil {
		{
			size, err := m.About.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.LastName != nil {
		{
			size, err := m.LastName.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.FirstName != nil {
		{
			size, err := m.FirstName.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountUpdateStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdateStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountUpdateStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Offline != nil {
		{
			size, err := m.Offline.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetWallPapers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetWallPapers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetWallPapers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountReportPeer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountReportPeer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountReportPeer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Reason != nil {
		{
			size, err := m.Reason.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountCheckUsername) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountCheckUsername) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountCheckUsername) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountUpdateUsername) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdateUsername) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountUpdateUsername) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetPrivacy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetPrivacy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetPrivacy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Key != nil {
		{
			size, err := m.Key.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSetPrivacy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSetPrivacy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSetPrivacy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Rules) > 0 {
		for iNdEx := len(m.Rules) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Rules[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Key != nil {
		{
			size, err := m.Key.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountDeleteAccount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountDeleteAccount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountDeleteAccount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Reason) > 0 {
		i -= len(m.Reason)
		copy(dAtA[i:], m.Reason)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Reason)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetAccountTTL) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetAccountTTL) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetAccountTTL) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSetAccountTTL) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSetAccountTTL) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSetAccountTTL) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Ttl != nil {
		{
			size, err := m.Ttl.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSendChangePhoneCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSendChangePhoneCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSendChangePhoneCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Settings != nil {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.PhoneNumber) > 0 {
		i -= len(m.PhoneNumber)
		copy(dAtA[i:], m.PhoneNumber)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountChangePhone) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountChangePhone) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountChangePhone) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PhoneCode) > 0 {
		i -= len(m.PhoneCode)
		copy(dAtA[i:], m.PhoneCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCode)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.PhoneCodeHash) > 0 {
		i -= len(m.PhoneCodeHash)
		copy(dAtA[i:], m.PhoneCodeHash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCodeHash)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PhoneNumber) > 0 {
		i -= len(m.PhoneNumber)
		copy(dAtA[i:], m.PhoneNumber)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountUpdateDeviceLocked) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdateDeviceLocked) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountUpdateDeviceLocked) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Period != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Period))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetAuthorizations) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetAuthorizations) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetAuthorizations) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountResetAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountResetAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountResetAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetPassword) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetPassword) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetPassword) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetPasswordSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetPasswordSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetPasswordSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Password != nil {
		{
			size, err := m.Password.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountUpdatePasswordSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdatePasswordSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountUpdatePasswordSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.NewSettings != nil {
		{
			size, err := m.NewSettings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Password != nil {
		{
			size, err := m.Password.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSendConfirmPhoneCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSendConfirmPhoneCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSendConfirmPhoneCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Settings != nil {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Hash) > 0 {
		i -= len(m.Hash)
		copy(dAtA[i:], m.Hash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Hash)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountConfirmPhone) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountConfirmPhone) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountConfirmPhone) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PhoneCode) > 0 {
		i -= len(m.PhoneCode)
		copy(dAtA[i:], m.PhoneCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCode)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PhoneCodeHash) > 0 {
		i -= len(m.PhoneCodeHash)
		copy(dAtA[i:], m.PhoneCodeHash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCodeHash)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetTmpPassword) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetTmpPassword) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetTmpPassword) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Period != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Period))
		i--
		dAtA[i] = 0x20
	}
	if m.Password != nil {
		{
			size, err := m.Password.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetWebAuthorizations) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetWebAuthorizations) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetWebAuthorizations) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountResetWebAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountResetWebAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountResetWebAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountResetWebAuthorizations) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountResetWebAuthorizations) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountResetWebAuthorizations) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetAllSecureValues) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetAllSecureValues) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetAllSecureValues) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetSecureValue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetSecureValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetSecureValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Types) > 0 {
		for iNdEx := len(m.Types) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Types[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSaveSecureValue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSaveSecureValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSaveSecureValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SecureSecretId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.SecureSecretId))
		i--
		dAtA[i] = 0x20
	}
	if m.Value != nil {
		{
			size, err := m.Value.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountDeleteSecureValue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountDeleteSecureValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountDeleteSecureValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Types) > 0 {
		for iNdEx := len(m.Types) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Types[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetAuthorizationForm) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetAuthorizationForm) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetAuthorizationForm) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PublicKey) > 0 {
		i -= len(m.PublicKey)
		copy(dAtA[i:], m.PublicKey)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PublicKey)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Scope) > 0 {
		i -= len(m.Scope)
		copy(dAtA[i:], m.Scope)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Scope)))
		i--
		dAtA[i] = 0x22
	}
	if m.BotId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.BotId))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountAcceptAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountAcceptAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountAcceptAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Credentials != nil {
		{
			size, err := m.Credentials.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if len(m.ValueHashes) > 0 {
		for iNdEx := len(m.ValueHashes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ValueHashes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.PublicKey) > 0 {
		i -= len(m.PublicKey)
		copy(dAtA[i:], m.PublicKey)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PublicKey)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Scope) > 0 {
		i -= len(m.Scope)
		copy(dAtA[i:], m.Scope)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Scope)))
		i--
		dAtA[i] = 0x22
	}
	if m.BotId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.BotId))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSendVerifyPhoneCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSendVerifyPhoneCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSendVerifyPhoneCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Settings != nil {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.PhoneNumber) > 0 {
		i -= len(m.PhoneNumber)
		copy(dAtA[i:], m.PhoneNumber)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountVerifyPhone) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountVerifyPhone) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountVerifyPhone) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PhoneCode) > 0 {
		i -= len(m.PhoneCode)
		copy(dAtA[i:], m.PhoneCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCode)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.PhoneCodeHash) > 0 {
		i -= len(m.PhoneCodeHash)
		copy(dAtA[i:], m.PhoneCodeHash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCodeHash)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PhoneNumber) > 0 {
		i -= len(m.PhoneNumber)
		copy(dAtA[i:], m.PhoneNumber)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSendVerifyEmailCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSendVerifyEmailCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSendVerifyEmailCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Email) > 0 {
		i -= len(m.Email)
		copy(dAtA[i:], m.Email)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Email)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountVerifyEmail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountVerifyEmail) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountVerifyEmail) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Code) > 0 {
		i -= len(m.Code)
		copy(dAtA[i:], m.Code)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Code)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Email) > 0 {
		i -= len(m.Email)
		copy(dAtA[i:], m.Email)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Email)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountInitTakeoutSession) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountInitTakeoutSession) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountInitTakeoutSession) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FileMaxSize != nil {
		{
			size, err := m.FileMaxSize.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.Files {
		i--
		if m.Files {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if m.MessageChannels {
		i--
		if m.MessageChannels {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.MessageMegagroups {
		i--
		if m.MessageMegagroups {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.MessageChats {
		i--
		if m.MessageChats {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.MessageUsers {
		i--
		if m.MessageUsers {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Contacts {
		i--
		if m.Contacts {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountFinishTakeoutSession) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountFinishTakeoutSession) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountFinishTakeoutSession) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Success {
		i--
		if m.Success {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountConfirmPasswordEmail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountConfirmPasswordEmail) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountConfirmPasswordEmail) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Code) > 0 {
		i -= len(m.Code)
		copy(dAtA[i:], m.Code)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Code)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountResendPasswordEmail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountResendPasswordEmail) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountResendPasswordEmail) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountCancelPasswordEmail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountCancelPasswordEmail) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountCancelPasswordEmail) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetContactSignUpNotification) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetContactSignUpNotification) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetContactSignUpNotification) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSetContactSignUpNotification) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSetContactSignUpNotification) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSetContactSignUpNotification) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Silent != nil {
		{
			size, err := m.Silent.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetNotifyExceptions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetNotifyExceptions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetNotifyExceptions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.CompareSound {
		i--
		if m.CompareSound {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetWallPaper) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetWallPaper) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetWallPaper) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Wallpaper != nil {
		{
			size, err := m.Wallpaper.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountUploadWallPaper) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUploadWallPaper) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountUploadWallPaper) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Settings != nil {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.MimeType) > 0 {
		i -= len(m.MimeType)
		copy(dAtA[i:], m.MimeType)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.MimeType)))
		i--
		dAtA[i] = 0x22
	}
	if m.File != nil {
		{
			size, err := m.File.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSaveWallPaper) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSaveWallPaper) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSaveWallPaper) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Settings != nil {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Unsave != nil {
		{
			size, err := m.Unsave.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Wallpaper != nil {
		{
			size, err := m.Wallpaper.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountInstallWallPaper) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountInstallWallPaper) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountInstallWallPaper) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Settings != nil {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Wallpaper != nil {
		{
			size, err := m.Wallpaper.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountResetWallPapers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountResetWallPapers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountResetWallPapers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetAutoDownloadSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetAutoDownloadSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetAutoDownloadSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSaveAutoDownloadSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSaveAutoDownloadSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSaveAutoDownloadSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Settings != nil {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.High {
		i--
		if m.High {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Low {
		i--
		if m.Low {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountUploadTheme) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUploadTheme) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountUploadTheme) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MimeType) > 0 {
		i -= len(m.MimeType)
		copy(dAtA[i:], m.MimeType)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.MimeType)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.FileName) > 0 {
		i -= len(m.FileName)
		copy(dAtA[i:], m.FileName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.FileName)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Thumb != nil {
		{
			size, err := m.Thumb.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.File != nil {
		{
			size, err := m.File.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountCreateTheme) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountCreateTheme) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountCreateTheme) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Settings_FLAGINPUTTHEMESETTINGS != nil {
		{
			size, err := m.Settings_FLAGINPUTTHEMESETTINGS.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Settings_FLAGVECTORINPUTTHEMESETTINGS) > 0 {
		for iNdEx := len(m.Settings_FLAGVECTORINPUTTHEMESETTINGS) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Settings_FLAGVECTORINPUTTHEMESETTINGS[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if m.Document != nil {
		{
			size, err := m.Document.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Slug) > 0 {
		i -= len(m.Slug)
		copy(dAtA[i:], m.Slug)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Slug)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountUpdateTheme) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdateTheme) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountUpdateTheme) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Settings_FLAGINPUTTHEMESETTINGS != nil {
		{
			size, err := m.Settings_FLAGINPUTTHEMESETTINGS.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Settings_FLAGVECTORINPUTTHEMESETTINGS) > 0 {
		for iNdEx := len(m.Settings_FLAGVECTORINPUTTHEMESETTINGS) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Settings_FLAGVECTORINPUTTHEMESETTINGS[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	if m.Document != nil {
		{
			size, err := m.Document.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.Title != nil {
		{
			size, err := m.Title.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Slug != nil {
		{
			size, err := m.Slug.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Theme != nil {
		{
			size, err := m.Theme.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Format) > 0 {
		i -= len(m.Format)
		copy(dAtA[i:], m.Format)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Format)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSaveTheme) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSaveTheme) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSaveTheme) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Unsave != nil {
		{
			size, err := m.Unsave.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Theme != nil {
		{
			size, err := m.Theme.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountInstallTheme) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountInstallTheme) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountInstallTheme) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.BaseTheme != nil {
		{
			size, err := m.BaseTheme.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Format != nil {
		{
			size, err := m.Format.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Theme != nil {
		{
			size, err := m.Theme.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Dark {
		i--
		if m.Dark {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetTheme) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetTheme) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetTheme) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.DocumentId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.DocumentId))
		i--
		dAtA[i] = 0x28
	}
	if m.Theme != nil {
		{
			size, err := m.Theme.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Format) > 0 {
		i -= len(m.Format)
		copy(dAtA[i:], m.Format)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Format)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetThemes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetThemes) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetThemes) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Format) > 0 {
		i -= len(m.Format)
		copy(dAtA[i:], m.Format)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Format)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSetContentSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSetContentSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSetContentSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SensitiveEnabled {
		i--
		if m.SensitiveEnabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetContentSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetContentSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetContentSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetMultiWallPapers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetMultiWallPapers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetMultiWallPapers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Wallpapers) > 0 {
		for iNdEx := len(m.Wallpapers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Wallpapers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetGlobalPrivacySettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetGlobalPrivacySettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetGlobalPrivacySettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSetGlobalPrivacySettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSetGlobalPrivacySettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSetGlobalPrivacySettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Settings != nil {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountReportProfilePhoto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountReportProfilePhoto) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountReportProfilePhoto) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x32
	}
	if m.Reason != nil {
		{
			size, err := m.Reason.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.PhotoId != nil {
		{
			size, err := m.PhotoId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountResetPassword) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountResetPassword) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountResetPassword) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountDeclinePasswordReset) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountDeclinePasswordReset) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountDeclinePasswordReset) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetChatThemesD638DE89) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetChatThemesD638DE89) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetChatThemesD638DE89) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSetAuthorizationTTL) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSetAuthorizationTTL) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSetAuthorizationTTL) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.AuthorizationTtlDays != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.AuthorizationTtlDays))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountChangeAuthorizationSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountChangeAuthorizationSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountChangeAuthorizationSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CallRequestsDisabled != nil {
		{
			size, err := m.CallRequestsDisabled.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.EncryptedRequestsDisabled != nil {
		{
			size, err := m.EncryptedRequestsDisabled.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUsersGetUsers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUsersGetUsers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUsersGetUsers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		for iNdEx := len(m.Id) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Id[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUsersGetFullUserB60F5918) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUsersGetFullUserB60F5918) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUsersGetFullUserB60F5918) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUsersSetSecureValueErrors) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUsersSetSecureValueErrors) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUsersSetSecureValueErrors) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Errors) > 0 {
		for iNdEx := len(m.Errors) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Errors[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsGetContactIDs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsGetContactIDs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsGetContactIDs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsGetStatuses) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsGetStatuses) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsGetStatuses) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsGetContacts) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsGetContacts) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsGetContacts) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsImportContacts) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsImportContacts) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsImportContacts) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Contacts) > 0 {
		for iNdEx := len(m.Contacts) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Contacts[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsDeleteContacts) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsDeleteContacts) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsDeleteContacts) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		for iNdEx := len(m.Id) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Id[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsDeleteByPhones) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsDeleteByPhones) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsDeleteByPhones) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Phones) > 0 {
		for iNdEx := len(m.Phones) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Phones[iNdEx])
			copy(dAtA[i:], m.Phones[iNdEx])
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Phones[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsBlock) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsBlock) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsBlock) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsUnblock) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsUnblock) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsUnblock) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsGetBlocked) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsGetBlocked) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsGetBlocked) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x20
	}
	if m.Offset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsSearch) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsSearch) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsSearch) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Q) > 0 {
		i -= len(m.Q)
		copy(dAtA[i:], m.Q)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Q)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsResolveUsername) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsResolveUsername) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsResolveUsername) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsGetTopPeers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsGetTopPeers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsGetTopPeers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x68
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x60
	}
	if m.Offset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x58
	}
	if m.Channels {
		i--
		if m.Channels {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x50
	}
	if m.Groups {
		i--
		if m.Groups {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x48
	}
	if m.ForwardChats {
		i--
		if m.ForwardChats {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if m.ForwardUsers {
		i--
		if m.ForwardUsers {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.PhoneCalls {
		i--
		if m.PhoneCalls {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.BotsInline {
		i--
		if m.BotsInline {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.BotsPm {
		i--
		if m.BotsPm {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Correspondents {
		i--
		if m.Correspondents {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsResetTopPeerRating) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsResetTopPeerRating) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsResetTopPeerRating) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Category != nil {
		{
			size, err := m.Category.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsResetSaved) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsResetSaved) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsResetSaved) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsGetSaved) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsGetSaved) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsGetSaved) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsToggleTopPeers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsToggleTopPeers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsToggleTopPeers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Enabled != nil {
		{
			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsAddContact) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsAddContact) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsAddContact) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Phone) > 0 {
		i -= len(m.Phone)
		copy(dAtA[i:], m.Phone)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Phone)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.LastName) > 0 {
		i -= len(m.LastName)
		copy(dAtA[i:], m.LastName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LastName)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.FirstName) > 0 {
		i -= len(m.FirstName)
		copy(dAtA[i:], m.FirstName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.FirstName)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.AddPhonePrivacyException {
		i--
		if m.AddPhonePrivacyException {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsAcceptContact) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsAcceptContact) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsAcceptContact) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsGetLocated) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsGetLocated) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsGetLocated) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SelfExpires != nil {
		{
			size, err := m.SelfExpires.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.GeoPoint != nil {
		{
			size, err := m.GeoPoint.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Background {
		i--
		if m.Background {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsBlockFromReplies) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsBlockFromReplies) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsBlockFromReplies) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x30
	}
	if m.ReportSpam {
		i--
		if m.ReportSpam {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.DeleteHistory {
		i--
		if m.DeleteHistory {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.DeleteMessage {
		i--
		if m.DeleteMessage {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsResolvePhone) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsResolvePhone) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsResolvePhone) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Phone) > 0 {
		i -= len(m.Phone)
		copy(dAtA[i:], m.Phone)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Phone)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetMessages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetMessages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id_VECTORINT32) > 0 {
		dAtA84 := make([]byte, len(m.Id_VECTORINT32)*10)
		var j83 int
		for _, num1 := range m.Id_VECTORINT32 {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA84[j83] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j83++
			}
			dAtA84[j83] = uint8(num)
			j83++
		}
		i -= j83
		copy(dAtA[i:], dAtA84[:j83])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j83))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Id_VECTORINPUTMESSAGE) > 0 {
		for iNdEx := len(m.Id_VECTORINPUTMESSAGE) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Id_VECTORINPUTMESSAGE[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetDialogs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetDialogs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetDialogs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x48
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x40
	}
	if m.OffsetPeer != nil {
		{
			size, err := m.OffsetPeer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.OffsetId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
		i--
		dAtA[i] = 0x30
	}
	if m.OffsetDate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetDate))
		i--
		dAtA[i] = 0x28
	}
	if m.FolderId != nil {
		{
			size, err := m.FolderId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.ExcludePinned {
		i--
		if m.ExcludePinned {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetHistory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetHistory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x50
	}
	if m.MinId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MinId))
		i--
		dAtA[i] = 0x48
	}
	if m.MaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
		i--
		dAtA[i] = 0x40
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x38
	}
	if m.AddOffset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.AddOffset))
		i--
		dAtA[i] = 0x30
	}
	if m.OffsetDate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetDate))
		i--
		dAtA[i] = 0x28
	}
	if m.OffsetId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSearch) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSearch) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSearch) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x78
	}
	if m.MinId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MinId))
		i--
		dAtA[i] = 0x70
	}
	if m.MaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
		i--
		dAtA[i] = 0x68
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x60
	}
	if m.AddOffset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.AddOffset))
		i--
		dAtA[i] = 0x58
	}
	if m.OffsetId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
		i--
		dAtA[i] = 0x50
	}
	if m.MaxDate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxDate))
		i--
		dAtA[i] = 0x48
	}
	if m.MinDate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MinDate))
		i--
		dAtA[i] = 0x40
	}
	if m.Filter != nil {
		{
			size, err := m.Filter.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.TopMsgId != nil {
		{
			size, err := m.TopMsgId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.FromId != nil {
		{
			size, err := m.FromId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Q) > 0 {
		i -= len(m.Q)
		copy(dAtA[i:], m.Q)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Q)))
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReadHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReadHistory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReadHistory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesDeleteHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesDeleteHistory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesDeleteHistory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MaxDate != nil {
		{
			size, err := m.MaxDate.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.MinDate != nil {
		{
			size, err := m.MinDate.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.MaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
		i--
		dAtA[i] = 0x30
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Revoke {
		i--
		if m.Revoke {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.JustClear {
		i--
		if m.JustClear {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesDeleteMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesDeleteMessages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesDeleteMessages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		dAtA97 := make([]byte, len(m.Id)*10)
		var j96 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA97[j96] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j96++
			}
			dAtA97[j96] = uint8(num)
			j96++
		}
		i -= j96
		copy(dAtA[i:], dAtA97[:j96])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j96))
		i--
		dAtA[i] = 0x22
	}
	if m.Revoke {
		i--
		if m.Revoke {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReceivedMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReceivedMessages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReceivedMessages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSetTyping) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetTyping) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSetTyping) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Action != nil {
		{
			size, err := m.Action.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.TopMsgId != nil {
		{
			size, err := m.TopMsgId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSendMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSendMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SendAs != nil {
		{
			size, err := m.SendAs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x7a
	}
	if m.ScheduleDate != nil {
		{
			size, err := m.ScheduleDate.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x72
	}
	if len(m.Entities) > 0 {
		for iNdEx := len(m.Entities) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entities[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x6a
		}
	}
	if m.ReplyMarkup != nil {
		{
			size, err := m.ReplyMarkup.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	if m.RandomId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
		i--
		dAtA[i] = 0x58
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x52
	}
	if m.ReplyToMsgId != nil {
		{
			size, err := m.ReplyToMsgId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.Noforwards {
		i--
		if m.Noforwards {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.ClearDraft {
		i--
		if m.ClearDraft {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.Background {
		i--
		if m.Background {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.Silent {
		i--
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.NoWebpage {
		i--
		if m.NoWebpage {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSendMedia) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendMedia) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSendMedia) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SendAs != nil {
		{
			size, err := m.SendAs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x7a
	}
	if m.ScheduleDate != nil {
		{
			size, err := m.ScheduleDate.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x72
	}
	if len(m.Entities) > 0 {
		for iNdEx := len(m.Entities) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entities[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x6a
		}
	}
	if m.ReplyMarkup != nil {
		{
			size, err := m.ReplyMarkup.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	if m.RandomId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
		i--
		dAtA[i] = 0x58
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x52
	}
	if m.Media != nil {
		{
			size, err := m.Media.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.ReplyToMsgId != nil {
		{
			size, err := m.ReplyToMsgId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.Noforwards {
		i--
		if m.Noforwards {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.ClearDraft {
		i--
		if m.ClearDraft {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.Background {
		i--
		if m.Background {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Silent {
		i--
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesForwardMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesForwardMessages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesForwardMessages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SendAs != nil {
		{
			size, err := m.SendAs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x72
	}
	if m.ScheduleDate != nil {
		{
			size, err := m.ScheduleDate.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6a
	}
	if m.ToPeer != nil {
		{
			size, err := m.ToPeer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	if len(m.RandomId) > 0 {
		dAtA116 := make([]byte, len(m.RandomId)*10)
		var j115 int
		for _, num1 := range m.RandomId {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA116[j115] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j115++
			}
			dAtA116[j115] = uint8(num)
			j115++
		}
		i -= j115
		copy(dAtA[i:], dAtA116[:j115])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j115))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.Id) > 0 {
		dAtA118 := make([]byte, len(m.Id)*10)
		var j117 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA118[j117] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j117++
			}
			dAtA118[j117] = uint8(num)
			j117++
		}
		i -= j117
		copy(dAtA[i:], dAtA118[:j117])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j117))
		i--
		dAtA[i] = 0x52
	}
	if m.FromPeer != nil {
		{
			size, err := m.FromPeer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.Noforwards {
		i--
		if m.Noforwards {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if m.DropMediaCaptions {
		i--
		if m.DropMediaCaptions {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.DropAuthor {
		i--
		if m.DropAuthor {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.WithMyScore {
		i--
		if m.WithMyScore {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.Background {
		i--
		if m.Background {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Silent {
		i--
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReportSpam) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReportSpam) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReportSpam) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetPeerSettingsEFD9A6A2) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetPeerSettingsEFD9A6A2) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetPeerSettingsEFD9A6A2) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReport) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReport) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReport) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x32
	}
	if m.Reason != nil {
		{
			size, err := m.Reason.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Id) > 0 {
		dAtA124 := make([]byte, len(m.Id)*10)
		var j123 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA124[j123] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j123++
			}
			dAtA124[j123] = uint8(num)
			j123++
		}
		i -= j123
		copy(dAtA[i:], dAtA124[:j123])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j123))
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetChats) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetChats) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetChats) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		dAtA127 := make([]byte, len(m.Id)*10)
		var j126 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA127[j126] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j126++
			}
			dAtA127[j126] = uint8(num)
			j126++
		}
		i -= j126
		copy(dAtA[i:], dAtA127[:j126])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j126))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetFullChat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetFullChat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetFullChat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesEditChatTitle) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesEditChatTitle) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesEditChatTitle) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x22
	}
	if m.ChatId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesEditChatPhoto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesEditChatPhoto) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesEditChatPhoto) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Photo != nil {
		{
			size, err := m.Photo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.ChatId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesAddChatUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesAddChatUser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesAddChatUser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FwdLimit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FwdLimit))
		i--
		dAtA[i] = 0x28
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.ChatId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesDeleteChatUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesDeleteChatUser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesDeleteChatUser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.ChatId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
		i--
		dAtA[i] = 0x20
	}
	if m.RevokeHistory {
		i--
		if m.RevokeHistory {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesCreateChat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesCreateChat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesCreateChat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Users) > 0 {
		for iNdEx := len(m.Users) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Users[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetDhConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetDhConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetDhConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RandomLength != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomLength))
		i--
		dAtA[i] = 0x20
	}
	if m.Version != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Version))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesRequestEncryption) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesRequestEncryption) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesRequestEncryption) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.GA) > 0 {
		i -= len(m.GA)
		copy(dAtA[i:], m.GA)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.GA)))
		i--
		dAtA[i] = 0x2a
	}
	if m.RandomId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
		i--
		dAtA[i] = 0x20
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesAcceptEncryption) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesAcceptEncryption) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesAcceptEncryption) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.KeyFingerprint != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.KeyFingerprint))
		i--
		dAtA[i] = 0x28
	}
	if len(m.GB) > 0 {
		i -= len(m.GB)
		copy(dAtA[i:], m.GB)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.GB)))
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesDiscardEncryption) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesDiscardEncryption) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesDiscardEncryption) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
		i--
		dAtA[i] = 0x20
	}
	if m.DeleteHistory {
		i--
		if m.DeleteHistory {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSetEncryptedTyping) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetEncryptedTyping) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSetEncryptedTyping) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Typing != nil {
		{
			size, err := m.Typing.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReadEncryptedHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReadEncryptedHistory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReadEncryptedHistory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MaxDate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxDate))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSendEncrypted) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendEncrypted) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSendEncrypted) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Data) > 0 {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0x32
	}
	if m.RandomId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
		i--
		dAtA[i] = 0x28
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Silent {
		i--
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSendEncryptedFile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendEncryptedFile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSendEncryptedFile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.File != nil {
		{
			size, err := m.File.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Data) > 0 {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0x32
	}
	if m.RandomId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
		i--
		dAtA[i] = 0x28
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Silent {
		i--
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSendEncryptedService) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendEncryptedService) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSendEncryptedService) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Data) > 0 {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0x2a
	}
	if m.RandomId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReceivedQueue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReceivedQueue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReceivedQueue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MaxQts != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxQts))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReportEncryptedSpam) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReportEncryptedSpam) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReportEncryptedSpam) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReadMessageContents) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReadMessageContents) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReadMessageContents) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		dAtA142 := make([]byte, len(m.Id)*10)
		var j141 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA142[j141] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j141++
			}
			dAtA142[j141] = uint8(num)
			j141++
		}
		i -= j141
		copy(dAtA[i:], dAtA142[:j141])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j141))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetStickers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetStickers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Emoticon) > 0 {
		i -= len(m.Emoticon)
		copy(dAtA[i:], m.Emoticon)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Emoticon)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetAllStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetAllStickers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetAllStickers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetWebPagePreview) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetWebPagePreview) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetWebPagePreview) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Entities) > 0 {
		for iNdEx := len(m.Entities) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entities[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesExportChatInvite) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesExportChatInvite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesExportChatInvite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Title != nil {
		{
			size, err := m.Title.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.UsageLimit != nil {
		{
			size, err := m.UsageLimit.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.ExpireDate != nil {
		{
			size, err := m.ExpireDate.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.RequestNeeded {
		i--
		if m.RequestNeeded {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.LegacyRevokePermanent {
		i--
		if m.LegacyRevokePermanent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesCheckChatInvite) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesCheckChatInvite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesCheckChatInvite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Hash) > 0 {
		i -= len(m.Hash)
		copy(dAtA[i:], m.Hash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Hash)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesImportChatInvite) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesImportChatInvite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesImportChatInvite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Hash) > 0 {
		i -= len(m.Hash)
		copy(dAtA[i:], m.Hash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Hash)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetStickerSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetStickerSet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetStickerSet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x20
	}
	if m.Stickerset != nil {
		{
			size, err := m.Stickerset.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesInstallStickerSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesInstallStickerSet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesInstallStickerSet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Archived != nil {
		{
			size, err := m.Archived.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Stickerset != nil {
		{
			size, err := m.Stickerset.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesUninstallStickerSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesUninstallStickerSet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesUninstallStickerSet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Stickerset != nil {
		{
			size, err := m.Stickerset.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesStartBot) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesStartBot) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesStartBot) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.StartParam) > 0 {
		i -= len(m.StartParam)
		copy(dAtA[i:], m.StartParam)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.StartParam)))
		i--
		dAtA[i] = 0x32
	}
	if m.RandomId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
		i--
		dAtA[i] = 0x28
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Bot != nil {
		{
			size, err := m.Bot.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetMessagesViews) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetMessagesViews) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetMessagesViews) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Increment != nil {
		{
			size, err := m.Increment.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Id) > 0 {
		dAtA155 := make([]byte, len(m.Id)*10)
		var j154 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA155[j154] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j154++
			}
			dAtA155[j154] = uint8(num)
			j154++
		}
		i -= j154
		copy(dAtA[i:], dAtA155[:j154])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j154))
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesEditChatAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesEditChatAdmin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesEditChatAdmin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsAdmin != nil {
		{
			size, err := m.IsAdmin.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.ChatId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesMigrateChat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesMigrateChat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesMigrateChat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSearchGlobal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSearchGlobal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSearchGlobal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x58
	}
	if m.OffsetId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
		i--
		dAtA[i] = 0x50
	}
	if m.OffsetPeer != nil {
		{
			size, err := m.OffsetPeer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.OffsetRate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetRate))
		i--
		dAtA[i] = 0x40
	}
	if m.MaxDate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxDate))
		i--
		dAtA[i] = 0x38
	}
	if m.MinDate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MinDate))
		i--
		dAtA[i] = 0x30
	}
	if m.Filter != nil {
		{
			size, err := m.Filter.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Q) > 0 {
		i -= len(m.Q)
		copy(dAtA[i:], m.Q)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Q)))
		i--
		dAtA[i] = 0x22
	}
	if m.FolderId != nil {
		{
			size, err := m.FolderId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReorderStickerSets) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReorderStickerSets) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReorderStickerSets) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Order) > 0 {
		dAtA163 := make([]byte, len(m.Order)*10)
		var j162 int
		for _, num1 := range m.Order {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA163[j162] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j162++
			}
			dAtA163[j162] = uint8(num)
			j162++
		}
		i -= j162
		copy(dAtA[i:], dAtA163[:j162])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j162))
		i--
		dAtA[i] = 0x22
	}
	if m.Masks {
		i--
		if m.Masks {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetDocumentByHash) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetDocumentByHash) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetDocumentByHash) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MimeType) > 0 {
		i -= len(m.MimeType)
		copy(dAtA[i:], m.MimeType)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.MimeType)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Size2 != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Size2))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Sha256) > 0 {
		i -= len(m.Sha256)
		copy(dAtA[i:], m.Sha256)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Sha256)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetSavedGifs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetSavedGifs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetSavedGifs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSaveGif) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSaveGif) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSaveGif) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Unsave != nil {
		{
			size, err := m.Unsave.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetInlineBotResults) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetInlineBotResults) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetInlineBotResults) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Offset) > 0 {
		i -= len(m.Offset)
		copy(dAtA[i:], m.Offset)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Offset)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Query) > 0 {
		i -= len(m.Query)
		copy(dAtA[i:], m.Query)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Query)))
		i--
		dAtA[i] = 0x32
	}
	if m.GeoPoint != nil {
		{
			size, err := m.GeoPoint.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Bot != nil {
		{
			size, err := m.Bot.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSetInlineBotResults) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetInlineBotResults) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSetInlineBotResults) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SwitchPm != nil {
		{
			size, err := m.SwitchPm.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.NextOffset != nil {
		{
			size, err := m.NextOffset.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.CacheTime != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.CacheTime))
		i--
		dAtA[i] = 0x38
	}
	if len(m.Results) > 0 {
		for iNdEx := len(m.Results) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Results[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if m.QueryId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.QueryId))
		i--
		dAtA[i] = 0x28
	}
	if m.Private {
		i--
		if m.Private {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Gallery {
		i--
		if m.Gallery {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSendInlineBotResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendInlineBotResult) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSendInlineBotResult) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SendAs != nil {
		{
			size, err := m.SendAs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6a
	}
	if m.ScheduleDate != nil {
		{
			size, err := m.ScheduleDate.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x5a
	}
	if m.QueryId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.QueryId))
		i--
		dAtA[i] = 0x50
	}
	if m.RandomId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
		i--
		dAtA[i] = 0x48
	}
	if m.ReplyToMsgId != nil {
		{
			size, err := m.ReplyToMsgId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.HideVia {
		i--
		if m.HideVia {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.ClearDraft {
		i--
		if m.ClearDraft {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.Background {
		i--
		if m.Background {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Silent {
		i--
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetMessageEditData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetMessageEditData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetMessageEditData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesEditMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesEditMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesEditMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ScheduleDate != nil {
		{
			size, err := m.ScheduleDate.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if len(m.Entities) > 0 {
		for iNdEx := len(m.Entities) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entities[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x4a
		}
	}
	if m.ReplyMarkup != nil {
		{
			size, err := m.ReplyMarkup.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.Media != nil {
		{
			size, err := m.Media.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.Message != nil {
		{
			size, err := m.Message.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Id != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x28
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.NoWebpage {
		i--
		if m.NoWebpage {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesEditInlineBotMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesEditInlineBotMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesEditInlineBotMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Entities) > 0 {
		for iNdEx := len(m.Entities) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entities[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	if m.ReplyMarkup != nil {
		{
			size, err := m.ReplyMarkup.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.Media != nil {
		{
			size, err := m.Media.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Message != nil {
		{
			size, err := m.Message.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.NoWebpage {
		i--
		if m.NoWebpage {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetBotCallbackAnswer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetBotCallbackAnswer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetBotCallbackAnswer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Password != nil {
		{
			size, err := m.Password.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Data) > 0 {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0x32
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x28
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Game {
		i--
		if m.Game {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSetBotCallbackAnswer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetBotCallbackAnswer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSetBotCallbackAnswer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CacheTime != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.CacheTime))
		i--
		dAtA[i] = 0x38
	}
	if m.Url != nil {
		{
			size, err := m.Url.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Message != nil {
		{
			size, err := m.Message.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.QueryId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.QueryId))
		i--
		dAtA[i] = 0x20
	}
	if m.Alert {
		i--
		if m.Alert {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetPeerDialogs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetPeerDialogs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetPeerDialogs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Peers) > 0 {
		for iNdEx := len(m.Peers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Peers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSaveDraft) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSaveDraft) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSaveDraft) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Entities) > 0 {
		for iNdEx := len(m.Entities) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entities[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x32
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.ReplyToMsgId != nil {
		{
			size, err := m.ReplyToMsgId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.NoWebpage {
		i--
		if m.NoWebpage {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetAllDrafts) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetAllDrafts) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetAllDrafts) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetFeaturedStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetFeaturedStickers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetFeaturedStickers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReadFeaturedStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReadFeaturedStickers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReadFeaturedStickers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		dAtA192 := make([]byte, len(m.Id)*10)
		var j191 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA192[j191] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j191++
			}
			dAtA192[j191] = uint8(num)
			j191++
		}
		i -= j191
		copy(dAtA[i:], dAtA192[:j191])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j191))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetRecentStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetRecentStickers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetRecentStickers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x20
	}
	if m.Attached {
		i--
		if m.Attached {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSaveRecentSticker) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSaveRecentSticker) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSaveRecentSticker) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Unsave != nil {
		{
			size, err := m.Unsave.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Attached {
		i--
		if m.Attached {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesClearRecentStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesClearRecentStickers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesClearRecentStickers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Attached {
		i--
		if m.Attached {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetArchivedStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetArchivedStickers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetArchivedStickers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x28
	}
	if m.OffsetId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
		i--
		dAtA[i] = 0x20
	}
	if m.Masks {
		i--
		if m.Masks {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetMaskStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetMaskStickers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetMaskStickers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetAttachedStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetAttachedStickers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetAttachedStickers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Media != nil {
		{
			size, err := m.Media.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSetGameScore) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetGameScore) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSetGameScore) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Score != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Score))
		i--
		dAtA[i] = 0x40
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.Id != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x30
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Force {
		i--
		if m.Force {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.EditMessage {
		i--
		if m.EditMessage {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSetInlineGameScore) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetInlineGameScore) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSetInlineGameScore) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Score != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Score))
		i--
		dAtA[i] = 0x38
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Force {
		i--
		if m.Force {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.EditMessage {
		i--
		if m.EditMessage {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetGameHighScores) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetGameHighScores) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetGameHighScores) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Id != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetInlineGameHighScores) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetInlineGameHighScores) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetInlineGameHighScores) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetCommonChats) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetCommonChats) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetCommonChats) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x28
	}
	if m.MaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
		i--
		dAtA[i] = 0x20
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetAllChats) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetAllChats) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetAllChats) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ExceptIds) > 0 {
		dAtA206 := make([]byte, len(m.ExceptIds)*10)
		var j205 int
		for _, num1 := range m.ExceptIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA206[j205] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j205++
			}
			dAtA206[j205] = uint8(num)
			j205++
		}
		i -= j205
		copy(dAtA[i:], dAtA206[:j205])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j205))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetWebPage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetWebPage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetWebPage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesToggleDialogPin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesToggleDialogPin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesToggleDialogPin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Pinned {
		i--
		if m.Pinned {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReorderPinnedDialogs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReorderPinnedDialogs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReorderPinnedDialogs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Order) > 0 {
		for iNdEx := len(m.Order) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Order[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.FolderId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FolderId))
		i--
		dAtA[i] = 0x20
	}
	if m.Force {
		i--
		if m.Force {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetPinnedDialogs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetPinnedDialogs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetPinnedDialogs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FolderId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FolderId))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSetBotShippingResults) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetBotShippingResults) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSetBotShippingResults) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ShippingOptions) > 0 {
		for iNdEx := len(m.ShippingOptions) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ShippingOptions[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.Error != nil {
		{
			size, err := m.Error.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.QueryId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.QueryId))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSetBotPrecheckoutResults) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetBotPrecheckoutResults) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSetBotPrecheckoutResults) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Error != nil {
		{
			size, err := m.Error.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.QueryId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.QueryId))
		i--
		dAtA[i] = 0x20
	}
	if m.Success {
		i--
		if m.Success {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesUploadMedia) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesUploadMedia) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesUploadMedia) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Media != nil {
		{
			size, err := m.Media.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSendScreenshotNotification) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendScreenshotNotification) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSendScreenshotNotification) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RandomId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
		i--
		dAtA[i] = 0x28
	}
	if m.ReplyToMsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ReplyToMsgId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetFavedStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetFavedStickers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetFavedStickers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesFaveSticker) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesFaveSticker) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesFaveSticker) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Unfave != nil {
		{
			size, err := m.Unfave.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetUnreadMentions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetUnreadMentions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetUnreadMentions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MinId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MinId))
		i--
		dAtA[i] = 0x40
	}
	if m.MaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
		i--
		dAtA[i] = 0x38
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x30
	}
	if m.AddOffset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.AddOffset))
		i--
		dAtA[i] = 0x28
	}
	if m.OffsetId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReadMentions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReadMentions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReadMentions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetRecentLocations) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetRecentLocations) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetRecentLocations) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x28
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSendMultiMedia) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendMultiMedia) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSendMultiMedia) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SendAs != nil {
		{
			size, err := m.SendAs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	if m.ScheduleDate != nil {
		{
			size, err := m.ScheduleDate.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if len(m.MultiMedia) > 0 {
		for iNdEx := len(m.MultiMedia) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MultiMedia[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x4a
		}
	}
	if m.ReplyToMsgId != nil {
		{
			size, err := m.ReplyToMsgId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.Noforwards {
		i--
		if m.Noforwards {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.ClearDraft {
		i--
		if m.ClearDraft {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.Background {
		i--
		if m.Background {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Silent {
		i--
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesUploadEncryptedFile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesUploadEncryptedFile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesUploadEncryptedFile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.File != nil {
		{
			size, err := m.File.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSearchStickerSets) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSearchStickerSets) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSearchStickerSets) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Q) > 0 {
		i -= len(m.Q)
		copy(dAtA[i:], m.Q)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Q)))
		i--
		dAtA[i] = 0x22
	}
	if m.ExcludeFeatured {
		i--
		if m.ExcludeFeatured {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetSplitRanges) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetSplitRanges) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetSplitRanges) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesMarkDialogUnread) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesMarkDialogUnread) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesMarkDialogUnread) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Unread {
		i--
		if m.Unread {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetDialogUnreadMarks) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetDialogUnreadMarks) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetDialogUnreadMarks) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesClearAllDrafts) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesClearAllDrafts) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesClearAllDrafts) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesUpdatePinnedMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesUpdatePinnedMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesUpdatePinnedMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x38
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.PmOneside {
		i--
		if m.PmOneside {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.Unpin {
		i--
		if m.Unpin {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Silent {
		i--
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSendVote) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendVote) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSendVote) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Options) > 0 {
		for iNdEx := len(m.Options) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Options[iNdEx])
			copy(dAtA[i:], m.Options[iNdEx])
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Options[iNdEx])))
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetPollResults) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetPollResults) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetPollResults) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetOnlines) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetOnlines) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetOnlines) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesEditChatAbout) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesEditChatAbout) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesEditChatAbout) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.About) > 0 {
		i -= len(m.About)
		copy(dAtA[i:], m.About)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.About)))
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesEditChatDefaultBannedRights) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesEditChatDefaultBannedRights) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesEditChatDefaultBannedRights) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.BannedRights != nil {
		{
			size, err := m.BannedRights.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetEmojiKeywords) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetEmojiKeywords) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetEmojiKeywords) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LangCode) > 0 {
		i -= len(m.LangCode)
		copy(dAtA[i:], m.LangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetEmojiKeywordsDifference) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetEmojiKeywordsDifference) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetEmojiKeywordsDifference) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FromVersion != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FromVersion))
		i--
		dAtA[i] = 0x20
	}
	if len(m.LangCode) > 0 {
		i -= len(m.LangCode)
		copy(dAtA[i:], m.LangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetEmojiKeywordsLanguages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetEmojiKeywordsLanguages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetEmojiKeywordsLanguages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LangCodes) > 0 {
		for iNdEx := len(m.LangCodes) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.LangCodes[iNdEx])
			copy(dAtA[i:], m.LangCodes[iNdEx])
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCodes[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetEmojiURL) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetEmojiURL) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetEmojiURL) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LangCode) > 0 {
		i -= len(m.LangCode)
		copy(dAtA[i:], m.LangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetSearchCounters) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetSearchCounters) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetSearchCounters) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Filters) > 0 {
		for iNdEx := len(m.Filters) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Filters[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesRequestUrlAuth) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesRequestUrlAuth) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesRequestUrlAuth) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Url != nil {
		{
			size, err := m.Url.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.ButtonId != nil {
		{
			size, err := m.ButtonId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.MsgId != nil {
		{
			size, err := m.MsgId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesAcceptUrlAuth) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesAcceptUrlAuth) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesAcceptUrlAuth) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Url != nil {
		{
			size, err := m.Url.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.ButtonId != nil {
		{
			size, err := m.ButtonId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.MsgId != nil {
		{
			size, err := m.MsgId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.WriteAllowed {
		i--
		if m.WriteAllowed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesHidePeerSettingsBar) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesHidePeerSettingsBar) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesHidePeerSettingsBar) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetScheduledHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetScheduledHistory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetScheduledHistory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetScheduledMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetScheduledMessages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetScheduledMessages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		dAtA244 := make([]byte, len(m.Id)*10)
		var j243 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA244[j243] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j243++
			}
			dAtA244[j243] = uint8(num)
			j243++
		}
		i -= j243
		copy(dAtA[i:], dAtA244[:j243])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j243))
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSendScheduledMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendScheduledMessages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSendScheduledMessages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		dAtA247 := make([]byte, len(m.Id)*10)
		var j246 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA247[j246] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j246++
			}
			dAtA247[j246] = uint8(num)
			j246++
		}
		i -= j246
		copy(dAtA[i:], dAtA247[:j246])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j246))
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesDeleteScheduledMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesDeleteScheduledMessages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesDeleteScheduledMessages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		dAtA250 := make([]byte, len(m.Id)*10)
		var j249 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA250[j249] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j249++
			}
			dAtA250[j249] = uint8(num)
			j249++
		}
		i -= j249
		copy(dAtA[i:], dAtA250[:j249])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j249))
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetPollVotes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetPollVotes) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetPollVotes) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x38
	}
	if m.Offset != nil {
		{
			size, err := m.Offset.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.Option) > 0 {
		i -= len(m.Option)
		copy(dAtA[i:], m.Option)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Option)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Id != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesToggleStickerSets) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesToggleStickerSets) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesToggleStickerSets) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Stickersets) > 0 {
		for iNdEx := len(m.Stickersets) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Stickersets[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if m.Unarchive {
		i--
		if m.Unarchive {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.Archive {
		i--
		if m.Archive {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Uninstall {
		i--
		if m.Uninstall {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetDialogFilters) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetDialogFilters) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetDialogFilters) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetSuggestedDialogFilters) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetSuggestedDialogFilters) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetSuggestedDialogFilters) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesUpdateDialogFilter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesUpdateDialogFilter) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesUpdateDialogFilter) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Filter != nil {
		{
			size, err := m.Filter.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Id != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesUpdateDialogFiltersOrder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesUpdateDialogFiltersOrder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesUpdateDialogFiltersOrder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Order) > 0 {
		dAtA256 := make([]byte, len(m.Order)*10)
		var j255 int
		for _, num1 := range m.Order {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA256[j255] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j255++
			}
			dAtA256[j255] = uint8(num)
			j255++
		}
		i -= j255
		copy(dAtA[i:], dAtA256[:j255])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j255))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetOldFeaturedStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetOldFeaturedStickers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetOldFeaturedStickers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x28
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x20
	}
	if m.Offset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetReplies) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetReplies) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetReplies) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x58
	}
	if m.MinId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MinId))
		i--
		dAtA[i] = 0x50
	}
	if m.MaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
		i--
		dAtA[i] = 0x48
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x40
	}
	if m.AddOffset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.AddOffset))
		i--
		dAtA[i] = 0x38
	}
	if m.OffsetDate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetDate))
		i--
		dAtA[i] = 0x30
	}
	if m.OffsetId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
		i--
		dAtA[i] = 0x28
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetDiscussionMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetDiscussionMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetDiscussionMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReadDiscussion) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReadDiscussion) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReadDiscussion) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ReadMaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ReadMaxId))
		i--
		dAtA[i] = 0x28
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesUnpinAllMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesUnpinAllMessages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesUnpinAllMessages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesDeleteChat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesDeleteChat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesDeleteChat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesDeletePhoneCallHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesDeletePhoneCallHistory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesDeletePhoneCallHistory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Revoke {
		i--
		if m.Revoke {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesCheckHistoryImport) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesCheckHistoryImport) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesCheckHistoryImport) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ImportHead) > 0 {
		i -= len(m.ImportHead)
		copy(dAtA[i:], m.ImportHead)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ImportHead)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesInitHistoryImport) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesInitHistoryImport) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesInitHistoryImport) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MediaCount != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MediaCount))
		i--
		dAtA[i] = 0x28
	}
	if m.File != nil {
		{
			size, err := m.File.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesUploadImportedMedia) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesUploadImportedMedia) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesUploadImportedMedia) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Media != nil {
		{
			size, err := m.Media.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.FileName) > 0 {
		i -= len(m.FileName)
		copy(dAtA[i:], m.FileName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.FileName)))
		i--
		dAtA[i] = 0x2a
	}
	if m.ImportId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ImportId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesStartHistoryImport) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesStartHistoryImport) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesStartHistoryImport) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ImportId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ImportId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetExportedChatInvites) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetExportedChatInvites) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetExportedChatInvites) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x40
	}
	if m.OffsetLink != nil {
		{
			size, err := m.OffsetLink.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.OffsetDate != nil {
		{
			size, err := m.OffsetDate.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.AdminId != nil {
		{
			size, err := m.AdminId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Revoked {
		i--
		if m.Revoked {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetExportedChatInvite) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetExportedChatInvite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetExportedChatInvite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Link) > 0 {
		i -= len(m.Link)
		copy(dAtA[i:], m.Link)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Link)))
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesEditExportedChatInvite) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesEditExportedChatInvite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesEditExportedChatInvite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Title != nil {
		{
			size, err := m.Title.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.RequestNeeded != nil {
		{
			size, err := m.RequestNeeded.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.UsageLimit != nil {
		{
			size, err := m.UsageLimit.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.ExpireDate != nil {
		{
			size, err := m.ExpireDate.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.Link) > 0 {
		i -= len(m.Link)
		copy(dAtA[i:], m.Link)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Link)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Revoked {
		i--
		if m.Revoked {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesDeleteRevokedExportedChatInvites) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesDeleteRevokedExportedChatInvites) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesDeleteRevokedExportedChatInvites) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.AdminId != nil {
		{
			size, err := m.AdminId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesDeleteExportedChatInvite) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesDeleteExportedChatInvite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesDeleteExportedChatInvite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Link) > 0 {
		i -= len(m.Link)
		copy(dAtA[i:], m.Link)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Link)))
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetAdminsWithInvites) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetAdminsWithInvites) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetAdminsWithInvites) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetChatInviteImporters) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetChatInviteImporters) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetChatInviteImporters) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Link_STRING) > 0 {
		i -= len(m.Link_STRING)
		copy(dAtA[i:], m.Link_STRING)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Link_STRING)))
		i--
		dAtA[i] = 0x52
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x48
	}
	if m.OffsetUser != nil {
		{
			size, err := m.OffsetUser.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.OffsetDate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetDate))
		i--
		dAtA[i] = 0x38
	}
	if m.Q != nil {
		{
			size, err := m.Q.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Link_FLAGSTRING != nil {
		{
			size, err := m.Link_FLAGSTRING.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Requested {
		i--
		if m.Requested {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSetHistoryTTL) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetHistoryTTL) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSetHistoryTTL) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Period != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Period))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesCheckHistoryImportPeer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesCheckHistoryImportPeer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesCheckHistoryImportPeer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSetChatTheme) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetChatTheme) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSetChatTheme) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Emoticon) > 0 {
		i -= len(m.Emoticon)
		copy(dAtA[i:], m.Emoticon)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Emoticon)))
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetMessageReadParticipants) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetMessageReadParticipants) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetMessageReadParticipants) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetSearchResultsCalendar) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetSearchResultsCalendar) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetSearchResultsCalendar) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.OffsetDate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetDate))
		i--
		dAtA[i] = 0x30
	}
	if m.OffsetId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
		i--
		dAtA[i] = 0x28
	}
	if m.Filter != nil {
		{
			size, err := m.Filter.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetSearchResultsPositions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetSearchResultsPositions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetSearchResultsPositions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x30
	}
	if m.OffsetId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
		i--
		dAtA[i] = 0x28
	}
	if m.Filter != nil {
		{
			size, err := m.Filter.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesHideChatJoinRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesHideChatJoinRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesHideChatJoinRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Approved {
		i--
		if m.Approved {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesHideAllChatJoinRequests) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesHideAllChatJoinRequests) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesHideAllChatJoinRequests) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Link != nil {
		{
			size, err := m.Link.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Approved {
		i--
		if m.Approved {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesToggleNoForwards) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesToggleNoForwards) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesToggleNoForwards) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Enabled != nil {
		{
			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSaveDefaultSendAs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSaveDefaultSendAs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSaveDefaultSendAs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SendAs != nil {
		{
			size, err := m.SendAs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSendReaction) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendReaction) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSendReaction) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Reaction != nil {
		{
			size, err := m.Reaction.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x28
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Big {
		i--
		if m.Big {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetMessagesReactions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetMessagesReactions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetMessagesReactions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		dAtA303 := make([]byte, len(m.Id)*10)
		var j302 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA303[j302] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j302++
			}
			dAtA303[j302] = uint8(num)
			j302++
		}
		i -= j302
		copy(dAtA[i:], dAtA303[:j302])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j302))
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetMessageReactionsList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetMessageReactionsList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetMessageReactionsList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x38
	}
	if m.Offset != nil {
		{
			size, err := m.Offset.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Reaction != nil {
		{
			size, err := m.Reaction.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Id != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSetChatAvailableReactions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetChatAvailableReactions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSetChatAvailableReactions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AvailableReactions) > 0 {
		for iNdEx := len(m.AvailableReactions) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.AvailableReactions[iNdEx])
			copy(dAtA[i:], m.AvailableReactions[iNdEx])
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.AvailableReactions[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetAvailableReactions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetAvailableReactions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetAvailableReactions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSetDefaultReaction) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetDefaultReaction) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSetDefaultReaction) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Reaction) > 0 {
		i -= len(m.Reaction)
		copy(dAtA[i:], m.Reaction)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Reaction)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesTranslateText) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesTranslateText) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesTranslateText) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ToLang) > 0 {
		i -= len(m.ToLang)
		copy(dAtA[i:], m.ToLang)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ToLang)))
		i--
		dAtA[i] = 0x3a
	}
	if m.FromLang != nil {
		{
			size, err := m.FromLang.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Text != nil {
		{
			size, err := m.Text.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.MsgId != nil {
		{
			size, err := m.MsgId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetUnreadReactions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetUnreadReactions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetUnreadReactions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MinId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MinId))
		i--
		dAtA[i] = 0x40
	}
	if m.MaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
		i--
		dAtA[i] = 0x38
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x30
	}
	if m.AddOffset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.AddOffset))
		i--
		dAtA[i] = 0x28
	}
	if m.OffsetId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReadReactions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReadReactions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReadReactions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSearchSentMedia) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSearchSentMedia) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSearchSentMedia) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x28
	}
	if m.Filter != nil {
		{
			size, err := m.Filter.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Q) > 0 {
		i -= len(m.Q)
		copy(dAtA[i:], m.Q)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Q)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUpdatesGetState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUpdatesGetState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUpdatesGetState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUpdatesGetDifference) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUpdatesGetDifference) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUpdatesGetDifference) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Qts != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Qts))
		i--
		dAtA[i] = 0x30
	}
	if m.Date != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Date))
		i--
		dAtA[i] = 0x28
	}
	if m.PtsTotalLimit != nil {
		{
			size, err := m.PtsTotalLimit.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Pts != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Pts))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUpdatesGetChannelDifference) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUpdatesGetChannelDifference) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUpdatesGetChannelDifference) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x38
	}
	if m.Pts != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Pts))
		i--
		dAtA[i] = 0x30
	}
	if m.Filter != nil {
		{
			size, err := m.Filter.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Force {
		i--
		if m.Force {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhotosUpdateProfilePhoto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhotosUpdateProfilePhoto) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhotosUpdateProfilePhoto) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhotosUploadProfilePhoto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhotosUploadProfilePhoto) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhotosUploadProfilePhoto) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.VideoStartTs != nil {
		{
			size, err := m.VideoStartTs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Video != nil {
		{
			size, err := m.Video.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.File != nil {
		{
			size, err := m.File.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhotosDeletePhotos) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhotosDeletePhotos) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhotosDeletePhotos) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		for iNdEx := len(m.Id) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Id[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhotosGetUserPhotos) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhotosGetUserPhotos) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhotosGetUserPhotos) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x30
	}
	if m.MaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
		i--
		dAtA[i] = 0x28
	}
	if m.Offset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x20
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUploadSaveFilePart) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUploadSaveFilePart) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUploadSaveFilePart) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Bytes) > 0 {
		i -= len(m.Bytes)
		copy(dAtA[i:], m.Bytes)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Bytes)))
		i--
		dAtA[i] = 0x2a
	}
	if m.FilePart != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FilePart))
		i--
		dAtA[i] = 0x20
	}
	if m.FileId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FileId))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUploadGetFile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUploadGetFile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUploadGetFile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x38
	}
	if m.Offset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x30
	}
	if m.Location != nil {
		{
			size, err := m.Location.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.CdnSupported {
		i--
		if m.CdnSupported {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Precise {
		i--
		if m.Precise {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUploadSaveBigFilePart) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUploadSaveBigFilePart) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUploadSaveBigFilePart) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Bytes) > 0 {
		i -= len(m.Bytes)
		copy(dAtA[i:], m.Bytes)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Bytes)))
		i--
		dAtA[i] = 0x32
	}
	if m.FileTotalParts != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FileTotalParts))
		i--
		dAtA[i] = 0x28
	}
	if m.FilePart != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FilePart))
		i--
		dAtA[i] = 0x20
	}
	if m.FileId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FileId))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUploadGetWebFile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUploadGetWebFile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUploadGetWebFile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x28
	}
	if m.Offset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x20
	}
	if m.Location != nil {
		{
			size, err := m.Location.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUploadGetCdnFile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUploadGetCdnFile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUploadGetCdnFile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x28
	}
	if m.Offset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x20
	}
	if len(m.FileToken) > 0 {
		i -= len(m.FileToken)
		copy(dAtA[i:], m.FileToken)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.FileToken)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUploadReuploadCdnFile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUploadReuploadCdnFile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUploadReuploadCdnFile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RequestToken) > 0 {
		i -= len(m.RequestToken)
		copy(dAtA[i:], m.RequestToken)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.RequestToken)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.FileToken) > 0 {
		i -= len(m.FileToken)
		copy(dAtA[i:], m.FileToken)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.FileToken)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUploadGetCdnFileHashes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUploadGetCdnFileHashes) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUploadGetCdnFileHashes) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Offset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x20
	}
	if len(m.FileToken) > 0 {
		i -= len(m.FileToken)
		copy(dAtA[i:], m.FileToken)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.FileToken)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUploadGetFileHashes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUploadGetFileHashes) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUploadGetFileHashes) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Offset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x20
	}
	if m.Location != nil {
		{
			size, err := m.Location.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetNearestDc) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetNearestDc) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetNearestDc) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetAppUpdate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetAppUpdate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetAppUpdate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Source) > 0 {
		i -= len(m.Source)
		copy(dAtA[i:], m.Source)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Source)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetInviteText) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetInviteText) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetInviteText) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetSupport) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetSupport) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetSupport) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetAppChangelog) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetAppChangelog) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetAppChangelog) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PrevAppVersion) > 0 {
		i -= len(m.PrevAppVersion)
		copy(dAtA[i:], m.PrevAppVersion)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PrevAppVersion)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpSetBotUpdatesStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpSetBotUpdatesStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpSetBotUpdatesStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x22
	}
	if m.PendingUpdatesCount != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.PendingUpdatesCount))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetCdnConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetCdnConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetCdnConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetRecentMeUrls) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetRecentMeUrls) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetRecentMeUrls) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Referer) > 0 {
		i -= len(m.Referer)
		copy(dAtA[i:], m.Referer)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Referer)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetTermsOfServiceUpdate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetTermsOfServiceUpdate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetTermsOfServiceUpdate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpAcceptTermsOfService) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpAcceptTermsOfService) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpAcceptTermsOfService) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetDeepLinkInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetDeepLinkInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetDeepLinkInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Path) > 0 {
		i -= len(m.Path)
		copy(dAtA[i:], m.Path)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Path)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetAppConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetAppConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetAppConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpSaveAppLog) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpSaveAppLog) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpSaveAppLog) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Events) > 0 {
		for iNdEx := len(m.Events) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Events[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetPassportConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetPassportConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetPassportConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetSupportName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetSupportName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetSupportName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetUserInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetUserInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetUserInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpEditUserInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpEditUserInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpEditUserInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Entities) > 0 {
		for iNdEx := len(m.Entities) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entities[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x22
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetPromoData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetPromoData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetPromoData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpHidePromoData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpHidePromoData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpHidePromoData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpDismissSuggestion) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpDismissSuggestion) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpDismissSuggestion) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Suggestion) > 0 {
		i -= len(m.Suggestion)
		copy(dAtA[i:], m.Suggestion)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Suggestion)))
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetCountriesList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetCountriesList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetCountriesList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x20
	}
	if len(m.LangCode) > 0 {
		i -= len(m.LangCode)
		copy(dAtA[i:], m.LangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsReadHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsReadHistory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsReadHistory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
		i--
		dAtA[i] = 0x20
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsDeleteMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsDeleteMessages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsDeleteMessages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		dAtA334 := make([]byte, len(m.Id)*10)
		var j333 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA334[j333] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j333++
			}
			dAtA334[j333] = uint8(num)
			j333++
		}
		i -= j333
		copy(dAtA[i:], dAtA334[:j333])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j333))
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsReportSpam) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsReportSpam) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsReportSpam) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.Id) > 0 {
		dAtA338 := make([]byte, len(m.Id)*10)
		var j337 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA338[j337] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j337++
			}
			dAtA338[j337] = uint8(num)
			j337++
		}
		i -= j337
		copy(dAtA[i:], dAtA338[:j337])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j337))
		i--
		dAtA[i] = 0x2a
	}
	if m.Participant != nil {
		{
			size, err := m.Participant.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsGetMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetMessages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsGetMessages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		for iNdEx := len(m.Id) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Id[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsGetParticipants) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetParticipants) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsGetParticipants) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x38
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x30
	}
	if m.Offset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x28
	}
	if m.Filter != nil {
		{
			size, err := m.Filter.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsGetParticipant) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetParticipant) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsGetParticipant) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Participant != nil {
		{
			size, err := m.Participant.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsGetChannels) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetChannels) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsGetChannels) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		for iNdEx := len(m.Id) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Id[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsGetFullChannel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetFullChannel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsGetFullChannel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsCreateChannel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsCreateChannel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsCreateChannel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Address != nil {
		{
			size, err := m.Address.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.GeoPoint != nil {
		{
			size, err := m.GeoPoint.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if len(m.About) > 0 {
		i -= len(m.About)
		copy(dAtA[i:], m.About)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.About)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x32
	}
	if m.ForImport {
		i--
		if m.ForImport {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.Megagroup {
		i--
		if m.Megagroup {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Broadcast {
		i--
		if m.Broadcast {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsEditAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsEditAdmin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsEditAdmin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Rank) > 0 {
		i -= len(m.Rank)
		copy(dAtA[i:], m.Rank)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Rank)))
		i--
		dAtA[i] = 0x32
	}
	if m.AdminRights != nil {
		{
			size, err := m.AdminRights.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsEditTitle) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsEditTitle) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsEditTitle) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsEditPhoto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsEditPhoto) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsEditPhoto) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Photo != nil {
		{
			size, err := m.Photo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsCheckUsername) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsCheckUsername) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsCheckUsername) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsUpdateUsername) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsUpdateUsername) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsUpdateUsername) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsJoinChannel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsJoinChannel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsJoinChannel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsLeaveChannel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsLeaveChannel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsLeaveChannel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsInviteToChannel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsInviteToChannel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsInviteToChannel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Users) > 0 {
		for iNdEx := len(m.Users) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Users[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsDeleteChannel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsDeleteChannel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsDeleteChannel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsExportMessageLink) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsExportMessageLink) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsExportMessageLink) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x30
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Thread {
		i--
		if m.Thread {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Grouped {
		i--
		if m.Grouped {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsToggleSignatures) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsToggleSignatures) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsToggleSignatures) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Enabled != nil {
		{
			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsGetAdminedPublicChannels) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetAdminedPublicChannels) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsGetAdminedPublicChannels) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CheckLimit {
		i--
		if m.CheckLimit {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.ByLocation {
		i--
		if m.ByLocation {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsEditBanned) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsEditBanned) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsEditBanned) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.BannedRights != nil {
		{
			size, err := m.BannedRights.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Participant != nil {
		{
			size, err := m.Participant.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsGetAdminLog) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetAdminLog) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsGetAdminLog) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x48
	}
	if m.MinId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MinId))
		i--
		dAtA[i] = 0x40
	}
	if m.MaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
		i--
		dAtA[i] = 0x38
	}
	if len(m.Admins) > 0 {
		for iNdEx := len(m.Admins) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Admins[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if m.EventsFilter != nil {
		{
			size, err := m.EventsFilter.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Q) > 0 {
		i -= len(m.Q)
		copy(dAtA[i:], m.Q)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Q)))
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsSetStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsSetStickers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsSetStickers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Stickerset != nil {
		{
			size, err := m.Stickerset.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsReadMessageContents) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsReadMessageContents) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsReadMessageContents) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		dAtA372 := make([]byte, len(m.Id)*10)
		var j371 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA372[j371] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j371++
			}
			dAtA372[j371] = uint8(num)
			j371++
		}
		i -= j371
		copy(dAtA[i:], dAtA372[:j371])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j371))
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsDeleteHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsDeleteHistory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsDeleteHistory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
		i--
		dAtA[i] = 0x20
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsTogglePreHistoryHidden) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsTogglePreHistoryHidden) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsTogglePreHistoryHidden) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Enabled != nil {
		{
			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsGetLeftChannels) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetLeftChannels) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsGetLeftChannels) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Offset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsGetGroupsForDiscussion) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetGroupsForDiscussion) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsGetGroupsForDiscussion) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsSetDiscussionGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsSetDiscussionGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsSetDiscussionGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Group != nil {
		{
			size, err := m.Group.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Broadcast != nil {
		{
			size, err := m.Broadcast.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsEditCreator) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsEditCreator) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsEditCreator) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Password != nil {
		{
			size, err := m.Password.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsEditLocation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsEditLocation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsEditLocation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x2a
	}
	if m.GeoPoint != nil {
		{
			size, err := m.GeoPoint.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsToggleSlowMode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsToggleSlowMode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsToggleSlowMode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Seconds != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Seconds))
		i--
		dAtA[i] = 0x20
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsGetInactiveChannels) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetInactiveChannels) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsGetInactiveChannels) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsConvertToGigagroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsConvertToGigagroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsConvertToGigagroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsViewSponsoredMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsViewSponsoredMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsViewSponsoredMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RandomId) > 0 {
		i -= len(m.RandomId)
		copy(dAtA[i:], m.RandomId)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.RandomId)))
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsGetSponsoredMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetSponsoredMessages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsGetSponsoredMessages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsGetSendAs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetSendAs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsGetSendAs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsDeleteParticipantHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsDeleteParticipantHistory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsDeleteParticipantHistory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Participant != nil {
		{
			size, err := m.Participant.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLBotsSendCustomRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBotsSendCustomRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLBotsSendCustomRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Params != nil {
		{
			size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.CustomMethod) > 0 {
		i -= len(m.CustomMethod)
		copy(dAtA[i:], m.CustomMethod)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.CustomMethod)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLBotsAnswerWebhookJSONQuery) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBotsAnswerWebhookJSONQuery) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLBotsAnswerWebhookJSONQuery) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Data != nil {
		{
			size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.QueryId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.QueryId))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLBotsSetBotCommands) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBotsSetBotCommands) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLBotsSetBotCommands) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Commands) > 0 {
		for iNdEx := len(m.Commands) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Commands[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.LangCode) > 0 {
		i -= len(m.LangCode)
		copy(dAtA[i:], m.LangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i--
		dAtA[i] = 0x22
	}
	if m.Scope != nil {
		{
			size, err := m.Scope.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLBotsResetBotCommands) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBotsResetBotCommands) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLBotsResetBotCommands) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LangCode) > 0 {
		i -= len(m.LangCode)
		copy(dAtA[i:], m.LangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i--
		dAtA[i] = 0x22
	}
	if m.Scope != nil {
		{
			size, err := m.Scope.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLBotsGetBotCommands) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBotsGetBotCommands) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLBotsGetBotCommands) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LangCode) > 0 {
		i -= len(m.LangCode)
		copy(dAtA[i:], m.LangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i--
		dAtA[i] = 0x22
	}
	if m.Scope != nil {
		{
			size, err := m.Scope.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPaymentsGetPaymentForm) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPaymentsGetPaymentForm) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPaymentsGetPaymentForm) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ThemeParams != nil {
		{
			size, err := m.ThemeParams.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPaymentsGetPaymentReceipt) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPaymentsGetPaymentReceipt) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPaymentsGetPaymentReceipt) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPaymentsValidateRequestedInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPaymentsValidateRequestedInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPaymentsValidateRequestedInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x28
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Save {
		i--
		if m.Save {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPaymentsSendPaymentForm) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPaymentsSendPaymentForm) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPaymentsSendPaymentForm) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TipAmount != nil {
		{
			size, err := m.TipAmount.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.Credentials != nil {
		{
			size, err := m.Credentials.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.ShippingOptionId != nil {
		{
			size, err := m.ShippingOptionId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.RequestedInfoId != nil {
		{
			size, err := m.RequestedInfoId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x28
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.FormId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FormId))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPaymentsGetSavedInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPaymentsGetSavedInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPaymentsGetSavedInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPaymentsClearSavedInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPaymentsClearSavedInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPaymentsClearSavedInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Info {
		i--
		if m.Info {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Credentials {
		i--
		if m.Credentials {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPaymentsGetBankCardData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPaymentsGetBankCardData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPaymentsGetBankCardData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Number) > 0 {
		i -= len(m.Number)
		copy(dAtA[i:], m.Number)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Number)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLStickersCreateStickerSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStickersCreateStickerSet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLStickersCreateStickerSet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Software != nil {
		{
			size, err := m.Software.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	if len(m.Stickers) > 0 {
		for iNdEx := len(m.Stickers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Stickers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x52
		}
	}
	if m.Thumb != nil {
		{
			size, err := m.Thumb.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if len(m.ShortName) > 0 {
		i -= len(m.ShortName)
		copy(dAtA[i:], m.ShortName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ShortName)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x3a
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Videos {
		i--
		if m.Videos {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.Animated {
		i--
		if m.Animated {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Masks {
		i--
		if m.Masks {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLStickersRemoveStickerFromSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStickersRemoveStickerFromSet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLStickersRemoveStickerFromSet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Sticker != nil {
		{
			size, err := m.Sticker.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLStickersChangeStickerPosition) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStickersChangeStickerPosition) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLStickersChangeStickerPosition) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Position != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Position))
		i--
		dAtA[i] = 0x20
	}
	if m.Sticker != nil {
		{
			size, err := m.Sticker.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLStickersAddStickerToSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStickersAddStickerToSet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLStickersAddStickerToSet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Sticker != nil {
		{
			size, err := m.Sticker.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Stickerset != nil {
		{
			size, err := m.Stickerset.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLStickersSetStickerSetThumb) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStickersSetStickerSetThumb) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLStickersSetStickerSetThumb) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Thumb != nil {
		{
			size, err := m.Thumb.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Stickerset != nil {
		{
			size, err := m.Stickerset.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLStickersCheckShortName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStickersCheckShortName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLStickersCheckShortName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ShortName) > 0 {
		i -= len(m.ShortName)
		copy(dAtA[i:], m.ShortName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ShortName)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLStickersSuggestShortName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStickersSuggestShortName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLStickersSuggestShortName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneGetCallConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneGetCallConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneGetCallConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneRequestCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneRequestCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneRequestCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Protocol != nil {
		{
			size, err := m.Protocol.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if len(m.GAHash) > 0 {
		i -= len(m.GAHash)
		copy(dAtA[i:], m.GAHash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.GAHash)))
		i--
		dAtA[i] = 0x32
	}
	if m.RandomId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
		i--
		dAtA[i] = 0x28
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Video {
		i--
		if m.Video {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneAcceptCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneAcceptCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneAcceptCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Protocol != nil {
		{
			size, err := m.Protocol.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.GB) > 0 {
		i -= len(m.GB)
		copy(dAtA[i:], m.GB)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.GB)))
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneConfirmCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneConfirmCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneConfirmCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Protocol != nil {
		{
			size, err := m.Protocol.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.KeyFingerprint != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.KeyFingerprint))
		i--
		dAtA[i] = 0x28
	}
	if len(m.GA) > 0 {
		i -= len(m.GA)
		copy(dAtA[i:], m.GA)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.GA)))
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneReceivedCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneReceivedCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneReceivedCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneDiscardCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneDiscardCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneDiscardCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ConnectionId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ConnectionId))
		i--
		dAtA[i] = 0x38
	}
	if m.Reason != nil {
		{
			size, err := m.Reason.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Duration != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Duration))
		i--
		dAtA[i] = 0x28
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Video {
		i--
		if m.Video {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneSetCallRating) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneSetCallRating) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneSetCallRating) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Comment) > 0 {
		i -= len(m.Comment)
		copy(dAtA[i:], m.Comment)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Comment)))
		i--
		dAtA[i] = 0x32
	}
	if m.Rating != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Rating))
		i--
		dAtA[i] = 0x28
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.UserInitiative {
		i--
		if m.UserInitiative {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneSaveCallDebug) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneSaveCallDebug) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneSaveCallDebug) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Debug != nil {
		{
			size, err := m.Debug.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneSendSignalingData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneSendSignalingData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneSendSignalingData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Data) > 0 {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneCreateGroupCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneCreateGroupCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneCreateGroupCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ScheduleDate != nil {
		{
			size, err := m.ScheduleDate.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.Title != nil {
		{
			size, err := m.Title.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.RandomId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
		i--
		dAtA[i] = 0x28
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.RtmpStream {
		i--
		if m.RtmpStream {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneJoinGroupCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneJoinGroupCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneJoinGroupCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Params != nil {
		{
			size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.InviteHash != nil {
		{
			size, err := m.InviteHash.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.JoinAs != nil {
		{
			size, err := m.JoinAs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.VideoStopped {
		i--
		if m.VideoStopped {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Muted {
		i--
		if m.Muted {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneLeaveGroupCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneLeaveGroupCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneLeaveGroupCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Source != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Source))
		i--
		dAtA[i] = 0x20
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneInviteToGroupCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneInviteToGroupCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneInviteToGroupCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Users) > 0 {
		for iNdEx := len(m.Users) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Users[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneDiscardGroupCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneDiscardGroupCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneDiscardGroupCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneToggleGroupCallSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneToggleGroupCallSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneToggleGroupCallSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.JoinMuted != nil {
		{
			size, err := m.JoinMuted.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.ResetInviteHash {
		i--
		if m.ResetInviteHash {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneGetGroupCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneGetGroupCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneGetGroupCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x20
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneGetGroupParticipants) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneGetGroupParticipants) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneGetGroupParticipants) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x38
	}
	if len(m.Offset) > 0 {
		i -= len(m.Offset)
		copy(dAtA[i:], m.Offset)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Offset)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Sources) > 0 {
		dAtA442 := make([]byte, len(m.Sources)*10)
		var j441 int
		for _, num1 := range m.Sources {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA442[j441] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j441++
			}
			dAtA442[j441] = uint8(num)
			j441++
		}
		i -= j441
		copy(dAtA[i:], dAtA442[:j441])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j441))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Ids) > 0 {
		for iNdEx := len(m.Ids) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Ids[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneCheckGroupCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneCheckGroupCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneCheckGroupCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Sources) > 0 {
		dAtA445 := make([]byte, len(m.Sources)*10)
		var j444 int
		for _, num1 := range m.Sources {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA445[j444] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j444++
			}
			dAtA445[j444] = uint8(num)
			j444++
		}
		i -= j444
		copy(dAtA[i:], dAtA445[:j444])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j444))
		i--
		dAtA[i] = 0x22
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneToggleGroupCallRecord) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneToggleGroupCallRecord) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneToggleGroupCallRecord) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.VideoPortrait != nil {
		{
			size, err := m.VideoPortrait.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.Title != nil {
		{
			size, err := m.Title.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Video {
		i--
		if m.Video {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Start {
		i--
		if m.Start {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneEditGroupCallParticipant) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneEditGroupCallParticipant) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneEditGroupCallParticipant) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PresentationPaused != nil {
		{
			size, err := m.PresentationPaused.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if m.VideoPaused != nil {
		{
			size, err := m.VideoPaused.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.VideoStopped != nil {
		{
			size, err := m.VideoStopped.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.RaiseHand != nil {
		{
			size, err := m.RaiseHand.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.Volume != nil {
		{
			size, err := m.Volume.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Muted != nil {
		{
			size, err := m.Muted.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Participant != nil {
		{
			size, err := m.Participant.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneEditGroupCallTitle) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneEditGroupCallTitle) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneEditGroupCallTitle) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x22
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneGetGroupCallJoinAs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneGetGroupCallJoinAs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneGetGroupCallJoinAs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneExportGroupCallInvite) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneExportGroupCallInvite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneExportGroupCallInvite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.CanSelfUnmute {
		i--
		if m.CanSelfUnmute {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneToggleGroupCallStartSubscription) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneToggleGroupCallStartSubscription) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneToggleGroupCallStartSubscription) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Subscribed != nil {
		{
			size, err := m.Subscribed.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneStartScheduledGroupCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneStartScheduledGroupCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneStartScheduledGroupCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneSaveDefaultGroupCallJoinAs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneSaveDefaultGroupCallJoinAs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneSaveDefaultGroupCallJoinAs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.JoinAs != nil {
		{
			size, err := m.JoinAs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneJoinGroupCallPresentation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneJoinGroupCallPresentation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneJoinGroupCallPresentation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Params != nil {
		{
			size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneLeaveGroupCallPresentation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneLeaveGroupCallPresentation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneLeaveGroupCallPresentation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneGetGroupCallStreamChannels) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneGetGroupCallStreamChannels) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneGetGroupCallStreamChannels) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneGetGroupCallStreamRtmpUrl) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneGetGroupCallStreamRtmpUrl) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneGetGroupCallStreamRtmpUrl) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Revoke != nil {
		{
			size, err := m.Revoke.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLLangpackGetLangPack) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLLangpackGetLangPack) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLLangpackGetLangPack) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LangCode) > 0 {
		i -= len(m.LangCode)
		copy(dAtA[i:], m.LangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.LangPack) > 0 {
		i -= len(m.LangPack)
		copy(dAtA[i:], m.LangPack)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangPack)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLLangpackGetStrings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLLangpackGetStrings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLLangpackGetStrings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Keys) > 0 {
		for iNdEx := len(m.Keys) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Keys[iNdEx])
			copy(dAtA[i:], m.Keys[iNdEx])
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Keys[iNdEx])))
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.LangCode) > 0 {
		i -= len(m.LangCode)
		copy(dAtA[i:], m.LangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.LangPack) > 0 {
		i -= len(m.LangPack)
		copy(dAtA[i:], m.LangPack)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangPack)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLLangpackGetDifference) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLLangpackGetDifference) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLLangpackGetDifference) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FromVersion != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FromVersion))
		i--
		dAtA[i] = 0x28
	}
	if len(m.LangCode) > 0 {
		i -= len(m.LangCode)
		copy(dAtA[i:], m.LangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.LangPack) > 0 {
		i -= len(m.LangPack)
		copy(dAtA[i:], m.LangPack)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangPack)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLLangpackGetLanguages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLLangpackGetLanguages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLLangpackGetLanguages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LangPack) > 0 {
		i -= len(m.LangPack)
		copy(dAtA[i:], m.LangPack)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangPack)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLLangpackGetLanguage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLLangpackGetLanguage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLLangpackGetLanguage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LangCode) > 0 {
		i -= len(m.LangCode)
		copy(dAtA[i:], m.LangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.LangPack) > 0 {
		i -= len(m.LangPack)
		copy(dAtA[i:], m.LangPack)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangPack)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLFoldersEditPeerFolders) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLFoldersEditPeerFolders) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLFoldersEditPeerFolders) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.FolderPeers) > 0 {
		for iNdEx := len(m.FolderPeers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FolderPeers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLFoldersDeleteFolder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLFoldersDeleteFolder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLFoldersDeleteFolder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FolderId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FolderId))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLStatsGetBroadcastStats) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStatsGetBroadcastStats) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLStatsGetBroadcastStats) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Dark {
		i--
		if m.Dark {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLStatsLoadAsyncGraph) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStatsLoadAsyncGraph) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLStatsLoadAsyncGraph) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.X != nil {
		{
			size, err := m.X.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Token) > 0 {
		i -= len(m.Token)
		copy(dAtA[i:], m.Token)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Token)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLStatsGetMegagroupStats) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStatsGetMegagroupStats) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLStatsGetMegagroupStats) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Dark {
		i--
		if m.Dark {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLStatsGetMessagePublicForwards) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStatsGetMessagePublicForwards) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLStatsGetMessagePublicForwards) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x40
	}
	if m.OffsetId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
		i--
		dAtA[i] = 0x38
	}
	if m.OffsetPeer != nil {
		{
			size, err := m.OffsetPeer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.OffsetRate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetRate))
		i--
		dAtA[i] = 0x28
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x20
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLStatsGetMessageStats) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStatsGetMessageStats) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLStatsGetMessageStats) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x28
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Dark {
		i--
		if m.Dark {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthLogOut5717DA40) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthLogOut5717DA40) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthLogOut5717DA40) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUsersGetFullUserCA30A5B1) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUsersGetFullUserCA30A5B1) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUsersGetFullUserCA30A5B1) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetPeerSettings3672E09C) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetPeerSettings3672E09C) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetPeerSettings3672E09C) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsDeleteUserHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsDeleteUserHistory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsDeleteUserHistory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetChatThemesD6D71D7B) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetChatThemesD6D71D7B) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetChatThemesD6D71D7B) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetStatsURL) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetStatsURL) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetStatsURL) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Params) > 0 {
		i -= len(m.Params)
		copy(dAtA[i:], m.Params)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Params)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Dark {
		i--
		if m.Dark {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpTest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpTest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpTest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPredefinedCreatePredefinedUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPredefinedCreatePredefinedUser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPredefinedCreatePredefinedUser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Verified {
		i--
		if m.Verified {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if len(m.Code) > 0 {
		i -= len(m.Code)
		copy(dAtA[i:], m.Code)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Code)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Username != nil {
		{
			size, err := m.Username.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.LastName != nil {
		{
			size, err := m.LastName.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.FirstName != nil {
		{
			size, err := m.FirstName.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Phone) > 0 {
		i -= len(m.Phone)
		copy(dAtA[i:], m.Phone)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Phone)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPredefinedUpdatePredefinedUsername) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPredefinedUpdatePredefinedUsername) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPredefinedUpdatePredefinedUsername) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Phone) > 0 {
		i -= len(m.Phone)
		copy(dAtA[i:], m.Phone)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Phone)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPredefinedUpdatePredefinedProfile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPredefinedUpdatePredefinedProfile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPredefinedUpdatePredefinedProfile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.About != nil {
		{
			size, err := m.About.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.LastName != nil {
		{
			size, err := m.LastName.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.FirstName != nil {
		{
			size, err := m.FirstName.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Phone) > 0 {
		i -= len(m.Phone)
		copy(dAtA[i:], m.Phone)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Phone)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPredefinedUpdatePredefinedVerified) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPredefinedUpdatePredefinedVerified) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPredefinedUpdatePredefinedVerified) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Verified {
		i--
		if m.Verified {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if len(m.Phone) > 0 {
		i -= len(m.Phone)
		copy(dAtA[i:], m.Phone)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Phone)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPredefinedUpdatePredefinedCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPredefinedUpdatePredefinedCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPredefinedUpdatePredefinedCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Code) > 0 {
		i -= len(m.Code)
		copy(dAtA[i:], m.Code)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Code)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Phone) > 0 {
		i -= len(m.Phone)
		copy(dAtA[i:], m.Phone)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Phone)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPredefinedGetPredefinedUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPredefinedGetPredefinedUser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPredefinedGetPredefinedUser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Phone) > 0 {
		i -= len(m.Phone)
		copy(dAtA[i:], m.Phone)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Phone)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPredefinedGetPredefinedUsers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPredefinedGetPredefinedUsers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPredefinedGetPredefinedUsers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUsersGetMe) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUsersGetMe) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUsersGetMe) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Token) > 0 {
		i -= len(m.Token)
		copy(dAtA[i:], m.Token)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Token)))
		i--
		dAtA[i] = 0x22
	}
	if m.Id != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountUpdateVerified) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdateVerified) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountUpdateVerified) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Verified {
		i--
		if m.Verified {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Id != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x18
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthToggleBan) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthToggleBan) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthToggleBan) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Reason != nil {
		{
			size, err := m.Reason.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Expires != nil {
		{
			size, err := m.Expires.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Predefined {
		i--
		if m.Predefined {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if len(m.Phone) > 0 {
		i -= len(m.Phone)
		copy(dAtA[i:], m.Phone)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Phone)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLBizInvokeBizDataRaw) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBizInvokeBizDataRaw) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLBizInvokeBizDataRaw) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.BizData != nil {
		{
			size, err := m.BizData.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Constructor != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Constructor))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Vector_SecureValue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_SecureValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_SecureValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_WallPaper) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_WallPaper) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_WallPaper) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_User) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_User) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_User) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_Int) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_Int) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_Int) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		dAtA493 := make([]byte, len(m.Datas)*10)
		var j492 int
		for _, num1 := range m.Datas {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA493[j492] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j492++
			}
			dAtA493[j492] = uint8(num)
			j492++
		}
		i -= j492
		copy(dAtA[i:], dAtA493[:j492])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j492))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Vector_ContactStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_ContactStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_ContactStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_SavedContact) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_SavedContact) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_SavedContact) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_ReceivedNotifyMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_ReceivedNotifyMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_ReceivedNotifyMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_Long) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_Long) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_Long) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		dAtA495 := make([]byte, len(m.Datas)*10)
		var j494 int
		for _, num1 := range m.Datas {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA495[j494] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j494++
			}
			dAtA495[j494] = uint8(num)
			j494++
		}
		i -= j494
		copy(dAtA[i:], dAtA495[:j494])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j494))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Vector_StickerSetCovered) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_StickerSetCovered) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_StickerSetCovered) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_MessageRange) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_MessageRange) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_MessageRange) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_DialogPeer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_DialogPeer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_DialogPeer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_EmojiLanguage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_EmojiLanguage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_EmojiLanguage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_Messages_SearchCounter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_Messages_SearchCounter) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_Messages_SearchCounter) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_DialogFilter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_DialogFilter) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_DialogFilter) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_DialogFilterSuggested) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_DialogFilterSuggested) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_DialogFilterSuggested) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_FileHash) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_FileHash) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_FileHash) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_BotCommand) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_BotCommand) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_BotCommand) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_LangPackString) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_LangPackString) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_LangPackString) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_LangPackLanguage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_LangPackLanguage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_LangPackLanguage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_PredefinedUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_PredefinedUser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_PredefinedUser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintSchemaTlSyncService(dAtA []byte, offset int, v uint64) int {
	offset -= sovSchemaTlSyncService(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *TLInvokeAfterMsg) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	l = len(m.Query)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLInvokeAfterMsgs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.MsgIds) > 0 {
		l = 0
		for _, e := range m.MsgIds {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	l = len(m.Query)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLInitConnection) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ApiId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ApiId))
	}
	l = len(m.DeviceModel)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.SystemVersion)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.AppVersion)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.SystemLangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangPack)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Proxy != nil {
		l = m.Proxy.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Params != nil {
		l = m.Params.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Query)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLInvokeWithLayer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Layer != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Layer))
	}
	l = len(m.Query)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLInvokeWithoutUpdates) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Query)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLInvokeWithMessagesRange) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Range != nil {
		l = m.Range.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Query)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLInvokeWithTakeout) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.TakeoutId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.TakeoutId))
	}
	l = len(m.Query)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthSendCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ApiId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ApiId))
	}
	l = len(m.ApiHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthSignUp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCodeHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.FirstName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LastName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthSignIn) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCodeHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthLogOut3E72BA19) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthResetAuthorizations) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthExportAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.DcId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.DcId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthImportAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	l = len(m.Bytes)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthBindTempAuthKey) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.PermAuthKeyId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.PermAuthKeyId))
	}
	if m.Nonce != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Nonce))
	}
	if m.ExpiresAt != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ExpiresAt))
	}
	l = len(m.EncryptedMessage)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthImportBotAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.ApiId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ApiId))
	}
	l = len(m.ApiHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.BotAuthToken)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthCheckPassword) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Password != nil {
		l = m.Password.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthRequestPasswordRecovery) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthRecoverPassword) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Code)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.NewSettings != nil {
		l = m.NewSettings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthResendCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCodeHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthCancelCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCodeHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthDropTempAuthKeys) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.ExceptAuthKeys) > 0 {
		l = 0
		for _, e := range m.ExceptAuthKeys {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthExportLoginToken) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ApiId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ApiId))
	}
	l = len(m.ApiHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.ExceptIds) > 0 {
		l = 0
		for _, e := range m.ExceptIds {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthImportLoginToken) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthAcceptLoginToken) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthCheckRecoveryPassword) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Code)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountRegisterDevice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.NoMuted {
		n += 2
	}
	if m.TokenType != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.TokenType))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.AppSandbox != nil {
		l = m.AppSandbox.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Secret)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.OtherUids) > 0 {
		l = 0
		for _, e := range m.OtherUids {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUnregisterDevice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.TokenType != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.TokenType))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.OtherUids) > 0 {
		l = 0
		for _, e := range m.OtherUids {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdateNotifySettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetNotifySettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountResetNotifySettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdateProfile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.FirstName != nil {
		l = m.FirstName.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.LastName != nil {
		l = m.LastName.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.About != nil {
		l = m.About.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdateStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Offline != nil {
		l = m.Offline.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetWallPapers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountReportPeer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Reason != nil {
		l = m.Reason.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountCheckUsername) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdateUsername) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetPrivacy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Key != nil {
		l = m.Key.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSetPrivacy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Key != nil {
		l = m.Key.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Rules) > 0 {
		for _, e := range m.Rules {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountDeleteAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Reason)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetAccountTTL) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSetAccountTTL) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Ttl != nil {
		l = m.Ttl.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSendChangePhoneCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountChangePhone) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCodeHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdateDeviceLocked) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Period != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Period))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetAuthorizations) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountResetAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetPassword) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetPasswordSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Password != nil {
		l = m.Password.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdatePasswordSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Password != nil {
		l = m.Password.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.NewSettings != nil {
		l = m.NewSettings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSendConfirmPhoneCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Hash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountConfirmPhone) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.PhoneCodeHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetTmpPassword) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Password != nil {
		l = m.Password.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Period != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Period))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetWebAuthorizations) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountResetWebAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountResetWebAuthorizations) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetAllSecureValues) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetSecureValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Types) > 0 {
		for _, e := range m.Types {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSaveSecureValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Value != nil {
		l = m.Value.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.SecureSecretId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.SecureSecretId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountDeleteSecureValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Types) > 0 {
		for _, e := range m.Types {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetAuthorizationForm) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.BotId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.BotId))
	}
	l = len(m.Scope)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PublicKey)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountAcceptAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.BotId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.BotId))
	}
	l = len(m.Scope)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PublicKey)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.ValueHashes) > 0 {
		for _, e := range m.ValueHashes {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.Credentials != nil {
		l = m.Credentials.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSendVerifyPhoneCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountVerifyPhone) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCodeHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSendVerifyEmailCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountVerifyEmail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Code)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountInitTakeoutSession) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Contacts {
		n += 2
	}
	if m.MessageUsers {
		n += 2
	}
	if m.MessageChats {
		n += 2
	}
	if m.MessageMegagroups {
		n += 2
	}
	if m.MessageChannels {
		n += 2
	}
	if m.Files {
		n += 2
	}
	if m.FileMaxSize != nil {
		l = m.FileMaxSize.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountFinishTakeoutSession) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Success {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountConfirmPasswordEmail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Code)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountResendPasswordEmail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountCancelPasswordEmail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetContactSignUpNotification) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSetContactSignUpNotification) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Silent != nil {
		l = m.Silent.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetNotifyExceptions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.CompareSound {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetWallPaper) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Wallpaper != nil {
		l = m.Wallpaper.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUploadWallPaper) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.File != nil {
		l = m.File.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.MimeType)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSaveWallPaper) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Wallpaper != nil {
		l = m.Wallpaper.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Unsave != nil {
		l = m.Unsave.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountInstallWallPaper) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Wallpaper != nil {
		l = m.Wallpaper.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountResetWallPapers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetAutoDownloadSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSaveAutoDownloadSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Low {
		n += 2
	}
	if m.High {
		n += 2
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUploadTheme) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.File != nil {
		l = m.File.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Thumb != nil {
		l = m.Thumb.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.FileName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.MimeType)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountCreateTheme) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Slug)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Document != nil {
		l = m.Document.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Settings_FLAGVECTORINPUTTHEMESETTINGS) > 0 {
		for _, e := range m.Settings_FLAGVECTORINPUTTHEMESETTINGS {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.Settings_FLAGINPUTTHEMESETTINGS != nil {
		l = m.Settings_FLAGINPUTTHEMESETTINGS.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdateTheme) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Format)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Theme != nil {
		l = m.Theme.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Slug != nil {
		l = m.Slug.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Title != nil {
		l = m.Title.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Document != nil {
		l = m.Document.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Settings_FLAGVECTORINPUTTHEMESETTINGS) > 0 {
		for _, e := range m.Settings_FLAGVECTORINPUTTHEMESETTINGS {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.Settings_FLAGINPUTTHEMESETTINGS != nil {
		l = m.Settings_FLAGINPUTTHEMESETTINGS.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSaveTheme) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Theme != nil {
		l = m.Theme.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Unsave != nil {
		l = m.Unsave.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountInstallTheme) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Dark {
		n += 2
	}
	if m.Theme != nil {
		l = m.Theme.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Format != nil {
		l = m.Format.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.BaseTheme != nil {
		l = m.BaseTheme.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetTheme) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Format)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Theme != nil {
		l = m.Theme.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.DocumentId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.DocumentId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetThemes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Format)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSetContentSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.SensitiveEnabled {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetContentSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetMultiWallPapers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Wallpapers) > 0 {
		for _, e := range m.Wallpapers {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetGlobalPrivacySettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSetGlobalPrivacySettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountReportProfilePhoto) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.PhotoId != nil {
		l = m.PhotoId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Reason != nil {
		l = m.Reason.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountResetPassword) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountDeclinePasswordReset) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetChatThemesD638DE89) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSetAuthorizationTTL) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.AuthorizationTtlDays != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.AuthorizationTtlDays))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountChangeAuthorizationSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.EncryptedRequestsDisabled != nil {
		l = m.EncryptedRequestsDisabled.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.CallRequestsDisabled != nil {
		l = m.CallRequestsDisabled.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUsersGetUsers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Id) > 0 {
		for _, e := range m.Id {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUsersGetFullUserB60F5918) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUsersSetSecureValueErrors) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Errors) > 0 {
		for _, e := range m.Errors {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsGetContactIDs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsGetStatuses) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsGetContacts) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsImportContacts) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Contacts) > 0 {
		for _, e := range m.Contacts {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsDeleteContacts) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Id) > 0 {
		for _, e := range m.Id {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsDeleteByPhones) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Phones) > 0 {
		for _, s := range m.Phones {
			l = len(s)
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsBlock) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsUnblock) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsGetBlocked) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsSearch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Q)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsResolveUsername) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsGetTopPeers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Correspondents {
		n += 2
	}
	if m.BotsPm {
		n += 2
	}
	if m.BotsInline {
		n += 2
	}
	if m.PhoneCalls {
		n += 2
	}
	if m.ForwardUsers {
		n += 2
	}
	if m.ForwardChats {
		n += 2
	}
	if m.Groups {
		n += 2
	}
	if m.Channels {
		n += 2
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsResetTopPeerRating) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Category != nil {
		l = m.Category.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsResetSaved) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsGetSaved) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsToggleTopPeers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Enabled != nil {
		l = m.Enabled.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsAddContact) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.AddPhonePrivacyException {
		n += 2
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.FirstName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LastName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsAcceptContact) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsGetLocated) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Background {
		n += 2
	}
	if m.GeoPoint != nil {
		l = m.GeoPoint.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.SelfExpires != nil {
		l = m.SelfExpires.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsBlockFromReplies) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.DeleteMessage {
		n += 2
	}
	if m.DeleteHistory {
		n += 2
	}
	if m.ReportSpam {
		n += 2
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsResolvePhone) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Id_VECTORINPUTMESSAGE) > 0 {
		for _, e := range m.Id_VECTORINPUTMESSAGE {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if len(m.Id_VECTORINT32) > 0 {
		l = 0
		for _, e := range m.Id_VECTORINT32 {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetDialogs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ExcludePinned {
		n += 2
	}
	if m.FolderId != nil {
		l = m.FolderId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetDate))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.OffsetPeer != nil {
		l = m.OffsetPeer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.OffsetDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetDate))
	}
	if m.AddOffset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.AddOffset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.MinId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MinId))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSearch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Q)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.FromId != nil {
		l = m.FromId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.TopMsgId != nil {
		l = m.TopMsgId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Filter != nil {
		l = m.Filter.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MinDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MinDate))
	}
	if m.MaxDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxDate))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.AddOffset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.AddOffset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.MinId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MinId))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReadHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesDeleteHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.JustClear {
		n += 2
	}
	if m.Revoke {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.MinDate != nil {
		l = m.MinDate.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MaxDate != nil {
		l = m.MaxDate.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesDeleteMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Revoke {
		n += 2
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReceivedMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetTyping) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.TopMsgId != nil {
		l = m.TopMsgId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Action != nil {
		l = m.Action.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.NoWebpage {
		n += 2
	}
	if m.Silent {
		n += 2
	}
	if m.Background {
		n += 2
	}
	if m.ClearDraft {
		n += 2
	}
	if m.Noforwards {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ReplyToMsgId != nil {
		l = m.ReplyToMsgId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	if m.ReplyMarkup != nil {
		l = m.ReplyMarkup.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.ScheduleDate != nil {
		l = m.ScheduleDate.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.SendAs != nil {
		l = m.SendAs.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendMedia) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Silent {
		n += 2
	}
	if m.Background {
		n += 2
	}
	if m.ClearDraft {
		n += 2
	}
	if m.Noforwards {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ReplyToMsgId != nil {
		l = m.ReplyToMsgId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Media != nil {
		l = m.Media.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	if m.ReplyMarkup != nil {
		l = m.ReplyMarkup.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.ScheduleDate != nil {
		l = m.ScheduleDate.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.SendAs != nil {
		l = m.SendAs.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesForwardMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Silent {
		n += 2
	}
	if m.Background {
		n += 2
	}
	if m.WithMyScore {
		n += 2
	}
	if m.DropAuthor {
		n += 2
	}
	if m.DropMediaCaptions {
		n += 2
	}
	if m.Noforwards {
		n += 2
	}
	if m.FromPeer != nil {
		l = m.FromPeer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if len(m.RandomId) > 0 {
		l = 0
		for _, e := range m.RandomId {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.ToPeer != nil {
		l = m.ToPeer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ScheduleDate != nil {
		l = m.ScheduleDate.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.SendAs != nil {
		l = m.SendAs.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReportSpam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetPeerSettingsEFD9A6A2) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReport) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.Reason != nil {
		l = m.Reason.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetChats) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetFullChat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesEditChatTitle) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesEditChatPhoto) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	if m.Photo != nil {
		l = m.Photo.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesAddChatUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.FwdLimit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FwdLimit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesDeleteChatUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.RevokeHistory {
		n += 2
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesCreateChat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Users) > 0 {
		for _, e := range m.Users {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetDhConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Version != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Version))
	}
	if m.RandomLength != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomLength))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesRequestEncryption) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	l = len(m.GA)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesAcceptEncryption) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.GB)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.KeyFingerprint != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.KeyFingerprint))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesDiscardEncryption) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.DeleteHistory {
		n += 2
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetEncryptedTyping) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Typing != nil {
		l = m.Typing.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReadEncryptedHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MaxDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxDate))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendEncrypted) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Silent {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendEncryptedFile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Silent {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.File != nil {
		l = m.File.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendEncryptedService) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReceivedQueue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.MaxQts != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxQts))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReportEncryptedSpam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReadMessageContents) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Emoticon)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetAllStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetWebPagePreview) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesExportChatInvite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.LegacyRevokePermanent {
		n += 2
	}
	if m.RequestNeeded {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ExpireDate != nil {
		l = m.ExpireDate.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UsageLimit != nil {
		l = m.UsageLimit.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Title != nil {
		l = m.Title.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesCheckChatInvite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Hash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesImportChatInvite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Hash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetStickerSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Stickerset != nil {
		l = m.Stickerset.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesInstallStickerSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Stickerset != nil {
		l = m.Stickerset.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Archived != nil {
		l = m.Archived.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesUninstallStickerSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Stickerset != nil {
		l = m.Stickerset.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesStartBot) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Bot != nil {
		l = m.Bot.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	l = len(m.StartParam)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetMessagesViews) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.Increment != nil {
		l = m.Increment.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesEditChatAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.IsAdmin != nil {
		l = m.IsAdmin.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesMigrateChat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSearchGlobal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.FolderId != nil {
		l = m.FolderId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Q)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Filter != nil {
		l = m.Filter.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MinDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MinDate))
	}
	if m.MaxDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxDate))
	}
	if m.OffsetRate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetRate))
	}
	if m.OffsetPeer != nil {
		l = m.OffsetPeer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReorderStickerSets) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Masks {
		n += 2
	}
	if len(m.Order) > 0 {
		l = 0
		for _, e := range m.Order {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetDocumentByHash) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Sha256)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Size2 != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Size2))
	}
	l = len(m.MimeType)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetSavedGifs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSaveGif) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Unsave != nil {
		l = m.Unsave.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetInlineBotResults) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Bot != nil {
		l = m.Bot.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.GeoPoint != nil {
		l = m.GeoPoint.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Query)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Offset)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetInlineBotResults) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Gallery {
		n += 2
	}
	if m.Private {
		n += 2
	}
	if m.QueryId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.QueryId))
	}
	if len(m.Results) > 0 {
		for _, e := range m.Results {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.CacheTime != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.CacheTime))
	}
	if m.NextOffset != nil {
		l = m.NextOffset.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.SwitchPm != nil {
		l = m.SwitchPm.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendInlineBotResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Silent {
		n += 2
	}
	if m.Background {
		n += 2
	}
	if m.ClearDraft {
		n += 2
	}
	if m.HideVia {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ReplyToMsgId != nil {
		l = m.ReplyToMsgId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	if m.QueryId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.QueryId))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ScheduleDate != nil {
		l = m.ScheduleDate.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.SendAs != nil {
		l = m.SendAs.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetMessageEditData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesEditMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.NoWebpage {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.Message != nil {
		l = m.Message.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Media != nil {
		l = m.Media.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ReplyMarkup != nil {
		l = m.ReplyMarkup.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.ScheduleDate != nil {
		l = m.ScheduleDate.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesEditInlineBotMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.NoWebpage {
		n += 2
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Message != nil {
		l = m.Message.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Media != nil {
		l = m.Media.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ReplyMarkup != nil {
		l = m.ReplyMarkup.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetBotCallbackAnswer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Game {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Password != nil {
		l = m.Password.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetBotCallbackAnswer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Alert {
		n += 2
	}
	if m.QueryId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.QueryId))
	}
	if m.Message != nil {
		l = m.Message.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Url != nil {
		l = m.Url.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.CacheTime != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.CacheTime))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetPeerDialogs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Peers) > 0 {
		for _, e := range m.Peers {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSaveDraft) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.NoWebpage {
		n += 2
	}
	if m.ReplyToMsgId != nil {
		l = m.ReplyToMsgId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetAllDrafts) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetFeaturedStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReadFeaturedStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetRecentStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Attached {
		n += 2
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSaveRecentSticker) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Attached {
		n += 2
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Unsave != nil {
		l = m.Unsave.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesClearRecentStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Attached {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetArchivedStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Masks {
		n += 2
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetMaskStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetAttachedStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Media != nil {
		l = m.Media.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetGameScore) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.EditMessage {
		n += 2
	}
	if m.Force {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Score != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Score))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetInlineGameScore) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.EditMessage {
		n += 2
	}
	if m.Force {
		n += 2
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Score != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Score))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetGameHighScores) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetInlineGameHighScores) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetCommonChats) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetAllChats) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.ExceptIds) > 0 {
		l = 0
		for _, e := range m.ExceptIds {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetWebPage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesToggleDialogPin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Pinned {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReorderPinnedDialogs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Force {
		n += 2
	}
	if m.FolderId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FolderId))
	}
	if len(m.Order) > 0 {
		for _, e := range m.Order {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetPinnedDialogs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.FolderId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FolderId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetBotShippingResults) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.QueryId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.QueryId))
	}
	if m.Error != nil {
		l = m.Error.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.ShippingOptions) > 0 {
		for _, e := range m.ShippingOptions {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetBotPrecheckoutResults) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Success {
		n += 2
	}
	if m.QueryId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.QueryId))
	}
	if m.Error != nil {
		l = m.Error.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesUploadMedia) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Media != nil {
		l = m.Media.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendScreenshotNotification) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ReplyToMsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ReplyToMsgId))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetFavedStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesFaveSticker) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Unfave != nil {
		l = m.Unfave.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetUnreadMentions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.AddOffset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.AddOffset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.MinId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MinId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReadMentions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetRecentLocations) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendMultiMedia) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Silent {
		n += 2
	}
	if m.Background {
		n += 2
	}
	if m.ClearDraft {
		n += 2
	}
	if m.Noforwards {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ReplyToMsgId != nil {
		l = m.ReplyToMsgId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.MultiMedia) > 0 {
		for _, e := range m.MultiMedia {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.ScheduleDate != nil {
		l = m.ScheduleDate.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.SendAs != nil {
		l = m.SendAs.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesUploadEncryptedFile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.File != nil {
		l = m.File.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSearchStickerSets) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ExcludeFeatured {
		n += 2
	}
	l = len(m.Q)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetSplitRanges) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesMarkDialogUnread) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Unread {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetDialogUnreadMarks) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesClearAllDrafts) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesUpdatePinnedMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Silent {
		n += 2
	}
	if m.Unpin {
		n += 2
	}
	if m.PmOneside {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendVote) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if len(m.Options) > 0 {
		for _, b := range m.Options {
			l = len(b)
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetPollResults) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetOnlines) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesEditChatAbout) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.About)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesEditChatDefaultBannedRights) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.BannedRights != nil {
		l = m.BannedRights.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetEmojiKeywords) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetEmojiKeywordsDifference) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.FromVersion != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FromVersion))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetEmojiKeywordsLanguages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.LangCodes) > 0 {
		for _, s := range m.LangCodes {
			l = len(s)
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetEmojiURL) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetSearchCounters) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Filters) > 0 {
		for _, e := range m.Filters {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesRequestUrlAuth) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != nil {
		l = m.MsgId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ButtonId != nil {
		l = m.ButtonId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Url != nil {
		l = m.Url.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesAcceptUrlAuth) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.WriteAllowed {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != nil {
		l = m.MsgId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ButtonId != nil {
		l = m.ButtonId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Url != nil {
		l = m.Url.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesHidePeerSettingsBar) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetScheduledHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetScheduledMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendScheduledMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesDeleteScheduledMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetPollVotes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	l = len(m.Option)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != nil {
		l = m.Offset.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesToggleStickerSets) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Uninstall {
		n += 2
	}
	if m.Archive {
		n += 2
	}
	if m.Unarchive {
		n += 2
	}
	if len(m.Stickersets) > 0 {
		for _, e := range m.Stickersets {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetDialogFilters) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetSuggestedDialogFilters) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesUpdateDialogFilter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.Filter != nil {
		l = m.Filter.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesUpdateDialogFiltersOrder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Order) > 0 {
		l = 0
		for _, e := range m.Order {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetOldFeaturedStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetReplies) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.OffsetDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetDate))
	}
	if m.AddOffset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.AddOffset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.MinId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MinId))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetDiscussionMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReadDiscussion) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.ReadMaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ReadMaxId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesUnpinAllMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesDeleteChat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesDeletePhoneCallHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Revoke {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesCheckHistoryImport) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.ImportHead)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesInitHistoryImport) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.File != nil {
		l = m.File.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MediaCount != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MediaCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesUploadImportedMedia) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ImportId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ImportId))
	}
	l = len(m.FileName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Media != nil {
		l = m.Media.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesStartHistoryImport) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ImportId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ImportId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetExportedChatInvites) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Revoked {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.AdminId != nil {
		l = m.AdminId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetDate != nil {
		l = m.OffsetDate.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetLink != nil {
		l = m.OffsetLink.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetExportedChatInvite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Link)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesEditExportedChatInvite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Revoked {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Link)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ExpireDate != nil {
		l = m.ExpireDate.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UsageLimit != nil {
		l = m.UsageLimit.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RequestNeeded != nil {
		l = m.RequestNeeded.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Title != nil {
		l = m.Title.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesDeleteRevokedExportedChatInvites) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.AdminId != nil {
		l = m.AdminId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesDeleteExportedChatInvite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Link)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetAdminsWithInvites) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetChatInviteImporters) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Requested {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Link_FLAGSTRING != nil {
		l = m.Link_FLAGSTRING.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Q != nil {
		l = m.Q.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetDate))
	}
	if m.OffsetUser != nil {
		l = m.OffsetUser.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	l = len(m.Link_STRING)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetHistoryTTL) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Period != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Period))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesCheckHistoryImportPeer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetChatTheme) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Emoticon)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetMessageReadParticipants) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetSearchResultsCalendar) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Filter != nil {
		l = m.Filter.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.OffsetDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetDate))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetSearchResultsPositions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Filter != nil {
		l = m.Filter.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesHideChatJoinRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Approved {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesHideAllChatJoinRequests) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Approved {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Link != nil {
		l = m.Link.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesToggleNoForwards) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Enabled != nil {
		l = m.Enabled.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSaveDefaultSendAs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.SendAs != nil {
		l = m.SendAs.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendReaction) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Big {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.Reaction != nil {
		l = m.Reaction.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetMessagesReactions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetMessageReactionsList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.Reaction != nil {
		l = m.Reaction.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != nil {
		l = m.Offset.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetChatAvailableReactions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.AvailableReactions) > 0 {
		for _, s := range m.AvailableReactions {
			l = len(s)
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetAvailableReactions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetDefaultReaction) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Reaction)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesTranslateText) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != nil {
		l = m.MsgId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Text != nil {
		l = m.Text.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.FromLang != nil {
		l = m.FromLang.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.ToLang)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetUnreadReactions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.AddOffset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.AddOffset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.MinId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MinId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReadReactions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSearchSentMedia) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Q)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Filter != nil {
		l = m.Filter.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUpdatesGetState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUpdatesGetDifference) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Pts != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Pts))
	}
	if m.PtsTotalLimit != nil {
		l = m.PtsTotalLimit.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Date != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Date))
	}
	if m.Qts != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Qts))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUpdatesGetChannelDifference) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Force {
		n += 2
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Filter != nil {
		l = m.Filter.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Pts != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Pts))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhotosUpdateProfilePhoto) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhotosUploadProfilePhoto) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.File != nil {
		l = m.File.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Video != nil {
		l = m.Video.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.VideoStartTs != nil {
		l = m.VideoStartTs.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhotosDeletePhotos) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Id) > 0 {
		for _, e := range m.Id {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhotosGetUserPhotos) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUploadSaveFilePart) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.FileId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FileId))
	}
	if m.FilePart != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FilePart))
	}
	l = len(m.Bytes)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUploadGetFile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Precise {
		n += 2
	}
	if m.CdnSupported {
		n += 2
	}
	if m.Location != nil {
		l = m.Location.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUploadSaveBigFilePart) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.FileId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FileId))
	}
	if m.FilePart != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FilePart))
	}
	if m.FileTotalParts != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FileTotalParts))
	}
	l = len(m.Bytes)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUploadGetWebFile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Location != nil {
		l = m.Location.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUploadGetCdnFile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.FileToken)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUploadReuploadCdnFile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.FileToken)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.RequestToken)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUploadGetCdnFileHashes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.FileToken)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUploadGetFileHashes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Location != nil {
		l = m.Location.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetNearestDc) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetAppUpdate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Source)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetInviteText) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetSupport) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetAppChangelog) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.PrevAppVersion)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpSetBotUpdatesStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.PendingUpdatesCount != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.PendingUpdatesCount))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetCdnConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetRecentMeUrls) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Referer)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetTermsOfServiceUpdate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpAcceptTermsOfService) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetDeepLinkInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Path)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetAppConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpSaveAppLog) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Events) > 0 {
		for _, e := range m.Events {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetPassportConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetSupportName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetUserInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpEditUserInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetPromoData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpHidePromoData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpDismissSuggestion) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Suggestion)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetCountriesList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsReadHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsDeleteMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsReportSpam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Participant != nil {
		l = m.Participant.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		for _, e := range m.Id {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetParticipants) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Filter != nil {
		l = m.Filter.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetParticipant) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Participant != nil {
		l = m.Participant.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetChannels) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.Id) > 0 {
		for _, e := range m.Id {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetFullChannel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsCreateChannel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Broadcast {
		n += 2
	}
	if m.Megagroup {
		n += 2
	}
	if m.ForImport {
		n += 2
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.About)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.GeoPoint != nil {
		l = m.GeoPoint.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Address != nil {
		l = m.Address.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsEditAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.AdminRights != nil {
		l = m.AdminRights.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Rank)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsEditTitle) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsEditPhoto) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Photo != nil {
		l = m.Photo.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsCheckUsername) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsUpdateUsername) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsJoinChannel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsLeaveChannel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsInviteToChannel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Users) > 0 {
		for _, e := range m.Users {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsDeleteChannel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsExportMessageLink) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Grouped {
		n += 2
	}
	if m.Thread {
		n += 2
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsToggleSignatures) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Enabled != nil {
		l = m.Enabled.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetAdminedPublicChannels) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ByLocation {
		n += 2
	}
	if m.CheckLimit {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsEditBanned) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Participant != nil {
		l = m.Participant.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.BannedRights != nil {
		l = m.BannedRights.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetAdminLog) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Q)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.EventsFilter != nil {
		l = m.EventsFilter.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Admins) > 0 {
		for _, e := range m.Admins {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.MinId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MinId))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsSetStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Stickerset != nil {
		l = m.Stickerset.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsReadMessageContents) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsDeleteHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsTogglePreHistoryHidden) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Enabled != nil {
		l = m.Enabled.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetLeftChannels) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetGroupsForDiscussion) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsSetDiscussionGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Broadcast != nil {
		l = m.Broadcast.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Group != nil {
		l = m.Group.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsEditCreator) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Password != nil {
		l = m.Password.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsEditLocation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.GeoPoint != nil {
		l = m.GeoPoint.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsToggleSlowMode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Seconds != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Seconds))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetInactiveChannels) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsConvertToGigagroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsViewSponsoredMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.RandomId)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetSponsoredMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetSendAs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsDeleteParticipantHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Participant != nil {
		l = m.Participant.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBotsSendCustomRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.CustomMethod)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Params != nil {
		l = m.Params.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBotsAnswerWebhookJSONQuery) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.QueryId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.QueryId))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBotsSetBotCommands) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Scope != nil {
		l = m.Scope.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Commands) > 0 {
		for _, e := range m.Commands {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBotsResetBotCommands) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Scope != nil {
		l = m.Scope.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBotsGetBotCommands) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Scope != nil {
		l = m.Scope.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPaymentsGetPaymentForm) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.ThemeParams != nil {
		l = m.ThemeParams.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPaymentsGetPaymentReceipt) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPaymentsValidateRequestedInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Save {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPaymentsSendPaymentForm) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.FormId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FormId))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.RequestedInfoId != nil {
		l = m.RequestedInfoId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ShippingOptionId != nil {
		l = m.ShippingOptionId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Credentials != nil {
		l = m.Credentials.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.TipAmount != nil {
		l = m.TipAmount.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPaymentsGetSavedInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPaymentsClearSavedInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Credentials {
		n += 2
	}
	if m.Info {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPaymentsGetBankCardData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Number)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStickersCreateStickerSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Masks {
		n += 2
	}
	if m.Animated {
		n += 2
	}
	if m.Videos {
		n += 2
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.ShortName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Thumb != nil {
		l = m.Thumb.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Stickers) > 0 {
		for _, e := range m.Stickers {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.Software != nil {
		l = m.Software.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStickersRemoveStickerFromSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Sticker != nil {
		l = m.Sticker.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStickersChangeStickerPosition) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Sticker != nil {
		l = m.Sticker.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Position != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Position))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStickersAddStickerToSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Stickerset != nil {
		l = m.Stickerset.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Sticker != nil {
		l = m.Sticker.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStickersSetStickerSetThumb) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Stickerset != nil {
		l = m.Stickerset.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Thumb != nil {
		l = m.Thumb.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStickersCheckShortName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.ShortName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStickersSuggestShortName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneGetCallConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneRequestCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Video {
		n += 2
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	l = len(m.GAHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Protocol != nil {
		l = m.Protocol.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneAcceptCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.GB)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Protocol != nil {
		l = m.Protocol.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneConfirmCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.GA)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.KeyFingerprint != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.KeyFingerprint))
	}
	if m.Protocol != nil {
		l = m.Protocol.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneReceivedCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneDiscardCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Video {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Duration != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Duration))
	}
	if m.Reason != nil {
		l = m.Reason.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ConnectionId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ConnectionId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneSetCallRating) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.UserInitiative {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Rating != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Rating))
	}
	l = len(m.Comment)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneSaveCallDebug) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Debug != nil {
		l = m.Debug.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneSendSignalingData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneCreateGroupCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.RtmpStream {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	if m.Title != nil {
		l = m.Title.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ScheduleDate != nil {
		l = m.ScheduleDate.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneJoinGroupCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Muted {
		n += 2
	}
	if m.VideoStopped {
		n += 2
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.JoinAs != nil {
		l = m.JoinAs.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.InviteHash != nil {
		l = m.InviteHash.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Params != nil {
		l = m.Params.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneLeaveGroupCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Source != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Source))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneInviteToGroupCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Users) > 0 {
		for _, e := range m.Users {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneDiscardGroupCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneToggleGroupCallSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.ResetInviteHash {
		n += 2
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.JoinMuted != nil {
		l = m.JoinMuted.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneGetGroupCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneGetGroupParticipants) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Ids) > 0 {
		for _, e := range m.Ids {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if len(m.Sources) > 0 {
		l = 0
		for _, e := range m.Sources {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	l = len(m.Offset)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneCheckGroupCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Sources) > 0 {
		l = 0
		for _, e := range m.Sources {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneToggleGroupCallRecord) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Start {
		n += 2
	}
	if m.Video {
		n += 2
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Title != nil {
		l = m.Title.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.VideoPortrait != nil {
		l = m.VideoPortrait.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneEditGroupCallParticipant) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Participant != nil {
		l = m.Participant.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Muted != nil {
		l = m.Muted.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Volume != nil {
		l = m.Volume.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RaiseHand != nil {
		l = m.RaiseHand.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.VideoStopped != nil {
		l = m.VideoStopped.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.VideoPaused != nil {
		l = m.VideoPaused.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.PresentationPaused != nil {
		l = m.PresentationPaused.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneEditGroupCallTitle) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneGetGroupCallJoinAs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneExportGroupCallInvite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.CanSelfUnmute {
		n += 2
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneToggleGroupCallStartSubscription) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Subscribed != nil {
		l = m.Subscribed.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneStartScheduledGroupCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneSaveDefaultGroupCallJoinAs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.JoinAs != nil {
		l = m.JoinAs.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneJoinGroupCallPresentation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Params != nil {
		l = m.Params.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneLeaveGroupCallPresentation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneGetGroupCallStreamChannels) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneGetGroupCallStreamRtmpUrl) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Revoke != nil {
		l = m.Revoke.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLLangpackGetLangPack) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.LangPack)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLLangpackGetStrings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.LangPack)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Keys) > 0 {
		for _, s := range m.Keys {
			l = len(s)
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLLangpackGetDifference) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.LangPack)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.FromVersion != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FromVersion))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLLangpackGetLanguages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.LangPack)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLLangpackGetLanguage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.LangPack)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLFoldersEditPeerFolders) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if len(m.FolderPeers) > 0 {
		for _, e := range m.FolderPeers {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLFoldersDeleteFolder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.FolderId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FolderId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStatsGetBroadcastStats) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Dark {
		n += 2
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStatsLoadAsyncGraph) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.X != nil {
		l = m.X.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStatsGetMegagroupStats) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Dark {
		n += 2
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStatsGetMessagePublicForwards) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.OffsetRate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetRate))
	}
	if m.OffsetPeer != nil {
		l = m.OffsetPeer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStatsGetMessageStats) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Dark {
		n += 2
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthLogOut5717DA40) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUsersGetFullUserCA30A5B1) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetPeerSettings3672E09C) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsDeleteUserHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetChatThemesD6D71D7B) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetStatsURL) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Dark {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Params)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpTest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPredefinedCreatePredefinedUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.FirstName != nil {
		l = m.FirstName.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.LastName != nil {
		l = m.LastName.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Username != nil {
		l = m.Username.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Code)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Verified {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPredefinedUpdatePredefinedUsername) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPredefinedUpdatePredefinedProfile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.FirstName != nil {
		l = m.FirstName.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.LastName != nil {
		l = m.LastName.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.About != nil {
		l = m.About.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPredefinedUpdatePredefinedVerified) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Verified {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPredefinedUpdatePredefinedCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Code)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPredefinedGetPredefinedUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPredefinedGetPredefinedUsers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUsersGetMe) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdateVerified) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.Verified {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthToggleBan) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Predefined {
		n += 2
	}
	if m.Expires != nil {
		l = m.Expires.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Reason != nil {
		l = m.Reason.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBizInvokeBizDataRaw) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Constructor != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Constructor))
	}
	if m.BizData != nil {
		l = m.BizData.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_SecureValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_WallPaper) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_User) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_Int) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		l = 0
		for _, e := range m.Datas {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_ContactStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_SavedContact) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_ReceivedNotifyMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_Long) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		l = 0
		for _, e := range m.Datas {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_StickerSetCovered) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_MessageRange) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_DialogPeer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_EmojiLanguage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_Messages_SearchCounter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_DialogFilter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_DialogFilterSuggested) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_FileHash) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_BotCommand) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_LangPackString) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_LangPackLanguage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_PredefinedUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovSchemaTlSyncService(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSchemaTlSyncService(x uint64) (n int) {
	return sovSchemaTlSyncService(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *TLInvokeAfterMsg) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_invokeAfterMsg: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_invokeAfterMsg: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Query", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Query = append(m.Query[:0], dAtA[iNdEx:postIndex]...)
			if m.Query == nil {
				m.Query = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLInvokeAfterMsgs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_invokeAfterMsgs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_invokeAfterMsgs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.MsgIds = append(m.MsgIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.MsgIds) == 0 {
					m.MsgIds = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.MsgIds = append(m.MsgIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgIds", wireType)
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Query", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Query = append(m.Query[:0], dAtA[iNdEx:postIndex]...)
			if m.Query == nil {
				m.Query = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLInitConnection) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_initConnection: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_initConnection: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiId", wireType)
			}
			m.ApiId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ApiId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceModel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeviceModel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SystemVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemLangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SystemLangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangPack", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangPack = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proxy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Proxy == nil {
				m.Proxy = &InputClientProxy{}
			}
			if err := m.Proxy.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Params == nil {
				m.Params = &JSONValue{}
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Query", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Query = append(m.Query[:0], dAtA[iNdEx:postIndex]...)
			if m.Query == nil {
				m.Query = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLInvokeWithLayer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_invokeWithLayer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_invokeWithLayer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Layer", wireType)
			}
			m.Layer = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Layer |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Query", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Query = append(m.Query[:0], dAtA[iNdEx:postIndex]...)
			if m.Query == nil {
				m.Query = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLInvokeWithoutUpdates) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_invokeWithoutUpdates: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_invokeWithoutUpdates: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Query", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Query = append(m.Query[:0], dAtA[iNdEx:postIndex]...)
			if m.Query == nil {
				m.Query = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLInvokeWithMessagesRange) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_invokeWithMessagesRange: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_invokeWithMessagesRange: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Range", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Range == nil {
				m.Range = &MessageRange{}
			}
			if err := m.Range.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Query", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Query = append(m.Query[:0], dAtA[iNdEx:postIndex]...)
			if m.Query == nil {
				m.Query = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLInvokeWithTakeout) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_invokeWithTakeout: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_invokeWithTakeout: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TakeoutId", wireType)
			}
			m.TakeoutId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TakeoutId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Query", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Query = append(m.Query[:0], dAtA[iNdEx:postIndex]...)
			if m.Query == nil {
				m.Query = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthSendCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_sendCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_sendCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiId", wireType)
			}
			m.ApiId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ApiId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApiHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &CodeSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthSignUp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_signUp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_signUp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthSignIn) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_signIn: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_signIn: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthLogOut3E72BA19) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_logOut3E72BA19: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_logOut3E72BA19: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthResetAuthorizations) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_resetAuthorizations: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_resetAuthorizations: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthExportAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_exportAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_exportAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DcId", wireType)
			}
			m.DcId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DcId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthImportAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_importAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_importAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bytes", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bytes = append(m.Bytes[:0], dAtA[iNdEx:postIndex]...)
			if m.Bytes == nil {
				m.Bytes = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthBindTempAuthKey) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_bindTempAuthKey: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_bindTempAuthKey: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PermAuthKeyId", wireType)
			}
			m.PermAuthKeyId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PermAuthKeyId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
			}
			m.Nonce = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Nonce |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiresAt", wireType)
			}
			m.ExpiresAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExpiresAt |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EncryptedMessage", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EncryptedMessage = append(m.EncryptedMessage[:0], dAtA[iNdEx:postIndex]...)
			if m.EncryptedMessage == nil {
				m.EncryptedMessage = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthImportBotAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_importBotAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_importBotAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiId", wireType)
			}
			m.ApiId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ApiId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApiHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BotAuthToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BotAuthToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthCheckPassword) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_checkPassword: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_checkPassword: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Password == nil {
				m.Password = &InputCheckPasswordSRP{}
			}
			if err := m.Password.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthRequestPasswordRecovery) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_requestPasswordRecovery: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_requestPasswordRecovery: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthRecoverPassword) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_recoverPassword: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_recoverPassword: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Code = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.NewSettings == nil {
				m.NewSettings = &Account_PasswordInputSettings{}
			}
			if err := m.NewSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthResendCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_resendCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_resendCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthCancelCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_cancelCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_cancelCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthDropTempAuthKeys) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_dropTempAuthKeys: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_dropTempAuthKeys: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ExceptAuthKeys = append(m.ExceptAuthKeys, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ExceptAuthKeys) == 0 {
					m.ExceptAuthKeys = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ExceptAuthKeys = append(m.ExceptAuthKeys, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ExceptAuthKeys", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthExportLoginToken) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_exportLoginToken: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_exportLoginToken: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiId", wireType)
			}
			m.ApiId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ApiId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApiHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ExceptIds = append(m.ExceptIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ExceptIds) == 0 {
					m.ExceptIds = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ExceptIds = append(m.ExceptIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ExceptIds", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthImportLoginToken) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_importLoginToken: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_importLoginToken: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = append(m.Token[:0], dAtA[iNdEx:postIndex]...)
			if m.Token == nil {
				m.Token = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthAcceptLoginToken) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_acceptLoginToken: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_acceptLoginToken: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = append(m.Token[:0], dAtA[iNdEx:postIndex]...)
			if m.Token == nil {
				m.Token = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthCheckRecoveryPassword) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_checkRecoveryPassword: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_checkRecoveryPassword: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Code = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountRegisterDevice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_registerDevice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_registerDevice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoMuted", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NoMuted = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenType", wireType)
			}
			m.TokenType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TokenType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppSandbox", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AppSandbox == nil {
				m.AppSandbox = &Bool{}
			}
			if err := m.AppSandbox.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Secret", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Secret = append(m.Secret[:0], dAtA[iNdEx:postIndex]...)
			if m.Secret == nil {
				m.Secret = []byte{}
			}
			iNdEx = postIndex
		case 8:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.OtherUids = append(m.OtherUids, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.OtherUids) == 0 {
					m.OtherUids = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.OtherUids = append(m.OtherUids, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field OtherUids", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUnregisterDevice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_unregisterDevice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_unregisterDevice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenType", wireType)
			}
			m.TokenType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TokenType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.OtherUids = append(m.OtherUids, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.OtherUids) == 0 {
					m.OtherUids = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.OtherUids = append(m.OtherUids, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field OtherUids", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdateNotifySettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updateNotifySettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updateNotifySettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputNotifyPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &InputPeerNotifySettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetNotifySettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getNotifySettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getNotifySettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputNotifyPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountResetNotifySettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_resetNotifySettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_resetNotifySettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdateProfile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updateProfile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updateProfile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FirstName == nil {
				m.FirstName = &types.StringValue{}
			}
			if err := m.FirstName.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LastName == nil {
				m.LastName = &types.StringValue{}
			}
			if err := m.LastName.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field About", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.About == nil {
				m.About = &types.StringValue{}
			}
			if err := m.About.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdateStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updateStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updateStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offline", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Offline == nil {
				m.Offline = &Bool{}
			}
			if err := m.Offline.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetWallPapers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getWallPapers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getWallPapers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountReportPeer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_reportPeer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_reportPeer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Reason == nil {
				m.Reason = &ReportReason{}
			}
			if err := m.Reason.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountCheckUsername) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_checkUsername: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_checkUsername: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdateUsername) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updateUsername: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updateUsername: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetPrivacy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getPrivacy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getPrivacy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Key == nil {
				m.Key = &InputPrivacyKey{}
			}
			if err := m.Key.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSetPrivacy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_setPrivacy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_setPrivacy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Key == nil {
				m.Key = &InputPrivacyKey{}
			}
			if err := m.Key.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rules", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rules = append(m.Rules, &InputPrivacyRule{})
			if err := m.Rules[len(m.Rules)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountDeleteAccount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_deleteAccount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_deleteAccount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetAccountTTL) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getAccountTTL: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getAccountTTL: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSetAccountTTL) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_setAccountTTL: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_setAccountTTL: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ttl", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ttl == nil {
				m.Ttl = &AccountDaysTTL{}
			}
			if err := m.Ttl.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSendChangePhoneCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_sendChangePhoneCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_sendChangePhoneCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &CodeSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountChangePhone) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_changePhone: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_changePhone: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdateDeviceLocked) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updateDeviceLocked: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updateDeviceLocked: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Period", wireType)
			}
			m.Period = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Period |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetAuthorizations) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getAuthorizations: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getAuthorizations: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountResetAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_resetAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_resetAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetPassword) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getPassword: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getPassword: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetPasswordSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getPasswordSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getPasswordSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Password == nil {
				m.Password = &InputCheckPasswordSRP{}
			}
			if err := m.Password.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdatePasswordSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updatePasswordSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updatePasswordSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Password == nil {
				m.Password = &InputCheckPasswordSRP{}
			}
			if err := m.Password.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.NewSettings == nil {
				m.NewSettings = &Account_PasswordInputSettings{}
			}
			if err := m.NewSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSendConfirmPhoneCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_sendConfirmPhoneCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_sendConfirmPhoneCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &CodeSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountConfirmPhone) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_confirmPhone: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_confirmPhone: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetTmpPassword) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getTmpPassword: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getTmpPassword: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Password == nil {
				m.Password = &InputCheckPasswordSRP{}
			}
			if err := m.Password.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Period", wireType)
			}
			m.Period = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Period |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetWebAuthorizations) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getWebAuthorizations: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getWebAuthorizations: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountResetWebAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_resetWebAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_resetWebAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountResetWebAuthorizations) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_resetWebAuthorizations: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_resetWebAuthorizations: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetAllSecureValues) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getAllSecureValues: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getAllSecureValues: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetSecureValue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getSecureValue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getSecureValue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Types", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Types = append(m.Types, &SecureValueType{})
			if err := m.Types[len(m.Types)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSaveSecureValue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_saveSecureValue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_saveSecureValue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Value == nil {
				m.Value = &InputSecureValue{}
			}
			if err := m.Value.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SecureSecretId", wireType)
			}
			m.SecureSecretId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SecureSecretId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountDeleteSecureValue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_deleteSecureValue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_deleteSecureValue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Types", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Types = append(m.Types, &SecureValueType{})
			if err := m.Types[len(m.Types)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetAuthorizationForm) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getAuthorizationForm: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getAuthorizationForm: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BotId", wireType)
			}
			m.BotId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BotId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scope", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Scope = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublicKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PublicKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountAcceptAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_acceptAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_acceptAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BotId", wireType)
			}
			m.BotId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BotId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scope", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Scope = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublicKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PublicKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValueHashes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ValueHashes = append(m.ValueHashes, &SecureValueHash{})
			if err := m.ValueHashes[len(m.ValueHashes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Credentials", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Credentials == nil {
				m.Credentials = &SecureCredentialsEncrypted{}
			}
			if err := m.Credentials.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSendVerifyPhoneCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_sendVerifyPhoneCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_sendVerifyPhoneCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &CodeSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountVerifyPhone) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_verifyPhone: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_verifyPhone: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSendVerifyEmailCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_sendVerifyEmailCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_sendVerifyEmailCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountVerifyEmail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_verifyEmail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_verifyEmail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Code = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountInitTakeoutSession) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_initTakeoutSession: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_initTakeoutSession: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contacts", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Contacts = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageUsers", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MessageUsers = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageChats", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MessageChats = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageMegagroups", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MessageMegagroups = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageChannels", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MessageChannels = bool(v != 0)
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Files", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Files = bool(v != 0)
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileMaxSize", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FileMaxSize == nil {
				m.FileMaxSize = &types.Int32Value{}
			}
			if err := m.FileMaxSize.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountFinishTakeoutSession) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_finishTakeoutSession: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_finishTakeoutSession: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Success", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Success = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountConfirmPasswordEmail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_confirmPasswordEmail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_confirmPasswordEmail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Code = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountResendPasswordEmail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_resendPasswordEmail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_resendPasswordEmail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountCancelPasswordEmail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_cancelPasswordEmail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_cancelPasswordEmail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetContactSignUpNotification) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getContactSignUpNotification: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getContactSignUpNotification: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSetContactSignUpNotification) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_setContactSignUpNotification: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_setContactSignUpNotification: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Silent == nil {
				m.Silent = &Bool{}
			}
			if err := m.Silent.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetNotifyExceptions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getNotifyExceptions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getNotifyExceptions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompareSound", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CompareSound = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputNotifyPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetWallPaper) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getWallPaper: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getWallPaper: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wallpaper", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Wallpaper == nil {
				m.Wallpaper = &InputWallPaper{}
			}
			if err := m.Wallpaper.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUploadWallPaper) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_uploadWallPaper: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_uploadWallPaper: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field File", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.File == nil {
				m.File = &InputFile{}
			}
			if err := m.File.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MimeType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MimeType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &WallPaperSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSaveWallPaper) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_saveWallPaper: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_saveWallPaper: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wallpaper", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Wallpaper == nil {
				m.Wallpaper = &InputWallPaper{}
			}
			if err := m.Wallpaper.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unsave", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Unsave == nil {
				m.Unsave = &Bool{}
			}
			if err := m.Unsave.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &WallPaperSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountInstallWallPaper) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_installWallPaper: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_installWallPaper: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wallpaper", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Wallpaper == nil {
				m.Wallpaper = &InputWallPaper{}
			}
			if err := m.Wallpaper.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &WallPaperSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountResetWallPapers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_resetWallPapers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_resetWallPapers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetAutoDownloadSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getAutoDownloadSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getAutoDownloadSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSaveAutoDownloadSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_saveAutoDownloadSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_saveAutoDownloadSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Low", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Low = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field High", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.High = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &AutoDownloadSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUploadTheme) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_uploadTheme: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_uploadTheme: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field File", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.File == nil {
				m.File = &InputFile{}
			}
			if err := m.File.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Thumb", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Thumb == nil {
				m.Thumb = &InputFile{}
			}
			if err := m.Thumb.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MimeType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MimeType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountCreateTheme) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_createTheme: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_createTheme: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Slug", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Slug = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Document", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Document == nil {
				m.Document = &InputDocument{}
			}
			if err := m.Document.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings_FLAGVECTORINPUTTHEMESETTINGS", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Settings_FLAGVECTORINPUTTHEMESETTINGS = append(m.Settings_FLAGVECTORINPUTTHEMESETTINGS, &InputThemeSettings{})
			if err := m.Settings_FLAGVECTORINPUTTHEMESETTINGS[len(m.Settings_FLAGVECTORINPUTTHEMESETTINGS)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings_FLAGINPUTTHEMESETTINGS", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings_FLAGINPUTTHEMESETTINGS == nil {
				m.Settings_FLAGINPUTTHEMESETTINGS = &InputThemeSettings{}
			}
			if err := m.Settings_FLAGINPUTTHEMESETTINGS.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdateTheme) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updateTheme: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updateTheme: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Format", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Format = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Theme", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Theme == nil {
				m.Theme = &InputTheme{}
			}
			if err := m.Theme.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Slug", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Slug == nil {
				m.Slug = &types.StringValue{}
			}
			if err := m.Slug.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Title == nil {
				m.Title = &types.StringValue{}
			}
			if err := m.Title.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Document", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Document == nil {
				m.Document = &InputDocument{}
			}
			if err := m.Document.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings_FLAGVECTORINPUTTHEMESETTINGS", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Settings_FLAGVECTORINPUTTHEMESETTINGS = append(m.Settings_FLAGVECTORINPUTTHEMESETTINGS, &InputThemeSettings{})
			if err := m.Settings_FLAGVECTORINPUTTHEMESETTINGS[len(m.Settings_FLAGVECTORINPUTTHEMESETTINGS)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings_FLAGINPUTTHEMESETTINGS", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings_FLAGINPUTTHEMESETTINGS == nil {
				m.Settings_FLAGINPUTTHEMESETTINGS = &InputThemeSettings{}
			}
			if err := m.Settings_FLAGINPUTTHEMESETTINGS.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSaveTheme) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_saveTheme: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_saveTheme: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Theme", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Theme == nil {
				m.Theme = &InputTheme{}
			}
			if err := m.Theme.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unsave", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Unsave == nil {
				m.Unsave = &Bool{}
			}
			if err := m.Unsave.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountInstallTheme) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_installTheme: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_installTheme: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dark", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Dark = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Theme", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Theme == nil {
				m.Theme = &InputTheme{}
			}
			if err := m.Theme.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Format", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Format == nil {
				m.Format = &types.StringValue{}
			}
			if err := m.Format.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaseTheme", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BaseTheme == nil {
				m.BaseTheme = &BaseTheme{}
			}
			if err := m.BaseTheme.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetTheme) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getTheme: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getTheme: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Format", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Format = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Theme", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Theme == nil {
				m.Theme = &InputTheme{}
			}
			if err := m.Theme.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DocumentId", wireType)
			}
			m.DocumentId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DocumentId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetThemes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getThemes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getThemes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Format", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Format = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSetContentSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_setContentSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_setContentSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SensitiveEnabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SensitiveEnabled = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetContentSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getContentSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getContentSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetMultiWallPapers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getMultiWallPapers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getMultiWallPapers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wallpapers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Wallpapers = append(m.Wallpapers, &InputWallPaper{})
			if err := m.Wallpapers[len(m.Wallpapers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetGlobalPrivacySettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getGlobalPrivacySettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getGlobalPrivacySettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSetGlobalPrivacySettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_setGlobalPrivacySettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_setGlobalPrivacySettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &GlobalPrivacySettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountReportProfilePhoto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_reportProfilePhoto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_reportProfilePhoto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhotoId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PhotoId == nil {
				m.PhotoId = &InputPhoto{}
			}
			if err := m.PhotoId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Reason == nil {
				m.Reason = &ReportReason{}
			}
			if err := m.Reason.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountResetPassword) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_resetPassword: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_resetPassword: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountDeclinePasswordReset) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_declinePasswordReset: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_declinePasswordReset: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetChatThemesD638DE89) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getChatThemesD638DE89: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getChatThemesD638DE89: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSetAuthorizationTTL) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_setAuthorizationTTL: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_setAuthorizationTTL: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthorizationTtlDays", wireType)
			}
			m.AuthorizationTtlDays = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AuthorizationTtlDays |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountChangeAuthorizationSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_changeAuthorizationSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_changeAuthorizationSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EncryptedRequestsDisabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EncryptedRequestsDisabled == nil {
				m.EncryptedRequestsDisabled = &Bool{}
			}
			if err := m.EncryptedRequestsDisabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallRequestsDisabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CallRequestsDisabled == nil {
				m.CallRequestsDisabled = &Bool{}
			}
			if err := m.CallRequestsDisabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUsersGetUsers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_users_getUsers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_users_getUsers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = append(m.Id, &InputUser{})
			if err := m.Id[len(m.Id)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUsersGetFullUserB60F5918) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_users_getFullUserB60F5918: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_users_getFullUserB60F5918: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputUser{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUsersSetSecureValueErrors) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_users_setSecureValueErrors: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_users_setSecureValueErrors: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputUser{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Errors", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Errors = append(m.Errors, &SecureValueError{})
			if err := m.Errors[len(m.Errors)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsGetContactIDs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_getContactIDs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_getContactIDs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsGetStatuses) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_getStatuses: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_getStatuses: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsGetContacts) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_getContacts: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_getContacts: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsImportContacts) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_importContacts: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_importContacts: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contacts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Contacts = append(m.Contacts, &InputContact{})
			if err := m.Contacts[len(m.Contacts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsDeleteContacts) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_deleteContacts: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_deleteContacts: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = append(m.Id, &InputUser{})
			if err := m.Id[len(m.Id)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsDeleteByPhones) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_deleteByPhones: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_deleteByPhones: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phones", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phones = append(m.Phones, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsBlock) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_block: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_block: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputPeer{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsUnblock) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_unblock: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_unblock: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputPeer{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsGetBlocked) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_getBlocked: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_getBlocked: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsSearch) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_search: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_search: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Q = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsResolveUsername) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_resolveUsername: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_resolveUsername: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsGetTopPeers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_getTopPeers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_getTopPeers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Correspondents", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Correspondents = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BotsPm", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BotsPm = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BotsInline", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BotsInline = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCalls", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PhoneCalls = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardUsers", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ForwardUsers = bool(v != 0)
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardChats", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ForwardChats = bool(v != 0)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Groups", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Groups = bool(v != 0)
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channels", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Channels = bool(v != 0)
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsResetTopPeerRating) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_resetTopPeerRating: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_resetTopPeerRating: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Category", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Category == nil {
				m.Category = &TopPeerCategory{}
			}
			if err := m.Category.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsResetSaved) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_resetSaved: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_resetSaved: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsGetSaved) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_getSaved: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_getSaved: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsToggleTopPeers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_toggleTopPeers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_toggleTopPeers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Enabled == nil {
				m.Enabled = &Bool{}
			}
			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsAddContact) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_addContact: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_addContact: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddPhonePrivacyException", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AddPhonePrivacyException = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputUser{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsAcceptContact) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_acceptContact: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_acceptContact: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputUser{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsGetLocated) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_getLocated: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_getLocated: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Background", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Background = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeoPoint", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GeoPoint == nil {
				m.GeoPoint = &InputGeoPoint{}
			}
			if err := m.GeoPoint.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SelfExpires", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SelfExpires == nil {
				m.SelfExpires = &types.Int32Value{}
			}
			if err := m.SelfExpires.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsBlockFromReplies) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_blockFromReplies: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_blockFromReplies: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeleteMessage", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DeleteMessage = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeleteHistory", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DeleteHistory = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReportSpam", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ReportSpam = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsResolvePhone) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_resolvePhone: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_resolvePhone: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id_VECTORINPUTMESSAGE", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id_VECTORINPUTMESSAGE = append(m.Id_VECTORINPUTMESSAGE, &InputMessage{})
			if err := m.Id_VECTORINPUTMESSAGE[len(m.Id_VECTORINPUTMESSAGE)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id_VECTORINT32 = append(m.Id_VECTORINT32, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id_VECTORINT32) == 0 {
					m.Id_VECTORINT32 = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id_VECTORINT32 = append(m.Id_VECTORINT32, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id_VECTORINT32", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetDialogs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getDialogs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getDialogs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExcludePinned", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExcludePinned = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FolderId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FolderId == nil {
				m.FolderId = &types.Int32Value{}
			}
			if err := m.FolderId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetDate", wireType)
			}
			m.OffsetDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetPeer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OffsetPeer == nil {
				m.OffsetPeer = &InputPeer{}
			}
			if err := m.OffsetPeer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetDate", wireType)
			}
			m.OffsetDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddOffset", wireType)
			}
			m.AddOffset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AddOffset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinId", wireType)
			}
			m.MinId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSearch) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_search: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_search: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Q = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FromId == nil {
				m.FromId = &InputPeer{}
			}
			if err := m.FromId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopMsgId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TopMsgId == nil {
				m.TopMsgId = &types.Int32Value{}
			}
			if err := m.TopMsgId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Filter == nil {
				m.Filter = &MessagesFilter{}
			}
			if err := m.Filter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinDate", wireType)
			}
			m.MinDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxDate", wireType)
			}
			m.MaxDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddOffset", wireType)
			}
			m.AddOffset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AddOffset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinId", wireType)
			}
			m.MinId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReadHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_readHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_readHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesDeleteHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_deleteHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_deleteHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field JustClear", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.JustClear = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Revoke", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Revoke = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MinDate == nil {
				m.MinDate = &types.Int32Value{}
			}
			if err := m.MinDate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MaxDate == nil {
				m.MaxDate = &types.Int32Value{}
			}
			if err := m.MaxDate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesDeleteMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_deleteMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_deleteMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Revoke", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Revoke = bool(v != 0)
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReceivedMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_receivedMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_receivedMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetTyping) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setTyping: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setTyping: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopMsgId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TopMsgId == nil {
				m.TopMsgId = &types.Int32Value{}
			}
			if err := m.TopMsgId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Action == nil {
				m.Action = &SendMessageAction{}
			}
			if err := m.Action.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoWebpage", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NoWebpage = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Background", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Background = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClearDraft", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ClearDraft = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Noforwards", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Noforwards = bool(v != 0)
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyToMsgId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReplyToMsgId == nil {
				m.ReplyToMsgId = &types.Int32Value{}
			}
			if err := m.ReplyToMsgId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyMarkup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReplyMarkup == nil {
				m.ReplyMarkup = &ReplyMarkup{}
			}
			if err := m.ReplyMarkup.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScheduleDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ScheduleDate == nil {
				m.ScheduleDate = &types.Int32Value{}
			}
			if err := m.ScheduleDate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendAs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SendAs == nil {
				m.SendAs = &InputPeer{}
			}
			if err := m.SendAs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendMedia) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendMedia: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendMedia: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Background", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Background = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClearDraft", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ClearDraft = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Noforwards", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Noforwards = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyToMsgId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReplyToMsgId == nil {
				m.ReplyToMsgId = &types.Int32Value{}
			}
			if err := m.ReplyToMsgId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Media", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Media == nil {
				m.Media = &InputMedia{}
			}
			if err := m.Media.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyMarkup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReplyMarkup == nil {
				m.ReplyMarkup = &ReplyMarkup{}
			}
			if err := m.ReplyMarkup.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScheduleDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ScheduleDate == nil {
				m.ScheduleDate = &types.Int32Value{}
			}
			if err := m.ScheduleDate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendAs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SendAs == nil {
				m.SendAs = &InputPeer{}
			}
			if err := m.SendAs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesForwardMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_forwardMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_forwardMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Background", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Background = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WithMyScore", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.WithMyScore = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DropAuthor", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DropAuthor = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DropMediaCaptions", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DropMediaCaptions = bool(v != 0)
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Noforwards", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Noforwards = bool(v != 0)
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromPeer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FromPeer == nil {
				m.FromPeer = &InputPeer{}
			}
			if err := m.FromPeer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		case 11:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.RandomId = append(m.RandomId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.RandomId) == 0 {
					m.RandomId = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.RandomId = append(m.RandomId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToPeer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ToPeer == nil {
				m.ToPeer = &InputPeer{}
			}
			if err := m.ToPeer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScheduleDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ScheduleDate == nil {
				m.ScheduleDate = &types.Int32Value{}
			}
			if err := m.ScheduleDate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendAs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SendAs == nil {
				m.SendAs = &InputPeer{}
			}
			if err := m.SendAs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReportSpam) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_reportSpam: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_reportSpam: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetPeerSettingsEFD9A6A2) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getPeerSettingsEFD9A6A2: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getPeerSettingsEFD9A6A2: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReport) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_report: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_report: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Reason == nil {
				m.Reason = &ReportReason{}
			}
			if err := m.Reason.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetChats) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getChats: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getChats: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetFullChat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getFullChat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getFullChat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesEditChatTitle) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_editChatTitle: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_editChatTitle: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesEditChatPhoto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_editChatPhoto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_editChatPhoto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Photo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Photo == nil {
				m.Photo = &InputChatPhoto{}
			}
			if err := m.Photo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesAddChatUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_addChatUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_addChatUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FwdLimit", wireType)
			}
			m.FwdLimit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FwdLimit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesDeleteChatUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_deleteChatUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_deleteChatUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RevokeHistory", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RevokeHistory = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesCreateChat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_createChat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_createChat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Users", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Users = append(m.Users, &InputUser{})
			if err := m.Users[len(m.Users)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetDhConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getDhConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getDhConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			m.Version = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Version |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomLength", wireType)
			}
			m.RandomLength = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomLength |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesRequestEncryption) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_requestEncryption: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_requestEncryption: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GA", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GA = append(m.GA[:0], dAtA[iNdEx:postIndex]...)
			if m.GA == nil {
				m.GA = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesAcceptEncryption) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_acceptEncryption: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_acceptEncryption: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputEncryptedChat{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GB", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GB = append(m.GB[:0], dAtA[iNdEx:postIndex]...)
			if m.GB == nil {
				m.GB = []byte{}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field KeyFingerprint", wireType)
			}
			m.KeyFingerprint = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.KeyFingerprint |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesDiscardEncryption) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_discardEncryption: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_discardEncryption: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeleteHistory", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DeleteHistory = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetEncryptedTyping) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setEncryptedTyping: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setEncryptedTyping: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputEncryptedChat{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Typing", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Typing == nil {
				m.Typing = &Bool{}
			}
			if err := m.Typing.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReadEncryptedHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_readEncryptedHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_readEncryptedHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputEncryptedChat{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxDate", wireType)
			}
			m.MaxDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendEncrypted) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendEncrypted: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendEncrypted: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputEncryptedChat{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendEncryptedFile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendEncryptedFile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendEncryptedFile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputEncryptedChat{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field File", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.File == nil {
				m.File = &InputEncryptedFile{}
			}
			if err := m.File.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendEncryptedService) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendEncryptedService: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendEncryptedService: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputEncryptedChat{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReceivedQueue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_receivedQueue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_receivedQueue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxQts", wireType)
			}
			m.MaxQts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxQts |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReportEncryptedSpam) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_reportEncryptedSpam: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_reportEncryptedSpam: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputEncryptedChat{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReadMessageContents) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_readMessageContents: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_readMessageContents: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Emoticon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Emoticon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetAllStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getAllStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getAllStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetWebPagePreview) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getWebPagePreview: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getWebPagePreview: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesExportChatInvite) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_exportChatInvite: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_exportChatInvite: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LegacyRevokePermanent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LegacyRevokePermanent = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestNeeded", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RequestNeeded = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpireDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ExpireDate == nil {
				m.ExpireDate = &types.Int32Value{}
			}
			if err := m.ExpireDate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UsageLimit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UsageLimit == nil {
				m.UsageLimit = &types.Int32Value{}
			}
			if err := m.UsageLimit.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Title == nil {
				m.Title = &types.StringValue{}
			}
			if err := m.Title.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesCheckChatInvite) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_checkChatInvite: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_checkChatInvite: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesImportChatInvite) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_importChatInvite: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_importChatInvite: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetStickerSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getStickerSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getStickerSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stickerset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Stickerset == nil {
				m.Stickerset = &InputStickerSet{}
			}
			if err := m.Stickerset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesInstallStickerSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_installStickerSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_installStickerSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stickerset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Stickerset == nil {
				m.Stickerset = &InputStickerSet{}
			}
			if err := m.Stickerset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Archived", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Archived == nil {
				m.Archived = &Bool{}
			}
			if err := m.Archived.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesUninstallStickerSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_uninstallStickerSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_uninstallStickerSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stickerset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Stickerset == nil {
				m.Stickerset = &InputStickerSet{}
			}
			if err := m.Stickerset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesStartBot) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_startBot: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_startBot: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bot", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Bot == nil {
				m.Bot = &InputUser{}
			}
			if err := m.Bot.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartParam", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StartParam = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetMessagesViews) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getMessagesViews: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getMessagesViews: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Increment", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Increment == nil {
				m.Increment = &Bool{}
			}
			if err := m.Increment.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesEditChatAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_editChatAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_editChatAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsAdmin", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.IsAdmin == nil {
				m.IsAdmin = &Bool{}
			}
			if err := m.IsAdmin.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesMigrateChat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_migrateChat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_migrateChat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSearchGlobal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_searchGlobal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_searchGlobal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FolderId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FolderId == nil {
				m.FolderId = &types.Int32Value{}
			}
			if err := m.FolderId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Q = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Filter == nil {
				m.Filter = &MessagesFilter{}
			}
			if err := m.Filter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinDate", wireType)
			}
			m.MinDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxDate", wireType)
			}
			m.MaxDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetRate", wireType)
			}
			m.OffsetRate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetRate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetPeer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OffsetPeer == nil {
				m.OffsetPeer = &InputPeer{}
			}
			if err := m.OffsetPeer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReorderStickerSets) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_reorderStickerSets: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_reorderStickerSets: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Masks", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Masks = bool(v != 0)
		case 4:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Order = append(m.Order, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Order) == 0 {
					m.Order = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Order = append(m.Order, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Order", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetDocumentByHash) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getDocumentByHash: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getDocumentByHash: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sha256", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sha256 = append(m.Sha256[:0], dAtA[iNdEx:postIndex]...)
			if m.Sha256 == nil {
				m.Sha256 = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Size2", wireType)
			}
			m.Size2 = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Size2 |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MimeType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MimeType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetSavedGifs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getSavedGifs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getSavedGifs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSaveGif) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_saveGif: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_saveGif: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputDocument{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unsave", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Unsave == nil {
				m.Unsave = &Bool{}
			}
			if err := m.Unsave.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetInlineBotResults) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getInlineBotResults: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getInlineBotResults: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bot", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Bot == nil {
				m.Bot = &InputUser{}
			}
			if err := m.Bot.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeoPoint", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GeoPoint == nil {
				m.GeoPoint = &InputGeoPoint{}
			}
			if err := m.GeoPoint.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Query", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Query = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetInlineBotResults) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setInlineBotResults: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setInlineBotResults: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gallery", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Gallery = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Private", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Private = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryId", wireType)
			}
			m.QueryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QueryId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Results", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Results = append(m.Results, &InputBotInlineResult{})
			if err := m.Results[len(m.Results)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CacheTime", wireType)
			}
			m.CacheTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CacheTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextOffset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.NextOffset == nil {
				m.NextOffset = &types.StringValue{}
			}
			if err := m.NextOffset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SwitchPm", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SwitchPm == nil {
				m.SwitchPm = &InlineBotSwitchPM{}
			}
			if err := m.SwitchPm.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendInlineBotResult) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendInlineBotResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendInlineBotResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Background", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Background = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClearDraft", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ClearDraft = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HideVia", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HideVia = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyToMsgId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReplyToMsgId == nil {
				m.ReplyToMsgId = &types.Int32Value{}
			}
			if err := m.ReplyToMsgId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryId", wireType)
			}
			m.QueryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QueryId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScheduleDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ScheduleDate == nil {
				m.ScheduleDate = &types.Int32Value{}
			}
			if err := m.ScheduleDate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendAs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SendAs == nil {
				m.SendAs = &InputPeer{}
			}
			if err := m.SendAs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetMessageEditData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getMessageEditData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getMessageEditData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesEditMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_editMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_editMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoWebpage", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NoWebpage = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Message == nil {
				m.Message = &types.StringValue{}
			}
			if err := m.Message.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Media", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Media == nil {
				m.Media = &InputMedia{}
			}
			if err := m.Media.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyMarkup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReplyMarkup == nil {
				m.ReplyMarkup = &ReplyMarkup{}
			}
			if err := m.ReplyMarkup.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScheduleDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ScheduleDate == nil {
				m.ScheduleDate = &types.Int32Value{}
			}
			if err := m.ScheduleDate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesEditInlineBotMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_editInlineBotMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_editInlineBotMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoWebpage", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NoWebpage = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputBotInlineMessageID{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Message == nil {
				m.Message = &types.StringValue{}
			}
			if err := m.Message.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Media", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Media == nil {
				m.Media = &InputMedia{}
			}
			if err := m.Media.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyMarkup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReplyMarkup == nil {
				m.ReplyMarkup = &ReplyMarkup{}
			}
			if err := m.ReplyMarkup.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetBotCallbackAnswer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getBotCallbackAnswer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getBotCallbackAnswer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Game", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Game = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Password == nil {
				m.Password = &InputCheckPasswordSRP{}
			}
			if err := m.Password.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetBotCallbackAnswer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setBotCallbackAnswer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setBotCallbackAnswer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Alert", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Alert = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryId", wireType)
			}
			m.QueryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QueryId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Message == nil {
				m.Message = &types.StringValue{}
			}
			if err := m.Message.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Url == nil {
				m.Url = &types.StringValue{}
			}
			if err := m.Url.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CacheTime", wireType)
			}
			m.CacheTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CacheTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetPeerDialogs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getPeerDialogs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getPeerDialogs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Peers = append(m.Peers, &InputDialogPeer{})
			if err := m.Peers[len(m.Peers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSaveDraft) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_saveDraft: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_saveDraft: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoWebpage", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NoWebpage = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyToMsgId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReplyToMsgId == nil {
				m.ReplyToMsgId = &types.Int32Value{}
			}
			if err := m.ReplyToMsgId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetAllDrafts) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getAllDrafts: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getAllDrafts: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetFeaturedStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getFeaturedStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getFeaturedStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReadFeaturedStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_readFeaturedStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_readFeaturedStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetRecentStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getRecentStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getRecentStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attached", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Attached = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSaveRecentSticker) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_saveRecentSticker: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_saveRecentSticker: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attached", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Attached = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputDocument{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unsave", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Unsave == nil {
				m.Unsave = &Bool{}
			}
			if err := m.Unsave.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesClearRecentStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_clearRecentStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_clearRecentStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attached", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Attached = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetArchivedStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getArchivedStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getArchivedStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Masks", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Masks = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetMaskStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getMaskStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getMaskStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetAttachedStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getAttachedStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getAttachedStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Media", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Media == nil {
				m.Media = &InputStickeredMedia{}
			}
			if err := m.Media.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetGameScore) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setGameScore: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setGameScore: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EditMessage", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EditMessage = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Force", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Force = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Score", wireType)
			}
			m.Score = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Score |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetInlineGameScore) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setInlineGameScore: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setInlineGameScore: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EditMessage", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EditMessage = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Force", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Force = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputBotInlineMessageID{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Score", wireType)
			}
			m.Score = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Score |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetGameHighScores) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getGameHighScores: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getGameHighScores: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetInlineGameHighScores) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getInlineGameHighScores: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getInlineGameHighScores: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputBotInlineMessageID{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetCommonChats) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getCommonChats: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getCommonChats: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetAllChats) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getAllChats: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getAllChats: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ExceptIds = append(m.ExceptIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ExceptIds) == 0 {
					m.ExceptIds = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ExceptIds = append(m.ExceptIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ExceptIds", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetWebPage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getWebPage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getWebPage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesToggleDialogPin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_toggleDialogPin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_toggleDialogPin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pinned", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Pinned = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputDialogPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReorderPinnedDialogs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_reorderPinnedDialogs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_reorderPinnedDialogs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Force", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Force = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FolderId", wireType)
			}
			m.FolderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FolderId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Order", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Order = append(m.Order, &InputDialogPeer{})
			if err := m.Order[len(m.Order)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetPinnedDialogs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getPinnedDialogs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getPinnedDialogs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FolderId", wireType)
			}
			m.FolderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FolderId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetBotShippingResults) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setBotShippingResults: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setBotShippingResults: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryId", wireType)
			}
			m.QueryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QueryId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Error == nil {
				m.Error = &types.StringValue{}
			}
			if err := m.Error.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShippingOptions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShippingOptions = append(m.ShippingOptions, &ShippingOption{})
			if err := m.ShippingOptions[len(m.ShippingOptions)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetBotPrecheckoutResults) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setBotPrecheckoutResults: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setBotPrecheckoutResults: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Success", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Success = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryId", wireType)
			}
			m.QueryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QueryId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Error == nil {
				m.Error = &types.StringValue{}
			}
			if err := m.Error.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesUploadMedia) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_uploadMedia: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_uploadMedia: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Media", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Media == nil {
				m.Media = &InputMedia{}
			}
			if err := m.Media.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendScreenshotNotification) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendScreenshotNotification: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendScreenshotNotification: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyToMsgId", wireType)
			}
			m.ReplyToMsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReplyToMsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetFavedStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getFavedStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getFavedStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesFaveSticker) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_faveSticker: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_faveSticker: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputDocument{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unfave", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Unfave == nil {
				m.Unfave = &Bool{}
			}
			if err := m.Unfave.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetUnreadMentions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getUnreadMentions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getUnreadMentions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddOffset", wireType)
			}
			m.AddOffset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AddOffset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinId", wireType)
			}
			m.MinId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReadMentions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_readMentions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_readMentions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetRecentLocations) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getRecentLocations: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getRecentLocations: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendMultiMedia) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendMultiMedia: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendMultiMedia: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Background", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Background = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClearDraft", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ClearDraft = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Noforwards", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Noforwards = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyToMsgId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReplyToMsgId == nil {
				m.ReplyToMsgId = &types.Int32Value{}
			}
			if err := m.ReplyToMsgId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MultiMedia", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MultiMedia = append(m.MultiMedia, &InputSingleMedia{})
			if err := m.MultiMedia[len(m.MultiMedia)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScheduleDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ScheduleDate == nil {
				m.ScheduleDate = &types.Int32Value{}
			}
			if err := m.ScheduleDate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendAs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SendAs == nil {
				m.SendAs = &InputPeer{}
			}
			if err := m.SendAs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesUploadEncryptedFile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_uploadEncryptedFile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_uploadEncryptedFile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputEncryptedChat{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field File", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.File == nil {
				m.File = &InputEncryptedFile{}
			}
			if err := m.File.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSearchStickerSets) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_searchStickerSets: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_searchStickerSets: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExcludeFeatured", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExcludeFeatured = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Q = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetSplitRanges) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getSplitRanges: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getSplitRanges: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesMarkDialogUnread) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_markDialogUnread: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_markDialogUnread: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unread", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Unread = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputDialogPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetDialogUnreadMarks) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getDialogUnreadMarks: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getDialogUnreadMarks: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesClearAllDrafts) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_clearAllDrafts: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_clearAllDrafts: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesUpdatePinnedMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_updatePinnedMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_updatePinnedMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unpin", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Unpin = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PmOneside", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PmOneside = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendVote) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendVote: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendVote: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Options", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Options = append(m.Options, make([]byte, postIndex-iNdEx))
			copy(m.Options[len(m.Options)-1], dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetPollResults) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getPollResults: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getPollResults: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetOnlines) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getOnlines: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getOnlines: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesEditChatAbout) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_editChatAbout: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_editChatAbout: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field About", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.About = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesEditChatDefaultBannedRights) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_editChatDefaultBannedRights: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_editChatDefaultBannedRights: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BannedRights", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BannedRights == nil {
				m.BannedRights = &ChatBannedRights{}
			}
			if err := m.BannedRights.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetEmojiKeywords) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getEmojiKeywords: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getEmojiKeywords: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetEmojiKeywordsDifference) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getEmojiKeywordsDifference: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getEmojiKeywordsDifference: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromVersion", wireType)
			}
			m.FromVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromVersion |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetEmojiKeywordsLanguages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getEmojiKeywordsLanguages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getEmojiKeywordsLanguages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCodes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCodes = append(m.LangCodes, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetEmojiURL) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getEmojiURL: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getEmojiURL: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetSearchCounters) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getSearchCounters: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getSearchCounters: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Filters = append(m.Filters, &MessagesFilter{})
			if err := m.Filters[len(m.Filters)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesRequestUrlAuth) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_requestUrlAuth: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_requestUrlAuth: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MsgId == nil {
				m.MsgId = &types.Int32Value{}
			}
			if err := m.MsgId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ButtonId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ButtonId == nil {
				m.ButtonId = &types.Int32Value{}
			}
			if err := m.ButtonId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Url == nil {
				m.Url = &types.StringValue{}
			}
			if err := m.Url.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesAcceptUrlAuth) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_acceptUrlAuth: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_acceptUrlAuth: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WriteAllowed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.WriteAllowed = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MsgId == nil {
				m.MsgId = &types.Int32Value{}
			}
			if err := m.MsgId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ButtonId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ButtonId == nil {
				m.ButtonId = &types.Int32Value{}
			}
			if err := m.ButtonId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Url == nil {
				m.Url = &types.StringValue{}
			}
			if err := m.Url.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesHidePeerSettingsBar) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_hidePeerSettingsBar: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_hidePeerSettingsBar: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetScheduledHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getScheduledHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getScheduledHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetScheduledMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getScheduledMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getScheduledMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendScheduledMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendScheduledMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendScheduledMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesDeleteScheduledMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_deleteScheduledMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_deleteScheduledMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetPollVotes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getPollVotes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getPollVotes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Option", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Option = append(m.Option[:0], dAtA[iNdEx:postIndex]...)
			if m.Option == nil {
				m.Option = []byte{}
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Offset == nil {
				m.Offset = &types.StringValue{}
			}
			if err := m.Offset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesToggleStickerSets) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_toggleStickerSets: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_toggleStickerSets: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uninstall", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Uninstall = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Archive", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Archive = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unarchive", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Unarchive = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stickersets", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Stickersets = append(m.Stickersets, &InputStickerSet{})
			if err := m.Stickersets[len(m.Stickersets)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetDialogFilters) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getDialogFilters: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getDialogFilters: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetSuggestedDialogFilters) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getSuggestedDialogFilters: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getSuggestedDialogFilters: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesUpdateDialogFilter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_updateDialogFilter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_updateDialogFilter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Filter == nil {
				m.Filter = &DialogFilter{}
			}
			if err := m.Filter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesUpdateDialogFiltersOrder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_updateDialogFiltersOrder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_updateDialogFiltersOrder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Order = append(m.Order, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Order) == 0 {
					m.Order = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Order = append(m.Order, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Order", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetOldFeaturedStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getOldFeaturedStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getOldFeaturedStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetReplies) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getReplies: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getReplies: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetDate", wireType)
			}
			m.OffsetDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddOffset", wireType)
			}
			m.AddOffset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AddOffset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinId", wireType)
			}
			m.MinId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetDiscussionMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getDiscussionMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getDiscussionMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReadDiscussion) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_readDiscussion: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_readDiscussion: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReadMaxId", wireType)
			}
			m.ReadMaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReadMaxId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesUnpinAllMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_unpinAllMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_unpinAllMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesDeleteChat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_deleteChat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_deleteChat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesDeletePhoneCallHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_deletePhoneCallHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_deletePhoneCallHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Revoke", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Revoke = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesCheckHistoryImport) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_checkHistoryImport: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_checkHistoryImport: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImportHead", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImportHead = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesInitHistoryImport) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_initHistoryImport: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_initHistoryImport: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field File", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.File == nil {
				m.File = &InputFile{}
			}
			if err := m.File.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MediaCount", wireType)
			}
			m.MediaCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MediaCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesUploadImportedMedia) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_uploadImportedMedia: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_uploadImportedMedia: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImportId", wireType)
			}
			m.ImportId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ImportId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Media", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Media == nil {
				m.Media = &InputMedia{}
			}
			if err := m.Media.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesStartHistoryImport) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_startHistoryImport: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_startHistoryImport: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImportId", wireType)
			}
			m.ImportId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ImportId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetExportedChatInvites) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getExportedChatInvites: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getExportedChatInvites: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Revoked", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Revoked = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AdminId == nil {
				m.AdminId = &InputUser{}
			}
			if err := m.AdminId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OffsetDate == nil {
				m.OffsetDate = &types.Int32Value{}
			}
			if err := m.OffsetDate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetLink", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OffsetLink == nil {
				m.OffsetLink = &types.StringValue{}
			}
			if err := m.OffsetLink.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetExportedChatInvite) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getExportedChatInvite: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getExportedChatInvite: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Link", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Link = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesEditExportedChatInvite) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_editExportedChatInvite: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_editExportedChatInvite: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Revoked", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Revoked = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Link", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Link = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpireDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ExpireDate == nil {
				m.ExpireDate = &types.Int32Value{}
			}
			if err := m.ExpireDate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UsageLimit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UsageLimit == nil {
				m.UsageLimit = &types.Int32Value{}
			}
			if err := m.UsageLimit.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestNeeded", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RequestNeeded == nil {
				m.RequestNeeded = &Bool{}
			}
			if err := m.RequestNeeded.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Title == nil {
				m.Title = &types.StringValue{}
			}
			if err := m.Title.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesDeleteRevokedExportedChatInvites) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_deleteRevokedExportedChatInvites: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_deleteRevokedExportedChatInvites: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AdminId == nil {
				m.AdminId = &InputUser{}
			}
			if err := m.AdminId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesDeleteExportedChatInvite) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_deleteExportedChatInvite: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_deleteExportedChatInvite: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Link", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Link = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetAdminsWithInvites) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getAdminsWithInvites: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getAdminsWithInvites: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetChatInviteImporters) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getChatInviteImporters: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getChatInviteImporters: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Requested", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Requested = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Link_FLAGSTRING", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Link_FLAGSTRING == nil {
				m.Link_FLAGSTRING = &types.StringValue{}
			}
			if err := m.Link_FLAGSTRING.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Q == nil {
				m.Q = &types.StringValue{}
			}
			if err := m.Q.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetDate", wireType)
			}
			m.OffsetDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetUser", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OffsetUser == nil {
				m.OffsetUser = &InputUser{}
			}
			if err := m.OffsetUser.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Link_STRING", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Link_STRING = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetHistoryTTL) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setHistoryTTL: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setHistoryTTL: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Period", wireType)
			}
			m.Period = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Period |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesCheckHistoryImportPeer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_checkHistoryImportPeer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_checkHistoryImportPeer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetChatTheme) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setChatTheme: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setChatTheme: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Emoticon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Emoticon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetMessageReadParticipants) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getMessageReadParticipants: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getMessageReadParticipants: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetSearchResultsCalendar) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getSearchResultsCalendar: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getSearchResultsCalendar: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Filter == nil {
				m.Filter = &MessagesFilter{}
			}
			if err := m.Filter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetDate", wireType)
			}
			m.OffsetDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetSearchResultsPositions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getSearchResultsPositions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getSearchResultsPositions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Filter == nil {
				m.Filter = &MessagesFilter{}
			}
			if err := m.Filter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesHideChatJoinRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_hideChatJoinRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_hideChatJoinRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Approved", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Approved = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesHideAllChatJoinRequests) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_hideAllChatJoinRequests: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_hideAllChatJoinRequests: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Approved", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Approved = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Link", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Link == nil {
				m.Link = &types.StringValue{}
			}
			if err := m.Link.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesToggleNoForwards) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_toggleNoForwards: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_toggleNoForwards: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Enabled == nil {
				m.Enabled = &Bool{}
			}
			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSaveDefaultSendAs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_saveDefaultSendAs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_saveDefaultSendAs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendAs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SendAs == nil {
				m.SendAs = &InputPeer{}
			}
			if err := m.SendAs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendReaction) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendReaction: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendReaction: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Big", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Big = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reaction", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Reaction == nil {
				m.Reaction = &types.StringValue{}
			}
			if err := m.Reaction.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetMessagesReactions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getMessagesReactions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getMessagesReactions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetMessageReactionsList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getMessageReactionsList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getMessageReactionsList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reaction", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Reaction == nil {
				m.Reaction = &types.StringValue{}
			}
			if err := m.Reaction.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Offset == nil {
				m.Offset = &types.StringValue{}
			}
			if err := m.Offset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetChatAvailableReactions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setChatAvailableReactions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setChatAvailableReactions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvailableReactions", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AvailableReactions = append(m.AvailableReactions, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetAvailableReactions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getAvailableReactions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getAvailableReactions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetDefaultReaction) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setDefaultReaction: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setDefaultReaction: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reaction", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reaction = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesTranslateText) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_translateText: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_translateText: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MsgId == nil {
				m.MsgId = &types.Int32Value{}
			}
			if err := m.MsgId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Text == nil {
				m.Text = &types.StringValue{}
			}
			if err := m.Text.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromLang", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FromLang == nil {
				m.FromLang = &types.StringValue{}
			}
			if err := m.FromLang.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToLang", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ToLang = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetUnreadReactions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getUnreadReactions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getUnreadReactions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddOffset", wireType)
			}
			m.AddOffset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AddOffset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinId", wireType)
			}
			m.MinId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReadReactions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_readReactions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_readReactions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSearchSentMedia) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_searchSentMedia: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_searchSentMedia: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Q = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Filter == nil {
				m.Filter = &MessagesFilter{}
			}
			if err := m.Filter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUpdatesGetState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_updates_getState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_updates_getState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUpdatesGetDifference) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_updates_getDifference: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_updates_getDifference: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pts", wireType)
			}
			m.Pts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Pts |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PtsTotalLimit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PtsTotalLimit == nil {
				m.PtsTotalLimit = &types.Int32Value{}
			}
			if err := m.PtsTotalLimit.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Date", wireType)
			}
			m.Date = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Date |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Qts", wireType)
			}
			m.Qts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Qts |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUpdatesGetChannelDifference) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_updates_getChannelDifference: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_updates_getChannelDifference: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Force", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Force = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Filter == nil {
				m.Filter = &ChannelMessagesFilter{}
			}
			if err := m.Filter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pts", wireType)
			}
			m.Pts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Pts |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhotosUpdateProfilePhoto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_photos_updateProfilePhoto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_photos_updateProfilePhoto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputPhoto{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhotosUploadProfilePhoto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_photos_uploadProfilePhoto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_photos_uploadProfilePhoto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field File", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.File == nil {
				m.File = &InputFile{}
			}
			if err := m.File.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Video", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Video == nil {
				m.Video = &InputFile{}
			}
			if err := m.Video.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoStartTs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.VideoStartTs == nil {
				m.VideoStartTs = &types.DoubleValue{}
			}
			if err := m.VideoStartTs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhotosDeletePhotos) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_photos_deletePhotos: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_photos_deletePhotos: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = append(m.Id, &InputPhoto{})
			if err := m.Id[len(m.Id)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhotosGetUserPhotos) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_photos_getUserPhotos: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_photos_getUserPhotos: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUploadSaveFilePart) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_upload_saveFilePart: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_upload_saveFilePart: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileId", wireType)
			}
			m.FileId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FileId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FilePart", wireType)
			}
			m.FilePart = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FilePart |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bytes", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bytes = append(m.Bytes[:0], dAtA[iNdEx:postIndex]...)
			if m.Bytes == nil {
				m.Bytes = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUploadGetFile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_upload_getFile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_upload_getFile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Precise", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Precise = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CdnSupported", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CdnSupported = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Location == nil {
				m.Location = &InputFileLocation{}
			}
			if err := m.Location.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUploadSaveBigFilePart) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_upload_saveBigFilePart: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_upload_saveBigFilePart: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileId", wireType)
			}
			m.FileId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FileId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FilePart", wireType)
			}
			m.FilePart = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FilePart |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileTotalParts", wireType)
			}
			m.FileTotalParts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FileTotalParts |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bytes", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bytes = append(m.Bytes[:0], dAtA[iNdEx:postIndex]...)
			if m.Bytes == nil {
				m.Bytes = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUploadGetWebFile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_upload_getWebFile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_upload_getWebFile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Location == nil {
				m.Location = &InputWebFileLocation{}
			}
			if err := m.Location.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUploadGetCdnFile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_upload_getCdnFile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_upload_getCdnFile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileToken", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileToken = append(m.FileToken[:0], dAtA[iNdEx:postIndex]...)
			if m.FileToken == nil {
				m.FileToken = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUploadReuploadCdnFile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_upload_reuploadCdnFile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_upload_reuploadCdnFile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileToken", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileToken = append(m.FileToken[:0], dAtA[iNdEx:postIndex]...)
			if m.FileToken == nil {
				m.FileToken = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestToken", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestToken = append(m.RequestToken[:0], dAtA[iNdEx:postIndex]...)
			if m.RequestToken == nil {
				m.RequestToken = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUploadGetCdnFileHashes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_upload_getCdnFileHashes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_upload_getCdnFileHashes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileToken", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileToken = append(m.FileToken[:0], dAtA[iNdEx:postIndex]...)
			if m.FileToken == nil {
				m.FileToken = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUploadGetFileHashes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_upload_getFileHashes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_upload_getFileHashes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Location == nil {
				m.Location = &InputFileLocation{}
			}
			if err := m.Location.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetNearestDc) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getNearestDc: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getNearestDc: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetAppUpdate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getAppUpdate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getAppUpdate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Source = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetInviteText) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getInviteText: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getInviteText: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetSupport) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getSupport: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getSupport: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetAppChangelog) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getAppChangelog: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getAppChangelog: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrevAppVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PrevAppVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpSetBotUpdatesStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_setBotUpdatesStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_setBotUpdatesStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PendingUpdatesCount", wireType)
			}
			m.PendingUpdatesCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PendingUpdatesCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetCdnConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getCdnConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getCdnConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetRecentMeUrls) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getRecentMeUrls: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getRecentMeUrls: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Referer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Referer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetTermsOfServiceUpdate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getTermsOfServiceUpdate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getTermsOfServiceUpdate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpAcceptTermsOfService) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_acceptTermsOfService: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_acceptTermsOfService: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &DataJSON{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetDeepLinkInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getDeepLinkInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getDeepLinkInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Path", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Path = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetAppConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getAppConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getAppConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpSaveAppLog) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_saveAppLog: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_saveAppLog: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Events", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Events = append(m.Events, &InputAppEvent{})
			if err := m.Events[len(m.Events)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetPassportConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getPassportConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getPassportConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetSupportName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getSupportName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getSupportName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetUserInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getUserInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getUserInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpEditUserInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_editUserInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_editUserInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetPromoData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getPromoData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getPromoData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpHidePromoData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_hidePromoData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_hidePromoData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpDismissSuggestion) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_dismissSuggestion: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_dismissSuggestion: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Suggestion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Suggestion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetCountriesList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getCountriesList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getCountriesList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsReadHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_readHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_readHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsDeleteMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_deleteMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_deleteMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsReportSpam) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_reportSpam: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_reportSpam: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Participant", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Participant == nil {
				m.Participant = &InputPeer{}
			}
			if err := m.Participant.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = append(m.Id, &InputMessage{})
			if err := m.Id[len(m.Id)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetParticipants) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getParticipants: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getParticipants: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Filter == nil {
				m.Filter = &ChannelParticipantsFilter{}
			}
			if err := m.Filter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetParticipant) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getParticipant: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getParticipant: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Participant", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Participant == nil {
				m.Participant = &InputPeer{}
			}
			if err := m.Participant.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetChannels) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getChannels: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getChannels: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = append(m.Id, &InputChannel{})
			if err := m.Id[len(m.Id)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetFullChannel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getFullChannel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getFullChannel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsCreateChannel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_createChannel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_createChannel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Broadcast", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Broadcast = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Megagroup", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Megagroup = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForImport", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ForImport = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field About", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.About = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeoPoint", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GeoPoint == nil {
				m.GeoPoint = &InputGeoPoint{}
			}
			if err := m.GeoPoint.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Address == nil {
				m.Address = &types.StringValue{}
			}
			if err := m.Address.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsEditAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_editAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_editAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminRights", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AdminRights == nil {
				m.AdminRights = &ChatAdminRights{}
			}
			if err := m.AdminRights.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rank", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rank = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsEditTitle) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_editTitle: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_editTitle: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsEditPhoto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_editPhoto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_editPhoto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Photo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Photo == nil {
				m.Photo = &InputChatPhoto{}
			}
			if err := m.Photo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsCheckUsername) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_checkUsername: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_checkUsername: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsUpdateUsername) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_updateUsername: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_updateUsername: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsJoinChannel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_joinChannel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_joinChannel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsLeaveChannel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_leaveChannel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_leaveChannel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsInviteToChannel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_inviteToChannel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_inviteToChannel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Users", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Users = append(m.Users, &InputUser{})
			if err := m.Users[len(m.Users)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsDeleteChannel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_deleteChannel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_deleteChannel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsExportMessageLink) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_exportMessageLink: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_exportMessageLink: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Grouped", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Grouped = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Thread", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Thread = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsToggleSignatures) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_toggleSignatures: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_toggleSignatures: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Enabled == nil {
				m.Enabled = &Bool{}
			}
			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetAdminedPublicChannels) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getAdminedPublicChannels: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getAdminedPublicChannels: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ByLocation", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ByLocation = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CheckLimit", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CheckLimit = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsEditBanned) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_editBanned: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_editBanned: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Participant", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Participant == nil {
				m.Participant = &InputPeer{}
			}
			if err := m.Participant.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BannedRights", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BannedRights == nil {
				m.BannedRights = &ChatBannedRights{}
			}
			if err := m.BannedRights.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetAdminLog) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getAdminLog: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getAdminLog: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Q = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EventsFilter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EventsFilter == nil {
				m.EventsFilter = &ChannelAdminLogEventsFilter{}
			}
			if err := m.EventsFilter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admins", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admins = append(m.Admins, &InputUser{})
			if err := m.Admins[len(m.Admins)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinId", wireType)
			}
			m.MinId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsSetStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_setStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_setStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stickerset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Stickerset == nil {
				m.Stickerset = &InputStickerSet{}
			}
			if err := m.Stickerset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsReadMessageContents) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_readMessageContents: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_readMessageContents: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsDeleteHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_deleteHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_deleteHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsTogglePreHistoryHidden) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_togglePreHistoryHidden: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_togglePreHistoryHidden: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Enabled == nil {
				m.Enabled = &Bool{}
			}
			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetLeftChannels) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getLeftChannels: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getLeftChannels: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetGroupsForDiscussion) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getGroupsForDiscussion: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getGroupsForDiscussion: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsSetDiscussionGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_setDiscussionGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_setDiscussionGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Broadcast", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Broadcast == nil {
				m.Broadcast = &InputChannel{}
			}
			if err := m.Broadcast.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Group", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Group == nil {
				m.Group = &InputChannel{}
			}
			if err := m.Group.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsEditCreator) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_editCreator: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_editCreator: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Password == nil {
				m.Password = &InputCheckPasswordSRP{}
			}
			if err := m.Password.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsEditLocation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_editLocation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_editLocation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeoPoint", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GeoPoint == nil {
				m.GeoPoint = &InputGeoPoint{}
			}
			if err := m.GeoPoint.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsToggleSlowMode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_toggleSlowMode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_toggleSlowMode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Seconds", wireType)
			}
			m.Seconds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Seconds |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetInactiveChannels) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getInactiveChannels: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getInactiveChannels: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsConvertToGigagroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_convertToGigagroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_convertToGigagroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsViewSponsoredMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_viewSponsoredMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_viewSponsoredMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RandomId = append(m.RandomId[:0], dAtA[iNdEx:postIndex]...)
			if m.RandomId == nil {
				m.RandomId = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetSponsoredMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getSponsoredMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getSponsoredMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetSendAs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getSendAs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getSendAs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsDeleteParticipantHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_deleteParticipantHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_deleteParticipantHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Participant", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Participant == nil {
				m.Participant = &InputPeer{}
			}
			if err := m.Participant.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBotsSendCustomRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_bots_sendCustomRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_bots_sendCustomRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomMethod", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CustomMethod = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Params == nil {
				m.Params = &DataJSON{}
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBotsAnswerWebhookJSONQuery) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_bots_answerWebhookJSONQuery: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_bots_answerWebhookJSONQuery: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryId", wireType)
			}
			m.QueryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QueryId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &DataJSON{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBotsSetBotCommands) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_bots_setBotCommands: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_bots_setBotCommands: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scope", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Scope == nil {
				m.Scope = &BotCommandScope{}
			}
			if err := m.Scope.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Commands", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Commands = append(m.Commands, &BotCommand{})
			if err := m.Commands[len(m.Commands)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBotsResetBotCommands) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_bots_resetBotCommands: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_bots_resetBotCommands: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scope", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Scope == nil {
				m.Scope = &BotCommandScope{}
			}
			if err := m.Scope.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBotsGetBotCommands) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_bots_getBotCommands: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_bots_getBotCommands: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scope", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Scope == nil {
				m.Scope = &BotCommandScope{}
			}
			if err := m.Scope.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPaymentsGetPaymentForm) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_payments_getPaymentForm: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_payments_getPaymentForm: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ThemeParams", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ThemeParams == nil {
				m.ThemeParams = &DataJSON{}
			}
			if err := m.ThemeParams.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPaymentsGetPaymentReceipt) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_payments_getPaymentReceipt: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_payments_getPaymentReceipt: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPaymentsValidateRequestedInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_payments_validateRequestedInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_payments_validateRequestedInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Save", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Save = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &PaymentRequestedInfo{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPaymentsSendPaymentForm) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_payments_sendPaymentForm: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_payments_sendPaymentForm: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FormId", wireType)
			}
			m.FormId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FormId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestedInfoId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RequestedInfoId == nil {
				m.RequestedInfoId = &types.StringValue{}
			}
			if err := m.RequestedInfoId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShippingOptionId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ShippingOptionId == nil {
				m.ShippingOptionId = &types.StringValue{}
			}
			if err := m.ShippingOptionId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Credentials", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Credentials == nil {
				m.Credentials = &InputPaymentCredentials{}
			}
			if err := m.Credentials.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TipAmount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TipAmount == nil {
				m.TipAmount = &types.Int64Value{}
			}
			if err := m.TipAmount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPaymentsGetSavedInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_payments_getSavedInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_payments_getSavedInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPaymentsClearSavedInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_payments_clearSavedInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_payments_clearSavedInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Credentials", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Credentials = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Info = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPaymentsGetBankCardData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_payments_getBankCardData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_payments_getBankCardData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Number", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Number = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStickersCreateStickerSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stickers_createStickerSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stickers_createStickerSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Masks", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Masks = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Animated", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Animated = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Videos", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Videos = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShortName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShortName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Thumb", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Thumb == nil {
				m.Thumb = &InputDocument{}
			}
			if err := m.Thumb.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stickers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Stickers = append(m.Stickers, &InputStickerSetItem{})
			if err := m.Stickers[len(m.Stickers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Software", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Software == nil {
				m.Software = &types.StringValue{}
			}
			if err := m.Software.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStickersRemoveStickerFromSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stickers_removeStickerFromSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stickers_removeStickerFromSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sticker", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Sticker == nil {
				m.Sticker = &InputDocument{}
			}
			if err := m.Sticker.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStickersChangeStickerPosition) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stickers_changeStickerPosition: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stickers_changeStickerPosition: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sticker", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Sticker == nil {
				m.Sticker = &InputDocument{}
			}
			if err := m.Sticker.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Position", wireType)
			}
			m.Position = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Position |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStickersAddStickerToSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stickers_addStickerToSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stickers_addStickerToSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stickerset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Stickerset == nil {
				m.Stickerset = &InputStickerSet{}
			}
			if err := m.Stickerset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sticker", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Sticker == nil {
				m.Sticker = &InputStickerSetItem{}
			}
			if err := m.Sticker.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStickersSetStickerSetThumb) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stickers_setStickerSetThumb: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stickers_setStickerSetThumb: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stickerset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Stickerset == nil {
				m.Stickerset = &InputStickerSet{}
			}
			if err := m.Stickerset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Thumb", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Thumb == nil {
				m.Thumb = &InputDocument{}
			}
			if err := m.Thumb.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStickersCheckShortName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stickers_checkShortName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stickers_checkShortName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShortName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShortName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStickersSuggestShortName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stickers_suggestShortName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stickers_suggestShortName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneGetCallConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_getCallConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_getCallConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneRequestCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_requestCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_requestCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Video", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Video = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GAHash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GAHash = append(m.GAHash[:0], dAtA[iNdEx:postIndex]...)
			if m.GAHash == nil {
				m.GAHash = []byte{}
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Protocol", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Protocol == nil {
				m.Protocol = &PhoneCallProtocol{}
			}
			if err := m.Protocol.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneAcceptCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_acceptCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_acceptCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPhoneCall{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GB", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GB = append(m.GB[:0], dAtA[iNdEx:postIndex]...)
			if m.GB == nil {
				m.GB = []byte{}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Protocol", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Protocol == nil {
				m.Protocol = &PhoneCallProtocol{}
			}
			if err := m.Protocol.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneConfirmCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_confirmCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_confirmCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPhoneCall{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GA", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GA = append(m.GA[:0], dAtA[iNdEx:postIndex]...)
			if m.GA == nil {
				m.GA = []byte{}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field KeyFingerprint", wireType)
			}
			m.KeyFingerprint = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.KeyFingerprint |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Protocol", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Protocol == nil {
				m.Protocol = &PhoneCallProtocol{}
			}
			if err := m.Protocol.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneReceivedCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_receivedCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_receivedCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPhoneCall{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneDiscardCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_discardCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_discardCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Video", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Video = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPhoneCall{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			m.Duration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Duration |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Reason == nil {
				m.Reason = &PhoneCallDiscardReason{}
			}
			if err := m.Reason.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConnectionId", wireType)
			}
			m.ConnectionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ConnectionId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneSetCallRating) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_setCallRating: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_setCallRating: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserInitiative", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UserInitiative = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPhoneCall{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rating", wireType)
			}
			m.Rating = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Rating |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Comment", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Comment = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneSaveCallDebug) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_saveCallDebug: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_saveCallDebug: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPhoneCall{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Debug", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Debug == nil {
				m.Debug = &DataJSON{}
			}
			if err := m.Debug.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneSendSignalingData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_sendSignalingData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_sendSignalingData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPhoneCall{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneCreateGroupCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_createGroupCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_createGroupCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RtmpStream", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RtmpStream = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Title == nil {
				m.Title = &types.StringValue{}
			}
			if err := m.Title.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScheduleDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ScheduleDate == nil {
				m.ScheduleDate = &types.Int32Value{}
			}
			if err := m.ScheduleDate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneJoinGroupCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_joinGroupCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_joinGroupCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Muted", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Muted = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoStopped", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.VideoStopped = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &InputGroupCall{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JoinAs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.JoinAs == nil {
				m.JoinAs = &InputPeer{}
			}
			if err := m.JoinAs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InviteHash", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.InviteHash == nil {
				m.InviteHash = &types.StringValue{}
			}
			if err := m.InviteHash.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Params == nil {
				m.Params = &DataJSON{}
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneLeaveGroupCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_leaveGroupCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_leaveGroupCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &InputGroupCall{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
			}
			m.Source = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Source |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneInviteToGroupCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_inviteToGroupCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_inviteToGroupCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &InputGroupCall{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Users", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Users = append(m.Users, &InputUser{})
			if err := m.Users[len(m.Users)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneDiscardGroupCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_discardGroupCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_discardGroupCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &InputGroupCall{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneToggleGroupCallSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_toggleGroupCallSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_toggleGroupCallSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResetInviteHash", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ResetInviteHash = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &InputGroupCall{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JoinMuted", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.JoinMuted == nil {
				m.JoinMuted = &Bool{}
			}
			if err := m.JoinMuted.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneGetGroupCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_getGroupCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_getGroupCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &InputGroupCall{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneGetGroupParticipants) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_getGroupParticipants: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_getGroupParticipants: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &InputGroupCall{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ids", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ids = append(m.Ids, &InputPeer{})
			if err := m.Ids[len(m.Ids)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Sources = append(m.Sources, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Sources) == 0 {
					m.Sources = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Sources = append(m.Sources, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Sources", wireType)
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneCheckGroupCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_checkGroupCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_checkGroupCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &InputGroupCall{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Sources = append(m.Sources, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Sources) == 0 {
					m.Sources = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Sources = append(m.Sources, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Sources", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneToggleGroupCallRecord) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_toggleGroupCallRecord: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_toggleGroupCallRecord: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Start", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Start = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Video", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Video = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &InputGroupCall{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Title == nil {
				m.Title = &types.StringValue{}
			}
			if err := m.Title.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoPortrait", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.VideoPortrait == nil {
				m.VideoPortrait = &Bool{}
			}
			if err := m.VideoPortrait.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneEditGroupCallParticipant) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_editGroupCallParticipant: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_editGroupCallParticipant: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &InputGroupCall{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Participant", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Participant == nil {
				m.Participant = &InputPeer{}
			}
			if err := m.Participant.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Muted", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Muted == nil {
				m.Muted = &Bool{}
			}
			if err := m.Muted.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Volume", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Volume == nil {
				m.Volume = &types.Int32Value{}
			}
			if err := m.Volume.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RaiseHand", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RaiseHand == nil {
				m.RaiseHand = &Bool{}
			}
			if err := m.RaiseHand.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoStopped", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.VideoStopped == nil {
				m.VideoStopped = &Bool{}
			}
			if err := m.VideoStopped.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoPaused", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.VideoPaused == nil {
				m.VideoPaused = &Bool{}
			}
			if err := m.VideoPaused.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PresentationPaused", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PresentationPaused == nil {
				m.PresentationPaused = &Bool{}
			}
			if err := m.PresentationPaused.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneEditGroupCallTitle) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_editGroupCallTitle: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_editGroupCallTitle: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &InputGroupCall{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneGetGroupCallJoinAs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_getGroupCallJoinAs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_getGroupCallJoinAs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneExportGroupCallInvite) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_exportGroupCallInvite: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_exportGroupCallInvite: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CanSelfUnmute", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CanSelfUnmute = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &InputGroupCall{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneToggleGroupCallStartSubscription) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_toggleGroupCallStartSubscription: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_toggleGroupCallStartSubscription: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &InputGroupCall{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subscribed", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Subscribed == nil {
				m.Subscribed = &Bool{}
			}
			if err := m.Subscribed.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneStartScheduledGroupCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_startScheduledGroupCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_startScheduledGroupCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &InputGroupCall{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneSaveDefaultGroupCallJoinAs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_saveDefaultGroupCallJoinAs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_saveDefaultGroupCallJoinAs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JoinAs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.JoinAs == nil {
				m.JoinAs = &InputPeer{}
			}
			if err := m.JoinAs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneJoinGroupCallPresentation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_joinGroupCallPresentation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_joinGroupCallPresentation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &InputGroupCall{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Params == nil {
				m.Params = &DataJSON{}
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneLeaveGroupCallPresentation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_leaveGroupCallPresentation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_leaveGroupCallPresentation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &InputGroupCall{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneGetGroupCallStreamChannels) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_getGroupCallStreamChannels: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_getGroupCallStreamChannels: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &InputGroupCall{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneGetGroupCallStreamRtmpUrl) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_getGroupCallStreamRtmpUrl: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_getGroupCallStreamRtmpUrl: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Revoke", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Revoke == nil {
				m.Revoke = &Bool{}
			}
			if err := m.Revoke.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLLangpackGetLangPack) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_langpack_getLangPack: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_langpack_getLangPack: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangPack", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangPack = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLLangpackGetStrings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_langpack_getStrings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_langpack_getStrings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangPack", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangPack = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Keys", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Keys = append(m.Keys, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLLangpackGetDifference) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_langpack_getDifference: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_langpack_getDifference: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangPack", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangPack = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromVersion", wireType)
			}
			m.FromVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromVersion |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLLangpackGetLanguages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_langpack_getLanguages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_langpack_getLanguages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangPack", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangPack = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLLangpackGetLanguage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_langpack_getLanguage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_langpack_getLanguage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangPack", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangPack = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLFoldersEditPeerFolders) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_folders_editPeerFolders: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_folders_editPeerFolders: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FolderPeers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FolderPeers = append(m.FolderPeers, &InputFolderPeer{})
			if err := m.FolderPeers[len(m.FolderPeers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLFoldersDeleteFolder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_folders_deleteFolder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_folders_deleteFolder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FolderId", wireType)
			}
			m.FolderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FolderId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStatsGetBroadcastStats) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stats_getBroadcastStats: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stats_getBroadcastStats: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dark", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Dark = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStatsLoadAsyncGraph) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stats_loadAsyncGraph: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stats_loadAsyncGraph: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field X", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.X == nil {
				m.X = &types.Int64Value{}
			}
			if err := m.X.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStatsGetMegagroupStats) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stats_getMegagroupStats: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stats_getMegagroupStats: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dark", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Dark = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStatsGetMessagePublicForwards) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stats_getMessagePublicForwards: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stats_getMessagePublicForwards: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetRate", wireType)
			}
			m.OffsetRate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetRate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetPeer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OffsetPeer == nil {
				m.OffsetPeer = &InputPeer{}
			}
			if err := m.OffsetPeer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStatsGetMessageStats) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stats_getMessageStats: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stats_getMessageStats: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dark", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Dark = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthLogOut5717DA40) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_logOut5717DA40: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_logOut5717DA40: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUsersGetFullUserCA30A5B1) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_users_getFullUserCA30A5B1: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_users_getFullUserCA30A5B1: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputUser{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetPeerSettings3672E09C) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getPeerSettings3672E09C: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getPeerSettings3672E09C: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsDeleteUserHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_deleteUserHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_deleteUserHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetChatThemesD6D71D7B) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getChatThemesD6D71D7B: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getChatThemesD6D71D7B: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetStatsURL) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getStatsURL: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getStatsURL: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dark", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Dark = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Params = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpTest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_test: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_test: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPredefinedCreatePredefinedUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_predefined_createPredefinedUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_predefined_createPredefinedUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FirstName == nil {
				m.FirstName = &types.StringValue{}
			}
			if err := m.FirstName.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LastName == nil {
				m.LastName = &types.StringValue{}
			}
			if err := m.LastName.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Username == nil {
				m.Username = &types.StringValue{}
			}
			if err := m.Username.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Code = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Verified", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Verified = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPredefinedUpdatePredefinedUsername) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_predefined_updatePredefinedUsername: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_predefined_updatePredefinedUsername: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPredefinedUpdatePredefinedProfile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_predefined_updatePredefinedProfile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_predefined_updatePredefinedProfile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FirstName == nil {
				m.FirstName = &types.StringValue{}
			}
			if err := m.FirstName.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LastName == nil {
				m.LastName = &types.StringValue{}
			}
			if err := m.LastName.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field About", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.About == nil {
				m.About = &types.StringValue{}
			}
			if err := m.About.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPredefinedUpdatePredefinedVerified) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_predefined_updatePredefinedVerified: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_predefined_updatePredefinedVerified: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Verified", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Verified = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPredefinedUpdatePredefinedCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_predefined_updatePredefinedCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_predefined_updatePredefinedCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Code = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPredefinedGetPredefinedUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_predefined_getPredefinedUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_predefined_getPredefinedUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPredefinedGetPredefinedUsers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_predefined_getPredefinedUsers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_predefined_getPredefinedUsers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUsersGetMe) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_users_getMe: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_users_getMe: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdateVerified) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updateVerified: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updateVerified: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Verified", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Verified = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthToggleBan) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_toggleBan: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_toggleBan: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Predefined", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Predefined = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Expires", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Expires == nil {
				m.Expires = &types.Int32Value{}
			}
			if err := m.Expires.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Reason == nil {
				m.Reason = &types.StringValue{}
			}
			if err := m.Reason.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBizInvokeBizDataRaw) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_biz_invokeBizDataRaw: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_biz_invokeBizDataRaw: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constructor", wireType)
			}
			m.Constructor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Constructor |= TLConstructor(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BizData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BizData == nil {
				m.BizData = &BizDataRaw{}
			}
			if err := m.BizData.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_SecureValue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_SecureValue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_SecureValue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &SecureValue{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_WallPaper) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_WallPaper: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_WallPaper: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &WallPaper{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_User) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_User: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_User: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &User{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_Int) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_Int: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_Int: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Datas = append(m.Datas, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Datas) == 0 {
					m.Datas = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Datas = append(m.Datas, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_ContactStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_ContactStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_ContactStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &ContactStatus{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_SavedContact) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_SavedContact: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_SavedContact: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &SavedContact{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_ReceivedNotifyMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_ReceivedNotifyMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_ReceivedNotifyMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &ReceivedNotifyMessage{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_Long) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_Long: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_Long: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Datas = append(m.Datas, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Datas) == 0 {
					m.Datas = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Datas = append(m.Datas, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_StickerSetCovered) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_StickerSetCovered: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_StickerSetCovered: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &StickerSetCovered{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_MessageRange) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_MessageRange: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_MessageRange: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &MessageRange{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_DialogPeer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_DialogPeer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_DialogPeer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &DialogPeer{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_EmojiLanguage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_EmojiLanguage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_EmojiLanguage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &EmojiLanguage{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_Messages_SearchCounter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_Messages_SearchCounter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_Messages_SearchCounter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &Messages_SearchCounter{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_DialogFilter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_DialogFilter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_DialogFilter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &DialogFilter{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_DialogFilterSuggested) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_DialogFilterSuggested: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_DialogFilterSuggested: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &DialogFilterSuggested{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_FileHash) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_FileHash: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_FileHash: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &FileHash{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_BotCommand) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_BotCommand: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_BotCommand: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &BotCommand{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_LangPackString) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_LangPackString: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_LangPackString: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &LangPackString{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_LangPackLanguage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_LangPackLanguage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_LangPackLanguage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &LangPackLanguage{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_PredefinedUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_PredefinedUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_PredefinedUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &PredefinedUser{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSchemaTlSyncService(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSchemaTlSyncService
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSchemaTlSyncService
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSchemaTlSyncService
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSchemaTlSyncService        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSchemaTlSyncService          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSchemaTlSyncService = fmt.Errorf("proto: unexpected end of group")
)
